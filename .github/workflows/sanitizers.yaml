name: Sanitizers tests

on:
  workflow_dispatch:
    inputs:
      # For more information about the supported sanitizers in Rust, see:
      # https://rustc-dev-guide.rust-lang.org/sanitizers.html
      rust-sanitizer:
        required: false
        default: 'address'
        type: string
        description: 'A sanitizer to build Rust code with. Possible values are: address, cfi, hwaddress, kcfi, leak, memory or thread'
      # For more information about the supported sanitizers in LLVM, see `LLVM_USE_SANITIZER` option in:
      # https://www.llvm.org/docs/CMake.html
      llvm-sanitizer:
        required: false
        default: 'Address'
        type: string
        description: 'A sanitizer to build LLVM with. Possible values are Address, Memory, MemoryWithOrigins, Undefined, Thread, DataFlow, and Address;Undefined'
  schedule:
    - cron: '0 0 * * 0'

jobs:
  run-with-sanitizers:
    runs-on: matterlabs-ci-runner-high-performance
    container:
      image: ghcr.io/matter-labs/zksync-llvm-runner:latest
      options: -m 110g
    env:
      TARGET: x86_64-unknown-linux-gnu
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # This step is required to checkout submodules
      # that are disabled in .gitmodules config
      - name: Checkout submodules
        run: |
          git config --global --add safe.directory '*'
          git submodule update --force --depth=1 --recursive --checkout

      - name: Prepare Windows env
        if: runner.os == 'Windows'
        uses: ./.github/actions/prepare-msys

      - name: Building solc
        uses: ./.github/actions/build-solc
        with:
          cmake-build-type: RelWithDebInfo
          working-dir: 'era-solidity'

      - name: Build LLVM
        uses: ./.github/actions/build-llvm
        with:
          enable-assertions: 'true'
          build-type: RelWithDebInfo
          sanitizer: ${{ inputs.llvm-sanitizer || 'Address' }}
          ccache-key: ${{ format('llvm-{0}-{1}', runner.os, runner.arch) }}

      - name: Run tests
        uses: ./.github/actions/rust-unit-tests
        env:
          BOOST_PREFIX: ${{ github.workspace }}/era-solidity/boost/lib
          SOLC_PREFIX: ${{ github.workspace }}/era-solidity/build
        with:
          target: ${{ env.TARGET }}
          sanitizer: ${{ inputs.rust-sanitizer || 'address' }}

      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        if: failure() && github.event_name == 'schedule'
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
