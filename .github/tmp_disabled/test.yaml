name: Tests

# Execute workflow for each PR and with each merge to the trunk
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

# Cancel the workflow if any new changes pushed to a feature branch or the trunk
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # Check for cargo issues
  cargo-checks:
    runs-on: matterlabs-ci-runner-high-performance
    container:
      image: ghcr.io/matter-labs/zksync-llvm-runner:latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # This step is required to checkout submodules
      # that are disabled in .gitmodules config
      - name: Checkout submodules
        run: |
          git config --global --add safe.directory '*'
          git submodule update --force --depth=1 --recursive --checkout

      - name: Build LLVM
        uses: ./.github/actions/build-llvm
        with:
          clone-llvm: 'false'
          target-env: 'gnu'
          build-type: 'Release'
          enable-assertions: 'false'
          ccache-key: ${{ format('llvm-{0}-{1}', runner.os, runner.arch) }}
          save-ccache: 'false'

      - name: Cargo checks
        uses: ./.github/actions/cargo-check
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # Build and run regression tests
  build-and-test:
    strategy:
      fail-fast: false # finalize testing of all targets even if one failed
      matrix:
        include:
          - name: "MacOS x86"
            runner: macos-latest-large
          - name: "MacOS arm64"
            runner: macos-latest-xlarge
          - name: "Linux x86 gnu"
            runner: matterlabs-ci-runner-high-performance
            image: ghcr.io/matter-labs/zksync-llvm-runner:latest
            target: "x86_64-unknown-linux-gnu"
          - name: "Linux ARM64 gnu"
            runner: matterlabs-ci-runner-arm
            image: ghcr.io/matter-labs/zksync-llvm-runner:latest
            target: "aarch64-unknown-linux-gnu"
          - name: "Windows"
            runner: windows-2022-github-hosted-16core
            target: "x86_64-pc-windows-gnu"
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.image || '' }} # Special workaround to allow matrix builds with optional container
    name: ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # This step is required to checkout submodules
      # that are disabled in .gitmodules config
      - name: Checkout submodules
        run: |
          git config --global --add safe.directory '*'
          git submodule update --force --depth=1 --recursive --checkout

      - name: Prepare Windows env
        if: runner.os == 'Windows'
        uses: ./.github/actions/prepare-msys

      - name: Building solc
        uses: ./.github/actions/build-solc
        with:
          cmake-build-type: RelWithDebInfo
          working-dir: 'era-solidity'

      - name: Build LLVM
        uses: ./.github/actions/build-llvm
        with:
          clone-llvm: 'false'
          build-type: RelWithDebInfo
          enable-assertions: 'true'
          ccache-key: ${{ format('llvm-{0}-{1}', runner.os, runner.arch) }}

      - name: Run tests
        uses: ./.github/actions/rust-unit-tests
        env:
          BOOST_PREFIX: ${{ github.workspace }}/era-solidity/boost/lib
          SOLC_PREFIX: ${{ github.workspace }}/era-solidity/build
        with:
          target: ${{ matrix.target || '' }}

  # Special job that allows some of the jobs to be skipped or failed
  # requiring others to be successful
  pr-checks:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - cargo-checks
      - build-and-test
    steps:
      - name: Decide on PR checks
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
