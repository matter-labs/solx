[
  {
    "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
    "deployment": {
      "gas": 704926,
      "size": 4575
    },
    "functions": {
      "approve(address,uint256)": {
        "calls": 242850,
        "min": 26376,
        "mean": 45192,
        "median": 46276,
        "max": 46276
      },
      "balanceOf(address)": {
        "calls": 6518150,
        "min": 416,
        "mean": 1587,
        "median": 2416,
        "max": 2416
      },
      "mint(address,uint256)": {
        "calls": 40700,
        "min": 33817,
        "mean": 62272,
        "median": 67957,
        "max": 68029
      },
      "transfer(address,uint256)": {
        "calls": 51950,
        "min": 46159,
        "mean": 50928,
        "median": 50911,
        "max": 51139
      }
    }
  },
  {
    "contract": "src/PoolManager.sol:PoolManager",
    "deployment": {
      "gas": 5037358,
      "size": 23211
    },
    "functions": {
      "balanceOf(address,uint256)": {
        "calls": 700,
        "min": 2554,
        "mean": 2554,
        "median": 2554,
        "max": 2554
      },
      "burn(address,uint256,uint256)": {
        "calls": 50,
        "min": 22375,
        "mean": 22375,
        "median": 22375,
        "max": 22375
      },
      "collectProtocolFees(address,address,uint256)": {
        "calls": 250,
        "min": 57192,
        "mean": 57975,
        "median": 57349,
        "max": 59151
      },
      "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
        "calls": 100,
        "min": 844,
        "mean": 12213,
        "median": 12213,
        "max": 23582
      },
      "extsload(bytes32)": {
        "calls": 234600,
        "min": 353,
        "mean": 2348,
        "median": 2353,
        "max": 2353
      },
      "extsload(bytes32,uint256)": {
        "calls": 1334700,
        "min": 866,
        "mean": 4009,
        "median": 6866,
        "max": 6866
      },
      "exttload(bytes32)": {
        "calls": 2024700,
        "min": 355,
        "mean": 355,
        "median": 355,
        "max": 355
      },
      "initialize((address,address,uint24,int24,address),uint160)": {
        "calls": 278150,
        "min": 22829,
        "mean": 51317,
        "median": 50863,
        "max": 150451
      },
      "mint(address,uint256,uint256)": {
        "calls": 50,
        "min": 22376,
        "mean": 22376,
        "median": 22376,
        "max": 22376
      },
      "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
        "calls": 200,
        "min": 962,
        "mean": 12757,
        "median": 12682,
        "max": 24702
      },
      "protocolFeesAccrued(address)": {
        "calls": 90400,
        "min": 2502,
        "mean": 2502,
        "median": 2502,
        "max": 2502
      },
      "setOperator(address,bool)": {
        "calls": 150,
        "min": 45998,
        "mean": 45998,
        "median": 45998,
        "max": 45998
      },
      "setProtocolFee((address,address,uint24,int24,address),uint24)": {
        "calls": 26000,
        "min": 29220,
        "mean": 31925,
        "median": 31840,
        "max": 32056
      },
      "setProtocolFeeController(address)": {
        "calls": 12500,
        "min": 29994,
        "mean": 47025,
        "median": 47094,
        "max": 47094
      },
      "settle()": {
        "calls": 50,
        "min": 21412,
        "mean": 21412,
        "median": 21412,
        "max": 21412
      },
      "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
        "calls": 100,
        "min": 950,
        "mean": 12648,
        "median": 12648,
        "max": 24347
      },
      "take(address,address,uint256)": {
        "calls": 50,
        "min": 22394,
        "mean": 22394,
        "median": 22394,
        "max": 22394
      },
      "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
        "calls": 50,
        "min": 23223,
        "mean": 23223,
        "median": 23223,
        "max": 23223
      }
    }
  },
  {
    "contract": "src/test/ActionsRouter.sol:ActionsRouter",
    "deployment": {
      "gas": 2152055,
      "size": 9688
    },
    "functions": {
      "executeActions(uint8[],bytes[])": {
        "calls": 52050,
        "min": 43922,
        "mean": 78173,
        "median": 80731,
        "max": 99996
      }
    }
  },
  {
    "contract": "src/test/CurrencyTest.sol:CurrencyTest",
    "deployment": {
      "gas": 243312,
      "size": 908
    },
    "functions": {
      "balanceOf(address,address)": {
        "calls": 64000,
        "min": 2913,
        "mean": 4946,
        "median": 5455,
        "max": 5455
      },
      "balanceOfSelf(address)": {
        "calls": 51200,
        "min": 284,
        "mean": 4148,
        "median": 5436,
        "max": 5436
      },
      "fromId(uint256)": {
        "calls": 38450,
        "min": 209,
        "mean": 209,
        "median": 209,
        "max": 209
      },
      "isAddressZero(address)": {
        "calls": 12900,
        "min": 239,
        "mean": 239,
        "median": 239,
        "max": 239
      },
      "toId(address)": {
        "calls": 38450,
        "min": 203,
        "mean": 203,
        "median": 203,
        "max": 203
      },
      "transfer(address,address,uint256)": {
        "calls": 76850,
        "min": 24548,
        "mean": 52786,
        "median": 54388,
        "max": 56908
      }
    }
  },
  {
    "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
    "deployment": {
      "gas": 91071,
      "size": 204
    },
    "functions": {
      "addDelta(uint128,int128)": {
        "calls": 25800,
        "min": 240,
        "mean": 242,
        "median": 243,
        "max": 243
      }
    }
  },
  {
    "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
    "deployment": {
      "gas": 482030,
      "size": 2012
    },
    "functions": {
      "allowance(address,address,uint256)": {
        "calls": 45050,
        "min": 2606,
        "mean": 2606,
        "median": 2606,
        "max": 2606
      },
      "approve(address,uint256,uint256)": {
        "calls": 51350,
        "min": 26638,
        "mean": 46627,
        "median": 46802,
        "max": 47198
      },
      "balanceOf(address,uint256)": {
        "calls": 135000,
        "min": 2477,
        "mean": 2477,
        "median": 2477,
        "max": 2477
      },
      "burn(uint256,uint256)": {
        "calls": 12850,
        "min": 24400,
        "mean": 24677,
        "median": 24640,
        "max": 29212
      },
      "burnFrom(address,uint256,uint256)": {
        "calls": 12850,
        "min": 26411,
        "mean": 32152,
        "median": 32082,
        "max": 38054
      },
      "isOperator(address,address)": {
        "calls": 12850,
        "min": 2529,
        "mean": 2529,
        "median": 2529,
        "max": 2529
      },
      "mint(address,uint256,uint256)": {
        "calls": 154300,
        "min": 24066,
        "mean": 46793,
        "median": 46898,
        "max": 47426
      },
      "setOperator(address,bool)": {
        "calls": 25700,
        "min": 25780,
        "mean": 40814,
        "median": 45932,
        "max": 45932
      },
      "transfer(address,uint256,uint256)": {
        "calls": 51250,
        "min": 24021,
        "mean": 38209,
        "median": 30167,
        "max": 52582
      },
      "transferFrom(address,address,uint256,uint256)": {
        "calls": 90100,
        "min": 24261,
        "mean": 42727,
        "median": 47545,
        "max": 60739
      }
    }
  },
  {
    "contract": "src/test/NativeERC20.sol:NativeERC20",
    "deployment": {
      "gas": 1460225,
      "size": 6457
    },
    "functions": {
      "balanceOf(address)": {
        "calls": 25600,
        "min": 375,
        "mean": 1625,
        "median": 1625,
        "max": 2875
      }
    }
  },
  {
    "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
    "deployment": {
      "gas": 153549,
      "size": 536
    },
    "functions": {
      "callsIntoNoDelegateCallFunction()": {
        "calls": 100,
        "min": 188,
        "mean": 194,
        "median": 194,
        "max": 201
      },
      "canBeDelegateCalled()": {
        "calls": 50,
        "min": 181,
        "mean": 181,
        "median": 181,
        "max": 181
      },
      "cannotBeDelegateCalled()": {
        "calls": 50,
        "min": 181,
        "mean": 181,
        "median": 181,
        "max": 181
      },
      "getGasCostOfCanBeDelegateCalled()": {
        "calls": 50,
        "min": 190,
        "mean": 190,
        "median": 190,
        "max": 190
      },
      "getGasCostOfCannotBeDelegateCalled()": {
        "calls": 50,
        "min": 237,
        "mean": 237,
        "median": 237,
        "max": 237
      }
    }
  },
  {
    "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
    "deployment": {
      "gas": 455327,
      "size": 1994
    },
    "functions": {
      "deposit(address,address,uint256)": {
        "calls": 100,
        "min": 75797,
        "mean": 75797,
        "median": 75797,
        "max": 75797
      }
    }
  },
  {
    "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
    "deployment": {
      "gas": 835540,
      "size": 3771
    },
    "functions": {
      "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
        "calls": 51950,
        "min": 35188,
        "mean": 113484,
        "median": 135793,
        "max": 241365
      }
    }
  },
  {
    "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
    "deployment": {
      "gas": 194204,
      "size": 700
    },
    "functions": {
      "unlock()": {
        "calls": 50,
        "min": 29048,
        "mean": 29048,
        "median": 29048,
        "max": 29048
      }
    }
  },
  {
    "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
    "deployment": {
      "gas": 1106586,
      "size": 5025
    },
    "functions": {
      "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
        "calls": 621850,
        "min": 42324,
        "mean": 180016,
        "median": 174486,
        "max": 372691
      },
      "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
        "calls": 100,
        "min": 126015,
        "mean": 141741,
        "median": 141741,
        "max": 157468
      }
    }
  },
  {
    "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
    "deployment": {
      "gas": 837106,
      "size": 3765
    },
    "functions": {
      "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
        "calls": 350,
        "min": 81468,
        "mean": 127346,
        "median": 156697,
        "max": 156697
      }
    }
  },
  {
    "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
    "deployment": {
      "gas": 0,
      "size": 15802
    },
    "functions": {
      "setKey((address,address,uint24,int24,address))": {
        "calls": 8600,
        "min": 69163,
        "mean": 76229,
        "median": 69163,
        "max": 89087
      }
    }
  },
  {
    "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
    "deployment": {
      "gas": 5115774,
      "size": 22396
    },
    "functions": {
      "executor()": {
        "calls": 34000,
        "min": 2318,
        "mean": 2318,
        "median": 2318,
        "max": 2318
      },
      "unlock(bytes)": {
        "calls": 350,
        "min": 37917,
        "mean": 127619,
        "median": 164200,
        "max": 208860
      }
    }
  },
  {
    "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
    "deployment": {
      "gas": 1138915,
      "size": 5178
    },
    "functions": {
      "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
        "calls": 118850,
        "min": 36974,
        "mean": 350955,
        "median": 134946,
        "max": 17262405
      }
    }
  },
  {
    "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
    "deployment": {
      "gas": 658977,
      "size": 2960
    },
    "functions": {
      "take((address,address,uint24,int24,address),uint256,uint256)": {
        "calls": 250,
        "min": 38991,
        "mean": 58180,
        "median": 53793,
        "max": 78831
      }
    }
  },
  {
    "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
    "deployment": {
      "gas": 491599,
      "size": 2047
    },
    "functions": {
      "collectProtocolFees(address,address,uint256)": {
        "calls": 12900,
        "min": 24096,
        "mean": 43919,
        "median": 27106,
        "max": 62082
      },
      "protocolFeeController()": {
        "calls": 200,
        "min": 2307,
        "mean": 2307,
        "median": 2307,
        "max": 2307
      },
      "protocolFeesAccrued(address)": {
        "calls": 45150,
        "min": 2412,
        "mean": 2412,
        "median": 2412,
        "max": 2412
      },
      "setPrice((address,address,uint24,int24,address),uint160)": {
        "calls": 12850,
        "min": 44675,
        "mean": 45307,
        "median": 45299,
        "max": 45695
      },
      "setProtocolFee((address,address,uint24,int24,address),uint24)": {
        "calls": 13000,
        "min": 24438,
        "mean": 28056,
        "median": 25656,
        "max": 32215
      },
      "setProtocolFeeController(address)": {
        "calls": 25900,
        "min": 23831,
        "mean": 46982,
        "median": 47027,
        "max": 47027
      },
      "updateProtocolFees(address,uint256)": {
        "calls": 38550,
        "min": 22426,
        "mean": 38272,
        "median": 43966,
        "max": 44326
      }
    }
  },
  {
    "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
    "deployment": {
      "gas": 2434538,
      "size": 11244
    },
    "functions": {
      "extsload(bytes32,uint256)": {
        "calls": 100,
        "min": 6836,
        "mean": 6836,
        "median": 6836,
        "max": 6836
      },
      "exttload(bytes32)": {
        "calls": 200,
        "min": 355,
        "mean": 355,
        "median": 355,
        "max": 355
      },
      "setProtocolFeeController(address)": {
        "calls": 400,
        "min": 47094,
        "mean": 47094,
        "median": 47094,
        "max": 47094
      }
    }
  },
  {
    "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
    "deployment": {
      "gas": 535390,
      "size": 2367
    },
    "functions": {
      "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
        "calls": 100,
        "min": 104572,
        "mean": 111304,
        "median": 111304,
        "max": 118036
      }
    }
  },
  {
    "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
    "deployment": {
      "gas": 301989,
      "size": 1200
    },
    "functions": {
      "approve(address,uint256)": {
        "calls": 100,
        "min": 46194,
        "mean": 46200,
        "median": 46200,
        "max": 46206
      },
      "balanceOf(address)": {
        "calls": 300,
        "min": 364,
        "mean": 1697,
        "median": 2364,
        "max": 2364
      }
    }
  },
  {
    "contract": "src/test/TickMathTest.sol:TickMathTest",
    "deployment": {
      "gas": 476750,
      "size": 1990
    },
    "functions": {
      "MAX_SQRT_PRICE()": {
        "calls": 50,
        "min": 201,
        "mean": 201,
        "median": 201,
        "max": 201
      },
      "MAX_TICK()": {
        "calls": 100,
        "min": 177,
        "mean": 177,
        "median": 177,
        "max": 177
      },
      "MIN_SQRT_PRICE()": {
        "calls": 50,
        "min": 189,
        "mean": 189,
        "median": 189,
        "max": 189
      },
      "MIN_TICK()": {
        "calls": 100,
        "min": 181,
        "mean": 181,
        "median": 181,
        "max": 181
      },
      "getSqrtPriceAtTick(int24)": {
        "calls": 14850,
        "min": 342,
        "mean": 431,
        "median": 342,
        "max": 1126
      },
      "getTickAtSqrtPrice(uint160)": {
        "calls": 14650,
        "min": 308,
        "mean": 520,
        "median": 308,
        "max": 2207
      }
    }
  },
  {
    "contract": "test/Extsload.t.sol:Loadable",
    "deployment": {
      "gas": 125707,
      "size": 365
    },
    "functions": {
      "extsload(bytes32,uint256)": {
        "calls": 12800,
        "min": 2374,
        "mean": 1016227,
        "median": 950404,
        "max": 2178174
      },
      "extsload(bytes32[])": {
        "calls": 17800,
        "min": 2516,
        "mean": 1041296,
        "median": 1000920,
        "max": 2181313
      }
    }
  },
  {
    "contract": "test/Tick.t.sol:LiquidityMathRef",
    "deployment": {
      "gas": 140891,
      "size": 436
    },
    "functions": {
      "addDelta(bool,int128,int128)": {
        "calls": 6150,
        "min": 328,
        "mean": 338,
        "median": 334,
        "max": 344
      },
      "addDelta(uint128,int128)": {
        "calls": 12800,
        "min": 293,
        "mean": 320,
        "median": 331,
        "max": 338
      }
    }
  },
  {
    "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
    "deployment": {
      "gas": 114039,
      "size": 311
    },
    "functions": {
      "addDelta(uint128,int128)": {
        "calls": 12850,
        "min": 262,
        "mean": 307,
        "median": 307,
        "max": 319
      }
    }
  }
]