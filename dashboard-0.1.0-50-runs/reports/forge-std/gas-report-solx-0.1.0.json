[
  {
    "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
    "deployment": {
      "gas": 1828516,
      "size": 9163
    },
    "functions": {
      "assertEqCallExternal(address,bytes,address,bytes,bool)": {
        "calls": 25600,
        "min": 45195,
        "mean": 52328,
        "median": 50428,
        "max": 63673
      }
    }
  },
  {
    "contract": "test/StdAssertions.t.sol:TestMockCall",
    "deployment": {
      "gas": 205551,
      "size": 1156
    },
    "functions": {
      "fallback()": {
        "calls": 102400,
        "min": 25437,
        "mean": 29126,
        "median": 27785,
        "max": 35663
      }
    }
  },
  {
    "contract": "test/StdChains.t.sol:StdChainsMock",
    "deployment": {
      "gas": 4341649,
      "size": 19750
    },
    "functions": {
      "exposed_getChain(string)": {
        "calls": 250,
        "min": 22122,
        "mean": 3494168,
        "median": 5797986,
        "max": 5801520
      },
      "exposed_getChain(uint256)": {
        "calls": 200,
        "min": 21613,
        "mean": 4356760,
        "median": 5800835,
        "max": 5803758
      },
      "exposed_setChain(string,(string,uint256,string))": {
        "calls": 300,
        "min": 23565,
        "mean": 2941509,
        "median": 2913538,
        "max": 5907521
      },
      "exposed_setFallbackToDefaultRpcUrls(bool)": {
        "calls": 50,
        "min": 21646,
        "mean": 21646,
        "median": 21646,
        "max": 21646
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:Bar",
    "deployment": {
      "gas": 207761,
      "size": 577
    },
    "functions": {
      "balanceOf(address)": {
        "calls": 750,
        "min": 2390,
        "mean": 2390,
        "median": 2390,
        "max": 2390
      },
      "bar(address)": {
        "calls": 400,
        "min": 21422,
        "mean": 21476,
        "median": 21422,
        "max": 21638
      },
      "origin(address)": {
        "calls": 150,
        "min": 21452,
        "mean": 21452,
        "median": 21452,
        "max": 21452
      },
      "origin(address,address)": {
        "calls": 200,
        "min": 21666,
        "mean": 21666,
        "median": 21666,
        "max": 21666
      },
      "totalSupply()": {
        "calls": 450,
        "min": 2236,
        "mean": 2236,
        "median": 2236,
        "max": 2236
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:BarERC1155",
    "deployment": {
      "gas": 147358,
      "size": 356
    },
    "functions": {
      "balanceOf(address,uint256)": {
        "calls": 750,
        "min": 2407,
        "mean": 2407,
        "median": 2407,
        "max": 2407
      },
      "totalSupply(uint256)": {
        "calls": 450,
        "min": 2324,
        "mean": 2324,
        "median": 2324,
        "max": 2324
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:BarERC721",
    "deployment": {
      "gas": 220594,
      "size": 498
    },
    "functions": {
      "balanceOf(address)": {
        "calls": 1050,
        "min": 2349,
        "mean": 2349,
        "median": 2349,
        "max": 2349
      },
      "ownerOf(uint256)": {
        "calls": 500,
        "min": 2324,
        "mean": 2324,
        "median": 2324,
        "max": 2324
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:MockUSDC",
    "deployment": {
      "gas": 106411,
      "size": 275
    },
    "functions": {
      "isBlackListed(address)": {
        "calls": 25600,
        "min": 114,
        "mean": 114,
        "median": 114,
        "max": 114
      },
      "isBlacklisted(address)": {
        "calls": 38450,
        "min": 2371,
        "mean": 2371,
        "median": 2371,
        "max": 2371
      },
      "setBlacklisted(address,bool)": {
        "calls": 300,
        "min": 43946,
        "mean": 43946,
        "median": 43946,
        "max": 43946
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:MockUSDT",
    "deployment": {
      "gas": 106411,
      "size": 275
    },
    "functions": {
      "isBlackListed(address)": {
        "calls": 38450,
        "min": 2371,
        "mean": 2371,
        "median": 2371,
        "max": 2371
      },
      "isBlacklisted(address)": {
        "calls": 25650,
        "min": 114,
        "mean": 114,
        "median": 114,
        "max": 114
      },
      "setBlacklisted(address,bool)": {
        "calls": 300,
        "min": 43946,
        "mean": 43946,
        "median": 43946,
        "max": 43946
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:StdCheatsMock",
    "deployment": {
      "gas": 411352,
      "size": 1686
    },
    "functions": {
      "exposed_assumeNotBlacklisted(address,address)": {
        "calls": 150,
        "min": 2911,
        "mean": 6835,
        "median": 8412,
        "max": 9184
      },
      "exposed_assumeNotPayable(address)": {
        "calls": 250,
        "min": 32478,
        "mean": 208023577,
        "median": 59870,
        "max": 1039930672
      },
      "exposed_assumePayable(address)": {
        "calls": 250,
        "min": 32540,
        "mean": 208022932,
        "median": 59932,
        "max": 1039927275
      }
    }
  },
  {
    "contract": "test/StdCheats.t.sol:StdCheatsTest",
    "deployment": {
      "gas": 13162146,
      "size": 65540
    },
    "functions": {
      "_revertDeployCodeTo()": {
        "calls": 50,
        "min": 25440,
        "mean": 25440,
        "median": 25440,
        "max": 25440
      },
      "deployCodeHelper(string)": {
        "calls": 50,
        "min": 57879,
        "mean": 57879,
        "median": 57879,
        "max": 57879
      }
    }
  },
  {
    "contract": "test/StdError.t.sol:ErrorsTest",
    "deployment": {
      "gas": 189655,
      "size": 660
    },
    "functions": {
      "arithmeticError(uint256)": {
        "calls": 50,
        "min": 280,
        "mean": 280,
        "median": 280,
        "max": 280
      },
      "assertionError()": {
        "calls": 50,
        "min": 188,
        "mean": 188,
        "median": 188,
        "max": 188
      },
      "divError(uint256)": {
        "calls": 50,
        "min": 258,
        "mean": 258,
        "median": 258,
        "max": 258
      },
      "encodeStgError()": {
        "calls": 50,
        "min": 43382,
        "mean": 43382,
        "median": 43382,
        "max": 43382
      },
      "enumConversion(uint256)": {
        "calls": 50,
        "min": 276,
        "mean": 276,
        "median": 276,
        "max": 276
      },
      "indexOOBError(uint256)": {
        "calls": 50,
        "min": 260,
        "mean": 260,
        "median": 260,
        "max": 260
      },
      "intern()": {
        "calls": 50,
        "min": 21256,
        "mean": 21256,
        "median": 21256,
        "max": 21256
      },
      "mem()": {
        "calls": 50,
        "min": 210,
        "mean": 210,
        "median": 210,
        "max": 210
      },
      "modError(uint256)": {
        "calls": 50,
        "min": 236,
        "mean": 236,
        "median": 236,
        "max": 236
      },
      "pop()": {
        "calls": 50,
        "min": 23374,
        "mean": 23374,
        "median": 23374,
        "max": 23374
      }
    }
  },
  {
    "contract": "test/StdMath.t.sol:StdMathMock",
    "deployment": {
      "gas": 1153661,
      "size": 4935
    },
    "functions": {
      "exposed_percentDelta(int256,int256)": {
        "calls": 50,
        "min": 434,
        "mean": 434,
        "median": 434,
        "max": 434
      },
      "exposed_percentDelta(uint256,uint256)": {
        "calls": 50,
        "min": 366,
        "mean": 366,
        "median": 366,
        "max": 366
      }
    }
  },
  {
    "contract": "test/StdStorage.t.sol:StdStorageTest",
    "deployment": {
      "gas": 7143925,
      "size": 35506
    },
    "functions": {
      "readNonBoolValue()": {
        "calls": 50,
        "min": 159380,
        "mean": 159380,
        "median": 159380,
        "max": 159380
      }
    }
  },
  {
    "contract": "test/StdStorage.t.sol:StorageTest",
    "deployment": {
      "gas": 849230,
      "size": 2660
    },
    "functions": {
      "basic()": {
        "calls": 1000,
        "min": 4454,
        "mean": 4454,
        "median": 4454,
        "max": 4454
      },
      "const()": {
        "calls": 50,
        "min": 232,
        "mean": 232,
        "median": 232,
        "max": 232
      },
      "deep_map(address,address)": {
        "calls": 400,
        "min": 2594,
        "mean": 2594,
        "median": 2594,
        "max": 2594
      },
      "deep_map_struct(address,address)": {
        "calls": 1000,
        "min": 4660,
        "mean": 4660,
        "median": 4660,
        "max": 4660
      },
      "edgeCaseArray(uint256)": {
        "calls": 250,
        "min": 4525,
        "mean": 4525,
        "median": 4525,
        "max": 4525
      },
      "exists()": {
        "calls": 550,
        "min": 2365,
        "mean": 2365,
        "median": 2365,
        "max": 2365
      },
      "extra_sload()": {
        "calls": 150,
        "min": 4581,
        "mean": 4581,
        "median": 4581,
        "max": 4581
      },
      "getRandomPacked(uint256,uint256)": {
        "calls": 31922682,
        "min": 2453,
        "mean": 2453,
        "median": 2453,
        "max": 2453
      },
      "getRandomPacked(uint8,uint8[],uint8)": {
        "calls": 12953600,
        "min": 3203,
        "mean": 3590,
        "median": 3590,
        "max": 3977
      },
      "hidden()": {
        "calls": 650,
        "min": 2350,
        "mean": 2350,
        "median": 2350,
        "max": 2350
      },
      "map_addr(address)": {
        "calls": 550,
        "min": 2508,
        "mean": 2508,
        "median": 2508,
        "max": 2508
      },
      "map_bool(address)": {
        "calls": 250,
        "min": 2493,
        "mean": 2493,
        "median": 2493,
        "max": 2493
      },
      "map_packed(address)": {
        "calls": 250,
        "min": 2506,
        "mean": 2506,
        "median": 2506,
        "max": 2506
      },
      "map_struct(address)": {
        "calls": 1000,
        "min": 4610,
        "mean": 4610,
        "median": 4610,
        "max": 4610
      },
      "map_uint(uint256)": {
        "calls": 400,
        "min": 2457,
        "mean": 2457,
        "median": 2457,
        "max": 2457
      },
      "read_struct_lower(address)": {
        "calls": 1728050,
        "min": 2511,
        "mean": 2511,
        "median": 2511,
        "max": 2511
      },
      "read_struct_upper(address)": {
        "calls": 1728000,
        "min": 2494,
        "mean": 2494,
        "median": 2494,
        "max": 2494
      },
      "setRandomPacking(uint256)": {
        "calls": 51200,
        "min": 23615,
        "mean": 28663,
        "median": 23796,
        "max": 43899
      },
      "tA()": {
        "calls": 192000,
        "min": 2363,
        "mean": 2363,
        "median": 2363,
        "max": 2363
      },
      "tB()": {
        "calls": 3264150,
        "min": 2354,
        "mean": 2354,
        "median": 2354,
        "max": 2354
      },
      "tC()": {
        "calls": 3264000,
        "min": 2369,
        "mean": 2369,
        "median": 2369,
        "max": 2369
      },
      "tD()": {
        "calls": 192000,
        "min": 2344,
        "mean": 2344,
        "median": 2344,
        "max": 2344
      },
      "tE()": {
        "calls": 300,
        "min": 355,
        "mean": 1688,
        "median": 2355,
        "max": 2355
      },
      "tF()": {
        "calls": 150,
        "min": 2356,
        "mean": 2356,
        "median": 2356,
        "max": 2356
      },
      "tG()": {
        "calls": 400,
        "min": 2365,
        "mean": 2365,
        "median": 2365,
        "max": 2365
      },
      "tH()": {
        "calls": 150,
        "min": 2373,
        "mean": 2373,
        "median": 2373,
        "max": 2373
      }
    }
  },
  {
    "contract": "test/StdStorage.t.sol:StorageTestTarget",
    "deployment": {
      "gas": 1085963,
      "size": 4832
    },
    "functions": {
      "expectRevertStorageConst()": {
        "calls": 50,
        "min": 88750,
        "mean": 88750,
        "median": 88750,
        "max": 88750
      }
    }
  },
  {
    "contract": "test/StdUtils.t.sol:StdUtilsMock",
    "deployment": {
      "gas": 804274,
      "size": 3511
    },
    "functions": {
      "exposed_bound(int256,int256,int256)": {
        "calls": 12850,
        "min": 264,
        "mean": 264,
        "median": 264,
        "max": 264
      },
      "exposed_bound(uint256,uint256,uint256)": {
        "calls": 12850,
        "min": 340,
        "mean": 340,
        "median": 340,
        "max": 340
      },
      "exposed_bytesToUint(bytes)": {
        "calls": 50,
        "min": 563,
        "mean": 563,
        "median": 563,
        "max": 563
      },
      "exposed_getTokenBalances(address,address[])": {
        "calls": 100,
        "min": 25372,
        "mean": 28005,
        "median": 28005,
        "max": 30639
      }
    }
  }
]