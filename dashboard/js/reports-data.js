// Auto-generated file from build.js
const REPORTS_DATA = {
  "art-gobblers": {
    "solc": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 11014365,
          "size": 51684
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 3,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "governorWallet()": {
            "calls": 1,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "pages()": {
            "calls": 4,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 1,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "run()": {
            "calls": 7,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 11024851,
          "size": 51751
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 3,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "mintStart()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "pages()": {
            "calls": 4,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 1,
            "min": 494,
            "mean": 494,
            "median": 494,
            "max": 494
          },
          "run()": {
            "calls": 5,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4611924,
          "size": 23380
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 8275,
            "mean": 8275,
            "median": 8275,
            "max": 8275
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 1455,
            "mean": 1455,
            "median": 1455,
            "max": 1455
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 1125,
            "mean": 1125,
            "median": 1125,
            "max": 1125
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7717,
            "mean": 7717,
            "median": 7717,
            "max": 7717
          },
          "balanceOf(address)": {
            "calls": 2,
            "min": 3166,
            "mean": 3166,
            "median": 3166,
            "max": 3166
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 22611,
            "mean": 51621,
            "median": 25166,
            "max": 115686
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 984,
            "mean": 1433,
            "median": 1658,
            "max": 1658
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3484,
            "mean": 3921,
            "median": 3938,
            "max": 3938
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2603,
            "mean": 2603,
            "median": 2603,
            "max": 2603
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 29625,
            "mean": 29758,
            "median": 29758,
            "max": 29891
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26550,
            "mean": 26550,
            "median": 26550,
            "max": 26550
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 46214,
            "mean": 46214,
            "median": 46214,
            "max": 46214
          },
          "mintStart()": {
            "calls": 1,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "owner()": {
            "calls": 1,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 29974,
            "mean": 29974,
            "median": 29974,
            "max": 29974
          },
          "targetPrice()": {
            "calls": 1,
            "min": 1320,
            "mean": 1320,
            "median": 1320,
            "max": 1320
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 5592,
            "mean": 7076,
            "median": 7819,
            "max": 7819
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 1038342,
          "size": 5575
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2569,
            "mean": 2569,
            "median": 2569,
            "max": 2569
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24227,
            "mean": 29060,
            "median": 29060,
            "max": 33893
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 34015,
            "mean": 34015,
            "median": 34015,
            "max": 34015
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13041,
            "min": 22010,
            "mean": 42060,
            "median": 28299,
            "max": 68195
          },
          "pages()": {
            "calls": 2,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 2046045,
          "size": 11172
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7602,
            "mean": 7602,
            "median": 7602,
            "max": 7602
          },
          "artGobblers()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "currentId()": {
            "calls": 2,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 468,
            "mean": 778,
            "median": 1012,
            "max": 1012
          },
          "goo()": {
            "calls": 2,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26880,
            "mean": 70865,
            "median": 58057,
            "max": 292408
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 12983,
            "min": 0,
            "mean": 67531,
            "median": 68821,
            "max": 103021
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "pagePrice()": {
            "calls": 12983,
            "min": 2909,
            "mean": 3521,
            "median": 3453,
            "max": 3754
          },
          "targetPrice()": {
            "calls": 3,
            "min": 642,
            "mean": 642,
            "median": 642,
            "max": 642
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 294021,
          "size": 1277
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 378808,
          "size": 1929
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21280,
            "mean": 21280,
            "median": 21280,
            "max": 21280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 825912,
          "size": 3578
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 91,
            "min": 36965,
            "mean": 36965,
            "median": 36965,
            "max": 36965
          },
          "predictContractAddress(address,uint256)": {
            "calls": 300,
            "min": 25131,
            "mean": 25131,
            "median": 25131,
            "max": 25131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 10349425,
          "size": 48142
        },
        "functions": {
          "run()": {
            "calls": 1,
            "min": 25215,
            "mean": 25215,
            "median": 25215,
            "max": 25215
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 10347863,
          "size": 48174
        },
        "functions": {
          "run()": {
            "calls": 1,
            "min": 25215,
            "mean": 25215,
            "median": 25215,
            "max": 25215
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4363530,
          "size": 22029
        },
        "functions": {
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 847,
            "mean": 847,
            "median": 847,
            "max": 847
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 758,
            "mean": 758,
            "median": 758,
            "max": 758
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "claimGobbler(bytes32[])": {
            "calls": 5,
            "min": 21923,
            "mean": 59927,
            "median": 24343,
            "max": 114627
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 520,
            "mean": 902,
            "median": 1094,
            "max": 1094
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3498,
            "mean": 3828,
            "median": 3841,
            "max": 3841
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2616,
            "mean": 2616,
            "median": 2616,
            "max": 2616
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 29020,
            "mean": 29051,
            "median": 29051,
            "max": 29083
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26664,
            "mean": 26664,
            "median": 26664,
            "max": 26664
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45856,
            "mean": 45856,
            "median": 45856,
            "max": 45856
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28847,
            "mean": 28847,
            "median": 28847,
            "max": 28847
          },
          "targetPrice()": {
            "calls": 1,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4868,
            "mean": 6447,
            "median": 7237,
            "max": 7237
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 24042,
            "mean": 24042,
            "median": 24042,
            "max": 24042
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 964891,
          "size": 4967
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24320,
            "mean": 29196,
            "median": 29196,
            "max": 34072
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 34040,
            "mean": 34040,
            "median": 34040,
            "max": 34040
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13037,
            "min": 0,
            "mean": 42151,
            "median": 28404,
            "max": 68300
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1931435,
          "size": 10549
        },
        "functions": {
          "currentId()": {
            "calls": 2,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 410,
            "mean": 799,
            "median": 1092,
            "max": 1092
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26637,
            "mean": 70754,
            "median": 57954,
            "max": 292611
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 12978,
            "min": 22197,
            "mean": 67702,
            "median": 68981,
            "max": 103181
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "pagePrice()": {
            "calls": 12979,
            "min": 2916,
            "mean": 3672,
            "median": 3598,
            "max": 3941
          },
          "targetPrice()": {
            "calls": 3,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 374024,
          "size": 1918
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21294,
            "mean": 21294,
            "median": 21294,
            "max": 21294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 805130,
          "size": 3473
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 91,
            "min": 36851,
            "mean": 36851,
            "median": 36851,
            "max": 36851
          },
          "predictContractAddress(address,uint256)": {
            "calls": 300,
            "min": 25264,
            "mean": 25264,
            "median": 25264,
            "max": 25264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 10895334,
          "size": 51222
        },
        "functions": {
          "run()": {
            "calls": 1,
            "min": 24902,
            "mean": 24902,
            "median": 24902,
            "max": 24902
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 10904156,
          "size": 51265
        },
        "functions": {
          "run()": {
            "calls": 1,
            "min": 24902,
            "mean": 24902,
            "median": 24902,
            "max": 24902
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4657156,
          "size": 24301
        },
        "functions": {
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "claimGobbler(bytes32[])": {
            "calls": 5,
            "min": 21799,
            "mean": 59714,
            "median": 24155,
            "max": 114311
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 483,
            "mean": 809,
            "median": 972,
            "max": 972
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3370,
            "mean": 3766,
            "median": 3781,
            "max": 3781
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 28657,
            "mean": 28791,
            "median": 28791,
            "max": 28926
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26074,
            "mean": 26074,
            "median": 26074,
            "max": 26074
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45737,
            "mean": 45737,
            "median": 45737,
            "max": 45737
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2485,
            "mean": 2485,
            "median": 2485,
            "max": 2485
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28584,
            "mean": 28584,
            "median": 28584,
            "max": 28584
          },
          "targetPrice()": {
            "calls": 1,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4700,
            "mean": 6124,
            "median": 6837,
            "max": 6837
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 23903,
            "mean": 23903,
            "median": 23903,
            "max": 23903
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 948358,
          "size": 5750
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24088,
            "mean": 28926,
            "median": 28926,
            "max": 33764
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 33768,
            "mean": 33768,
            "median": 33768,
            "max": 33768
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13129,
            "min": 21813,
            "mean": 42054,
            "median": 28118,
            "max": 68014
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1936187,
          "size": 11010
        },
        "functions": {
          "currentId()": {
            "calls": 2,
            "min": 2377,
            "mean": 2377,
            "median": 2377,
            "max": 2377
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 425,
            "mean": 747,
            "median": 989,
            "max": 989
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26505,
            "mean": 70483,
            "median": 57677,
            "max": 291992
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 13071,
            "min": 0,
            "mean": 66936,
            "median": 68208,
            "max": 102408
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2422,
            "mean": 2422,
            "median": 2422,
            "max": 2422
          },
          "pagePrice()": {
            "calls": 13071,
            "min": 2845,
            "mean": 3513,
            "median": 3409,
            "max": 3820
          },
          "targetPrice()": {
            "calls": 3,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 343199,
          "size": 1820
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21262,
            "mean": 21262,
            "median": 21262,
            "max": 21262
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 718258,
          "size": 3052
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 91,
            "min": 35225,
            "mean": 35225,
            "median": 35225,
            "max": 35225
          },
          "predictContractAddress(address,uint256)": {
            "calls": 300,
            "min": 24852,
            "mean": 24852,
            "median": 24852,
            "max": 24852
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 13795792,
          "size": 65064
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2364,
            "mean": 2364,
            "median": 2364,
            "max": 2364
          },
          "coldWallet()": {
            "calls": 1,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "goo()": {
            "calls": 3,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "governorWallet()": {
            "calls": 1,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          },
          "pages()": {
            "calls": 4,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 318,
            "mean": 318,
            "median": 318,
            "max": 318
          },
          "root()": {
            "calls": 1,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          },
          "run()": {
            "calls": 7,
            "min": 11038269,
            "mean": 11038269,
            "median": 11038269,
            "max": 11038269
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 13802204,
          "size": 64979
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2364,
            "mean": 2364,
            "median": 2364,
            "max": 2364
          },
          "coldWallet()": {
            "calls": 1,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "goo()": {
            "calls": 3,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "mintStart()": {
            "calls": 1,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "pages()": {
            "calls": 4,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 318,
            "mean": 318,
            "median": 318,
            "max": 318
          },
          "root()": {
            "calls": 1,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "run()": {
            "calls": 5,
            "min": 11038269,
            "mean": 11038269,
            "median": 11038269,
            "max": 11038269
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 6889893,
          "size": 34442
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7017,
            "mean": 7017,
            "median": 7017,
            "max": 7017
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 252,
            "mean": 252,
            "median": 252,
            "max": 252
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7008,
            "mean": 7008,
            "median": 7008,
            "max": 7008
          },
          "balanceOf(address)": {
            "calls": 3,
            "min": 2572,
            "mean": 2572,
            "median": 2572,
            "max": 2572
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21804,
            "mean": 76462,
            "median": 114544,
            "max": 121540
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 473,
            "mean": 803,
            "median": 968,
            "max": 968
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3318,
            "mean": 3731,
            "median": 3747,
            "max": 3747
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 3287,
            "mean": 3287,
            "median": 3287,
            "max": 3287
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 28682,
            "mean": 29022,
            "median": 29022,
            "max": 29363
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26537,
            "mean": 26537,
            "median": 26537,
            "max": 26537
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45817,
            "mean": 45817,
            "median": 45817,
            "max": 45817
          },
          "mintStart()": {
            "calls": 1,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "owner()": {
            "calls": 1,
            "min": 2415,
            "mean": 2415,
            "median": 2415,
            "max": 2415
          },
          "ownerOf(uint256)": {
            "calls": 2,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28945,
            "mean": 28945,
            "median": 28945,
            "max": 28945
          },
          "targetPrice()": {
            "calls": 1,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4751,
            "mean": 6175,
            "median": 6887,
            "max": 6887
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 23970,
            "mean": 23970,
            "median": 23970,
            "max": 23970
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 947992,
          "size": 5551
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24101,
            "mean": 28941,
            "median": 28941,
            "max": 33782
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 33780,
            "mean": 33780,
            "median": 33780,
            "max": 33780
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13096,
            "min": 0,
            "mean": 41993,
            "median": 28128,
            "max": 68024
          },
          "pages()": {
            "calls": 2,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 2786595,
          "size": 15111
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 6974,
            "mean": 6974,
            "median": 6974,
            "max": 6974
          },
          "artGobblers()": {
            "calls": 2,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "currentId()": {
            "calls": 2,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 412,
            "mean": 729,
            "median": 967,
            "max": 967
          },
          "goo()": {
            "calls": 2,
            "min": 242,
            "mean": 242,
            "median": 242,
            "max": 242
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26697,
            "mean": 70751,
            "median": 57957,
            "max": 292353
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 13037,
            "min": 22028,
            "mean": 67230,
            "median": 68484,
            "max": 102684
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2483,
            "mean": 2483,
            "median": 2483,
            "max": 2483
          },
          "pagePrice()": {
            "calls": 13038,
            "min": 2972,
            "mean": 3648,
            "median": 3538,
            "max": 3965
          },
          "targetPrice()": {
            "calls": 3,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 284198,
          "size": 1243
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2295,
            "mean": 2295,
            "median": 2295,
            "max": 2295
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 321732,
          "size": 1638
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21254,
            "mean": 21254,
            "median": 21254,
            "max": 21254
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 631947,
          "size": 2709
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 91,
            "min": 35081,
            "mean": 35081,
            "median": 35081,
            "max": 35081
          },
          "predictContractAddress(address,uint256)": {
            "calls": 300,
            "min": 24826,
            "mean": 24826,
            "median": 24826,
            "max": 24826
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "balance-snapshot": {
    "solc": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 818597,
          "size": 3787
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 3230,
            "mean": 3230,
            "median": 3230,
            "max": 3230
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 850988,
          "size": 4294
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2824,
            "mean": 2824,
            "median": 2824,
            "max": 2824
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 519015,
          "size": 2322
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "forge-std": {
    "solc": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1288751,
          "size": 6463
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 46034,
            "mean": 53233,
            "median": 51452,
            "max": 64804
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 250678,
          "size": 1111
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25578,
            "mean": 29215,
            "median": 27908,
            "max": 35862
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3753777,
          "size": 16965
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22643,
            "mean": 3559645,
            "median": 5905860,
            "max": 5907443
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 22121,
            "mean": 4436985,
            "median": 5907889,
            "max": 5910040
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 24003,
            "mean": 2995052,
            "median": 2967194,
            "max": 6014073
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21767,
            "mean": 21767,
            "median": 21767,
            "max": 21767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 195803,
          "size": 508
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2471,
            "mean": 2471,
            "median": 2471,
            "max": 2471
          },
          "bar(address)": {
            "calls": 8,
            "min": 21511,
            "mean": 21565,
            "median": 21511,
            "max": 21727
          },
          "origin(address)": {
            "calls": 3,
            "min": 21537,
            "mean": 21537,
            "median": 21537,
            "max": 21537
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21807,
            "mean": 21807,
            "median": 21807,
            "max": 21807
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 144252,
          "size": 320
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 212270,
          "size": 419
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 415237,
          "size": 1701
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 3025,
            "mean": 7268,
            "median": 8907,
            "max": 9872
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 33533,
            "mean": 208023094,
            "median": 60741,
            "max": 1039924527
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 33490,
            "mean": 208022411,
            "median": 60882,
            "max": 1039920900
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10576867,
          "size": 52639
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 27286,
            "mean": 27286,
            "median": 27286,
            "max": 27286
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 58554,
            "mean": 58554,
            "median": 58554,
            "max": 58554
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 213952,
          "size": 770
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "assertionError()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43395,
            "mean": 43395,
            "median": 43395,
            "max": 43395
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 390,
            "mean": 390,
            "median": 390,
            "max": 390
          },
          "intern()": {
            "calls": 1,
            "min": 21235,
            "mean": 21235,
            "median": 21235,
            "max": 21235
          },
          "mem()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 349,
            "mean": 349,
            "median": 349,
            "max": 349
          },
          "pop()": {
            "calls": 1,
            "min": 23445,
            "mean": 23445,
            "median": 23445,
            "max": 23445
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 942916,
          "size": 3961
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 934,
            "mean": 934,
            "median": 934,
            "max": 934
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 7090279,
          "size": 35237
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 179351,
            "mean": 179351,
            "median": 179351,
            "max": 179351
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 931527,
          "size": 2923
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4434,
            "mean": 4434,
            "median": 4434,
            "max": 4434
          },
          "const()": {
            "calls": 1,
            "min": 298,
            "mean": 298,
            "median": 298,
            "max": 298
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2963,
            "mean": 2963,
            "median": 2963,
            "max": 2963
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4738,
            "mean": 4738,
            "median": 4738,
            "max": 4738
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4956,
            "mean": 4956,
            "median": 4956,
            "max": 4956
          },
          "exists()": {
            "calls": 11,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4874,
            "mean": 4874,
            "median": 4874,
            "max": 4874
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 665157,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3816,
            "mean": 4500,
            "median": 4500,
            "max": 5184
          },
          "hidden()": {
            "calls": 13,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2722
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2828,
            "mean": 2828,
            "median": 2828,
            "max": 2828
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2674,
            "mean": 2674,
            "median": 2674,
            "max": 2674
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4808,
            "mean": 4808,
            "median": 4808,
            "max": 4808
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2570,
            "mean": 2570,
            "median": 2570,
            "max": 2570
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23975,
            "mean": 29038,
            "median": 24137,
            "max": 44259
          },
          "tA()": {
            "calls": 3840,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "tB()": {
            "calls": 65283,
            "min": 2514,
            "mean": 2514,
            "median": 2514,
            "max": 2514
          },
          "tC()": {
            "calls": 65280,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "tD()": {
            "calls": 3840,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "tE()": {
            "calls": 6,
            "min": 744,
            "mean": 2077,
            "median": 2744,
            "max": 2744
          },
          "tF()": {
            "calls": 3,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "tG()": {
            "calls": 8,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "tH()": {
            "calls": 3,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 974022,
          "size": 4316
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 94144,
            "mean": 94144,
            "median": 94144,
            "max": 94144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 728643,
          "size": 3149
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1216259,
          "size": 6103
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 47696,
            "mean": 54576,
            "median": 52739,
            "max": 66077
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 190234,
          "size": 1046
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25915,
            "mean": 29461,
            "median": 28128,
            "max": 36003
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3608692,
          "size": 16297
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22452,
            "mean": 3548168,
            "median": 5886797,
            "max": 5888124
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21838,
            "mean": 4422454,
            "median": 5888672,
            "max": 5890636
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 24123,
            "mean": 2985506,
            "median": 2957610,
            "max": 5994894
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21688,
            "mean": 21688,
            "median": 21688,
            "max": 21688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 233643,
          "size": 678
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "bar(address)": {
            "calls": 8,
            "min": 21556,
            "mean": 21610,
            "median": 21556,
            "max": 21772
          },
          "origin(address)": {
            "calls": 3,
            "min": 21574,
            "mean": 21574,
            "median": 21574,
            "max": 21574
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21895,
            "mean": 21895,
            "median": 21895,
            "max": 21895
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 157650,
          "size": 383
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 229155,
          "size": 499
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 457357,
          "size": 1897
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 3180,
            "mean": 7478,
            "median": 9149,
            "max": 10106
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 33037,
            "mean": 208014852,
            "median": 60423,
            "max": 1039884927
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 33065,
            "mean": 208014172,
            "median": 60457,
            "max": 1039881356
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10117770,
          "size": 50353
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 26363,
            "mean": 26363,
            "median": 26363,
            "max": 26363
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 58482,
            "mean": 58482,
            "median": 58482,
            "max": 58482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 286297,
          "size": 1106
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "assertionError()": {
            "calls": 1,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 380,
            "mean": 380,
            "median": 380,
            "max": 380
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43616,
            "mean": 43616,
            "median": 43616,
            "max": 43616
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 319,
            "mean": 319,
            "median": 319,
            "max": 319
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 353
          },
          "intern()": {
            "calls": 1,
            "min": 21293,
            "mean": 21293,
            "median": 21293,
            "max": 21293
          },
          "mem()": {
            "calls": 1,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "pop()": {
            "calls": 1,
            "min": 23362,
            "mean": 23362,
            "median": 23362,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 934124,
          "size": 3924
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 1109,
            "mean": 1109,
            "median": 1109,
            "max": 1109
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 637,
            "mean": 637,
            "median": 637,
            "max": 637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 5941894,
          "size": 29509
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 181163,
            "mean": 181163,
            "median": 181163,
            "max": 181163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 864361,
          "size": 2534
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4484,
            "mean": 4484,
            "median": 4484,
            "max": 4484
          },
          "const()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2756,
            "mean": 2756,
            "median": 2756,
            "max": 2756
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4841,
            "mean": 4841,
            "median": 4841,
            "max": 4841
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "exists()": {
            "calls": 11,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4614,
            "mean": 4614,
            "median": 4614,
            "max": 4614
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 628744,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3698,
            "mean": 4271,
            "median": 4271,
            "max": 4844
          },
          "hidden()": {
            "calls": 13,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4711,
            "mean": 4711,
            "median": 4711,
            "max": 4711
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23647,
            "mean": 28661,
            "median": 23791,
            "max": 43931
          },
          "tA()": {
            "calls": 3840,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "tB()": {
            "calls": 65283,
            "min": 2415,
            "mean": 2415,
            "median": 2415,
            "max": 2415
          },
          "tC()": {
            "calls": 65280,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "tD()": {
            "calls": 3840,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "tE()": {
            "calls": 6,
            "min": 383,
            "mean": 1716,
            "median": 2383,
            "max": 2383
          },
          "tF()": {
            "calls": 3,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "tG()": {
            "calls": 8,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "tH()": {
            "calls": 3,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1088965,
          "size": 4844
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 96208,
            "mean": 96208,
            "median": 96208,
            "max": 96208
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 884029,
          "size": 3871
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 446,
            "mean": 446,
            "median": 446,
            "max": 446
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 821,
            "mean": 821,
            "median": 821,
            "max": 821
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25745,
            "mean": 28534,
            "median": 28534,
            "max": 31324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 5578711,
          "size": 25626
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22267,
            "mean": 3502259,
            "median": 5811205,
            "max": 5814875
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21785,
            "mean": 4366846,
            "median": 5814210,
            "max": 5817181
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 23680,
            "mean": 2948041,
            "median": 2920157,
            "max": 5920424
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21632,
            "mean": 21632,
            "median": 21632,
            "max": 21632
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 275483,
          "size": 1075
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "assertionError()": {
            "calls": 1,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43393,
            "mean": 43393,
            "median": 43393,
            "max": 43393
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "intern()": {
            "calls": 1,
            "min": 21267,
            "mean": 21267,
            "median": 21267,
            "max": 21267
          },
          "mem()": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          },
          "pop()": {
            "calls": 1,
            "min": 23380,
            "mean": 23380,
            "median": 23380,
            "max": 23380
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1455007,
          "size": 6385
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 605,
            "mean": 605,
            "median": 605,
            "max": 605
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 361,
            "mean": 361,
            "median": 361,
            "max": 361
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 978646,
          "size": 4351
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 307,
            "mean": 307,
            "median": 307,
            "max": 307
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 543,
            "mean": 543,
            "median": 543,
            "max": 543
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25329,
            "mean": 28036,
            "median": 28036,
            "max": 30744
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 2178522,
          "size": 10918
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 45629,
            "mean": 52380,
            "median": 51116,
            "max": 61918
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 253182,
          "size": 1351
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25489,
            "mean": 29137,
            "median": 27822,
            "max": 35763
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 5259399,
          "size": 24159
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22105,
            "mean": 3498744,
            "median": 5805659,
            "max": 5809401
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21602,
            "mean": 4362629,
            "median": 5808647,
            "max": 5811623
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 23555,
            "mean": 2945473,
            "median": 2917506,
            "max": 5915463
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21704,
            "mean": 21704,
            "median": 21704,
            "max": 21704
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 244148,
          "size": 934
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "assertionError()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 254,
            "mean": 254,
            "median": 254,
            "max": 254
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43381,
            "mean": 43381,
            "median": 43381,
            "max": 43381
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "intern()": {
            "calls": 1,
            "min": 21255,
            "mean": 21255,
            "median": 21255,
            "max": 21255
          },
          "mem()": {
            "calls": 1,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "pop()": {
            "calls": 1,
            "min": 23370,
            "mean": 23370,
            "median": 23370,
            "max": 23370
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1303543,
          "size": 5657
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 427,
            "mean": 427,
            "median": 427,
            "max": 427
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 362,
            "mean": 362,
            "median": 362,
            "max": 362
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 966066,
          "size": 4302
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 570,
            "mean": 570,
            "median": 570,
            "max": 570
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25358,
            "mean": 27993,
            "median": 27993,
            "max": 30629
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "foundry-upgrades": {
    "solc": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1244
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3296649,
          "size": 15067
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "deploy(address)": {
            "calls": 2,
            "min": 330469,
            "mean": 384199,
            "median": 384199,
            "max": 437930
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 609017,
            "mean": 609017,
            "median": 609017,
            "max": 609017
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "setType(string)": {
            "calls": 4,
            "min": 26943,
            "mean": 37102,
            "median": 37027,
            "max": 47411
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 48550,
            "mean": 48550,
            "median": 48550,
            "max": 48550
          },
          "uups()": {
            "calls": 2,
            "min": 2623,
            "mean": 2623,
            "median": 2623,
            "max": 2623
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1456
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3578813,
          "size": 16370
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "deploy(address)": {
            "calls": 2,
            "min": 364111,
            "mean": 418573,
            "median": 418573,
            "max": 473035
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 579538,
            "mean": 579538,
            "median": 579538,
            "max": 579538
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "setType(string)": {
            "calls": 4,
            "min": 26640,
            "mean": 36722,
            "median": 36674,
            "max": 46900
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 48228,
            "mean": 48228,
            "median": 48228,
            "max": 48228
          },
          "uups()": {
            "calls": 2,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1667
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 4534141,
          "size": 20975
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "deploy(address)": {
            "calls": 2,
            "min": 389087,
            "mean": 481438,
            "median": 481438,
            "max": 573789
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 819228,
            "mean": 819228,
            "median": 819228,
            "max": 819228
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setType(string)": {
            "calls": 4,
            "min": 26588,
            "mean": 36704,
            "median": 36645,
            "max": 46941
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 47375,
            "mean": 47375,
            "median": 47375,
            "max": 47375
          },
          "uups()": {
            "calls": 2,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1637
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 4488103,
          "size": 20742
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "deploy(address)": {
            "calls": 2,
            "min": 393956,
            "mean": 467601,
            "median": 467601,
            "max": 541247
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 772089,
            "mean": 772089,
            "median": 772089,
            "max": 772089
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2431,
            "mean": 2431,
            "median": 2431,
            "max": 2431
          },
          "setType(string)": {
            "calls": 4,
            "min": 26574,
            "mean": 36683,
            "median": 36632,
            "max": 46895
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 47433,
            "mean": 47433,
            "median": 47433,
            "max": 47433
          },
          "uups()": {
            "calls": 2,
            "min": 2376,
            "mean": 2376,
            "median": 2376,
            "max": 2376
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "lil-web3": {
    "solc": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 214636,
          "size": 777
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "register(string)": {
            "calls": 5,
            "min": 24231,
            "mean": 40403,
            "median": 44447,
            "max": 44447
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24628,
            "mean": 26195,
            "median": 26195,
            "max": 27762
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 414609,
          "size": 1723
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30853,
            "mean": 60965,
            "median": 65265,
            "max": 72679
          },
          "fees(address)": {
            "calls": 6,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2494,
            "mean": 2567,
            "median": 2494,
            "max": 2714
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21889,
            "mean": 36049,
            "median": 45485,
            "max": 45485
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21985,
            "mean": 36564,
            "median": 36564,
            "max": 51143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1313690,
          "size": 5771
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8794,
            "mean": 8794,
            "median": 8794,
            "max": 8794
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30048,
            "mean": 52191,
            "median": 49512,
            "max": 79695
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 801444,
            "mean": 829614,
            "median": 836657,
            "max": 836657
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4374
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2530,
            "mean": 2530,
            "median": 2530,
            "max": 2530
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51225,
            "mean": 51225,
            "median": 51225,
            "max": 51225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 810087,
          "size": 3507
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44596,
            "mean": 76878,
            "median": 85813,
            "max": 98272
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "nonce()": {
            "calls": 1914,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "quorum()": {
            "calls": 256,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43555,
            "mean": 82447,
            "median": 82952,
            "max": 83276
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 44049,
            "mean": 68446,
            "median": 67593,
            "max": 103060
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1186062,
          "size": 6547
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23535,
            "mean": 64326,
            "median": 74524,
            "max": 74524
          },
          "getState()": {
            "calls": 4,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "manager()": {
            "calls": 4,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23649,
            "mean": 30771,
            "median": 30706,
            "max": 37960
          },
          "renounce()": {
            "calls": 2,
            "min": 23447,
            "mean": 25274,
            "median": 25274,
            "max": 27102
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23585,
            "mean": 26811,
            "median": 27612,
            "max": 27624
          },
          "token()": {
            "calls": 11,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "withdraw()": {
            "calls": 2,
            "min": 23378,
            "mean": 27354,
            "median": 27354,
            "max": 31330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4462
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 459643,
          "size": 1814
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30162,
            "mean": 45206,
            "median": 30198,
            "max": 75259
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30139,
            "mean": 48753,
            "median": 48753,
            "max": 67367
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8706,
            "mean": 8706,
            "median": 8706,
            "max": 8706
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120702,
            "mean": 146576,
            "median": 156001,
            "max": 156001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 787688,
          "size": 3473
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17971,
            "mean": 18049,
            "median": 18065,
            "max": 18092
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17544,
            "mean": 17544,
            "median": 17544,
            "max": 17544
          },
          "nonce()": {
            "calls": 2,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23739,
            "mean": 32557,
            "median": 23799,
            "max": 50135
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23561,
            "mean": 25019,
            "median": 25749,
            "max": 25749
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 218530,
            "mean": 220660,
            "median": 218530,
            "max": 223330
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49906,
            "mean": 53850,
            "median": 53850,
            "max": 57795
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23589,
            "mean": 70324,
            "median": 93692,
            "max": 93692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 509813,
          "size": 1971
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26465,
            "mean": 26465,
            "median": 26465,
            "max": 26465
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44128,
            "mean": 44128,
            "median": 44128,
            "max": 44128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 695451,
          "size": 3800
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 552,
            "mean": 2097,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68080,
            "mean": 68087,
            "median": 68092,
            "max": 68092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 865233,
          "size": 4192
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72961,
            "mean": 72961,
            "median": 72961,
            "max": 72961
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 46126,
            "mean": 46126,
            "median": 46126,
            "max": 46126
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 554804,
          "size": 2262
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44179,
            "mean": 44179,
            "median": 44179,
            "max": 44179
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43480,
            "mean": 43480,
            "median": 43480,
            "max": 43480
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43564,
            "mean": 43564,
            "median": 43564,
            "max": 43564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 864153,
          "size": 4187
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72946,
            "mean": 72946,
            "median": 72946,
            "max": 72946
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24214,
            "mean": 44837,
            "median": 46126,
            "max": 46126
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54441,
            "mean": 54441,
            "median": 54441,
            "max": 54441
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 695399,
          "size": 3799
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33880,
            "mean": 62380,
            "median": 68080,
            "max": 68080
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 259012,
          "size": 984
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2865,
            "mean": 2865,
            "median": 2865,
            "max": 2865
          },
          "register(string)": {
            "calls": 5,
            "min": 24425,
            "mean": 40673,
            "median": 44735,
            "max": 44735
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24830,
            "mean": 26436,
            "median": 26436,
            "max": 28043
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 489958,
          "size": 2073
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 31025,
            "mean": 61491,
            "median": 65920,
            "max": 73328
          },
          "fees(address)": {
            "calls": 6,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2631,
            "mean": 2744,
            "median": 2631,
            "max": 2970
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 22000,
            "mean": 36192,
            "median": 45648,
            "max": 45648
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 22025,
            "mean": 36623,
            "median": 36623,
            "max": 51222
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1399400,
          "size": 6170
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8931,
            "mean": 8931,
            "median": 8931,
            "max": 8931
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30065,
            "mean": 52412,
            "median": 49819,
            "max": 79945
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 862854,
            "mean": 891008,
            "median": 898047,
            "max": 898047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4495
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51315,
            "mean": 51315,
            "median": 51315,
            "max": 51315
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 989853,
          "size": 4531
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44791,
            "mean": 78028,
            "median": 87278,
            "max": 99922
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "nonce()": {
            "calls": 1914,
            "min": 2304,
            "mean": 2304,
            "median": 2304,
            "max": 2304
          },
          "quorum()": {
            "calls": 256,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43672,
            "mean": 83833,
            "median": 84188,
            "max": 84536
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 44197,
            "mean": 69222,
            "median": 68421,
            "max": 104413
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1287947,
          "size": 6881
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23433,
            "mean": 64286,
            "median": 74500,
            "max": 74500
          },
          "getState()": {
            "calls": 4,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "manager()": {
            "calls": 4,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23712,
            "mean": 30766,
            "median": 30676,
            "max": 37911
          },
          "renounce()": {
            "calls": 2,
            "min": 23408,
            "mean": 25278,
            "median": 25278,
            "max": 27148
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23618,
            "mean": 26941,
            "median": 27766,
            "max": 27778
          },
          "token()": {
            "calls": 11,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "withdraw()": {
            "calls": 2,
            "min": 23408,
            "mean": 27386,
            "median": 27386,
            "max": 31364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4570
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 462002,
          "size": 1828
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30109,
            "mean": 45193,
            "median": 30140,
            "max": 75332
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30092,
            "mean": 48764,
            "median": 48764,
            "max": 67437
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8908,
            "mean": 8908,
            "median": 8908,
            "max": 8908
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120600,
            "mean": 146386,
            "median": 155787,
            "max": 155787
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 920742,
          "size": 4025
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "balanceOf(uint256,address)": {
            "calls": 22,
            "min": 18009,
            "mean": 18130,
            "median": 18135,
            "max": 18205
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17659,
            "mean": 17659,
            "median": 17659,
            "max": 17659
          },
          "nonce()": {
            "calls": 2,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23840,
            "mean": 32742,
            "median": 23900,
            "max": 50486
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23691,
            "mean": 34897,
            "median": 25881,
            "max": 55121
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 219146,
            "mean": 221276,
            "median": 219146,
            "max": 223946
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49934,
            "mean": 53924,
            "median": 53924,
            "max": 57915
          },
          "withdraw(uint256)": {
            "calls": 4,
            "min": 23674,
            "mean": 66489,
            "median": 74259,
            "max": 93766
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 578775,
          "size": 2291
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26522,
            "mean": 26522,
            "median": 26522,
            "max": 26522
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26513,
            "mean": 26513,
            "median": 26513,
            "max": 26513
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44280,
            "mean": 44280,
            "median": 44280,
            "max": 44280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 755165,
          "size": 3772
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 561,
            "mean": 2106,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68199,
            "mean": 68206,
            "median": 68211,
            "max": 68211
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 922041,
          "size": 4159
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 73074,
            "mean": 73074,
            "median": 73074,
            "max": 73074
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 46075,
            "mean": 46075,
            "median": 46075,
            "max": 46075
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 590096,
          "size": 2429
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44359,
            "mean": 44359,
            "median": 44359,
            "max": 44359
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43633,
            "mean": 43633,
            "median": 43633,
            "max": 43633
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 955767,
          "size": 4315
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 73050,
            "mean": 73050,
            "median": 73050,
            "max": 73050
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24163,
            "mean": 44786,
            "median": 46075,
            "max": 46075
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54549,
            "mean": 54549,
            "median": 54549,
            "max": 54549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 755149,
          "size": 3771
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 14,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33999,
            "mean": 62499,
            "median": 68199,
            "max": 68199
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 289299,
          "size": 1132
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "register(string)": {
            "calls": 5,
            "min": 24145,
            "mean": 40313,
            "median": 44356,
            "max": 44356
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24499,
            "mean": 26053,
            "median": 26053,
            "max": 27608
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 510483,
          "size": 2182
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30294,
            "mean": 59753,
            "median": 63821,
            "max": 71325
          },
          "fees(address)": {
            "calls": 6,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2458,
            "mean": 2526,
            "median": 2458,
            "max": 2662
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21831,
            "mean": 35991,
            "median": 45426,
            "max": 45426
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21863,
            "mean": 36291,
            "median": 36291,
            "max": 50720
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1679512,
          "size": 7501
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8690,
            "mean": 8690,
            "median": 8690,
            "max": 8690
          },
          "join(uint256)": {
            "calls": 4,
            "min": 29932,
            "mean": 51831,
            "median": 49153,
            "max": 79086
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 922027,
            "mean": 950022,
            "median": 957021,
            "max": 957021
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 5632
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46206,
            "mean": 46206,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51000,
            "mean": 51000,
            "median": 51000,
            "max": 51000
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 920216,
          "size": 4322
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 43910,
            "mean": 74618,
            "median": 83007,
            "max": 95363
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2417,
            "mean": 2417,
            "median": 2417,
            "max": 2417
          },
          "nonce()": {
            "calls": 1914,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "quorum()": {
            "calls": 256,
            "min": 2297,
            "mean": 2297,
            "median": 2297,
            "max": 2297
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 42953,
            "mean": 80058,
            "median": 80377,
            "max": 80677
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 43383,
            "mean": 66644,
            "median": 65635,
            "max": 100405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1370531,
          "size": 8315
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23422,
            "mean": 63969,
            "median": 74106,
            "max": 74106
          },
          "getState()": {
            "calls": 4,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "manager()": {
            "calls": 4,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23627,
            "mean": 30529,
            "median": 30364,
            "max": 37598
          },
          "renounce()": {
            "calls": 2,
            "min": 23398,
            "mean": 25222,
            "median": 25222,
            "max": 27046
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23533,
            "mean": 26739,
            "median": 27535,
            "max": 27547
          },
          "token()": {
            "calls": 11,
            "min": 242,
            "mean": 242,
            "median": 242,
            "max": 242
          },
          "withdraw()": {
            "calls": 2,
            "min": 23363,
            "mean": 27340,
            "median": 27340,
            "max": 31318
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 5766
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 472181,
          "size": 1888
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 29958,
            "mean": 44840,
            "median": 29982,
            "max": 74580
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 29965,
            "mean": 48372,
            "median": 48372,
            "max": 66779
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120013,
            "mean": 145653,
            "median": 155007,
            "max": 155007
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 962232,
          "size": 4331
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17671,
            "mean": 17742,
            "median": 17760,
            "max": 17779
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17388,
            "mean": 17388,
            "median": 17388,
            "max": 17388
          },
          "nonce()": {
            "calls": 2,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23722,
            "mean": 32467,
            "median": 23782,
            "max": 49899
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23590,
            "mean": 25030,
            "median": 25750,
            "max": 25750
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 217806,
            "mean": 219936,
            "median": 217806,
            "max": 222606
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49086,
            "mean": 53095,
            "median": 53095,
            "max": 57105
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23578,
            "mean": 69922,
            "median": 93095,
            "max": 93095
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 589978,
          "size": 2355
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26417,
            "mean": 26417,
            "median": 26417,
            "max": 26417
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26424,
            "mean": 26424,
            "median": 26424,
            "max": 26424
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44200,
            "mean": 44200,
            "median": 44200,
            "max": 44200
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 811671,
          "size": 4213
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 419,
            "mean": 1964,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 67924,
            "mean": 67931,
            "median": 67936,
            "max": 67936
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 1046810,
          "size": 4776
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72890,
            "mean": 72890,
            "median": 72890,
            "max": 72890
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 45867,
            "mean": 45867,
            "median": 45867,
            "max": 45867
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 653009,
          "size": 2737
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44095,
            "mean": 44095,
            "median": 44095,
            "max": 44095
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43518,
            "mean": 43518,
            "median": 43518,
            "max": 43518
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43537,
            "mean": 43537,
            "median": 43537,
            "max": 43537
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 1045730,
          "size": 4771
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72877,
            "mean": 72877,
            "median": 72877,
            "max": 72877
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 23955,
            "mean": 44578,
            "median": 45867,
            "max": 45867
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54254,
            "mean": 54254,
            "median": 54254,
            "max": 54254
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 811647,
          "size": 4213
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46206,
            "mean": 46206,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33724,
            "mean": 62224,
            "median": 67924,
            "max": 67924
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 299705,
          "size": 1184
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2686,
            "mean": 2686,
            "median": 2686,
            "max": 2686
          },
          "register(string)": {
            "calls": 5,
            "min": 24207,
            "mean": 40385,
            "median": 44430,
            "max": 44430
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24619,
            "mean": 26165,
            "median": 26165,
            "max": 27712
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 454488,
          "size": 1942
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30320,
            "mean": 59681,
            "median": 63742,
            "max": 71284
          },
          "fees(address)": {
            "calls": 6,
            "min": 2400,
            "mean": 2400,
            "median": 2400,
            "max": 2400
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2387,
            "mean": 2467,
            "median": 2387,
            "max": 2627
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21846,
            "mean": 35998,
            "median": 45424,
            "max": 45424
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21865,
            "mean": 36252,
            "median": 36252,
            "max": 50639
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1661898,
          "size": 7431
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8758,
            "mean": 8758,
            "median": 8758,
            "max": 8758
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30037,
            "mean": 52078,
            "median": 49476,
            "max": 79324
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 938023,
            "mean": 966091,
            "median": 973109,
            "max": 973109
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 5570
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46259,
            "mean": 46259,
            "median": 46259,
            "max": 46259
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51046,
            "mean": 51046,
            "median": 51046,
            "max": 51046
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 902783,
          "size": 4135
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 213,
            "mean": 213,
            "median": 213,
            "max": 213
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 194,
            "mean": 194,
            "median": 194,
            "max": 194
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 43981,
            "mean": 75706,
            "median": 84477,
            "max": 96858
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          },
          "nonce()": {
            "calls": 1914,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "quorum()": {
            "calls": 256,
            "min": 2279,
            "mean": 2279,
            "median": 2279,
            "max": 2279
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43072,
            "mean": 81564,
            "median": 81872,
            "max": 82208
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 43507,
            "mean": 67555,
            "median": 66643,
            "max": 101951
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1370400,
          "size": 8069
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23490,
            "mean": 64014,
            "median": 74146,
            "max": 74146
          },
          "getState()": {
            "calls": 4,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "manager()": {
            "calls": 4,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23747,
            "mean": 30610,
            "median": 30463,
            "max": 37621
          },
          "renounce()": {
            "calls": 2,
            "min": 23424,
            "mean": 25296,
            "median": 25296,
            "max": 27168
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23573,
            "mean": 26869,
            "median": 27687,
            "max": 27699
          },
          "token()": {
            "calls": 11,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "withdraw()": {
            "calls": 2,
            "min": 23395,
            "mean": 27351,
            "median": 27351,
            "max": 31308
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 5687
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2443,
            "mean": 2443,
            "median": 2443,
            "max": 2443
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 451233,
          "size": 1790
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30030,
            "mean": 44977,
            "median": 30067,
            "max": 74835
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30063,
            "mean": 48544,
            "median": 48544,
            "max": 67026
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8757,
            "mean": 8757,
            "median": 8757,
            "max": 8757
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120022,
            "mean": 145733,
            "median": 155107,
            "max": 155107
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 1043872,
          "size": 4620
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17541,
            "mean": 17609,
            "median": 17621,
            "max": 17651
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 213,
            "mean": 213,
            "median": 213,
            "max": 213
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17323,
            "mean": 17323,
            "median": 17323,
            "max": 17323
          },
          "nonce()": {
            "calls": 2,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23806,
            "mean": 32524,
            "median": 23866,
            "max": 49901
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23674,
            "mean": 25121,
            "median": 25845,
            "max": 25845
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 217786,
            "mean": 219916,
            "median": 217786,
            "max": 222586
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 48952,
            "mean": 52941,
            "median": 52941,
            "max": 56931
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23652,
            "mean": 69819,
            "median": 92903,
            "max": 92903
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 528631,
          "size": 2084
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26476,
            "mean": 26476,
            "median": 26476,
            "max": 26476
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26504,
            "mean": 26504,
            "median": 26504,
            "max": 26504
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44116,
            "mean": 44116,
            "median": 44116,
            "max": 44116
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 826553,
          "size": 4210
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 424,
            "mean": 1969,
            "median": 2424,
            "max": 2424
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 67933,
            "mean": 67940,
            "median": 67945,
            "max": 67945
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 1068983,
          "size": 4880
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72981,
            "mean": 72981,
            "median": 72981,
            "max": 72981
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2478,
            "mean": 2478,
            "median": 2478,
            "max": 2478
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 45927,
            "mean": 45927,
            "median": 45927,
            "max": 45927
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 948390,
          "size": 4124
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44104,
            "mean": 44104,
            "median": 44104,
            "max": 44104
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43510,
            "mean": 43510,
            "median": 43510,
            "max": 43510
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43586,
            "mean": 43586,
            "median": 43586,
            "max": 43586
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 1076971,
          "size": 4917
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72958,
            "mean": 72958,
            "median": 72958,
            "max": 72958
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2463,
            "mean": 2463,
            "median": 2463,
            "max": 2463
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 23995,
            "mean": 44622,
            "median": 45912,
            "max": 45912
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54269,
            "mean": 54269,
            "median": 54269,
            "max": 54269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 826529,
          "size": 4210
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46259,
            "mean": 46259,
            "median": 46259,
            "max": 46259
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33733,
            "mean": 62233,
            "median": 67933,
            "max": 67933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "maple-erc20": {
    "solc": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 693522,
          "size": 3836
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 3220,
            "mean": 3220,
            "median": 3220,
            "max": 3220
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2870,
            "mean": 2870,
            "median": 2870,
            "max": 2870
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1040396,
          "size": 5145
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25570,
            "min": 31058,
            "mean": 50836,
            "median": 51294,
            "max": 51570
          },
          "burn(address,uint256)": {
            "calls": 446,
            "min": 35842,
            "mean": 38616,
            "median": 36058,
            "max": 44806
          },
          "mint(address,uint256)": {
            "calls": 23353,
            "min": 35699,
            "mean": 61352,
            "median": 61511,
            "max": 95999
          },
          "sum()": {
            "calls": 1,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "token()": {
            "calls": 1,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "transfer(address,uint256)": {
            "calls": 363,
            "min": 33790,
            "mean": 38552,
            "median": 34006,
            "max": 56802
          },
          "transferFrom(address,address,uint256)": {
            "calls": 306,
            "min": 38229,
            "mean": 38660,
            "median": 38673,
            "max": 38673
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 259901,
          "size": 982
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29695,
            "mean": 46259,
            "median": 49655,
            "max": 49979
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27800,
            "mean": 51228,
            "median": 47155,
            "max": 81367
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27661,
            "mean": 39081,
            "median": 39128,
            "max": 50596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 750735,
          "size": 4101
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2914,
            "mean": 2914,
            "median": 2914,
            "max": 2914
          },
          "approve(address,uint256)": {
            "calls": 42703,
            "min": 4450,
            "mean": 37482,
            "median": 45742,
            "max": 46294
          },
          "balanceOf(address)": {
            "calls": 2937,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          },
          "burn(address,uint256)": {
            "calls": 806,
            "min": 6819,
            "mean": 23979,
            "median": 28379,
            "max": 34339
          },
          "decimals()": {
            "calls": 257,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 717,
            "min": 5035,
            "mean": 20574,
            "median": 24503,
            "max": 29755
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16465,
            "min": 4785,
            "mean": 24481,
            "median": 24685,
            "max": 46473
          },
          "mint(address,uint256)": {
            "calls": 40816,
            "min": 6731,
            "mean": 43468,
            "median": 50823,
            "max": 68475
          },
          "name()": {
            "calls": 257,
            "min": 2756,
            "mean": 4895,
            "median": 2765,
            "max": 9344
          },
          "symbol()": {
            "calls": 257,
            "min": 2999,
            "mean": 5285,
            "median": 5194,
            "max": 9590
          },
          "totalSupply()": {
            "calls": 1402,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 886,
            "min": 6998,
            "mean": 30493,
            "median": 28558,
            "max": 51354
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2021,
            "min": 11354,
            "mean": 38578,
            "median": 33282,
            "max": 54366
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 700698,
          "size": 3661
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2973,
            "mean": 2973,
            "median": 2973,
            "max": 2973
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2777,
            "mean": 2777,
            "median": 2777,
            "max": 2777
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2583,
            "mean": 2583,
            "median": 2583,
            "max": 2583
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1064513,
          "size": 5040
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25733,
            "min": 31376,
            "mean": 51199,
            "median": 51600,
            "max": 51876
          },
          "burn(address,uint256)": {
            "calls": 455,
            "min": 35823,
            "mean": 38680,
            "median": 36039,
            "max": 44775
          },
          "mint(address,uint256)": {
            "calls": 23633,
            "min": 35803,
            "mean": 61502,
            "median": 61615,
            "max": 96103
          },
          "sum()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "token()": {
            "calls": 1,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "transfer(address,uint256)": {
            "calls": 406,
            "min": 33796,
            "mean": 37498,
            "median": 34012,
            "max": 57084
          },
          "transferFrom(address,address,uint256)": {
            "calls": 295,
            "min": 38689,
            "mean": 39126,
            "median": 39133,
            "max": 39133
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 283357,
          "size": 1092
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29959,
            "mean": 46521,
            "median": 49931,
            "max": 50243
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 28026,
            "mean": 51258,
            "median": 47159,
            "max": 81371
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27638,
            "mean": 39159,
            "median": 39164,
            "max": 50690
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 766526,
          "size": 3971
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 42980,
            "min": 4669,
            "mean": 37734,
            "median": 45985,
            "max": 46513
          },
          "balanceOf(address)": {
            "calls": 2954,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "burn(address,uint256)": {
            "calls": 826,
            "min": 6835,
            "mean": 24454,
            "median": 28395,
            "max": 34367
          },
          "decimals()": {
            "calls": 257,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 719,
            "min": 4971,
            "mean": 20498,
            "median": 24457,
            "max": 29703
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16422,
            "min": 4955,
            "mean": 24679,
            "median": 24855,
            "max": 46535
          },
          "mint(address,uint256)": {
            "calls": 41382,
            "min": 6792,
            "mean": 43513,
            "median": 50932,
            "max": 68536
          },
          "name()": {
            "calls": 257,
            "min": 2921,
            "mean": 5147,
            "median": 3100,
            "max": 9478
          },
          "symbol()": {
            "calls": 257,
            "min": 2987,
            "mean": 5443,
            "median": 7385,
            "max": 9544
          },
          "totalSupply()": {
            "calls": 1419,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 953,
            "min": 7035,
            "mean": 30084,
            "median": 28595,
            "max": 51667
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2015,
            "min": 11691,
            "mean": 38831,
            "median": 49121,
            "max": 54703
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 900791,
          "size": 5350
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 3000,
            "mean": 3000,
            "median": 3000,
            "max": 3000
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2431,
            "mean": 2431,
            "median": 2431,
            "max": 2431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1302938,
          "size": 7032
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25851,
            "min": 30894,
            "mean": 50636,
            "median": 51118,
            "max": 51406
          },
          "burn(address,uint256)": {
            "calls": 421,
            "min": 35260,
            "mean": 38361,
            "median": 35476,
            "max": 44200
          },
          "mint(address,uint256)": {
            "calls": 22998,
            "min": 35250,
            "mean": 60949,
            "median": 61074,
            "max": 95562
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "token()": {
            "calls": 1,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 341,
            "min": 33231,
            "mean": 35585,
            "median": 33459,
            "max": 56387
          },
          "transferFrom(address,address,uint256)": {
            "calls": 314,
            "min": 35749,
            "mean": 38233,
            "median": 38249,
            "max": 38249
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 287751,
          "size": 1124
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29495,
            "mean": 46072,
            "median": 49467,
            "max": 49779
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27165,
            "mean": 50168,
            "median": 46039,
            "max": 80239
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27076,
            "mean": 38508,
            "median": 38542,
            "max": 50009
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 962787,
          "size": 5637
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "approve(address,uint256)": {
            "calls": 43122,
            "min": 4427,
            "mean": 37442,
            "median": 45719,
            "max": 46271
          },
          "balanceOf(address)": {
            "calls": 2954,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256)": {
            "calls": 798,
            "min": 6536,
            "mean": 23854,
            "median": 28096,
            "max": 34032
          },
          "decimals()": {
            "calls": 257,
            "min": 240,
            "mean": 240,
            "median": 240,
            "max": 240
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 711,
            "min": 4614,
            "mean": 20379,
            "median": 24300,
            "max": 29334
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16429,
            "min": 4580,
            "mean": 24292,
            "median": 24480,
            "max": 29324
          },
          "mint(address,uint256)": {
            "calls": 40293,
            "min": 6539,
            "mean": 43313,
            "median": 50631,
            "max": 68283
          },
          "name()": {
            "calls": 257,
            "min": 2713,
            "mean": 4972,
            "median": 2725,
            "max": 9260
          },
          "symbol()": {
            "calls": 257,
            "min": 2745,
            "mean": 4953,
            "median": 2757,
            "max": 9292
          },
          "totalSupply()": {
            "calls": 1419,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 867,
            "min": 6667,
            "mean": 29209,
            "median": 28227,
            "max": 51155
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2072,
            "min": 11062,
            "mean": 37763,
            "median": 32990,
            "max": 54074
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 908302,
          "size": 5265
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2868,
            "mean": 2868,
            "median": 2868,
            "max": 2868
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1303706,
          "size": 6855
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25675,
            "min": 29126,
            "mean": 50649,
            "median": 51134,
            "max": 51410
          },
          "burn(address,uint256)": {
            "calls": 452,
            "min": 35294,
            "mean": 38651,
            "median": 35522,
            "max": 44306
          },
          "mint(address,uint256)": {
            "calls": 22938,
            "min": 35316,
            "mean": 60952,
            "median": 61128,
            "max": 95616
          },
          "sum()": {
            "calls": 1,
            "min": 2279,
            "mean": 2279,
            "median": 2279,
            "max": 2279
          },
          "token()": {
            "calls": 1,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "transfer(address,uint256)": {
            "calls": 308,
            "min": 33136,
            "mean": 34830,
            "median": 33364,
            "max": 56184
          },
          "transferFrom(address,address,uint256)": {
            "calls": 310,
            "min": 37741,
            "mean": 38171,
            "median": 38185,
            "max": 38185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 258174,
          "size": 994
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29380,
            "mean": 45997,
            "median": 49358,
            "max": 49664
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27187,
            "mean": 50017,
            "median": 45888,
            "max": 80088
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27096,
            "mean": 38473,
            "median": 38499,
            "max": 49902
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 963118,
          "size": 5522
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "approve(address,uint256)": {
            "calls": 42445,
            "min": 4444,
            "mean": 37586,
            "median": 45736,
            "max": 46288
          },
          "balanceOf(address)": {
            "calls": 2942,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "burn(address,uint256)": {
            "calls": 864,
            "min": 6545,
            "mean": 23177,
            "median": 28105,
            "max": 34089
          },
          "decimals()": {
            "calls": 257,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 700,
            "min": 4615,
            "mean": 20604,
            "median": 24274,
            "max": 29323
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16377,
            "min": 4598,
            "mean": 24348,
            "median": 24498,
            "max": 46370
          },
          "mint(address,uint256)": {
            "calls": 40248,
            "min": 6554,
            "mean": 43252,
            "median": 50646,
            "max": 68298
          },
          "name()": {
            "calls": 257,
            "min": 2572,
            "mean": 4834,
            "median": 4773,
            "max": 9125
          },
          "symbol()": {
            "calls": 257,
            "min": 2589,
            "mean": 4938,
            "median": 4791,
            "max": 9143
          },
          "totalSupply()": {
            "calls": 1407,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          },
          "transfer(address,uint256)": {
            "calls": 827,
            "min": 6676,
            "mean": 29428,
            "median": 28236,
            "max": 51056
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2046,
            "min": 11075,
            "mean": 38043,
            "median": 33003,
            "max": 54075
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "openzeppelin": {
    "solc": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 298147,
          "size": 1190
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3284,
            "min": 487,
            "mean": 1358,
            "median": 487,
            "max": 2487
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 513368,
          "size": 2656
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 25985,
            "mean": 35929,
            "median": 25985,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 39424,
            "min": 537,
            "mean": 2452,
            "median": 2537,
            "max": 2537
          },
          "burn(address,uint256)": {
            "calls": 1360,
            "min": 33957,
            "mean": 34099,
            "median": 34089,
            "max": 34329
          },
          "decimals()": {
            "calls": 283,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "mint(address,uint256)": {
            "calls": 58544,
            "min": 28009,
            "mean": 51145,
            "median": 50829,
            "max": 68409
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 961671,
          "size": 5032
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 3115,
            "mean": 3115,
            "median": 3115,
            "max": 3115
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25793,
            "mean": 32617,
            "median": 26021,
            "max": 46305
          },
          "asset()": {
            "calls": 256,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29378,
            "mean": 29577,
            "median": 29426,
            "max": 30011
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29818,
            "mean": 30024,
            "median": 29866,
            "max": 30451
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 44203,
            "mean": 73437,
            "median": 66154,
            "max": 100630
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2951,
            "mean": 2951,
            "median": 2951,
            "max": 2951
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10908,
            "mean": 11000,
            "median": 10908,
            "max": 11157
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 44300,
            "mean": 55847,
            "median": 55569,
            "max": 75815
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29903,
            "mean": 30033,
            "median": 29927,
            "max": 30500
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29783,
            "mean": 29938,
            "median": 29807,
            "max": 30380
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29576,
            "mean": 29743,
            "median": 29600,
            "max": 30173
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29475,
            "mean": 29626,
            "median": 29499,
            "max": 30096
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24490,
            "mean": 51686,
            "median": 54472,
            "max": 77087
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5587,
            "mean": 5587,
            "median": 5587,
            "max": 5587
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 32449,
            "mean": 53919,
            "median": 56095,
            "max": 79202
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4416101,
          "size": 22241
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 572,
            "mean": 747,
            "median": 826,
            "max": 826
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 1042,
            "mean": 1049,
            "median": 1049,
            "max": 1056
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 1178,
            "mean": 1298,
            "median": 1298,
            "max": 1419
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 6514,
            "mean": 6536,
            "median": 6514,
            "max": 6580
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3368759,
          "size": 17991
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2589,
            "min": 19278,
            "mean": 21516,
            "median": 22078,
            "max": 22078
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2413,
            "min": 19374,
            "mean": 21895,
            "median": 22174,
            "max": 22174
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 5176,
            "mean": 5176,
            "median": 5176,
            "max": 5176
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4736,
            "mean": 4736,
            "median": 4736,
            "max": 4736
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1725428,
          "size": 9209
        },
        "functions": {
          "clock()": {
            "calls": 5004,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 892868,
          "size": 5067
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 34835,
            "mean": 52858,
            "median": 49801,
            "max": 68817
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 62075,
            "mean": 121966,
            "median": 86661,
            "max": 293696
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4169,
            "min": 1802,
            "mean": 1802,
            "median": 1802,
            "max": 1802
          },
          "nonces(address)": {
            "calls": 1139,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 10370,
            "mean": 12936,
            "median": 13754,
            "max": 13754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1344400,
          "size": 6546
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 524,
            "mean": 524,
            "median": 524,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 970520,
          "size": 5180
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1104631,
          "size": 7105
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2605,
            "mean": 2605,
            "median": 2605,
            "max": 2605
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 61467,
            "mean": 76276,
            "median": 77224,
            "max": 79655
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2692,
            "mean": 10546,
            "median": 11888,
            "max": 25833
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 64031,
            "mean": 68730,
            "median": 68843,
            "max": 85986
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1597876,
          "size": 7812
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 955,
            "mean": 964,
            "median": 964,
            "max": 976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1853957,
          "size": 9091
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 27130,
            "mean": 27393,
            "median": 27514,
            "max": 27526
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1678567,
          "size": 8215
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 26341,
            "mean": 26422,
            "median": 26365,
            "max": 26581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1669553,
          "size": 8170
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26271,
            "mean": 26382,
            "median": 26337,
            "max": 26595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1643525,
          "size": 8040
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26239,
            "mean": 26346,
            "median": 26287,
            "max": 26575
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 319731,
          "size": 1287
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3165,
            "min": 477,
            "mean": 1383,
            "median": 477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 527833,
          "size": 2420
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2832,
            "mean": 2832,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 26394,
            "mean": 36334,
            "median": 26394,
            "max": 46678
          },
          "balanceOf(address)": {
            "calls": 39419,
            "min": 559,
            "mean": 2474,
            "median": 2559,
            "max": 2559
          },
          "burn(address,uint256)": {
            "calls": 1337,
            "min": 34258,
            "mean": 34398,
            "median": 34390,
            "max": 34630
          },
          "decimals()": {
            "calls": 283,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "mint(address,uint256)": {
            "calls": 58567,
            "min": 28315,
            "mean": 51438,
            "median": 51087,
            "max": 68727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1093288,
          "size": 5459
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 26229,
            "mean": 33061,
            "median": 26457,
            "max": 46741
          },
          "asset()": {
            "calls": 256,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2572,
            "mean": 2572,
            "median": 2572,
            "max": 2572
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 30009,
            "mean": 30212,
            "median": 30033,
            "max": 30687
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 30031,
            "mean": 30224,
            "median": 30055,
            "max": 30709
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 45671,
            "mean": 75003,
            "median": 67722,
            "max": 102204
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 11064,
            "mean": 11175,
            "median": 11064,
            "max": 11358
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 45657,
            "mean": 57238,
            "median": 56893,
            "max": 77632
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 30052,
            "mean": 30209,
            "median": 30076,
            "max": 30694
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 30072,
            "mean": 30217,
            "median": 30096,
            "max": 30714
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 30030,
            "mean": 30202,
            "median": 30054,
            "max": 30648
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 30096,
            "mean": 30274,
            "median": 30120,
            "max": 30750
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24407,
            "mean": 52658,
            "median": 55637,
            "max": 78651
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 32945,
            "mean": 55576,
            "median": 57856,
            "max": 81086
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4210346,
          "size": 21186
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 588,
            "mean": 963,
            "median": 1113,
            "max": 1113
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 1234,
            "mean": 1255,
            "median": 1255,
            "max": 1277
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 1301,
            "mean": 1496,
            "median": 1496,
            "max": 1692
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 6871,
            "mean": 6893,
            "median": 6871,
            "max": 6937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3818183,
          "size": 19684
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2565,
            "min": 19343,
            "mean": 21527,
            "median": 22143,
            "max": 22143
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2530,
            "min": 19096,
            "mean": 21592,
            "median": 21896,
            "max": 21896
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4761,
            "mean": 4761,
            "median": 4761,
            "max": 4761
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4827,
            "mean": 4827,
            "median": 4827,
            "max": 4827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1796976,
          "size": 8772
        },
        "functions": {
          "clock()": {
            "calls": 5097,
            "min": 367,
            "mean": 367,
            "median": 367,
            "max": 367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 958069,
          "size": 5266
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 35349,
            "mean": 53619,
            "median": 50579,
            "max": 69667
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 70661,
            "mean": 120958,
            "median": 88806,
            "max": 304002
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4029,
            "min": 1914,
            "mean": 1914,
            "median": 1914,
            "max": 1914
          },
          "nonces(address)": {
            "calls": 1168,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 10760,
            "mean": 13537,
            "median": 14305,
            "max": 14305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1396871,
          "size": 6813
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1089992,
          "size": 5538
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1274597,
          "size": 7877
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 62379,
            "mean": 78182,
            "median": 79357,
            "max": 82166
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2695,
            "mean": 11074,
            "median": 12380,
            "max": 27768
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 69428,
            "mean": 69744,
            "median": 69872,
            "max": 69954
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1487967,
          "size": 7268
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 1017,
            "mean": 1026,
            "median": 1026,
            "max": 1038
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1821730,
          "size": 8935
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 27299,
            "mean": 27570,
            "median": 27695,
            "max": 27707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1665155,
          "size": 8153
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 26385,
            "mean": 26478,
            "median": 26439,
            "max": 26637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1658348,
          "size": 8119
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26327,
            "mean": 26449,
            "median": 26387,
            "max": 26663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1644134,
          "size": 8048
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26384,
            "mean": 26501,
            "median": 26438,
            "max": 26732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 355477,
          "size": 1531
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3163,
            "min": 344,
            "mean": 1244,
            "median": 344,
            "max": 2344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 624720,
          "size": 2904
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 25960,
            "mean": 35894,
            "median": 25960,
            "max": 46244
          },
          "balanceOf(address)": {
            "calls": 39411,
            "min": 417,
            "mean": 2332,
            "median": 2417,
            "max": 2417
          },
          "burn(address,uint256)": {
            "calls": 1460,
            "min": 33747,
            "mean": 33892,
            "median": 33891,
            "max": 34119
          },
          "decimals()": {
            "calls": 283,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "mint(address,uint256)": {
            "calls": 58444,
            "min": 27873,
            "mean": 51034,
            "median": 50825,
            "max": 68285
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1781585,
          "size": 9542
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25746,
            "mean": 32589,
            "median": 25974,
            "max": 46258
          },
          "asset()": {
            "calls": 256,
            "min": 252,
            "mean": 252,
            "median": 252,
            "max": 252
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29138,
            "mean": 29400,
            "median": 29454,
            "max": 29814
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29134,
            "mean": 29390,
            "median": 29254,
            "max": 29822
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 43389,
            "mean": 72571,
            "median": 65345,
            "max": 99757
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10113,
            "mean": 10257,
            "median": 10113,
            "max": 10417
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 43370,
            "mean": 55063,
            "median": 54694,
            "max": 75274
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29147,
            "mean": 29349,
            "median": 29195,
            "max": 29835
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29132,
            "mean": 29337,
            "median": 29180,
            "max": 29796
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29123,
            "mean": 29365,
            "median": 29451,
            "max": 29787
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29136,
            "mean": 29340,
            "median": 29160,
            "max": 29812
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 23994,
            "mean": 50527,
            "median": 53267,
            "max": 75687
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5459,
            "mean": 5459,
            "median": 5459,
            "max": 5459
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 31704,
            "mean": 52638,
            "median": 54809,
            "max": 74716
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 7097935,
          "size": 36481
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 451,
            "mean": 560,
            "median": 607,
            "max": 607
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 698,
            "mean": 707,
            "median": 707,
            "max": 716
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 701,
            "mean": 809,
            "median": 809,
            "max": 918
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 5798,
            "mean": 5820,
            "median": 5798,
            "max": 5864
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 5238162,
          "size": 27795
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2541,
            "min": 17719,
            "mean": 19948,
            "median": 20519,
            "max": 20519
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2279,
            "min": 17712,
            "mean": 20182,
            "median": 20512,
            "max": 20512
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4535,
            "mean": 4535,
            "median": 4535,
            "max": 4535
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4577,
            "mean": 4577,
            "median": 4577,
            "max": 4577
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 2108304,
          "size": 11119
        },
        "functions": {
          "clock()": {
            "calls": 4822,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 1367127,
          "size": 7795
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 33411,
            "mean": 51312,
            "median": 48197,
            "max": 67056
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 67831,
            "mean": 113738,
            "median": 81420,
            "max": 275167
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4054,
            "min": 1518,
            "mean": 1518,
            "median": 1518,
            "max": 1518
          },
          "nonces(address)": {
            "calls": 1177,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 9032,
            "mean": 11516,
            "median": 12346,
            "max": 12346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 2134875,
          "size": 10500
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1641654,
          "size": 8971
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 286,
            "mean": 286,
            "median": 286,
            "max": 286
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1489636,
          "size": 9286
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 64726,
            "mean": 75159,
            "median": 75995,
            "max": 78340
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2470,
            "mean": 10151,
            "median": 11442,
            "max": 25093
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 63326,
            "mean": 68026,
            "median": 68138,
            "max": 85281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2582996,
          "size": 12738
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 785,
            "mean": 794,
            "median": 794,
            "max": 806
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3355132,
          "size": 16594
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 26749,
            "mean": 26999,
            "median": 27133,
            "max": 27145
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 2702732,
          "size": 13336
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 25909,
            "mean": 26007,
            "median": 25969,
            "max": 26161
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 2667894,
          "size": 13162
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 25927,
            "mean": 26056,
            "median": 26023,
            "max": 26251
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 2656679,
          "size": 13106
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 25927,
            "mean": 26064,
            "median": 26035,
            "max": 26275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 570973,
          "size": 2663
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 26016,
            "mean": 35966,
            "median": 26016,
            "max": 46300
          },
          "balanceOf(address)": {
            "calls": 39406,
            "min": 435,
            "mean": 2350,
            "median": 2435,
            "max": 2435
          },
          "burn(address,uint256)": {
            "calls": 1381,
            "min": 33754,
            "mean": 33896,
            "median": 33898,
            "max": 34126
          },
          "decimals()": {
            "calls": 283,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "mint(address,uint256)": {
            "calls": 58523,
            "min": 27880,
            "mean": 51030,
            "median": 50820,
            "max": 68292
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1987659,
          "size": 10235
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25805,
            "mean": 32648,
            "median": 26033,
            "max": 46317
          },
          "asset()": {
            "calls": 256,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 28947,
            "mean": 29213,
            "median": 29250,
            "max": 29610
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 28928,
            "mean": 29182,
            "median": 29231,
            "max": 29591
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 43145,
            "mean": 72373,
            "median": 65094,
            "max": 99522
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 9921,
            "mean": 10056,
            "median": 10189,
            "max": 10189
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 43194,
            "mean": 54856,
            "median": 54489,
            "max": 74958
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 28915,
            "mean": 29105,
            "median": 28939,
            "max": 29596
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 28966,
            "mean": 29152,
            "median": 29008,
            "max": 29580
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 28944,
            "mean": 29138,
            "median": 28992,
            "max": 29607
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 28974,
            "mean": 29144,
            "median": 28998,
            "max": 29618
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24029,
            "mean": 50333,
            "median": 53077,
            "max": 76029
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5395,
            "mean": 5395,
            "median": 5395,
            "max": 5395
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 31584,
            "mean": 52230,
            "median": 54298,
            "max": 77229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 7324730,
          "size": 38166
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 401,
            "mean": 476,
            "median": 501,
            "max": 533
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 587,
            "mean": 589,
            "median": 589,
            "max": 592
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 638,
            "mean": 718,
            "median": 718,
            "max": 799
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 5675,
            "mean": 5697,
            "median": 5675,
            "max": 5741
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 2220173,
          "size": 10933
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 2490709,
          "size": 12692
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 2097237,
          "size": 12041
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 61031,
            "mean": 75708,
            "median": 76741,
            "max": 79071
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2518,
            "mean": 10327,
            "median": 11682,
            "max": 25413
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2304,
            "mean": 2304,
            "median": 2304,
            "max": 2304
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 67940,
            "mean": 68233,
            "median": 68396,
            "max": 68405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 3302868,
          "size": 16340
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 672,
            "mean": 681,
            "median": 681,
            "max": 693
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 2830287,
          "size": 13980
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 25967,
            "mean": 26067,
            "median": 26027,
            "max": 26219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 2815472,
          "size": 13906
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 25971,
            "mean": 26097,
            "median": 26055,
            "max": 26307
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 2809064,
          "size": 13874
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 25987,
            "mean": 26124,
            "median": 26059,
            "max": 26335
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "playpen": {
    "solc": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 618942,
          "size": 2941
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104805,
            "mean": 104847,
            "median": 104829,
            "max": 104901
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104914,
            "mean": 104955,
            "median": 104938,
            "max": 105010
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 114120,
            "mean": 114621,
            "median": 114864,
            "max": 114948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 564282,
          "size": 2701
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104587,
            "mean": 104628,
            "median": 104611,
            "max": 104683
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104569,
            "mean": 104611,
            "median": 104593,
            "max": 104665
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113821,
            "mean": 114339,
            "median": 114565,
            "max": 114649
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 481010,
          "size": 2367
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103914,
            "mean": 103957,
            "median": 103950,
            "max": 104010
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103905,
            "mean": 103947,
            "median": 103929,
            "max": 104001
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113119,
            "mean": 113626,
            "median": 113863,
            "max": 113947
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 590364,
          "size": 2827
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103615,
            "mean": 103657,
            "median": 103639,
            "max": 103711
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103626,
            "mean": 103670,
            "median": 103662,
            "max": 103722
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 112748,
            "mean": 113261,
            "median": 113492,
            "max": 113576
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "rollcall": {
    "solc": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 278911,
          "size": 1087
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 26981,
            "mean": 26981,
            "median": 26981,
            "max": 26981
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1083612,
          "size": 5277
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 47021,
            "mean": 47021,
            "median": 47021,
            "max": 47021
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2618696,
          "size": 14432
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 3345,
            "mean": 3345,
            "median": 3345,
            "max": 3345
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 980,
            "mean": 980,
            "median": 980,
            "max": 980
          },
          "slots()": {
            "calls": 1,
            "min": 5885,
            "mean": 5885,
            "median": 5885,
            "max": 5885
          },
          "sources()": {
            "calls": 1,
            "min": 6131,
            "mean": 6131,
            "median": 6131,
            "max": 6131
          },
          "version()": {
            "calls": 1,
            "min": 1178,
            "mean": 1178,
            "median": 1178,
            "max": 1178
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 548,
            "mean": 548,
            "median": 548,
            "max": 548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 1034265,
          "size": 4867
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 3505,
            "mean": 3505,
            "median": 3505,
            "max": 3505
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 222295,
            "mean": 259130,
            "median": 262479,
            "max": 262479
          },
          "queueId()": {
            "calls": 1,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2940,
            "mean": 2940,
            "median": 2940,
            "max": 2940
          },
          "slots()": {
            "calls": 12,
            "min": 1891,
            "mean": 1891,
            "median": 1891,
            "max": 1891
          },
          "sources()": {
            "calls": 12,
            "min": 1827,
            "mean": 1827,
            "median": 1827,
            "max": 1827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4581002,
          "size": 21994
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 1430854,
            "mean": 1430854,
            "median": 1430854,
            "max": 1430854
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 81855,
            "mean": 592987,
            "median": 631944,
            "max": 1023600
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 1032884,
            "mean": 1032884,
            "median": 1032884,
            "max": 1032884
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 1024531,
            "mean": 1024531,
            "median": 1024531,
            "max": 1024531
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 10008,
            "mean": 10008,
            "median": 10008,
            "max": 10008
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 26185,
            "mean": 117111,
            "median": 152624,
            "max": 172524
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 3816,
            "mean": 7694,
            "median": 8108,
            "max": 11248
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 28489,
            "mean": 28489,
            "median": 28489,
            "max": 28489
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 227684,
          "size": 835
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 25644,
            "mean": 25644,
            "median": 25644,
            "max": 25644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1121516,
          "size": 5362
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 46330,
            "mean": 46330,
            "median": 46330,
            "max": 46330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2548816,
          "size": 13947
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 3396,
            "mean": 3396,
            "median": 3396,
            "max": 3396
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "slots()": {
            "calls": 1,
            "min": 5376,
            "mean": 5376,
            "median": 5376,
            "max": 5376
          },
          "sources()": {
            "calls": 1,
            "min": 5509,
            "mean": 5509,
            "median": 5509,
            "max": 5509
          },
          "version()": {
            "calls": 1,
            "min": 704,
            "mean": 704,
            "median": 704,
            "max": 704
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 378,
            "mean": 378,
            "median": 378,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 735155,
          "size": 3335
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 205598,
            "mean": 242433,
            "median": 245782,
            "max": 245782
          },
          "queueId()": {
            "calls": 1,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2723,
            "mean": 2723,
            "median": 2723,
            "max": 2723
          },
          "slots()": {
            "calls": 12,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "sources()": {
            "calls": 12,
            "min": 1122,
            "mean": 1122,
            "median": 1122,
            "max": 1122
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4216128,
          "size": 20098
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 746851,
            "mean": 746851,
            "median": 746851,
            "max": 746851
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 76038,
            "mean": 316262,
            "median": 312415,
            "max": 527281
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 535266,
            "mean": 535266,
            "median": 535266,
            "max": 535266
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 528463,
            "mean": 528463,
            "median": 528463,
            "max": 528463
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 2071,
            "mean": 2071,
            "median": 2071,
            "max": 2071
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 8612,
            "mean": 8612,
            "median": 8612,
            "max": 8612
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 25563,
            "mean": 108374,
            "median": 139830,
            "max": 159730
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 3307,
            "mean": 5973,
            "median": 6714,
            "max": 8168
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 25561,
            "mean": 25561,
            "median": 25561,
            "max": 25561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 183326,
          "size": 642
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 24573,
            "mean": 24573,
            "median": 24573,
            "max": 24573
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 807595,
          "size": 3759
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 45918,
            "mean": 45918,
            "median": 45918,
            "max": 45918
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2028377,
          "size": 10916
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "slots()": {
            "calls": 1,
            "min": 4870,
            "mean": 4870,
            "median": 4870,
            "max": 4870
          },
          "sources()": {
            "calls": 1,
            "min": 4894,
            "mean": 4894,
            "median": 4894,
            "max": 4894
          },
          "version()": {
            "calls": 1,
            "min": 459,
            "mean": 459,
            "median": 459,
            "max": 459
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 449234,
          "size": 2008
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 990,
            "mean": 990,
            "median": 990,
            "max": 990
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 191125,
            "mean": 227960,
            "median": 231309,
            "max": 231309
          },
          "queueId()": {
            "calls": 1,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "slots()": {
            "calls": 12,
            "min": 482,
            "mean": 482,
            "median": 482,
            "max": 482
          },
          "sources()": {
            "calls": 12,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 3518018,
          "size": 16771
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 376121,
            "mean": 376121,
            "median": 376121,
            "max": 376121
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 73297,
            "mean": 157027,
            "median": 146453,
            "max": 236491
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 242469,
            "mean": 242469,
            "median": 242469,
            "max": 242469
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 237584,
            "mean": 237584,
            "median": 237584,
            "max": 237584
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 737,
            "mean": 737,
            "median": 737,
            "max": 737
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 7262,
            "mean": 7262,
            "median": 7262,
            "max": 7262
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 24549,
            "mean": 101020,
            "median": 129306,
            "max": 149206
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 2642,
            "mean": 4673,
            "median": 5472,
            "max": 6264
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 23345,
            "mean": 23345,
            "median": 23345,
            "max": 23345
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2096414,
          "size": 10906
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 2628,
            "mean": 2628,
            "median": 2628,
            "max": 2628
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "slots()": {
            "calls": 1,
            "min": 4704,
            "mean": 4704,
            "median": 4704,
            "max": 4704
          },
          "sources()": {
            "calls": 1,
            "min": 4761,
            "mean": 4761,
            "median": 4761,
            "max": 4761
          },
          "version()": {
            "calls": 1,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "solady": {
    "solc": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 262102,
          "size": 1139
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24331,
            "mean": 74246,
            "median": 36338,
            "max": 118296
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 393,
            "mean": 393,
            "median": 393,
            "max": 393
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 98990,
          "size": 229
        },
        "functions": {
          "fallback()": {
            "calls": 6307,
            "min": 3029,
            "mean": 15889,
            "median": 10271,
            "max": 299548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 927963,
          "size": 4117
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 517,
            "mean": 517,
            "median": 517,
            "max": 517
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "cancel(bytes32)": {
            "calls": 19,
            "min": 25610,
            "mean": 25746,
            "median": 25622,
            "max": 26416
          },
          "execute(bytes32,bytes)": {
            "calls": 254,
            "min": 28670,
            "mean": 44253,
            "median": 45203,
            "max": 95946
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2494,
            "mean": 2494,
            "median": 2494,
            "max": 2494
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23369,
            "mean": 308894,
            "median": 379965,
            "max": 379965
          },
          "minDelay()": {
            "calls": 240,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "operationState(bytes32)": {
            "calls": 928,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 28504,
            "mean": 53764,
            "median": 55508,
            "max": 57994
          },
          "readyTimestamp(bytes32)": {
            "calls": 694,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23980,
            "mean": 33725,
            "median": 23992,
            "max": 76202
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 553930,
          "size": 2347
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "decimals()": {
            "calls": 1,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "deposit()": {
            "calls": 546,
            "min": 27728,
            "mean": 65170,
            "median": 67528,
            "max": 67528
          },
          "name()": {
            "calls": 1,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "receive()": {
            "calls": 295,
            "min": 27378,
            "mean": 63430,
            "median": 67178,
            "max": 67178
          },
          "symbol()": {
            "calls": 1,
            "min": 583,
            "mean": 583,
            "median": 583,
            "max": 583
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "withdraw(uint256)": {
            "calls": 272,
            "min": 27900,
            "mean": 39525,
            "median": 40224,
            "max": 40344
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 480651,
          "size": 2003
        },
        "functions": {
          "adminOf(address)": {
            "calls": 484,
            "min": 2377,
            "mean": 2377,
            "median": 2377,
            "max": 2377
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24204,
            "mean": 26403,
            "median": 26403,
            "max": 28603
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22363,
            "mean": 54656,
            "median": 22387,
            "max": 126198
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105650,
            "mean": 159000,
            "median": 159344,
            "max": 159500
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 24077,
            "mean": 143879,
            "median": 159836,
            "max": 160016
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 586,
            "mean": 586,
            "median": 586,
            "max": 586
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24352,
            "mean": 28052,
            "median": 24364,
            "max": 33596
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35605,
            "mean": 51268,
            "median": 51268,
            "max": 66932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 244324,
          "size": 989
        },
        "functions": {
          "implementation()": {
            "calls": 4759,
            "min": 79,
            "mean": 2254,
            "median": 2276,
            "max": 2276
          },
          "owner()": {
            "calls": 485,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "renounceOwnership()": {
            "calls": 39,
            "min": 23094,
            "mean": 23343,
            "median": 23380,
            "max": 23380
          },
          "transferOwnership(address)": {
            "calls": 145,
            "min": 23602,
            "mean": 26926,
            "median": 28363,
            "max": 28363
          },
          "upgradeTo(address)": {
            "calls": 96,
            "min": 23630,
            "mean": 26992,
            "median": 23742,
            "max": 32494
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2569279,
          "size": 12759
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 89103,
            "mean": 38935549,
            "median": 889401,
            "max": 96808254
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4610293,
          "size": 22951
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 785,
            "mean": 785,
            "median": 785,
            "max": 785
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 609,
            "mean": 609,
            "median": 609,
            "max": 609
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 987,
            "mean": 987,
            "median": 987,
            "max": 987
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1284,
            "mean": 1284,
            "median": 1284,
            "max": 1284
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 1025,
            "mean": 1025,
            "median": 1025,
            "max": 1025
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1191,
            "mean": 1191,
            "median": 1191,
            "max": 1191
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 1344,
            "mean": 1344,
            "median": 1344,
            "max": 1344
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 891,
            "mean": 891,
            "median": 891,
            "max": 891
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 712,
            "mean": 712,
            "median": 712,
            "max": 712
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 1650,
            "mean": 1650,
            "median": 1650,
            "max": 1650
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 1317,
            "mean": 1317,
            "median": 1317,
            "max": 1317
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 1119,
            "mean": 1119,
            "median": 1119,
            "max": 1119
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1452,
            "mean": 1452,
            "median": 1452,
            "max": 1452
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 1509,
            "mean": 1509,
            "median": 1509,
            "max": 1509
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 868,
            "mean": 868,
            "median": 868,
            "max": 868
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 314016,
          "size": 1103
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 135,
            "min": 67346,
            "mean": 67568,
            "median": 67706,
            "max": 67718
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 153552,
          "size": 492
        },
        "functions": {
          "generate(bytes)": {
            "calls": 146,
            "min": 0,
            "mean": 4117,
            "median": 1402,
            "max": 80978
          },
          "next(uint256)": {
            "calls": 246,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 3764163,
          "size": 18726
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1837,
            "mean": 1837,
            "median": 1837,
            "max": 1837
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 518,
            "mean": 518,
            "median": 518,
            "max": 518
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3869496,
          "size": 19252
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 29,
            "min": 1916,
            "mean": 1996,
            "median": 1990,
            "max": 2047
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 37,
            "min": 617966,
            "mean": 618779,
            "median": 618697,
            "max": 619926
          },
          "recover(bytes32,bytes)": {
            "calls": 164,
            "min": 22567,
            "mean": 27234,
            "median": 26782,
            "max": 30507
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 40,
            "min": 4401,
            "mean": 25728,
            "median": 26957,
            "max": 27001
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 290,
            "min": 26782,
            "mean": 27031,
            "median": 27154,
            "max": 27210
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 151,
            "min": 643595,
            "mean": 737313,
            "median": 644846,
            "max": 4895143
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 38,
            "min": 643146,
            "mean": 893604,
            "median": 644478,
            "max": 4420985
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 290,
            "min": 643458,
            "mean": 704400,
            "median": 644631,
            "max": 4385328
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 164,
            "min": 24032,
            "mean": 31235,
            "median": 31451,
            "max": 31463
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 40,
            "min": 3909,
            "mean": 25240,
            "median": 26497,
            "max": 26509
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 290,
            "min": 26202,
            "mean": 26446,
            "median": 26574,
            "max": 26586
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 151,
            "min": 647203,
            "mean": 743713,
            "median": 648164,
            "max": 3743614
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 38,
            "min": 643886,
            "mean": 1032305,
            "median": 645285,
            "max": 4411534
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 290,
            "min": 644013,
            "mean": 741886,
            "median": 645276,
            "max": 4792979
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 699053,
          "size": 3016
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2544,
            "mean": 5864,
            "median": 4807,
            "max": 9333
          },
          "batchData()": {
            "calls": 520,
            "min": 2831,
            "mean": 355944,
            "median": 2840,
            "max": 8709913
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "batchIds()": {
            "calls": 520,
            "min": 2775,
            "mean": 6095,
            "median": 5038,
            "max": 9564
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "from()": {
            "calls": 512,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "id()": {
            "calls": 512,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "mintData()": {
            "calls": 512,
            "min": 2787,
            "mean": 274761,
            "median": 2796,
            "max": 9123548
          },
          "operator()": {
            "calls": 512,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1529695,
          "size": 6856
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 622,
            "mean": 622,
            "median": 622,
            "max": 622
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62455,
            "mean": 62592,
            "median": 62683,
            "max": 62715
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 59102,
            "mean": 59239,
            "median": 59330,
            "max": 59362
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 50486,
            "mean": 52711,
            "median": 50486,
            "max": 121686
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62929,
            "mean": 63064,
            "median": 63157,
            "max": 63173
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49922,
            "mean": 63642,
            "median": 59647,
            "max": 76503
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 324815,
          "size": 1318
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 35,
            "min": 31191,
            "mean": 50622,
            "median": 51223,
            "max": 51475
          },
          "mint(address,uint256)": {
            "calls": 31,
            "min": 61388,
            "mean": 73783,
            "median": 61844,
            "max": 96144
          },
          "sum()": {
            "calls": 1,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 34103,
            "mean": 34103,
            "median": 34103,
            "max": 34103
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 5198111,
          "size": 25886
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24828,
            "mean": 50922,
            "median": 50080,
            "max": 74293
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 308966,
          "size": 1210
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 198,
            "mean": 1168,
            "median": 198,
            "max": 3108
          },
          "data()": {
            "calls": 257,
            "min": 2823,
            "mean": 3302,
            "median": 2823,
            "max": 11611
          },
          "datahash()": {
            "calls": 633,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25322,
            "mean": 32641,
            "median": 25322,
            "max": 134049
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 8394174,
          "size": 41841
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22265,
            "mean": 22605,
            "median": 22470,
            "max": 23401
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22465,
            "mean": 22776,
            "median": 22635,
            "max": 23527
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 297294,
          "size": 1156
        },
        "functions": {
          "datahash()": {
            "calls": 379,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 315940,
          "size": 1243
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2707,
            "mean": 4282,
            "median": 2707,
            "max": 11465
          },
          "from()": {
            "calls": 1024,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "id()": {
            "calls": 1024,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "operator()": {
            "calls": 1024,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1310913,
          "size": 5852
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 894,
            "mean": 894,
            "median": 894,
            "max": 894
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 541,
            "mean": 541,
            "median": 541,
            "max": 541
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61992,
            "mean": 63607,
            "median": 62004,
            "max": 113304
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 58445,
            "mean": 59105,
            "median": 58661,
            "max": 75773
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 65141,
            "mean": 69681,
            "median": 69827,
            "max": 69941
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 152067,
          "size": 487
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3028,
            "mean": 3028,
            "median": 3028,
            "max": 3028
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3577,
            "mean": 3577,
            "median": 3577,
            "max": 3577
          },
          "getArgUint256(uint256)": {
            "calls": 6,
            "min": 5455,
            "mean": 5455,
            "median": 5455,
            "max": 5455
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 6348,
            "mean": 6348,
            "median": 6348,
            "max": 6348
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3380,
            "mean": 3380,
            "median": 3380,
            "max": 3380
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3270,
            "mean": 3270,
            "median": 3270,
            "max": 3270
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3525,
            "mean": 3525,
            "median": 3525,
            "max": 3525
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5234,
            "mean": 5234,
            "median": 5234,
            "max": 5234
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43911,
            "mean": 43911,
            "median": 43911,
            "max": 43911
          },
          "value()": {
            "calls": 2,
            "min": 5143,
            "mean": 5143,
            "median": 5143,
            "max": 5143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2138981,
          "size": 10610
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 442,
            "min": 751,
            "mean": 767,
            "median": 763,
            "max": 946
          },
          "returnsHash(bytes)": {
            "calls": 431,
            "min": 694,
            "mean": 711,
            "median": 706,
            "max": 886
          },
          "revertsWithCustomError()": {
            "calls": 12,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 965109,
          "size": 4747
        },
        "functions": {
          "get(address)": {
            "calls": 508,
            "min": 2499,
            "mean": 5797,
            "median": 5797,
            "max": 9096
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 4985411,
          "size": 24824
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 157,
            "min": 21729,
            "mean": 45398,
            "median": 44125,
            "max": 142233
          },
          "addToBytes32Set(bytes32)": {
            "calls": 178,
            "min": 22259,
            "mean": 48389,
            "median": 46860,
            "max": 162017
          },
          "addressSetAt(uint256)": {
            "calls": 26,
            "min": 9154,
            "mean": 9175,
            "median": 9154,
            "max": 9226
          },
          "addressSetContains(address)": {
            "calls": 166,
            "min": 734,
            "mean": 6987,
            "median": 7222,
            "max": 7242
          },
          "bytes32SetAt(uint256)": {
            "calls": 18,
            "min": 11349,
            "mean": 11378,
            "median": 11349,
            "max": 11447
          },
          "bytes32SetContains(bytes32)": {
            "calls": 189,
            "min": 313,
            "mean": 8525,
            "median": 8865,
            "max": 8865
          },
          "removeFromAddressSet(address)": {
            "calls": 189,
            "min": 22171,
            "mean": 28529,
            "median": 28862,
            "max": 28862
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 187,
            "min": 22042,
            "mean": 30535,
            "median": 30949,
            "max": 30949
          },
          "uint8SetAt(uint256)": {
            "calls": 12,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 27070,
            "mean": 50590,
            "median": 49274,
            "max": 143297
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28539,
            "mean": 53995,
            "median": 50814,
            "max": 161899
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24590,
            "mean": 28533,
            "median": 27674,
            "max": 44700
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 23655885,
          "size": 117964
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 1971,
            "mean": 1971,
            "median": 1972,
            "max": 1972
          },
          "divWad(uint256,uint256)": {
            "calls": 91,
            "min": 2154,
            "mean": 2154,
            "median": 2154,
            "max": 2154
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 1273,
            "mean": 1308,
            "median": 1323,
            "max": 1323
          },
          "divWadUp(uint256,uint256)": {
            "calls": 82,
            "min": 2990,
            "mean": 2990,
            "median": 2990,
            "max": 2990
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 2157,
            "mean": 2157,
            "median": 2157,
            "max": 2157
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 322,
            "min": 2711,
            "mean": 2757,
            "median": 2711,
            "max": 3029
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 4077,
            "mean": 4095,
            "median": 4077,
            "max": 4179
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 2443,
            "mean": 2445,
            "median": 2443,
            "max": 2738
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 952,
            "mean": 952,
            "median": 952,
            "max": 952
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 1808,
            "mean": 1808,
            "median": 1808,
            "max": 1808
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 3137,
            "mean": 3137,
            "median": 3138,
            "max": 3138
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 2680,
            "mean": 2689,
            "median": 2698,
            "max": 2698
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 290,
            "mean": 317,
            "median": 339,
            "max": 339
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 571,
            "mean": 593,
            "median": 612,
            "max": 612
          },
          "mulWad(uint256,uint256)": {
            "calls": 105,
            "min": 4002,
            "mean": 4002,
            "median": 4002,
            "max": 4002
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 1424,
            "mean": 1427,
            "median": 1430,
            "max": 1430
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 113,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 3984,
            "mean": 3984,
            "median": 3984,
            "max": 3984
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 2072,
            "mean": 2803,
            "median": 2803,
            "max": 3535
          },
          "sDivWad(int256,int256)": {
            "calls": 76,
            "min": 4043,
            "mean": 4043,
            "median": 4043,
            "max": 4043
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 3080,
            "mean": 3146,
            "median": 3171,
            "max": 3171
          },
          "sMulWad(int256,int256)": {
            "calls": 87,
            "min": 3637,
            "mean": 3637,
            "median": 3637,
            "max": 3637
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 2373,
            "mean": 2418,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 12221510,
          "size": 60941
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 19432,
            "mean": 22338,
            "median": 22339,
            "max": 29560
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 19767,
            "mean": 29603,
            "median": 32221,
            "max": 32430
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 20165,
            "mean": 24846,
            "median": 23408,
            "max": 32612
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 1227,
            "mean": 3604,
            "median": 1530,
            "max": 10886
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 19746,
            "mean": 22778,
            "median": 22458,
            "max": 30636
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1774770,
          "size": 8791
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 2729470,
          "size": 13559
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23776,
            "mean": 33870,
            "median": 33870,
            "max": 43965
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26719,
            "mean": 35259,
            "median": 35259,
            "max": 43799
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 3244096,
          "size": 16129
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 523,
            "min": 23788,
            "mean": 24837,
            "median": 24460,
            "max": 27636
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 25194,
            "mean": 27142,
            "median": 26732,
            "max": 30054
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28405,
            "mean": 29096,
            "median": 29043,
            "max": 30242
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24790,
            "mean": 26201,
            "median": 26426,
            "max": 27162
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 279,
            "min": 3138,
            "mean": 725457,
            "median": 636029,
            "max": 4709264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2382261,
          "size": 11825
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 104710,
            "mean": 1229196,
            "median": 861027,
            "max": 83523290
          },
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 783,
            "mean": 795,
            "median": 795,
            "max": 807
          },
          "getArgUint256(uint256)": {
            "calls": 15,
            "min": 2676,
            "mean": 2676,
            "median": 2676,
            "max": 2676
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 3810,
            "mean": 35705,
            "median": 39129,
            "max": 64420
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 601,
            "mean": 601,
            "median": 601,
            "max": 601
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 491,
            "mean": 491,
            "median": 491,
            "max": 491
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 752,
            "mean": 2164,
            "median": 2303,
            "max": 3437
          },
          "revertWithError()": {
            "calls": 5,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 22419,
            "mean": 22419,
            "median": 22419,
            "max": 22419
          },
          "value()": {
            "calls": 1035,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 149935,
          "size": 474
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44661,
            "mean": 45237,
            "median": 45021,
            "max": 46672
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 860397,
          "size": 4224
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 393,
            "min": 597,
            "mean": 735,
            "median": 806,
            "max": 830
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 9442039,
          "size": 47071
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 17,
            "min": 2930,
            "mean": 2930,
            "median": 2930,
            "max": 2930
          },
          "argsOnClone(address,uint256)": {
            "calls": 16,
            "min": 4159,
            "mean": 4159,
            "median": 4159,
            "max": 4159
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 8,
            "min": 3346,
            "mean": 3346,
            "median": 3346,
            "max": 3346
          },
          "argsOnERC1967(address)": {
            "calls": 7,
            "min": 4932,
            "mean": 4932,
            "median": 4932,
            "max": 4932
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 6,
            "min": 3917,
            "mean": 3917,
            "median": 3917,
            "max": 3917
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 2,
            "min": 3632,
            "mean": 3632,
            "median": 3632,
            "max": 3632
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 10,
            "min": 4162,
            "mean": 4162,
            "median": 4162,
            "max": 4162
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 4,
            "min": 2993,
            "mean": 2993,
            "median": 2993,
            "max": 2993
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 5,
            "min": 5468,
            "mean": 5468,
            "median": 5468,
            "max": 5468
          },
          "argsOnERC1967I(address)": {
            "calls": 7,
            "min": 4272,
            "mean": 4272,
            "median": 4272,
            "max": 4272
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 6,
            "min": 3282,
            "mean": 3282,
            "median": 3282,
            "max": 3282
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 9,
            "min": 5446,
            "mean": 5446,
            "median": 5446,
            "max": 5446
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 7,
            "min": 4294,
            "mean": 4294,
            "median": 4294,
            "max": 4294
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 9,
            "min": 3873,
            "mean": 3873,
            "median": 3873,
            "max": 3873
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 60,
            "min": 38704,
            "mean": 50217,
            "median": 58764,
            "max": 59128
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 890,
            "mean": 896,
            "median": 890,
            "max": 919
          },
          "clone(address)": {
            "calls": 257,
            "min": 86724,
            "mean": 86724,
            "median": 86724,
            "max": 86724
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69737,
            "mean": 2183421,
            "median": 73080,
            "max": 96803496
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 265,
            "min": 70849,
            "mean": 5548303,
            "median": 74121,
            "max": 96796187
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 87908,
            "mean": 121287,
            "median": 88268,
            "max": 1873528
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 249916,
            "median": 76503,
            "max": 10218776
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 273,
            "min": 0,
            "mean": 360922,
            "median": 102169,
            "max": 10805337
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 116400,
            "mean": 190755,
            "median": 116772,
            "max": 2578414
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 342,
            "min": 0,
            "mean": 370481,
            "median": 107667,
            "max": 13073051
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102218,
            "mean": 128754,
            "median": 102590,
            "max": 713944
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 264,
            "min": 0,
            "mean": 406054,
            "median": 107004,
            "max": 11582815
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 119448,
            "mean": 162708,
            "median": 119820,
            "max": 731108
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 359,
            "min": 0,
            "mean": 286979,
            "median": 106539,
            "max": 12802895
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102990,
            "mean": 139112,
            "median": 103362,
            "max": 725476
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 259,
            "min": 95955,
            "mean": 4440739,
            "median": 99257,
            "max": 96826717
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 385,
            "min": 96826,
            "mean": 163792,
            "median": 114062,
            "max": 4733646
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 476,
            "min": 101719,
            "mean": 20409817,
            "median": 107692,
            "max": 96830349
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99426,
            "mean": 135506,
            "median": 99798,
            "max": 711152
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 262,
            "min": 102154,
            "mean": 4326318,
            "median": 105846,
            "max": 96826994
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 642,
            "min": 100582,
            "mean": 155903,
            "median": 101063,
            "max": 3334754
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 477,
            "min": 102183,
            "mean": 18781031,
            "median": 106624,
            "max": 96809490
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 100946,
            "mean": 134643,
            "median": 101318,
            "max": 712589
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 95068,
            "mean": 3043809,
            "median": 98417,
            "max": 96819176
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98715,
            "mean": 139564,
            "median": 98824,
            "max": 1434798
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 134,
            "min": 99309,
            "mean": 5684011,
            "median": 103662,
            "max": 96829527
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 116179,
            "mean": 116179,
            "median": 116179,
            "max": 116179
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 100711,
            "mean": 6645480,
            "median": 104269,
            "max": 96829011
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99590,
            "mean": 157134,
            "median": 99699,
            "max": 4463658
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 135,
            "min": 101021,
            "mean": 2618911,
            "median": 103205,
            "max": 96806385
          },
          "revertWithError()": {
            "calls": 7133,
            "min": 68,
            "mean": 3029,
            "median": 3048,
            "max": 3048
          },
          "setValue(uint256)": {
            "calls": 7481,
            "min": 1008,
            "mean": 22834,
            "median": 23008,
            "max": 23008
          },
          "value()": {
            "calls": 21011,
            "min": 68,
            "mean": 2881,
            "median": 2891,
            "max": 2891
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2409691,
          "size": 11962
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 721,
            "mean": 721,
            "median": 721,
            "max": 721
          },
          "decodeBatch(bytes)": {
            "calls": 61,
            "min": 1276,
            "mean": 3285,
            "median": 3760,
            "max": 5267
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 26,
            "min": 1291,
            "mean": 1525,
            "median": 1619,
            "max": 1679
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 640,
            "min": 765,
            "mean": 2186,
            "median": 1131,
            "max": 6097
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 1239,
            "mean": 1258,
            "median": 1251,
            "max": 1287
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 983,
            "mean": 1002,
            "median": 995,
            "max": 1031
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23549,
            "mean": 23549,
            "median": 23549,
            "max": 23549
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 123,
            "min": 30174,
            "mean": 39674,
            "median": 38485,
            "max": 53402
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 642060,
            "mean": 805792,
            "median": 669816,
            "max": 4670866
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 3656823,
          "size": 18190
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 3154,
            "mean": 3154,
            "median": 3154,
            "max": 3154
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 3104,
            "mean": 3104,
            "median": 3104,
            "max": 3104
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 44351,
            "mean": 44351,
            "median": 44351,
            "max": 44351
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 44677,
            "mean": 44677,
            "median": 44677,
            "max": 44677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 3023626,
          "size": 15028
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2390,
            "mean": 3566,
            "median": 4655,
            "max": 4655
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23651,
            "mean": 23675,
            "median": 23687,
            "max": 23687
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21717,
            "mean": 43434,
            "median": 43916,
            "max": 43916
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23548,
            "mean": 23832,
            "median": 23932,
            "max": 23932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 4644937,
          "size": 23124
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24534,
            "mean": 40179,
            "median": 28196,
            "max": 102542
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 25873,
            "mean": 51219,
            "median": 31696,
            "max": 153899
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 15808040,
          "size": 78835
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 1973,
            "mean": 1981,
            "median": 1979,
            "max": 1991
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 1595,
            "mean": 1595,
            "median": 1595,
            "max": 1595
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 710,
            "mean": 710,
            "median": 710,
            "max": 710
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 240815,
          "size": 893
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27398,
            "mean": 51736,
            "median": 50826,
            "max": 82653
          },
          "x()": {
            "calls": 6,
            "min": 2674,
            "mean": 10328,
            "median": 5958,
            "max": 37658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166999,
          "size": 552
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27229,
            "mean": 41915,
            "median": 32645,
            "max": 82291
          },
          "x()": {
            "calls": 6,
            "min": 2542,
            "mean": 9458,
            "median": 4727,
            "max": 37482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2201454,
          "size": 10922
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22497,
            "mean": 27241,
            "median": 28494,
            "max": 30198
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 25624,
            "mean": 36599,
            "median": 35649,
            "max": 92049
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1878484,
          "size": 9309
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "name()": {
            "calls": 256,
            "min": 4882,
            "mean": 6717,
            "median": 4925,
            "max": 13719
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 574,
            "mean": 574,
            "median": 574,
            "max": 574
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 502,
            "mean": 502,
            "median": 502,
            "max": 502
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 287
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 5296,
            "mean": 7153,
            "median": 5415,
            "max": 14213
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "returnsString()": {
            "calls": 512,
            "min": 4892,
            "mean": 6651,
            "median": 4935,
            "max": 13729
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "reverts()": {
            "calls": 258,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "symbol()": {
            "calls": 256,
            "min": 5168,
            "mean": 7003,
            "median": 5211,
            "max": 14005
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 4697208,
          "size": 23385
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 112,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "enqueue(uint256,uint256)": {
            "calls": 381,
            "min": 24179,
            "mean": 52889,
            "median": 66685,
            "max": 66853
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 139,
            "min": 860,
            "mean": 860,
            "median": 860,
            "max": 860
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 127,
            "min": 826,
            "mean": 839,
            "median": 826,
            "max": 857
          },
          "pop()": {
            "calls": 60,
            "min": 23937,
            "mean": 23937,
            "median": 23937,
            "max": 23937
          },
          "replace(uint256)": {
            "calls": 57,
            "min": 24330,
            "mean": 24616,
            "median": 24690,
            "max": 24690
          },
          "root()": {
            "calls": 120,
            "min": 2989,
            "mean": 2989,
            "median": 2989,
            "max": 2989
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3274136,
          "size": 16279
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22484,
            "mean": 23542,
            "median": 23948,
            "max": 23948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256VerifierEtcher",
        "deployment": {
          "gas": 138891,
          "size": 619
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3046,
            "mean": 3046,
            "median": 3046,
            "max": 3046
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3595,
            "mean": 3595,
            "median": 3595,
            "max": 3595
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 5473,
            "mean": 5473,
            "median": 5473,
            "max": 5473
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 7198,
            "mean": 7198,
            "median": 7198,
            "max": 7198
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3398,
            "mean": 3398,
            "median": 3398,
            "max": 3398
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3288,
            "mean": 3288,
            "median": 3288,
            "max": 3288
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3579,
            "mean": 3579,
            "median": 3579,
            "max": 3579
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5252,
            "mean": 5252,
            "median": 5252,
            "max": 5252
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 43929,
            "mean": 43929,
            "median": 43929,
            "max": 43929
          },
          "value()": {
            "calls": 1,
            "min": 5161,
            "mean": 5161,
            "median": 5161,
            "max": 5161
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 501613,
          "size": 2532
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 13,
            "min": 3348,
            "mean": 3378,
            "median": 3367,
            "max": 3436
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 9,
            "min": 3898,
            "mean": 3935,
            "median": 3916,
            "max": 3986
          },
          "getArgUint256(uint256)": {
            "calls": 31,
            "min": 5775,
            "mean": 5810,
            "median": 5794,
            "max": 5863
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 13,
            "min": 21208,
            "mean": 22868,
            "median": 22073,
            "max": 25256
          },
          "getArgUint64(uint256)": {
            "calls": 13,
            "min": 3700,
            "mean": 3730,
            "median": 3719,
            "max": 3788
          },
          "getArgUint8(uint256)": {
            "calls": 13,
            "min": 3590,
            "mean": 3620,
            "median": 3609,
            "max": 3678
          },
          "getCalldataHash()": {
            "calls": 9,
            "min": 4478,
            "mean": 4591,
            "median": 4534,
            "max": 4738
          },
          "revertWithError()": {
            "calls": 14,
            "min": 5554,
            "mean": 5745,
            "median": 5573,
            "max": 7834
          },
          "setValue(uint256)": {
            "calls": 14,
            "min": 44219,
            "mean": 44471,
            "median": 44262,
            "max": 46868
          },
          "value()": {
            "calls": 14,
            "min": 5463,
            "mean": 5649,
            "median": 5482,
            "max": 7672
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 3026226,
          "size": 15041
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21744,
            "mean": 24206,
            "median": 24206,
            "max": 26668
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 24169,
            "mean": 24495,
            "median": 24498,
            "max": 24498
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 1502080,
          "size": 4097
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3679,
            "mean": 3679,
            "median": 3679,
            "max": 3679
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 4229,
            "mean": 4229,
            "median": 4229,
            "max": 4229
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 6106,
            "mean": 6106,
            "median": 6106,
            "max": 6106
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 36342,
            "mean": 36342,
            "median": 36342,
            "max": 36342
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 4031,
            "mean": 4031,
            "median": 4031,
            "max": 4031
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3921,
            "mean": 3921,
            "median": 3921,
            "max": 3921
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 5452,
            "mean": 5452,
            "median": 5452,
            "max": 5452
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5719,
            "mean": 6472,
            "median": 5885,
            "max": 7814
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 44562,
            "mean": 45379,
            "median": 44753,
            "max": 46824
          },
          "value()": {
            "calls": 3,
            "min": 5557,
            "mean": 6334,
            "median": 5794,
            "max": 7652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1809406,
          "size": 8964
        },
        "functions": {
          "read(address)": {
            "calls": 168,
            "min": 3121,
            "mean": 3190,
            "median": 3121,
            "max": 3430
          },
          "read(address,uint256)": {
            "calls": 100,
            "min": 424,
            "mean": 3020,
            "median": 2924,
            "max": 3244
          },
          "read(address,uint256,uint256)": {
            "calls": 64,
            "min": 3337,
            "mean": 3906,
            "median": 3617,
            "max": 24122
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468486,
            "mean": 48556369,
            "median": 48556369,
            "max": 83644253
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 8845162,
          "size": 44092
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 32,
            "min": 543,
            "mean": 568,
            "median": 579,
            "max": 579
          },
          "toInt104(uint256)": {
            "calls": 22,
            "min": 1110,
            "mean": 1120,
            "median": 1110,
            "max": 1144
          },
          "toInt112(int256)": {
            "calls": 22,
            "min": 1093,
            "mean": 1117,
            "median": 1129,
            "max": 1129
          },
          "toInt112(uint256)": {
            "calls": 10,
            "min": 1880,
            "mean": 1890,
            "median": 1880,
            "max": 1914
          },
          "toInt120(int256)": {
            "calls": 26,
            "min": 2397,
            "mean": 2423,
            "median": 2433,
            "max": 2433
          },
          "toInt120(uint256)": {
            "calls": 19,
            "min": 1732,
            "mean": 1737,
            "median": 1732,
            "max": 1766
          },
          "toInt128(int256)": {
            "calls": 26,
            "min": 2199,
            "mean": 2222,
            "median": 2235,
            "max": 2235
          },
          "toInt128(uint256)": {
            "calls": 19,
            "min": 324,
            "mean": 334,
            "median": 324,
            "max": 358
          },
          "toInt136(int256)": {
            "calls": 24,
            "min": 1803,
            "mean": 1830,
            "median": 1839,
            "max": 1839
          },
          "toInt136(uint256)": {
            "calls": 15,
            "min": 1974,
            "mean": 1985,
            "median": 1974,
            "max": 2008
          },
          "toInt144(int256)": {
            "calls": 32,
            "min": 1363,
            "mean": 1392,
            "median": 1399,
            "max": 1399
          },
          "toInt144(uint256)": {
            "calls": 20,
            "min": 1072,
            "mean": 1085,
            "median": 1072,
            "max": 1106
          },
          "toInt152(int256)": {
            "calls": 34,
            "min": 1143,
            "mean": 1170,
            "median": 1179,
            "max": 1179
          },
          "toInt152(uint256)": {
            "calls": 12,
            "min": 1182,
            "mean": 1196,
            "median": 1182,
            "max": 1216
          },
          "toInt16(int256)": {
            "calls": 42,
            "min": 2105,
            "mean": 2128,
            "median": 2141,
            "max": 2141
          },
          "toInt16(uint256)": {
            "calls": 34,
            "min": 626,
            "mean": 632,
            "median": 626,
            "max": 660
          },
          "toInt160(int256)": {
            "calls": 36,
            "min": 1275,
            "mean": 1299,
            "median": 1311,
            "max": 1311
          },
          "toInt160(uint256)": {
            "calls": 17,
            "min": 742,
            "mean": 760,
            "median": 776,
            "max": 776
          },
          "toInt168(int256)": {
            "calls": 34,
            "min": 2331,
            "mean": 2357,
            "median": 2367,
            "max": 2367
          },
          "toInt168(uint256)": {
            "calls": 18,
            "min": 2502,
            "mean": 2515,
            "median": 2502,
            "max": 2536
          },
          "toInt176(int256)": {
            "calls": 26,
            "min": 1539,
            "mean": 1568,
            "median": 1575,
            "max": 1575
          },
          "toInt176(uint256)": {
            "calls": 12,
            "min": 676,
            "mean": 690,
            "median": 676,
            "max": 710
          },
          "toInt184(int256)": {
            "calls": 20,
            "min": 1341,
            "mean": 1368,
            "median": 1377,
            "max": 1377
          },
          "toInt184(uint256)": {
            "calls": 15,
            "min": 1820,
            "mean": 1833,
            "median": 1820,
            "max": 1854
          },
          "toInt192(int256)": {
            "calls": 20,
            "min": 263,
            "mean": 291,
            "median": 299,
            "max": 299
          },
          "toInt192(uint256)": {
            "calls": 11,
            "min": 434,
            "mean": 458,
            "median": 468,
            "max": 468
          },
          "toInt200(int256)": {
            "calls": 20,
            "min": 395,
            "mean": 425,
            "median": 431,
            "max": 431
          },
          "toInt200(uint256)": {
            "calls": 17,
            "min": 456,
            "mean": 474,
            "median": 490,
            "max": 490
          },
          "toInt208(int256)": {
            "calls": 36,
            "min": 2419,
            "mean": 2449,
            "median": 2455,
            "max": 2455
          },
          "toInt208(uint256)": {
            "calls": 15,
            "min": 588,
            "mean": 603,
            "median": 588,
            "max": 622
          },
          "toInt216(int256)": {
            "calls": 26,
            "min": 2375,
            "mean": 2404,
            "median": 2411,
            "max": 2411
          },
          "toInt216(uint256)": {
            "calls": 19,
            "min": 2348,
            "mean": 2365,
            "median": 2382,
            "max": 2382
          },
          "toInt224(int256)": {
            "calls": 50,
            "min": 835,
            "mean": 867,
            "median": 871,
            "max": 871
          },
          "toInt224(uint256)": {
            "calls": 14,
            "min": 1226,
            "mean": 1245,
            "median": 1260,
            "max": 1260
          },
          "toInt232(int256)": {
            "calls": 40,
            "min": 219,
            "mean": 253,
            "median": 255,
            "max": 255
          },
          "toInt232(uint256)": {
            "calls": 16,
            "min": 1292,
            "mean": 1315,
            "median": 1326,
            "max": 1326
          },
          "toInt24(int256)": {
            "calls": 50,
            "min": 2303,
            "mean": 2323,
            "median": 2339,
            "max": 2339
          },
          "toInt24(uint256)": {
            "calls": 26,
            "min": 1374,
            "mean": 1380,
            "median": 1374,
            "max": 1408
          },
          "toInt240(int256)": {
            "calls": 40,
            "min": 1011,
            "mean": 1040,
            "median": 1047,
            "max": 1047
          },
          "toInt240(uint256)": {
            "calls": 18,
            "min": 962,
            "mean": 975,
            "median": 962,
            "max": 996
          },
          "toInt248(int256)": {
            "calls": 46,
            "min": 197,
            "mean": 226,
            "median": 233,
            "max": 233
          },
          "toInt248(uint256)": {
            "calls": 21,
            "min": 2172,
            "mean": 2188,
            "median": 2172,
            "max": 2206
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 2208,
            "mean": 2227,
            "median": 2228,
            "max": 2228
          },
          "toInt32(int256)": {
            "calls": 50,
            "min": 1709,
            "mean": 1728,
            "median": 1745,
            "max": 1745
          },
          "toInt32(uint256)": {
            "calls": 14,
            "min": 2254,
            "mean": 2263,
            "median": 2254,
            "max": 2288
          },
          "toInt40(int256)": {
            "calls": 36,
            "min": 1995,
            "mean": 2015,
            "median": 2031,
            "max": 2031
          },
          "toInt40(uint256)": {
            "calls": 23,
            "min": 2056,
            "mean": 2069,
            "median": 2056,
            "max": 2090
          },
          "toInt48(int256)": {
            "calls": 36,
            "min": 477,
            "mean": 502,
            "median": 513,
            "max": 513
          },
          "toInt48(uint256)": {
            "calls": 10,
            "min": 1198,
            "mean": 1208,
            "median": 1198,
            "max": 1232
          },
          "toInt56(int256)": {
            "calls": 52,
            "min": 939,
            "mean": 959,
            "median": 975,
            "max": 975
          },
          "toInt56(uint256)": {
            "calls": 15,
            "min": 2430,
            "mean": 2443,
            "median": 2430,
            "max": 2464
          },
          "toInt64(int256)": {
            "calls": 48,
            "min": 2149,
            "mean": 2175,
            "median": 2185,
            "max": 2185
          },
          "toInt64(uint256)": {
            "calls": 16,
            "min": 406,
            "mean": 416,
            "median": 406,
            "max": 440
          },
          "toInt72(int256)": {
            "calls": 26,
            "min": 2281,
            "mean": 2305,
            "median": 2317,
            "max": 2317
          },
          "toInt72(uint256)": {
            "calls": 9,
            "min": 2122,
            "mean": 2137,
            "median": 2122,
            "max": 2156
          },
          "toInt8(int256)": {
            "calls": 20,
            "min": 2479,
            "mean": 2480,
            "median": 2479,
            "max": 2513
          },
          "toInt8(uint256)": {
            "calls": 22,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "toInt80(int256)": {
            "calls": 18,
            "min": 719,
            "mean": 747,
            "median": 755,
            "max": 755
          },
          "toInt80(uint256)": {
            "calls": 22,
            "min": 780,
            "mean": 792,
            "median": 780,
            "max": 814
          },
          "toInt88(int256)": {
            "calls": 30,
            "min": 1687,
            "mean": 1713,
            "median": 1723,
            "max": 1723
          },
          "toInt88(uint256)": {
            "calls": 15,
            "min": 1946,
            "mean": 1948,
            "median": 1946,
            "max": 1980
          },
          "toInt96(int256)": {
            "calls": 26,
            "min": 521,
            "mean": 545,
            "median": 557,
            "max": 557
          },
          "toInt96(uint256)": {
            "calls": 16,
            "min": 1440,
            "mean": 1454,
            "median": 1440,
            "max": 1474
          },
          "toUint104(uint256)": {
            "calls": 16,
            "min": 1550,
            "mean": 1565,
            "median": 1565,
            "max": 1580
          },
          "toUint112(uint256)": {
            "calls": 10,
            "min": 912,
            "mean": 918,
            "median": 912,
            "max": 942
          },
          "toUint120(uint256)": {
            "calls": 16,
            "min": 560,
            "mean": 569,
            "median": 560,
            "max": 590
          },
          "toUint128(uint256)": {
            "calls": 10,
            "min": 1484,
            "mean": 1511,
            "median": 1511,
            "max": 1538
          },
          "toUint136(uint256)": {
            "calls": 20,
            "min": 1748,
            "mean": 1766,
            "median": 1748,
            "max": 1802
          },
          "toUint144(uint256)": {
            "calls": 15,
            "min": 1858,
            "mean": 1879,
            "median": 1858,
            "max": 1912
          },
          "toUint152(uint256)": {
            "calls": 19,
            "min": 1600,
            "mean": 1619,
            "median": 1600,
            "max": 1654
          },
          "toUint16(uint256)": {
            "calls": 24,
            "min": 1638,
            "mean": 1646,
            "median": 1638,
            "max": 1668
          },
          "toUint160(uint256)": {
            "calls": 14,
            "min": 2238,
            "mean": 2261,
            "median": 2238,
            "max": 2292
          },
          "toUint168(uint256)": {
            "calls": 15,
            "min": 1028,
            "mean": 1056,
            "median": 1082,
            "max": 1082
          },
          "toUint176(uint256)": {
            "calls": 12,
            "min": 236,
            "mean": 258,
            "median": 236,
            "max": 290
          },
          "toUint184(uint256)": {
            "calls": 20,
            "min": 1050,
            "mean": 1077,
            "median": 1077,
            "max": 1104
          },
          "toUint192(uint256)": {
            "calls": 22,
            "min": 1424,
            "mean": 1453,
            "median": 1478,
            "max": 1478
          },
          "toUint200(uint256)": {
            "calls": 13,
            "min": 1402,
            "mean": 1422,
            "median": 1402,
            "max": 1456
          },
          "toUint208(uint256)": {
            "calls": 13,
            "min": 1930,
            "mean": 1954,
            "median": 1930,
            "max": 1984
          },
          "toUint216(uint256)": {
            "calls": 16,
            "min": 1578,
            "mean": 1598,
            "median": 1578,
            "max": 1632
          },
          "toUint224(uint256)": {
            "calls": 13,
            "min": 1160,
            "mean": 1184,
            "median": 1160,
            "max": 1214
          },
          "toUint232(uint256)": {
            "calls": 30,
            "min": 302,
            "mean": 330,
            "median": 356,
            "max": 356
          },
          "toUint24(uint256)": {
            "calls": 16,
            "min": 1660,
            "mean": 1663,
            "median": 1660,
            "max": 1690
          },
          "toUint240(uint256)": {
            "calls": 23,
            "min": 874,
            "mean": 899,
            "median": 874,
            "max": 928
          },
          "toUint248(uint256)": {
            "calls": 20,
            "min": 896,
            "mean": 923,
            "median": 923,
            "max": 950
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 2579,
            "mean": 2593,
            "median": 2599,
            "max": 2599
          },
          "toUint32(uint256)": {
            "calls": 20,
            "min": 2034,
            "mean": 2040,
            "median": 2034,
            "max": 2064
          },
          "toUint40(uint256)": {
            "calls": 16,
            "min": 2562,
            "mean": 2571,
            "median": 2562,
            "max": 2592
          },
          "toUint48(uint256)": {
            "calls": 19,
            "min": 1770,
            "mean": 1781,
            "median": 1770,
            "max": 1800
          },
          "toUint56(uint256)": {
            "calls": 11,
            "min": 2012,
            "mean": 2020,
            "median": 2012,
            "max": 2042
          },
          "toUint64(uint256)": {
            "calls": 17,
            "min": 692,
            "mean": 699,
            "median": 692,
            "max": 722
          },
          "toUint72(uint256)": {
            "calls": 17,
            "min": 802,
            "mean": 816,
            "median": 802,
            "max": 832
          },
          "toUint8(uint256)": {
            "calls": 20,
            "min": 274,
            "mean": 275,
            "median": 274,
            "max": 304
          },
          "toUint80(uint256)": {
            "calls": 22,
            "min": 2078,
            "mean": 2090,
            "median": 2078,
            "max": 2108
          },
          "toUint88(uint256)": {
            "calls": 12,
            "min": 1462,
            "mean": 1474,
            "median": 1462,
            "max": 1492
          },
          "toUint96(uint256)": {
            "calls": 6,
            "min": 494,
            "mean": 504,
            "median": 494,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 15925322,
          "size": 79420
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 78,
            "min": 163455,
            "mean": 172402,
            "median": 172503,
            "max": 172563
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 699,
            "min": 23774,
            "mean": 148854,
            "median": 74838,
            "max": 298662
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46307,
            "mean": 67709,
            "median": 69611,
            "max": 85353
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29494,
            "mean": 29945,
            "median": 29886,
            "max": 32407
          },
          "safeApprove(address,address,uint256)": {
            "calls": 254,
            "min": 26930,
            "mean": 27369,
            "median": 27446,
            "max": 27746
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 254,
            "min": 25881,
            "mean": 26291,
            "median": 26379,
            "max": 26697
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 26762,
            "mean": 27154,
            "median": 27158,
            "max": 27482
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 29364,
            "mean": 29364,
            "median": 29364,
            "max": 29364
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 23145,
            "mean": 29856,
            "median": 29917,
            "max": 30182
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 253,
            "min": 27913,
            "mean": 28446,
            "median": 28609,
            "max": 28961
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 29535,
            "mean": 50799,
            "median": 69211,
            "max": 70461
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 1729,
            "mean": 4933,
            "median": 6535,
            "max": 6535
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2564,
            "min": 26160,
            "mean": 40210,
            "median": 31731,
            "max": 62104
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 555831,
            "mean": 691547,
            "median": 582545,
            "max": 4578187
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 554132,
            "mean": 669583,
            "median": 584305,
            "max": 4660926
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2717454,
          "size": 13499
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33855,
            "mean": 42787,
            "median": 40623,
            "max": 65077
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 38746,
            "mean": 59976,
            "median": 53574,
            "max": 106715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 4159277,
          "size": 20699
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1798,
            "mean": 9287,
            "median": 9665,
            "max": 16448
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 293,
            "min": 1411,
            "mean": 10744,
            "median": 10776,
            "max": 16941
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 135,
            "min": 6714,
            "mean": 6727,
            "median": 6739,
            "max": 6739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 199032,
          "size": 730
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 30,
            "min": 32933,
            "mean": 48243,
            "median": 45233,
            "max": 79433
          },
          "fallbackDeposit(uint256)": {
            "calls": 38,
            "min": 44590,
            "mean": 51790,
            "median": 44590,
            "max": 78790
          },
          "withdraw(uint256)": {
            "calls": 13,
            "min": 33054,
            "mean": 44430,
            "median": 45378,
            "max": 45402
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2982779,
          "size": 14824
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 130,
            "min": 1726,
            "mean": 1741,
            "median": 1745,
            "max": 1760
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 310539,
          "size": 1259
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 334,
            "mean": 343,
            "median": 343,
            "max": 352
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 309,
            "mean": 309,
            "median": 309,
            "max": 309
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 419,
            "mean": 428,
            "median": 428,
            "max": 437
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3162,
            "mean": 3165,
            "median": 3165,
            "max": 3168
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3711,
            "mean": 3711,
            "median": 3711,
            "max": 3711
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5589,
            "mean": 5590,
            "median": 5589,
            "max": 5595
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 12601,
            "mean": 13163,
            "median": 13163,
            "max": 13725
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3514,
            "mean": 3517,
            "median": 3517,
            "max": 3520
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3404,
            "mean": 3407,
            "median": 3407,
            "max": 3410
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3925,
            "mean": 3925,
            "median": 3925,
            "max": 3925
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22561,
            "mean": 22561,
            "median": 22561,
            "max": 22561
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 290,
            "mean": 299,
            "median": 299,
            "max": 308
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5368,
            "mean": 5371,
            "median": 5371,
            "max": 5374
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 44045,
            "mean": 44048,
            "median": 44048,
            "max": 44051
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22200,
            "mean": 22200,
            "median": 22200,
            "max": 22200
          },
          "value()": {
            "calls": 2,
            "min": 5277,
            "mean": 5280,
            "median": 5280,
            "max": 5283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 287845,
          "size": 1114
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2277,
            "mean": 2277,
            "median": 2277,
            "max": 2277
          },
          "fallback()": {
            "calls": 520,
            "min": 23321,
            "mean": 64425,
            "median": 88336,
            "max": 178231
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "receive()": {
            "calls": 260,
            "min": 88,
            "mean": 20845,
            "median": 21088,
            "max": 21088
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 678,
            "mean": 33679,
            "median": 24032,
            "max": 67274
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1853,
            "mean": 35020,
            "median": 35020,
            "max": 68188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 100131,
          "size": 240
        },
        "functions": {
          "fallback()": {
            "calls": 988,
            "min": 215,
            "mean": 23562,
            "median": 22334,
            "max": 75274
          },
          "receive()": {
            "calls": 18,
            "min": 21082,
            "mean": 21082,
            "median": 21082,
            "max": 21082
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 354736,
          "size": 1545
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 209,
            "mean": 332,
            "median": 394,
            "max": 394
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 903,
            "mean": 903,
            "median": 903,
            "max": 903
          },
          "getArgAddress(uint256)": {
            "calls": 14,
            "min": 3190,
            "mean": 3221,
            "median": 3227,
            "max": 3249
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 3754,
            "mean": 3778,
            "median": 3785,
            "max": 3798
          },
          "getArgUint256(uint256)": {
            "calls": 24,
            "min": 5617,
            "mean": 5650,
            "median": 5660,
            "max": 5676
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 14,
            "min": 13747,
            "mean": 15899,
            "median": 16167,
            "max": 17449
          },
          "getArgUint64(uint256)": {
            "calls": 14,
            "min": 3542,
            "mean": 3573,
            "median": 3579,
            "max": 3601
          },
          "getArgUint8(uint256)": {
            "calls": 14,
            "min": 3432,
            "mean": 3463,
            "median": 3469,
            "max": 3491
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 4014,
            "mean": 4115,
            "median": 4146,
            "max": 4182
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 339,
            "mean": 457,
            "median": 516,
            "max": 516
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 739,
            "mean": 739,
            "median": 739,
            "max": 739
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 618,
            "mean": 618,
            "median": 618,
            "max": 618
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 676,
            "mean": 676,
            "median": 676,
            "max": 676
          },
          "revertWithError()": {
            "calls": 16,
            "min": 5396,
            "mean": 5893,
            "median": 5439,
            "max": 12594
          },
          "setValue(uint256)": {
            "calls": 16,
            "min": 44076,
            "mean": 44619,
            "median": 44122,
            "max": 51271
          },
          "value()": {
            "calls": 16,
            "min": 5305,
            "mean": 5794,
            "median": 5348,
            "max": 12435
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 618077,
          "size": 3469
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5400,
            "mean": 5413,
            "median": 5418,
            "max": 5418
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5647,
            "mean": 5656,
            "median": 5656,
            "max": 5665
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5533,
            "mean": 5542,
            "median": 5542,
            "max": 5551
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5514,
            "mean": 5523,
            "median": 5523,
            "max": 5532
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5371,
            "mean": 5380,
            "median": 5380,
            "max": 5389
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5429,
            "mean": 5438,
            "median": 5438,
            "max": 5447
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11557,
            "mean": 30282,
            "median": 33533,
            "max": 45757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1303085,
          "size": 5810
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5500,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 448,
            "min": 670,
            "mean": 2795,
            "median": 835,
            "max": 7906
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 629,
            "min": 23985,
            "mean": 30207,
            "median": 29489,
            "max": 50185
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4259,
            "min": 24039,
            "mean": 148085,
            "median": 79059,
            "max": 37642769
          },
          "burn(address,uint256,uint256)": {
            "calls": 383,
            "min": 25278,
            "mean": 29482,
            "median": 28110,
            "max": 33462
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 903,
            "min": 24647,
            "mean": 231130,
            "median": 63586,
            "max": 35154024
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1110,
            "min": 24332,
            "mean": 122511,
            "median": 58656,
            "max": 8542605
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 2009,
            "min": 26434,
            "mean": 44510,
            "median": 46574,
            "max": 46606
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2821,
            "mean": 2821,
            "median": 2821,
            "max": 2821
          },
          "lastDataHash()": {
            "calls": 31,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5011,
            "min": 22949,
            "mean": 133881,
            "median": 73136,
            "max": 34888514
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 931,
            "min": 23993,
            "mean": 373862,
            "median": 62556,
            "max": 38291233
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1056,
            "min": 23947,
            "mean": 182401,
            "median": 58002,
            "max": 35555171
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1660,
            "min": 25946,
            "mean": 45266,
            "median": 46086,
            "max": 46086
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 139,
            "min": 26700,
            "mean": 36514,
            "median": 33802,
            "max": 47503
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 129,
            "min": 29822,
            "mean": 30472,
            "median": 30498,
            "max": 30798
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 117,
            "min": 33448,
            "mean": 146509,
            "median": 93825,
            "max": 1232233
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 149,
            "min": 59057,
            "mean": 90581,
            "median": 62467,
            "max": 1253970
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 390787,
          "size": 1627
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 459,
            "min": 2851,
            "mean": 2883,
            "median": 2869,
            "max": 6124
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26539,
            "mean": 26539,
            "median": 26539,
            "max": 26539
          },
          "signer()": {
            "calls": 4,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 807073,
          "size": 4289
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "allowance(address,address)": {
            "calls": 2444,
            "min": 841,
            "mean": 2420,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 2620,
            "min": 25909,
            "mean": 45901,
            "median": 46025,
            "max": 46205
          },
          "balanceOf(address)": {
            "calls": 13263,
            "min": 529,
            "mean": 2354,
            "median": 2529,
            "max": 2529
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24279,
            "mean": 29292,
            "median": 27363,
            "max": 34562
          },
          "decimals()": {
            "calls": 312,
            "min": 2342,
            "mean": 2342,
            "median": 2342,
            "max": 2342
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 25145,
            "mean": 27014,
            "median": 26891,
            "max": 28649
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 25215,
            "mean": 38660,
            "median": 25723,
            "max": 52599
          },
          "mint(address,uint256)": {
            "calls": 3218,
            "min": 24348,
            "mean": 67835,
            "median": 68317,
            "max": 68677
          },
          "name()": {
            "calls": 258,
            "min": 2683,
            "mean": 4876,
            "median": 3783,
            "max": 9247
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23730,
            "mean": 43847,
            "median": 30286,
            "max": 74376
          },
          "symbol()": {
            "calls": 258,
            "min": 2870,
            "mean": 4954,
            "median": 2879,
            "max": 9437
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 2575,
            "min": 24291,
            "mean": 45669,
            "median": 51522,
            "max": 51754
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1544,
            "min": 24695,
            "mean": 40396,
            "median": 32485,
            "max": 54597
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 806989,
          "size": 4289
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21796,
            "mean": 21926,
            "median": 21856,
            "max": 22180
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28477,
            "mean": 68018,
            "median": 68343,
            "max": 68677
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22867,
            "mean": 23137,
            "median": 23167,
            "max": 23455
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24899,
            "mean": 38396,
            "median": 30455,
            "max": 52362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 829428,
          "size": 4051
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 1022,
            "min": 23735,
            "mean": 35079,
            "median": 35879,
            "max": 46407
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1402155,
          "size": 6271
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2314,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 251,
            "min": 21548,
            "mean": 21999,
            "median": 21788,
            "max": 95429
          },
          "checkpointAt(address,uint256)": {
            "calls": 359,
            "min": 0,
            "mean": 43,
            "median": 0,
            "max": 4920
          },
          "checkpointCount(address)": {
            "calls": 1438,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 519,
            "min": 21192,
            "mean": 21637,
            "median": 21432,
            "max": 91614
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23821,
            "mean": 41687,
            "median": 23845,
            "max": 76039
          },
          "delegates(address)": {
            "calls": 4597,
            "min": 0,
            "mean": 214,
            "median": 0,
            "max": 2606
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 48258,
            "mean": 48533,
            "median": 48702,
            "max": 48714
          },
          "directIncrementNonce(address)": {
            "calls": 893,
            "min": 27157,
            "mean": 31419,
            "median": 27169,
            "max": 44269
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5247,
            "mean": 5747,
            "median": 5247,
            "max": 7247
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 699,
            "mean": 3804,
            "median": 5255,
            "max": 5459
          },
          "getVotes(address)": {
            "calls": 3169,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4953
          },
          "getVotesTotalSupply()": {
            "calls": 808,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4965
          },
          "mint(address,uint256)": {
            "calls": 741,
            "min": 21560,
            "mean": 21860,
            "median": 21800,
            "max": 94733
          },
          "name()": {
            "calls": 256,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "nonces(address)": {
            "calls": 499,
            "min": 2661,
            "mean": 2661,
            "median": 2661,
            "max": 2661
          },
          "totalSupply()": {
            "calls": 403,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 514,
            "min": 21548,
            "mean": 21845,
            "median": 21800,
            "max": 86873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 243804,
          "size": 912
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21527,
            "mean": 21527,
            "median": 21527,
            "max": 21527
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21718,
            "mean": 22016,
            "median": 22090,
            "max": 22090
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2529,
            "mean": 4053,
            "median": 4663,
            "max": 4663
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 346,
            "min": 22200,
            "mean": 38700,
            "median": 44331,
            "max": 44551
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 692,
            "min": 22427,
            "mean": 39284,
            "median": 44983,
            "max": 45227
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1344744,
          "size": 6286
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31981,
            "mean": 31981,
            "median": 31981,
            "max": 31981
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12519,
            "mean": 12519,
            "median": 12519,
            "max": 12519
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6466,
            "mean": 18981,
            "median": 9112,
            "max": 140404
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 1195,
            "mean": 1195,
            "median": 1195,
            "max": 1195
          },
          "entryPoint()": {
            "calls": 7,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2972,
            "mean": 16950,
            "median": 13468,
            "max": 37892
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 124,
            "min": 2885,
            "mean": 59527,
            "median": 66423,
            "max": 281384
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 135,
            "min": 3266,
            "mean": 61603,
            "median": 38392,
            "max": 217416
          },
          "fallback()": {
            "calls": 5,
            "min": 690,
            "mean": 29082,
            "median": 690,
            "max": 109753
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5637,
            "mean": 5637,
            "median": 5637,
            "max": 5637
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2754,
            "mean": 24225,
            "median": 24292,
            "max": 24292
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6830,
            "mean": 8194,
            "median": 6872,
            "max": 13754
          },
          "owner()": {
            "calls": 267,
            "min": 2599,
            "mean": 2599,
            "median": 2599,
            "max": 2599
          },
          "receive()": {
            "calls": 258,
            "min": 62,
            "mean": 62,
            "median": 62,
            "max": 62
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 7084,
            "mean": 7084,
            "median": 7084,
            "max": 7084
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23473,
            "mean": 23473,
            "median": 23473,
            "max": 23473
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2327,
            "mean": 13393,
            "median": 13393,
            "max": 24459
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7460,
            "mean": 7460,
            "median": 7460,
            "max": 7460
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 265,
            "mean": 24122,
            "median": 29225,
            "max": 37775
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45218,
            "mean": 45218,
            "median": 45218,
            "max": 45218
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1274367,
          "size": 6799
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2927,
            "mean": 2927,
            "median": 2927,
            "max": 2927
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2683,
            "mean": 2683,
            "median": 2683,
            "max": 2683
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2754,
            "mean": 2754,
            "median": 2754,
            "max": 2754
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2364,
            "mean": 5101,
            "median": 7686,
            "max": 7745
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 8210,
            "mean": 8227,
            "median": 8227,
            "max": 8245
          },
          "decimals()": {
            "calls": 20,
            "min": 355,
            "mean": 358,
            "median": 355,
            "max": 394
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30396,
            "mean": 119275,
            "median": 120747,
            "max": 120983
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30447,
            "mean": 119671,
            "median": 120786,
            "max": 131509
          },
          "name()": {
            "calls": 1,
            "min": 2725,
            "mean": 2725,
            "median": 2725,
            "max": 2725
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 8320,
            "mean": 8320,
            "median": 8320,
            "max": 8355
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7814,
            "mean": 7814,
            "median": 7814,
            "max": 7849
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24936,
            "mean": 77690,
            "median": 78148,
            "max": 92975
          },
          "symbol()": {
            "calls": 1,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5356,
            "mean": 5356,
            "median": 5356,
            "max": 5356
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 27085,
            "mean": 78474,
            "median": 79211,
            "max": 79371
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1121620,
          "size": 5319
        },
        "functions": {
          "eip712Domain()": {
            "calls": 351,
            "min": 1170,
            "mean": 1170,
            "median": 1170,
            "max": 1170
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 6128,
            "mean": 22961,
            "median": 11152,
            "max": 63413
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 122,
            "min": 6307,
            "mean": 86967,
            "median": 99269,
            "max": 221074
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 138,
            "min": 28706,
            "mean": 89124,
            "median": 63890,
            "max": 294515
          },
          "fallback()": {
            "calls": 872,
            "min": 547,
            "mean": 6777,
            "median": 3772,
            "max": 136154
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 363,
            "min": 459,
            "mean": 14418,
            "median": 14195,
            "max": 38400
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 6187,
            "mean": 6187,
            "median": 6187,
            "max": 6187
          },
          "mockId()": {
            "calls": 2,
            "min": 621,
            "mean": 621,
            "median": 621,
            "max": 621
          },
          "owner()": {
            "calls": 806,
            "min": 6028,
            "mean": 6028,
            "median": 6028,
            "max": 6028
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 1,
            "min": 67,
            "mean": 67,
            "median": 67,
            "max": 67
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5746,
            "mean": 14298,
            "median": 14320,
            "max": 22894
          },
          "state()": {
            "calls": 772,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "token()": {
            "calls": 536,
            "min": 695,
            "mean": 695,
            "median": 695,
            "max": 695
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 6130,
            "mean": 35503,
            "median": 35665,
            "max": 52765
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1140774,
          "size": 5414
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5467,
            "mean": 5467,
            "median": 5467,
            "max": 5467
          },
          "fallback()": {
            "calls": 179,
            "min": 3842,
            "mean": 13889,
            "median": 6146,
            "max": 53526
          },
          "mockId()": {
            "calls": 1,
            "min": 636,
            "mean": 636,
            "median": 636,
            "max": 636
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 16,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5904,
            "mean": 14456,
            "median": 14478,
            "max": 23052
          },
          "state()": {
            "calls": 513,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18723,
            "mean": 18723,
            "median": 18723,
            "max": 18723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 170071,
          "size": 566
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2431,
            "min": 94756,
            "mean": 95313,
            "median": 95344,
            "max": 95584
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 631674,
          "size": 2708
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2488,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26877,
            "mean": 46833,
            "median": 47081,
            "max": 47513
          },
          "balanceOf(address,uint256)": {
            "calls": 2395,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24576,
            "mean": 27529,
            "median": 25524,
            "max": 30794
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 26946,
            "mean": 47260,
            "median": 47326,
            "max": 47686
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 24137,
            "mean": 32465,
            "median": 26605,
            "max": 46529
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 402,
            "min": 25970,
            "mean": 40317,
            "median": 29002,
            "max": 61700
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24383,
            "mean": 45808,
            "median": 47172,
            "max": 47740
          },
          "name(uint256)": {
            "calls": 256,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 46060,
            "mean": 46060,
            "median": 46060,
            "max": 46060
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 949,
            "mean": 949,
            "median": 949,
            "max": 949
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1043,
            "min": 24302,
            "mean": 37377,
            "median": 30363,
            "max": 52785
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1639,
            "min": 27295,
            "mean": 38823,
            "median": 33382,
            "max": 61168
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1261904,
          "size": 5627
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1035,
            "min": 24188,
            "mean": 43213,
            "median": 48453,
            "max": 48797
          },
          "balanceOf(address)": {
            "calls": 10131,
            "min": 2766,
            "mean": 2766,
            "median": 2766,
            "max": 2766
          },
          "burn(uint256)": {
            "calls": 236,
            "min": 28407,
            "mean": 29379,
            "median": 28829,
            "max": 31506
          },
          "directApprove(address,uint256)": {
            "calls": 1028,
            "min": 24489,
            "mean": 43515,
            "median": 49313,
            "max": 49653
          },
          "directGetApproved(uint256)": {
            "calls": 1547,
            "min": 2875,
            "mean": 4895,
            "median": 5085,
            "max": 5085
          },
          "directOwnerOf(uint256)": {
            "calls": 2495,
            "min": 3070,
            "mean": 3262,
            "median": 3310,
            "max": 3310
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 631,
            "min": 59453,
            "mean": 75942,
            "median": 63342,
            "max": 129765
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 486,
            "min": 63904,
            "mean": 94945,
            "median": 64960,
            "max": 240852
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 927,
            "min": 24517,
            "mean": 41885,
            "median": 46657,
            "max": 46673
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1756,
            "min": 25580,
            "mean": 42803,
            "median": 41410,
            "max": 57978
          },
          "exists(uint256)": {
            "calls": 484,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "getApproved(uint256)": {
            "calls": 1469,
            "min": 2415,
            "mean": 4372,
            "median": 4551,
            "max": 4551
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 3305,
            "mean": 3305,
            "median": 3305,
            "max": 3313
          },
          "getExtraData(uint256)": {
            "calls": 3500,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 3129,
            "mean": 3129,
            "median": 3129,
            "max": 3129
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 3051,
            "mean": 5588,
            "median": 6321,
            "max": 7381
          },
          "mint(address,uint256)": {
            "calls": 10862,
            "min": 24509,
            "mean": 64513,
            "median": 68617,
            "max": 68985
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46863,
            "mean": 56090,
            "median": 51888,
            "max": 69356
          },
          "ownerOf(uint256)": {
            "calls": 5666,
            "min": 749,
            "mean": 2733,
            "median": 2749,
            "max": 2749
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71662,
            "mean": 82098,
            "median": 72477,
            "max": 121632
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72735,
            "mean": 99195,
            "median": 74072,
            "max": 232746
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1871,
            "min": 40974,
            "mean": 68738,
            "median": 63843,
            "max": 134171
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 538,
            "min": 64440,
            "mean": 93564,
            "median": 65905,
            "max": 241862
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1231,
            "min": 24480,
            "mean": 43216,
            "median": 46620,
            "max": 46628
          },
          "setAux(address,uint224)": {
            "calls": 751,
            "min": 28106,
            "mean": 45093,
            "median": 45198,
            "max": 45206
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1503,
            "min": 24243,
            "mean": 37439,
            "median": 44263,
            "max": 44647
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1809,
            "min": 24786,
            "mean": 42776,
            "median": 40828,
            "max": 57171
          },
          "uncheckedBurn(uint256)": {
            "calls": 2927,
            "min": 24062,
            "mean": 30477,
            "median": 31512,
            "max": 36696
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 189,
            "min": 54987,
            "mean": 55253,
            "median": 55235,
            "max": 55595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 558186,
          "size": 2370
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31198,
            "mean": 99176,
            "median": 91361,
            "max": 159424
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 267,
            "min": 275191,
            "mean": 358096,
            "median": 290343,
            "max": 3634792
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2665,
            "mean": 5666,
            "median": 4865,
            "max": 11423
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22115,
            "mean": 41288,
            "median": 44027,
            "max": 44027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 164180,
          "size": 744
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2247,
            "mean": 2247,
            "median": 2247,
            "max": 2247
          },
          "garbage()": {
            "calls": 780,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3022,
            "mean": 3026,
            "median": 3026,
            "max": 3031
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3577,
            "mean": 3577,
            "median": 3577,
            "max": 3577
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5449,
            "mean": 5455,
            "median": 5458,
            "max": 5458
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 6628,
            "mean": 6762,
            "median": 6762,
            "max": 6897
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3374,
            "mean": 3378,
            "median": 3378,
            "max": 3383
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3264,
            "mean": 3268,
            "median": 3268,
            "max": 3273
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3540,
            "mean": 3540,
            "median": 3540,
            "max": 3540
          },
          "receive()": {
            "calls": 10,
            "min": 0,
            "mean": 42009,
            "median": 21100,
            "max": 286463
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5228,
            "mean": 5232,
            "median": 5232,
            "max": 5237
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43902,
            "mean": 43915,
            "median": 43915,
            "max": 43929
          },
          "value()": {
            "calls": 2,
            "min": 5137,
            "mean": 5141,
            "median": 5141,
            "max": 5146
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 692301,
          "size": 2984
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7858,
            "min": 513,
            "mean": 4284,
            "median": 4633,
            "max": 4633
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 264,
            "min": 26781,
            "mean": 28203,
            "median": 28248,
            "max": 28248
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 30,
            "min": 26643,
            "mean": 44631,
            "median": 45403,
            "max": 59744
          },
          "guardedByOnlyRoles()": {
            "calls": 30,
            "min": 24168,
            "mean": 43959,
            "median": 46244,
            "max": 57269
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1357,
            "mean": 9227,
            "median": 10297,
            "max": 17037
          },
          "hasRole(address,uint256)": {
            "calls": 1874,
            "min": 2598,
            "mean": 2598,
            "median": 2598,
            "max": 2598
          },
          "owner()": {
            "calls": 2032,
            "min": 2478,
            "mean": 2520,
            "median": 2523,
            "max": 2523
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 267,
            "min": 2655,
            "mean": 2863,
            "median": 2718,
            "max": 4850
          },
          "roleHolderCount(uint256)": {
            "calls": 3873,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "roleHolders(uint256)": {
            "calls": 3898,
            "min": 2726,
            "mean": 3076,
            "median": 2726,
            "max": 23414
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23589,
            "mean": 43466,
            "median": 43549,
            "max": 43873
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 30,
            "min": 24420,
            "mean": 145234,
            "median": 156059,
            "max": 223178
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21566,
            "mean": 26922,
            "median": 26414,
            "max": 43850
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23855,
            "mean": 25392,
            "median": 26667,
            "max": 26667
          },
          "setOwner(address)": {
            "calls": 268,
            "min": 26437,
            "mean": 27089,
            "median": 26665,
            "max": 43765
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23905,
            "mean": 25376,
            "median": 26717,
            "max": 26717
          },
          "setRole(address,uint256,bool)": {
            "calls": 1482,
            "min": 24541,
            "mean": 60971,
            "median": 74025,
            "max": 74541
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6636,
            "min": 33773,
            "mean": 58669,
            "median": 74047,
            "max": 78963
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 112143,
          "size": 299
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getValue(uint256)": {
            "calls": 960,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setValue(uint256,uint256)": {
            "calls": 960,
            "min": 22314,
            "mean": 22314,
            "median": 22314,
            "max": 22314
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 378457,
          "size": 2916
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23373,
            "mean": 33890,
            "median": 33890,
            "max": 44407
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 191,
            "min": 27557,
            "mean": 62245,
            "median": 67621,
            "max": 90620
          },
          "isInitializing()": {
            "calls": 168,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23482,
            "mean": 23482,
            "median": 23482,
            "max": 23482
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 226,
            "min": 24508,
            "mean": 57651,
            "median": 67424,
            "max": 90603
          },
          "version()": {
            "calls": 230,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "x()": {
            "calls": 120,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 575716,
          "size": 2507
        },
        "functions": {
          "owner()": {
            "calls": 744,
            "min": 254,
            "mean": 254,
            "median": 254,
            "max": 254
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24937,
            "mean": 33687,
            "median": 24961,
            "max": 59056
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 754037,
          "size": 3383
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 24009,
            "mean": 24009,
            "median": 24009,
            "max": 24009
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26343,
            "mean": 37963,
            "median": 44211,
            "max": 46459
          },
          "owner()": {
            "calls": 1690,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 133,
            "min": 29296,
            "mean": 76655,
            "median": 68433,
            "max": 943989
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 128,
            "min": 28547,
            "mean": 54120,
            "median": 60891,
            "max": 61185
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 130,
            "min": 28839,
            "mean": 54446,
            "median": 61867,
            "max": 62285
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 258,
            "min": 28329,
            "mean": 48705,
            "median": 47723,
            "max": 64011
          },
          "rescueETH(address,uint256)": {
            "calls": 1406,
            "min": 5764,
            "mean": 32387,
            "median": 36619,
            "max": 61974
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 7251,
            "mean": 7251,
            "median": 7251,
            "max": 7251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 567123,
          "size": 2408
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 512,
            "min": 22040,
            "mean": 24552,
            "median": 24621,
            "max": 37835
          },
          "multicallBrutalized(bytes[])": {
            "calls": 263,
            "min": 280397,
            "mean": 377217,
            "median": 286951,
            "max": 3675191
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 45141,
            "mean": 45141,
            "median": 45141,
            "max": 45141
          },
          "returnsRandomizedString(string)": {
            "calls": 242,
            "min": 795,
            "mean": 1764,
            "median": 1837,
            "max": 3138
          },
          "returnsSender()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 481,
            "mean": 481,
            "median": 481,
            "max": 481
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 273,
            "mean": 273,
            "median": 273,
            "max": 273
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 816,
            "mean": 831,
            "median": 828,
            "max": 849
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 331849,
          "size": 1244
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22615,
            "mean": 22615,
            "median": 22615,
            "max": 22615
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24015,
            "mean": 28953,
            "median": 29074,
            "max": 29090
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28271,
            "mean": 28271,
            "median": 28271,
            "max": 28271
          },
          "owner()": {
            "calls": 839,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2871,
            "mean": 2873,
            "median": 2871,
            "max": 2887
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 452,
            "mean": 452,
            "median": 452,
            "max": 452
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23115,
            "mean": 23115,
            "median": 23115,
            "max": 23115
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44499,
            "mean": 44499,
            "median": 44499,
            "max": 44499
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28364,
            "mean": 28507,
            "median": 28592,
            "max": 28608
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24021,
            "mean": 25299,
            "median": 24043,
            "max": 28852
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 34042,
            "median": 23330,
            "max": 45447
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 249695,
          "size": 863
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 608778,
          "size": 2525
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22813,
            "mean": 22813,
            "median": 22813,
            "max": 22813
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24347,
            "mean": 29273,
            "median": 29406,
            "max": 29422
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24056,
            "mean": 45931,
            "median": 47999,
            "max": 48375
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25993,
            "mean": 45633,
            "median": 45971,
            "max": 46293
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2772,
            "mean": 2774,
            "median": 2772,
            "max": 2788
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2901,
            "mean": 2902,
            "median": 2901,
            "max": 2917
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28537,
            "mean": 28537,
            "median": 28537,
            "max": 28537
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 690,
            "mean": 13277,
            "median": 6990,
            "max": 47518
          },
          "owner()": {
            "calls": 830,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 3203,
            "mean": 3204,
            "median": 3203,
            "max": 3219
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 738,
            "mean": 738,
            "median": 738,
            "max": 738
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23966,
            "mean": 27336,
            "median": 26150,
            "max": 29334
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23335,
            "mean": 23335,
            "median": 23335,
            "max": 23335
          },
          "renounceRoles(uint256)": {
            "calls": 57,
            "min": 23193,
            "mean": 27467,
            "median": 28041,
            "max": 28365
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44587,
            "mean": 44587,
            "median": 44587,
            "max": 44587
          },
          "revokeRoles(address,uint256)": {
            "calls": 73,
            "min": 24188,
            "mean": 27194,
            "median": 24684,
            "max": 31400
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 480,
            "mean": 18311,
            "median": 16843,
            "max": 41668
          },
          "rolesOf(address)": {
            "calls": 2267,
            "min": 2808,
            "mean": 2810,
            "median": 2808,
            "max": 2824
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28664,
            "mean": 28797,
            "median": 28880,
            "max": 28896
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 25785,
            "mean": 37575,
            "median": 37443,
            "max": 46301
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24353,
            "mean": 25468,
            "median": 24375,
            "max": 29184
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 33265,
            "median": 23330,
            "max": 45447
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 26064,
            "mean": 46418,
            "median": 46340,
            "max": 48558
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23899,
            "mean": 44585,
            "median": 46055,
            "max": 46391
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 26114,
            "mean": 46438,
            "median": 46458,
            "max": 48607
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 354753,
          "size": 1349
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 78927,
          "size": 142
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476139,
          "size": 1990
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 23684,
            "mean": 23684,
            "median": 23684,
            "max": 23684
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 23377,
            "mean": 23377,
            "median": 23377,
            "max": 23377
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65551,
            "mean": 65551,
            "median": 65551,
            "max": 65551
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45796,
            "mean": 45796,
            "median": 45796,
            "max": 45796
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 70055,
            "mean": 70055,
            "median": 70055,
            "max": 70055
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65940,
            "mean": 65940,
            "median": 65940,
            "max": 65940
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66821,
            "mean": 66821,
            "median": 66821,
            "max": 66821
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 47037,
            "mean": 47037,
            "median": 47037,
            "max": 47037
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 57154,
            "mean": 57154,
            "median": 57154,
            "max": 57154
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 140216,
          "size": 427
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3010,
            "mean": 3010,
            "median": 3010,
            "max": 3010
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3559,
            "mean": 3559,
            "median": 3559,
            "max": 3559
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5437,
            "mean": 5437,
            "median": 5437,
            "max": 5437
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 5499,
            "mean": 5914,
            "median": 5914,
            "max": 6330
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3362,
            "mean": 3362,
            "median": 3362,
            "max": 3362
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3252,
            "mean": 3252,
            "median": 3252,
            "max": 3252
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3471,
            "mean": 3471,
            "median": 3471,
            "max": 3471
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5216,
            "mean": 5216,
            "median": 5216,
            "max": 5216
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43893,
            "mean": 43917,
            "median": 43917,
            "max": 43941
          },
          "value()": {
            "calls": 2,
            "min": 5125,
            "mean": 5125,
            "median": 5125,
            "max": 5125
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 784534,
          "size": 3412
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 653,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 258,
            "min": 27156,
            "mean": 28651,
            "median": 28660,
            "max": 29418
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 258,
            "min": 33896,
            "mean": 39986,
            "median": 40059,
            "max": 40826
          },
          "owner()": {
            "calls": 1182,
            "min": 2589,
            "mean": 2589,
            "median": 2589,
            "max": 2589
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43589,
            "mean": 43599,
            "median": 43601,
            "max": 43601
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91419,
            "mean": 111117,
            "median": 111355,
            "max": 111355
          },
          "setMaxTimedRole(uint256)": {
            "calls": 16,
            "min": 26749,
            "mean": 30203,
            "median": 27121,
            "max": 44221
          },
          "setOwner(address)": {
            "calls": 29,
            "min": 26665,
            "mean": 28433,
            "median": 26665,
            "max": 43765
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 666,
            "min": 24721,
            "mean": 50468,
            "median": 51852,
            "max": 51948
          },
          "timedRoleActive(address,uint256)": {
            "calls": 716,
            "min": 2749,
            "mean": 2749,
            "median": 2749,
            "max": 2749
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 245825,
          "size": 939
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3101,
            "mean": 3117,
            "median": 3116,
            "max": 3138
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 3650,
            "mean": 3669,
            "median": 3670,
            "max": 3687
          },
          "getArgUint256(uint256)": {
            "calls": 13,
            "min": 5528,
            "mean": 5546,
            "median": 5543,
            "max": 5565
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 9753,
            "mean": 10716,
            "median": 10873,
            "max": 11461
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3453,
            "mean": 3469,
            "median": 3468,
            "max": 3490
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3343,
            "mean": 3359,
            "median": 3358,
            "max": 3380
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 3743,
            "mean": 3801,
            "median": 3805,
            "max": 3853
          },
          "initialize(address)": {
            "calls": 8,
            "min": 22470,
            "mean": 22470,
            "median": 22470,
            "max": 22470
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 6,
            "min": 357,
            "mean": 4495,
            "median": 5317,
            "max": 5344
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 22304,
            "mean": 40392,
            "median": 43999,
            "max": 44045
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2785,
            "mean": 9824,
            "median": 5472,
            "max": 32241
          },
          "value()": {
            "calls": 6,
            "min": 2247,
            "mean": 4734,
            "median": 5226,
            "max": 5253
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 350610,
          "size": 1217
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1666,
            "min": 508,
            "mean": 1433,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 267916,
          "size": 836
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 508,
            "mean": 2502,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 519857,
          "size": 2000
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 748,
            "mean": 748,
            "median": 748,
            "max": 748
          },
          "balanceOf(address)": {
            "calls": 2825,
            "min": 530,
            "mean": 1617,
            "median": 2530,
            "max": 2530
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24338,
            "mean": 63076,
            "median": 66602,
            "max": 114433
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 274080,
          "size": 866
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1028,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 355812,
          "size": 1241
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1674,
            "min": 508,
            "mean": 1427,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 268132,
          "size": 837
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1027,
            "min": 508,
            "mean": 2502,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 265466,
          "size": 825
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 514,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 270930,
          "size": 1175
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24490,
            "mean": 74290,
            "median": 36486,
            "max": 118229
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 619,
            "mean": 619,
            "median": 619,
            "max": 619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 98033,
          "size": 343
        },
        "functions": {
          "fallback()": {
            "calls": 7078,
            "min": 2846,
            "mean": 17065,
            "median": 9994,
            "max": 313248
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1047406,
          "size": 4673
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "cancel(bytes32)": {
            "calls": 21,
            "min": 25522,
            "mean": 25716,
            "median": 25534,
            "max": 26308
          },
          "execute(bytes32,bytes)": {
            "calls": 269,
            "min": 28507,
            "mean": 43025,
            "median": 44937,
            "max": 95676
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2641,
            "mean": 2641,
            "median": 2641,
            "max": 2641
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23354,
            "mean": 307507,
            "median": 378234,
            "max": 378234
          },
          "minDelay()": {
            "calls": 228,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "operationState(bytes32)": {
            "calls": 932,
            "min": 2577,
            "mean": 2577,
            "median": 2577,
            "max": 2577
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 28700,
            "mean": 54738,
            "median": 55784,
            "max": 58278
          },
          "readyTimestamp(bytes32)": {
            "calls": 703,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 24152,
            "mean": 33816,
            "median": 24164,
            "max": 76119
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 636157,
          "size": 2726
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "decimals()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deposit()": {
            "calls": 546,
            "min": 27568,
            "mean": 65208,
            "median": 67368,
            "max": 67368
          },
          "name()": {
            "calls": 1,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "receive()": {
            "calls": 288,
            "min": 27420,
            "mean": 63836,
            "median": 67220,
            "max": 67220
          },
          "symbol()": {
            "calls": 1,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "withdraw(uint256)": {
            "calls": 278,
            "min": 27990,
            "mean": 39690,
            "median": 40314,
            "max": 40434
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 473250,
          "size": 1971
        },
        "functions": {
          "adminOf(address)": {
            "calls": 484,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24321,
            "mean": 26533,
            "median": 26533,
            "max": 28746
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22297,
            "mean": 55060,
            "median": 22321,
            "max": 126390
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105837,
            "mean": 159374,
            "median": 159736,
            "max": 159820
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 24122,
            "mean": 144003,
            "median": 160039,
            "max": 160213
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 736,
            "mean": 736,
            "median": 736,
            "max": 736
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24320,
            "mean": 28040,
            "median": 24332,
            "max": 33616
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35652,
            "mean": 51359,
            "median": 51359,
            "max": 67067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 237303,
          "size": 997
        },
        "functions": {
          "implementation()": {
            "calls": 4912,
            "min": 53,
            "mean": 2287,
            "median": 2300,
            "max": 2300
          },
          "owner()": {
            "calls": 479,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "renounceOwnership()": {
            "calls": 44,
            "min": 23125,
            "mean": 23322,
            "median": 23348,
            "max": 23348
          },
          "transferOwnership(address)": {
            "calls": 153,
            "min": 23642,
            "mean": 27022,
            "median": 28473,
            "max": 28473
          },
          "upgradeTo(address)": {
            "calls": 95,
            "min": 23737,
            "mean": 25738,
            "median": 23827,
            "max": 32627
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2701228,
          "size": 13421
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 89180,
            "mean": 38938244,
            "median": 898508,
            "max": 96808197
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4245782,
          "size": 21134
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 484,
            "mean": 484,
            "median": 484,
            "max": 484
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1532,
            "mean": 1532,
            "median": 1532,
            "max": 1532
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 423,
            "mean": 423,
            "median": 423,
            "max": 423
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1315,
            "mean": 1315,
            "median": 1315,
            "max": 1315
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 470,
            "mean": 470,
            "median": 470,
            "max": 470
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 449,
            "mean": 449,
            "median": 449,
            "max": 449
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 467,
            "mean": 467,
            "median": 467,
            "max": 467
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 439,
            "mean": 439,
            "median": 439,
            "max": 439
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 869,
            "mean": 869,
            "median": 869,
            "max": 869
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 466,
            "mean": 466,
            "median": 466,
            "max": 466
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 814,
            "mean": 814,
            "median": 814,
            "max": 814
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 367694,
          "size": 1336
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 137,
            "min": 67730,
            "mean": 67972,
            "median": 68102,
            "max": 68102
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 196064,
          "size": 691
        },
        "functions": {
          "generate(bytes)": {
            "calls": 119,
            "min": 0,
            "mean": 2447,
            "median": 1490,
            "max": 71654
          },
          "next(uint256)": {
            "calls": 237,
            "min": 362,
            "mean": 362,
            "median": 362,
            "max": 362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 2627137,
          "size": 13051
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1442,
            "mean": 1442,
            "median": 1442,
            "max": 1442
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3510622,
          "size": 17463
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 29,
            "min": 854,
            "mean": 929,
            "median": 931,
            "max": 970
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 29,
            "min": 626290,
            "mean": 627384,
            "median": 627192,
            "max": 628561
          },
          "recover(bytes32,bytes)": {
            "calls": 145,
            "min": 22632,
            "mean": 27242,
            "median": 26843,
            "max": 30521
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 39,
            "min": 3724,
            "mean": 25024,
            "median": 26215,
            "max": 26324
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 283,
            "min": 25988,
            "mean": 26256,
            "median": 26360,
            "max": 26489
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 132,
            "min": 651778,
            "mean": 831301,
            "median": 653300,
            "max": 4129621
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 37,
            "min": 651460,
            "mean": 658939,
            "median": 652434,
            "max": 890643
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 283,
            "min": 651289,
            "mean": 763732,
            "median": 652744,
            "max": 4672579
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 145,
            "min": 23151,
            "mean": 30371,
            "median": 30563,
            "max": 30575
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 39,
            "min": 3679,
            "mean": 24996,
            "median": 26267,
            "max": 26279
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 283,
            "min": 26106,
            "mean": 26361,
            "median": 26478,
            "max": 26490
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 132,
            "min": 655502,
            "mean": 727989,
            "median": 657103,
            "max": 3733504
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 37,
            "min": 651290,
            "mean": 659447,
            "median": 652544,
            "max": 905499
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 283,
            "min": 651504,
            "mean": 753685,
            "median": 652983,
            "max": 4906533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 519796,
          "size": 2190
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2664,
            "mean": 6143,
            "median": 7209,
            "max": 9447
          },
          "batchData()": {
            "calls": 520,
            "min": 2921,
            "mean": 188049,
            "median": 3100,
            "max": 8413439
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "batchIds()": {
            "calls": 520,
            "min": 2684,
            "mean": 6162,
            "median": 7228,
            "max": 9466
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "from()": {
            "calls": 512,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "id()": {
            "calls": 512,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "mintData()": {
            "calls": 512,
            "min": 2944,
            "mean": 230336,
            "median": 3123,
            "max": 8870927
          },
          "operator()": {
            "calls": 512,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1674586,
          "size": 7527
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62999,
            "mean": 63131,
            "median": 63227,
            "max": 63235
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 59176,
            "mean": 59308,
            "median": 59404,
            "max": 59412
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 50547,
            "mean": 52772,
            "median": 50547,
            "max": 121747
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62303,
            "mean": 62435,
            "median": 62531,
            "max": 62535
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49633,
            "mean": 63258,
            "median": 59162,
            "max": 76030
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 337462,
          "size": 1377
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 35,
            "min": 51163,
            "mean": 51394,
            "median": 51391,
            "max": 51751
          },
          "burn(address,uint256)": {
            "calls": 2,
            "min": 36286,
            "mean": 36286,
            "median": 36286,
            "max": 36286
          },
          "mint(address,uint256)": {
            "calls": 23,
            "min": 61599,
            "mean": 78283,
            "median": 62127,
            "max": 96363
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 4817161,
          "size": 23987
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24739,
            "mean": 50338,
            "median": 50073,
            "max": 74307
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 298541,
          "size": 1164
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 251,
            "mean": 1220,
            "median": 251,
            "max": 3160
          },
          "data()": {
            "calls": 257,
            "min": 2920,
            "mean": 3346,
            "median": 2920,
            "max": 11636
          },
          "datahash()": {
            "calls": 657,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25445,
            "mean": 32082,
            "median": 25445,
            "max": 134182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 7200952,
          "size": 35888
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22251,
            "mean": 22633,
            "median": 22539,
            "max": 23428
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22295,
            "mean": 22607,
            "median": 22511,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 276053,
          "size": 1060
        },
        "functions": {
          "datahash()": {
            "calls": 377,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 305797,
          "size": 1200
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2898,
            "mean": 4431,
            "median": 2898,
            "max": 11614
          },
          "from()": {
            "calls": 1024,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "id()": {
            "calls": 1024,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "operator()": {
            "calls": 1024,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1429297,
          "size": 6401
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 405,
            "mean": 405,
            "median": 405,
            "max": 405
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 62171,
            "mean": 63785,
            "median": 62183,
            "max": 113483
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 58427,
            "mean": 59085,
            "median": 58643,
            "max": 75755
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 65506,
            "mean": 70049,
            "median": 70192,
            "max": 70306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2423296,
          "size": 12033
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 462,
            "min": 828,
            "mean": 847,
            "median": 840,
            "max": 1023
          },
          "returnsHash(bytes)": {
            "calls": 439,
            "min": 744,
            "mean": 764,
            "median": 756,
            "max": 936
          },
          "revertsWithCustomError()": {
            "calls": 8,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 888624,
          "size": 4368
        },
        "functions": {
          "get(address)": {
            "calls": 506,
            "min": 2586,
            "mean": 5899,
            "median": 5899,
            "max": 9212
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 3836641,
          "size": 19091
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 172,
            "min": 21813,
            "mean": 45860,
            "median": 44241,
            "max": 142311
          },
          "addToBytes32Set(bytes32)": {
            "calls": 176,
            "min": 21747,
            "mean": 47974,
            "median": 46399,
            "max": 161544
          },
          "addressSetAt(uint256)": {
            "calls": 19,
            "min": 4856,
            "mean": 5529,
            "median": 4856,
            "max": 9122
          },
          "addressSetContains(address)": {
            "calls": 155,
            "min": 535,
            "mean": 6986,
            "median": 7085,
            "max": 7093
          },
          "bytes32SetAt(uint256)": {
            "calls": 12,
            "min": 4850,
            "mean": 6801,
            "median": 6976,
            "max": 11242
          },
          "bytes32SetContains(bytes32)": {
            "calls": 169,
            "min": 450,
            "mean": 8814,
            "median": 9070,
            "max": 9070
          },
          "removeFromAddressSet(address)": {
            "calls": 187,
            "min": 21790,
            "mean": 28202,
            "median": 28476,
            "max": 28476
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 178,
            "min": 21726,
            "mean": 30396,
            "median": 30630,
            "max": 30630
          },
          "uint8SetAt(uint256)": {
            "calls": 18,
            "min": 2490,
            "mean": 2523,
            "median": 2490,
            "max": 3094
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26881,
            "mean": 50169,
            "median": 47017,
            "max": 142883
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28776,
            "mean": 54002,
            "median": 49019,
            "max": 161830
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24367,
            "mean": 28359,
            "median": 27540,
            "max": 44564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 9750780,
          "size": 48615
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 467,
            "mean": 508,
            "median": 511,
            "max": 511
          },
          "divWad(uint256,uint256)": {
            "calls": 94,
            "min": 456,
            "mean": 456,
            "median": 456,
            "max": 456
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 465,
            "mean": 534,
            "median": 568,
            "max": 568
          },
          "divWadUp(uint256,uint256)": {
            "calls": 96,
            "min": 457,
            "mean": 457,
            "median": 457,
            "max": 457
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 406,
            "mean": 406,
            "median": 406,
            "max": 406
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 320,
            "min": 592,
            "mean": 616,
            "median": 592,
            "max": 936
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 592,
            "mean": 611,
            "median": 609,
            "max": 706
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 629,
            "mean": 631,
            "median": 629,
            "max": 965
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 445,
            "mean": 445,
            "median": 445,
            "max": 445
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 501,
            "mean": 501,
            "median": 501,
            "max": 501
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 481,
            "mean": 510,
            "median": 525,
            "max": 525
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 466,
            "mean": 509,
            "median": 550,
            "max": 550
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 489,
            "mean": 548,
            "median": 598,
            "max": 598
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 488,
            "mean": 550,
            "median": 598,
            "max": 598
          },
          "mulWad(uint256,uint256)": {
            "calls": 114,
            "min": 436,
            "mean": 436,
            "median": 436,
            "max": 436
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 464,
            "mean": 519,
            "median": 567,
            "max": 567
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 122,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 677,
            "mean": 677,
            "median": 677,
            "max": 677
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 702,
            "mean": 1446,
            "median": 1446,
            "max": 2191
          },
          "sDivWad(int256,int256)": {
            "calls": 62,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 528,
            "mean": 644,
            "median": 677,
            "max": 677
          },
          "sMulWad(int256,int256)": {
            "calls": 98,
            "min": 479,
            "mean": 479,
            "median": 479,
            "max": 479
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 512,
            "mean": 643,
            "median": 701,
            "max": 701
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 7467381,
          "size": 37218
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 10553,
            "mean": 12929,
            "median": 12959,
            "max": 18349
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 10696,
            "mean": 19470,
            "median": 21832,
            "max": 22037
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 10660,
            "mean": 14846,
            "median": 13127,
            "max": 21860
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 979,
            "mean": 3249,
            "median": 1335,
            "max": 9987
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 10713,
            "mean": 14487,
            "median": 14209,
            "max": 23361
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1750734,
          "size": 8674
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 1647422,
          "size": 8158
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23799,
            "mean": 33892,
            "median": 33892,
            "max": 43985
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26756,
            "mean": 35286,
            "median": 35286,
            "max": 43817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 2759297,
          "size": 13711
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 529,
            "min": 23479,
            "mean": 24451,
            "median": 24103,
            "max": 27327
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 25286,
            "mean": 27684,
            "median": 26798,
            "max": 474878
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28401,
            "mean": 28973,
            "median": 28906,
            "max": 30116
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 25111,
            "mean": 26522,
            "median": 26747,
            "max": 27483
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 273,
            "min": 3005,
            "mean": 738896,
            "median": 646313,
            "max": 4583049
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2359822,
          "size": 11716
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 107901,
            "mean": 1314942,
            "median": 919750,
            "max": 83524431
          },
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 721,
            "mean": 725,
            "median": 721,
            "max": 733
          },
          "getArgUint256(uint256)": {
            "calls": 9,
            "min": 2726,
            "mean": 2726,
            "median": 2726,
            "max": 2726
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 40303,
            "mean": 50258,
            "median": 47353,
            "max": 63119
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 397,
            "mean": 397,
            "median": 397,
            "max": 397
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 420,
            "mean": 420,
            "median": 420,
            "max": 420
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 2150,
            "mean": 2568,
            "median": 2440,
            "max": 3116
          },
          "revertWithError()": {
            "calls": 3,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 22377,
            "mean": 22377,
            "median": 22377,
            "max": 22377
          },
          "value()": {
            "calls": 1033,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 182699,
          "size": 628
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44806,
            "mean": 45408,
            "median": 45190,
            "max": 46610
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 942676,
          "size": 4638
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 388,
            "min": 742,
            "mean": 949,
            "median": 1053,
            "max": 1077
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 8960342,
          "size": 44670
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 18,
            "min": 3112,
            "mean": 3112,
            "median": 3112,
            "max": 3112
          },
          "argsOnClone(address,uint256)": {
            "calls": 14,
            "min": 3147,
            "mean": 3147,
            "median": 3147,
            "max": 3147
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 12,
            "min": 3288,
            "mean": 3288,
            "median": 3288,
            "max": 3288
          },
          "argsOnERC1967(address)": {
            "calls": 16,
            "min": 3130,
            "mean": 3130,
            "median": 3130,
            "max": 3130
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 6,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 5,
            "min": 3332,
            "mean": 3332,
            "median": 3332,
            "max": 3332
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 3,
            "min": 3088,
            "mean": 3088,
            "median": 3088,
            "max": 3088
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 3,
            "min": 3103,
            "mean": 3103,
            "median": 3103,
            "max": 3103
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 6,
            "min": 3307,
            "mean": 3307,
            "median": 3307,
            "max": 3307
          },
          "argsOnERC1967I(address)": {
            "calls": 6,
            "min": 3065,
            "mean": 3065,
            "median": 3065,
            "max": 3065
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 4,
            "min": 3102,
            "mean": 3102,
            "median": 3102,
            "max": 3102
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 4,
            "min": 3285,
            "mean": 3285,
            "median": 3285,
            "max": 3285
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 6,
            "min": 3087,
            "mean": 3087,
            "median": 3087,
            "max": 3087
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 5,
            "min": 3101,
            "mean": 3101,
            "median": 3101,
            "max": 3101
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 2,
            "min": 3330,
            "mean": 9800,
            "median": 9800,
            "max": 16270
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 55,
            "min": 36196,
            "mean": 45493,
            "median": 36228,
            "max": 56742
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 898,
            "mean": 906,
            "median": 911,
            "max": 914
          },
          "clone(address)": {
            "calls": 257,
            "min": 86093,
            "mean": 86093,
            "median": 86093,
            "max": 86093
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 70090,
            "mean": 2221641,
            "median": 73857,
            "max": 96832760
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 265,
            "min": 70809,
            "mean": 5511953,
            "median": 75454,
            "max": 96826044
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 86729,
            "mean": 119372,
            "median": 87089,
            "max": 642139
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 264,
            "min": 0,
            "mean": 296207,
            "median": 76901,
            "max": 11466595
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 262,
            "min": 0,
            "mean": 401783,
            "median": 101553,
            "max": 13523620
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 115400,
            "mean": 168653,
            "median": 115772,
            "max": 4242208
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 359,
            "min": 0,
            "mean": 292643,
            "median": 106072,
            "max": 11834114
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102557,
            "mean": 194688,
            "median": 102929,
            "max": 4752830
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 367480,
            "median": 106198,
            "max": 12329058
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 119706,
            "mean": 184155,
            "median": 120078,
            "max": 4745245
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 363,
            "min": 0,
            "mean": 377474,
            "median": 106374,
            "max": 13708941
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 103547,
            "mean": 154693,
            "median": 103919,
            "max": 3693202
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 270,
            "min": 96290,
            "mean": 8243630,
            "median": 100349,
            "max": 96827480
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 391,
            "min": 95284,
            "mean": 135182,
            "median": 112506,
            "max": 667918
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 452,
            "min": 100354,
            "mean": 17023772,
            "median": 105731,
            "max": 96827643
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99533,
            "mean": 117157,
            "median": 99893,
            "max": 655039
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 266,
            "min": 100556,
            "mean": 7180719,
            "median": 104332,
            "max": 96804580
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 636,
            "min": 99543,
            "mean": 163382,
            "median": 100009,
            "max": 3030002
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 456,
            "min": 83690,
            "mean": 17377993,
            "median": 105843,
            "max": 96827318
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 100532,
            "mean": 148481,
            "median": 100904,
            "max": 656143
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 95391,
            "mean": 2237494,
            "median": 98740,
            "max": 96785741
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98836,
            "mean": 142399,
            "median": 98930,
            "max": 4781769
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 124,
            "min": 81931,
            "mean": 176437,
            "median": 102829,
            "max": 4565643
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115914,
            "mean": 115914,
            "median": 115914,
            "max": 115914
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 99721,
            "mean": 2980188,
            "median": 102428,
            "max": 96818547
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99836,
            "mean": 145255,
            "median": 99930,
            "max": 2458868
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 134,
            "min": 100526,
            "mean": 5335211,
            "median": 102540,
            "max": 96828801
          },
          "revertWithError()": {
            "calls": 7135,
            "min": 86,
            "mean": 2399,
            "median": 2411,
            "max": 2411
          },
          "setValue(uint256)": {
            "calls": 7494,
            "min": 445,
            "mean": 22314,
            "median": 22445,
            "max": 22445
          },
          "value()": {
            "calls": 21044,
            "min": 86,
            "mean": 2423,
            "median": 2430,
            "max": 2430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2612722,
          "size": 12979
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 664,
            "mean": 664,
            "median": 664,
            "max": 664
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 646,
            "mean": 646,
            "median": 646,
            "max": 646
          },
          "decodeBatch(bytes)": {
            "calls": 59,
            "min": 1332,
            "mean": 2651,
            "median": 2650,
            "max": 5530
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 30,
            "min": 1491,
            "mean": 1688,
            "median": 1679,
            "max": 2026
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 656,
            "min": 706,
            "mean": 2136,
            "median": 1117,
            "max": 6391
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 1043,
            "mean": 1060,
            "median": 1055,
            "max": 1091
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 1084,
            "mean": 1104,
            "median": 1096,
            "max": 1132
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 134,
            "min": 30485,
            "mean": 39395,
            "median": 37876,
            "max": 62237
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 648196,
            "mean": 748038,
            "median": 654041,
            "max": 4554599
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 2305362,
          "size": 11444
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2595,
            "mean": 2595,
            "median": 2595,
            "max": 2595
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2624,
            "mean": 2624,
            "median": 2624,
            "max": 2624
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 44062,
            "mean": 44062,
            "median": 44062,
            "max": 44062
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 44031,
            "mean": 44031,
            "median": 44031,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 2830582,
          "size": 14067
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2429,
            "mean": 3526,
            "median": 2429,
            "max": 4771
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23803,
            "mean": 23826,
            "median": 23839,
            "max": 23839
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21554,
            "mean": 43412,
            "median": 43809,
            "max": 43809
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23690,
            "mean": 23985,
            "median": 24062,
            "max": 24062
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 4999613,
          "size": 24898
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24600,
            "mean": 37993,
            "median": 27749,
            "max": 91356
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24912,
            "mean": 45695,
            "median": 29693,
            "max": 129914
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibStorage.t.sol:LibStorageTest",
        "deployment": {
          "gas": 236178,
          "size": 1067
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3259,
            "mean": 3273,
            "median": 3272,
            "max": 3290
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 3606,
            "mean": 3620,
            "median": 3619,
            "max": 3637
          },
          "getArgUint256(uint256)": {
            "calls": 12,
            "min": 5596,
            "mean": 5610,
            "median": 5609,
            "max": 5627
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 10816,
            "mean": 11470,
            "median": 11398,
            "max": 12271
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3267,
            "mean": 3281,
            "median": 3280,
            "max": 3298
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3290,
            "mean": 3304,
            "median": 3303,
            "max": 3321
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 3619,
            "mean": 3659,
            "median": 3655,
            "max": 3710
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5276,
            "mean": 5289,
            "median": 5288,
            "max": 5307
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 43960,
            "mean": 43974,
            "median": 43973,
            "max": 43991
          },
          "value()": {
            "calls": 4,
            "min": 5204,
            "mean": 5217,
            "median": 5216,
            "max": 5235
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 10017885,
          "size": 49948
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 873,
            "mean": 881,
            "median": 879,
            "max": 891
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 603,
            "mean": 603,
            "median": 603,
            "max": 603
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 818,
            "mean": 818,
            "median": 818,
            "max": 818
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 229928,
          "size": 845
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27606,
            "mean": 52003,
            "median": 51118,
            "max": 82868
          },
          "x()": {
            "calls": 6,
            "min": 3054,
            "mean": 10545,
            "median": 6193,
            "max": 37502
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 176259,
          "size": 597
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27392,
            "mean": 42061,
            "median": 32834,
            "max": 82275
          },
          "x()": {
            "calls": 6,
            "min": 2666,
            "mean": 9570,
            "median": 4885,
            "max": 37430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2248696,
          "size": 11161
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22551,
            "mean": 26800,
            "median": 28004,
            "max": 29560
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 25379,
            "mean": 33013,
            "median": 33983,
            "max": 61268
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1550517,
          "size": 7674
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "name()": {
            "calls": 256,
            "min": 5027,
            "mean": 6904,
            "median": 5251,
            "max": 13786
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 356
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 5039,
            "mean": 6930,
            "median": 5253,
            "max": 13851
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "returnsString()": {
            "calls": 512,
            "min": 5031,
            "mean": 7065,
            "median": 5255,
            "max": 13796
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "reverts()": {
            "calls": 258,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "symbol()": {
            "calls": 256,
            "min": 5048,
            "mean": 6925,
            "median": 5272,
            "max": 13807
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 3042239,
          "size": 15124
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 128,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "enqueue(uint256,uint256)": {
            "calls": 395,
            "min": 23944,
            "mean": 51679,
            "median": 66496,
            "max": 66664
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 131,
            "min": 722,
            "mean": 722,
            "median": 722,
            "max": 722
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 124,
            "min": 776,
            "mean": 777,
            "median": 776,
            "max": 779
          },
          "pop()": {
            "calls": 73,
            "min": 23548,
            "mean": 23548,
            "median": 23548,
            "max": 23548
          },
          "replace(uint256)": {
            "calls": 55,
            "min": 23789,
            "mean": 24101,
            "median": 24161,
            "max": 24161
          },
          "root()": {
            "calls": 126,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2497386,
          "size": 12403
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22528,
            "mean": 23441,
            "median": 23992,
            "max": 24016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 594537,
          "size": 2502
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 20,
            "min": 3532,
            "mean": 3583,
            "median": 3586,
            "max": 3621
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 11,
            "min": 3886,
            "mean": 3932,
            "median": 3943,
            "max": 3968
          },
          "getArgUint256(uint256)": {
            "calls": 42,
            "min": 5869,
            "mean": 5916,
            "median": 5916,
            "max": 5958
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 20,
            "min": 23705,
            "mean": 26430,
            "median": 26797,
            "max": 28715
          },
          "getArgUint64(uint256)": {
            "calls": 20,
            "min": 3540,
            "mean": 3591,
            "median": 3594,
            "max": 3629
          },
          "getArgUint8(uint256)": {
            "calls": 20,
            "min": 3563,
            "mean": 3614,
            "median": 3617,
            "max": 3652
          },
          "getCalldataHash()": {
            "calls": 11,
            "min": 4444,
            "mean": 4565,
            "median": 4574,
            "max": 4689
          },
          "revertWithError()": {
            "calls": 21,
            "min": 5549,
            "mean": 5674,
            "median": 5606,
            "max": 7177
          },
          "setValue(uint256)": {
            "calls": 21,
            "min": 44239,
            "mean": 44518,
            "median": 44401,
            "max": 46285
          },
          "value()": {
            "calls": 21,
            "min": 5477,
            "mean": 5606,
            "median": 5534,
            "max": 7191
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 2640552,
          "size": 13118
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 426,
            "mean": 426,
            "median": 426,
            "max": 426
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21621,
            "mean": 24121,
            "median": 24121,
            "max": 26621
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 24014,
            "mean": 24342,
            "median": 24345,
            "max": 24345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 858369,
          "size": 4339
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 23,
            "min": 3774,
            "mean": 3835,
            "median": 3835,
            "max": 3930
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 14,
            "min": 4121,
            "mean": 4194,
            "median": 4189,
            "max": 4277
          },
          "getArgUint256(uint256)": {
            "calls": 51,
            "min": 6111,
            "mean": 6178,
            "median": 6176,
            "max": 6267
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 23,
            "min": 34990,
            "mean": 38201,
            "median": 37985,
            "max": 42195
          },
          "getArgUint64(uint256)": {
            "calls": 23,
            "min": 3782,
            "mean": 3843,
            "median": 3843,
            "max": 3938
          },
          "getArgUint8(uint256)": {
            "calls": 23,
            "min": 3805,
            "mean": 3866,
            "median": 3866,
            "max": 3961
          },
          "getCalldataHash()": {
            "calls": 14,
            "min": 5141,
            "mean": 5355,
            "median": 5339,
            "max": 5596
          },
          "revertWithError()": {
            "calls": 25,
            "min": 5082,
            "mean": 5874,
            "median": 5852,
            "max": 7177
          },
          "setValue(uint256)": {
            "calls": 25,
            "min": 43830,
            "mean": 44609,
            "median": 44534,
            "max": 46285
          },
          "value()": {
            "calls": 25,
            "min": 5096,
            "mean": 5809,
            "median": 5780,
            "max": 7191
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1810005,
          "size": 8970
        },
        "functions": {
          "read(address)": {
            "calls": 164,
            "min": 520,
            "mean": 3091,
            "median": 3020,
            "max": 3437
          },
          "read(address,uint256)": {
            "calls": 98,
            "min": 552,
            "mean": 3182,
            "median": 3052,
            "max": 3502
          },
          "read(address,uint256,uint256)": {
            "calls": 62,
            "min": 3286,
            "mean": 3831,
            "median": 3677,
            "max": 24182
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468528,
            "mean": 48556581,
            "median": 48556581,
            "max": 83644634
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 9079161,
          "size": 45263
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 26,
            "min": 381,
            "mean": 435,
            "median": 455,
            "max": 455
          },
          "toInt104(uint256)": {
            "calls": 18,
            "min": 396,
            "mean": 438,
            "median": 472,
            "max": 472
          },
          "toInt112(int256)": {
            "calls": 22,
            "min": 381,
            "mean": 434,
            "median": 455,
            "max": 455
          },
          "toInt112(uint256)": {
            "calls": 13,
            "min": 417,
            "mean": 452,
            "median": 417,
            "max": 493
          },
          "toInt120(int256)": {
            "calls": 22,
            "min": 407,
            "mean": 454,
            "median": 481,
            "max": 481
          },
          "toInt120(uint256)": {
            "calls": 17,
            "min": 424,
            "mean": 446,
            "median": 424,
            "max": 500
          },
          "toInt128(int256)": {
            "calls": 36,
            "min": 430,
            "mean": 479,
            "median": 504,
            "max": 504
          },
          "toInt128(uint256)": {
            "calls": 16,
            "min": 381,
            "mean": 419,
            "median": 419,
            "max": 457
          },
          "toInt136(int256)": {
            "calls": 20,
            "min": 430,
            "mean": 485,
            "median": 504,
            "max": 504
          },
          "toInt136(uint256)": {
            "calls": 31,
            "min": 444,
            "mean": 470,
            "median": 444,
            "max": 520
          },
          "toInt144(int256)": {
            "calls": 20,
            "min": 429,
            "mean": 488,
            "median": 503,
            "max": 503
          },
          "toInt144(uint256)": {
            "calls": 9,
            "min": 445,
            "mean": 495,
            "median": 521,
            "max": 521
          },
          "toInt152(int256)": {
            "calls": 36,
            "min": 431,
            "mean": 488,
            "median": 505,
            "max": 505
          },
          "toInt152(uint256)": {
            "calls": 19,
            "min": 401,
            "mean": 437,
            "median": 401,
            "max": 477
          },
          "toInt16(int256)": {
            "calls": 44,
            "min": 424,
            "mean": 471,
            "median": 498,
            "max": 498
          },
          "toInt16(uint256)": {
            "calls": 27,
            "min": 374,
            "mean": 388,
            "median": 374,
            "max": 450
          },
          "toInt160(int256)": {
            "calls": 38,
            "min": 408,
            "mean": 466,
            "median": 482,
            "max": 482
          },
          "toInt160(uint256)": {
            "calls": 12,
            "min": 423,
            "mean": 467,
            "median": 499,
            "max": 499
          },
          "toInt168(int256)": {
            "calls": 48,
            "min": 408,
            "mean": 463,
            "median": 482,
            "max": 482
          },
          "toInt168(uint256)": {
            "calls": 7,
            "min": 422,
            "mean": 487,
            "median": 498,
            "max": 498
          },
          "toInt176(int256)": {
            "calls": 18,
            "min": 387,
            "mean": 436,
            "median": 461,
            "max": 461
          },
          "toInt176(uint256)": {
            "calls": 15,
            "min": 424,
            "mean": 444,
            "median": 424,
            "max": 500
          },
          "toInt184(int256)": {
            "calls": 40,
            "min": 407,
            "mean": 468,
            "median": 481,
            "max": 481
          },
          "toInt184(uint256)": {
            "calls": 17,
            "min": 445,
            "mean": 480,
            "median": 445,
            "max": 521
          },
          "toInt192(int256)": {
            "calls": 32,
            "min": 388,
            "mean": 445,
            "median": 462,
            "max": 462
          },
          "toInt192(uint256)": {
            "calls": 14,
            "min": 424,
            "mean": 478,
            "median": 500,
            "max": 500
          },
          "toInt200(int256)": {
            "calls": 24,
            "min": 387,
            "mean": 436,
            "median": 461,
            "max": 461
          },
          "toInt200(uint256)": {
            "calls": 18,
            "min": 446,
            "mean": 488,
            "median": 522,
            "max": 522
          },
          "toInt208(int256)": {
            "calls": 34,
            "min": 429,
            "mean": 489,
            "median": 503,
            "max": 503
          },
          "toInt208(uint256)": {
            "calls": 18,
            "min": 424,
            "mean": 466,
            "median": 500,
            "max": 500
          },
          "toInt216(int256)": {
            "calls": 34,
            "min": 385,
            "mean": 448,
            "median": 459,
            "max": 459
          },
          "toInt216(uint256)": {
            "calls": 15,
            "min": 423,
            "mean": 468,
            "median": 499,
            "max": 499
          },
          "toInt224(int256)": {
            "calls": 44,
            "min": 432,
            "mean": 495,
            "median": 506,
            "max": 506
          },
          "toInt224(uint256)": {
            "calls": 14,
            "min": 445,
            "mean": 477,
            "median": 445,
            "max": 521
          },
          "toInt232(int256)": {
            "calls": 38,
            "min": 411,
            "mean": 467,
            "median": 485,
            "max": 485
          },
          "toInt232(uint256)": {
            "calls": 16,
            "min": 423,
            "mean": 484,
            "median": 499,
            "max": 499
          },
          "toInt24(int256)": {
            "calls": 30,
            "min": 380,
            "mean": 424,
            "median": 454,
            "max": 454
          },
          "toInt24(uint256)": {
            "calls": 20,
            "min": 438,
            "mean": 457,
            "median": 438,
            "max": 514
          },
          "toInt240(int256)": {
            "calls": 38,
            "min": 386,
            "mean": 454,
            "median": 460,
            "max": 460
          },
          "toInt240(uint256)": {
            "calls": 20,
            "min": 402,
            "mean": 451,
            "median": 478,
            "max": 478
          },
          "toInt248(int256)": {
            "calls": 38,
            "min": 389,
            "mean": 445,
            "median": 452,
            "max": 452
          },
          "toInt248(uint256)": {
            "calls": 22,
            "min": 401,
            "mean": 439,
            "median": 466,
            "max": 466
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 372,
            "mean": 429,
            "median": 432,
            "max": 432
          },
          "toInt32(int256)": {
            "calls": 30,
            "min": 403,
            "mean": 444,
            "median": 477,
            "max": 477
          },
          "toInt32(uint256)": {
            "calls": 29,
            "min": 416,
            "mean": 429,
            "median": 416,
            "max": 492
          },
          "toInt40(int256)": {
            "calls": 18,
            "min": 381,
            "mean": 422,
            "median": 455,
            "max": 455
          },
          "toInt40(uint256)": {
            "calls": 21,
            "min": 373,
            "mean": 391,
            "median": 373,
            "max": 449
          },
          "toInt48(int256)": {
            "calls": 30,
            "min": 382,
            "mean": 431,
            "median": 456,
            "max": 456
          },
          "toInt48(uint256)": {
            "calls": 10,
            "min": 417,
            "mean": 439,
            "median": 417,
            "max": 493
          },
          "toInt56(int256)": {
            "calls": 34,
            "min": 381,
            "mean": 431,
            "median": 455,
            "max": 455
          },
          "toInt56(uint256)": {
            "calls": 18,
            "min": 438,
            "mean": 463,
            "median": 438,
            "max": 514
          },
          "toInt64(int256)": {
            "calls": 44,
            "min": 380,
            "mean": 432,
            "median": 454,
            "max": 454
          },
          "toInt64(uint256)": {
            "calls": 17,
            "min": 396,
            "mean": 418,
            "median": 396,
            "max": 472
          },
          "toInt72(int256)": {
            "calls": 20,
            "min": 445,
            "mean": 496,
            "median": 519,
            "max": 519
          },
          "toInt72(uint256)": {
            "calls": 14,
            "min": 439,
            "mean": 455,
            "median": 439,
            "max": 515
          },
          "toInt8(int256)": {
            "calls": 33,
            "min": 401,
            "mean": 405,
            "median": 401,
            "max": 474
          },
          "toInt8(uint256)": {
            "calls": 23,
            "min": 440,
            "mean": 446,
            "median": 440,
            "max": 515
          },
          "toInt80(int256)": {
            "calls": 20,
            "min": 402,
            "mean": 457,
            "median": 476,
            "max": 476
          },
          "toInt80(uint256)": {
            "calls": 12,
            "min": 375,
            "mean": 387,
            "median": 375,
            "max": 451
          },
          "toInt88(int256)": {
            "calls": 38,
            "min": 381,
            "mean": 429,
            "median": 455,
            "max": 455
          },
          "toInt88(uint256)": {
            "calls": 14,
            "min": 416,
            "mean": 443,
            "median": 416,
            "max": 492
          },
          "toInt96(int256)": {
            "calls": 42,
            "min": 426,
            "mean": 475,
            "median": 500,
            "max": 500
          },
          "toInt96(uint256)": {
            "calls": 9,
            "min": 419,
            "mean": 452,
            "median": 419,
            "max": 495
          },
          "toUint104(uint256)": {
            "calls": 24,
            "min": 396,
            "mean": 419,
            "median": 396,
            "max": 467
          },
          "toUint112(uint256)": {
            "calls": 14,
            "min": 440,
            "mean": 460,
            "median": 440,
            "max": 511
          },
          "toUint120(uint256)": {
            "calls": 17,
            "min": 396,
            "mean": 421,
            "median": 396,
            "max": 467
          },
          "toUint128(uint256)": {
            "calls": 14,
            "min": 396,
            "mean": 431,
            "median": 431,
            "max": 467
          },
          "toUint136(uint256)": {
            "calls": 12,
            "min": 373,
            "mean": 402,
            "median": 373,
            "max": 444
          },
          "toUint144(uint256)": {
            "calls": 24,
            "min": 395,
            "mean": 419,
            "median": 395,
            "max": 478
          },
          "toUint152(uint256)": {
            "calls": 20,
            "min": 379,
            "mean": 408,
            "median": 379,
            "max": 462
          },
          "toUint16(uint256)": {
            "calls": 25,
            "min": 417,
            "mean": 434,
            "median": 417,
            "max": 488
          },
          "toUint160(uint256)": {
            "calls": 11,
            "min": 400,
            "mean": 430,
            "median": 400,
            "max": 483
          },
          "toUint168(uint256)": {
            "calls": 13,
            "min": 401,
            "mean": 458,
            "median": 484,
            "max": 484
          },
          "toUint176(uint256)": {
            "calls": 7,
            "min": 426,
            "mean": 473,
            "median": 509,
            "max": 509
          },
          "toUint184(uint256)": {
            "calls": 16,
            "min": 423,
            "mean": 469,
            "median": 506,
            "max": 506
          },
          "toUint192(uint256)": {
            "calls": 16,
            "min": 403,
            "mean": 449,
            "median": 486,
            "max": 486
          },
          "toUint200(uint256)": {
            "calls": 16,
            "min": 381,
            "mean": 427,
            "median": 464,
            "max": 464
          },
          "toUint208(uint256)": {
            "calls": 21,
            "min": 400,
            "mean": 451,
            "median": 483,
            "max": 483
          },
          "toUint216(uint256)": {
            "calls": 14,
            "min": 424,
            "mean": 477,
            "median": 507,
            "max": 507
          },
          "toUint224(uint256)": {
            "calls": 11,
            "min": 379,
            "mean": 401,
            "median": 379,
            "max": 462
          },
          "toUint232(uint256)": {
            "calls": 14,
            "min": 425,
            "mean": 454,
            "median": 425,
            "max": 508
          },
          "toUint24(uint256)": {
            "calls": 17,
            "min": 439,
            "mean": 443,
            "median": 439,
            "max": 510
          },
          "toUint240(uint256)": {
            "calls": 24,
            "min": 402,
            "mean": 457,
            "median": 485,
            "max": 485
          },
          "toUint248(uint256)": {
            "calls": 18,
            "min": 424,
            "mean": 465,
            "median": 465,
            "max": 507
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 437,
            "mean": 481,
            "median": 497,
            "max": 497
          },
          "toUint32(uint256)": {
            "calls": 16,
            "min": 418,
            "mean": 431,
            "median": 418,
            "max": 489
          },
          "toUint40(uint256)": {
            "calls": 21,
            "min": 415,
            "mean": 431,
            "median": 415,
            "max": 486
          },
          "toUint48(uint256)": {
            "calls": 18,
            "min": 395,
            "mean": 426,
            "median": 395,
            "max": 466
          },
          "toUint56(uint256)": {
            "calls": 16,
            "min": 396,
            "mean": 427,
            "median": 396,
            "max": 467
          },
          "toUint64(uint256)": {
            "calls": 14,
            "min": 373,
            "mean": 398,
            "median": 373,
            "max": 444
          },
          "toUint72(uint256)": {
            "calls": 13,
            "min": 397,
            "mean": 424,
            "median": 397,
            "max": 468
          },
          "toUint8(uint256)": {
            "calls": 24,
            "min": 397,
            "mean": 402,
            "median": 397,
            "max": 468
          },
          "toUint80(uint256)": {
            "calls": 19,
            "min": 395,
            "mean": 406,
            "median": 395,
            "max": 466
          },
          "toUint88(uint256)": {
            "calls": 15,
            "min": 374,
            "mean": 407,
            "median": 374,
            "max": 445
          },
          "toUint96(uint256)": {
            "calls": 10,
            "min": 397,
            "mean": 418,
            "median": 397,
            "max": 468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 14181956,
          "size": 70727
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 82,
            "min": 170726,
            "mean": 170780,
            "median": 170792,
            "max": 170822
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 695,
            "min": 22271,
            "mean": 150226,
            "median": 161948,
            "max": 297296
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46860,
            "mean": 68250,
            "median": 70090,
            "max": 85918
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29688,
            "mean": 30130,
            "median": 30072,
            "max": 32381
          },
          "safeApprove(address,address,uint256)": {
            "calls": 254,
            "min": 24896,
            "mean": 25294,
            "median": 25376,
            "max": 25712
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 255,
            "min": 25280,
            "mean": 25673,
            "median": 25760,
            "max": 26096
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24949,
            "mean": 25345,
            "median": 25369,
            "max": 25669
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28758,
            "mean": 28758,
            "median": 28758,
            "max": 28758
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22186,
            "mean": 28917,
            "median": 28909,
            "max": 29202
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 256,
            "min": 26229,
            "mean": 26757,
            "median": 26937,
            "max": 27257
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 29195,
            "mean": 50239,
            "median": 68975,
            "max": 69893
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 604,
            "mean": 3892,
            "median": 5536,
            "max": 5536
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2560,
            "min": 26101,
            "mean": 40150,
            "median": 31647,
            "max": 62092
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 593383,
            "mean": 714525,
            "median": 620387,
            "max": 4756501
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 591613,
            "mean": 702879,
            "median": 622598,
            "max": 4800228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2735267,
          "size": 13591
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 35662,
            "mean": 42902,
            "median": 40633,
            "max": 64504
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 40118,
            "mean": 60611,
            "median": 54609,
            "max": 105462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 3611352,
          "size": 17966
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1701,
            "mean": 9264,
            "median": 9990,
            "max": 16725
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 299,
            "min": 1146,
            "mean": 10435,
            "median": 10464,
            "max": 17041
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 120,
            "min": 6700,
            "mean": 6713,
            "median": 6713,
            "max": 6726
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 198558,
          "size": 718
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 30,
            "min": 32778,
            "mean": 50368,
            "median": 45078,
            "max": 79278
          },
          "fallbackDeposit(uint256)": {
            "calls": 31,
            "min": 44713,
            "mean": 51332,
            "median": 44713,
            "max": 78913
          },
          "withdraw(uint256)": {
            "calls": 19,
            "min": 45458,
            "mean": 45477,
            "median": 45470,
            "max": 45542
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2256903,
          "size": 11202
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 138,
            "min": 1800,
            "mean": 1814,
            "median": 1819,
            "max": 1831
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 381377,
          "size": 1574
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 258,
            "mean": 288,
            "median": 288,
            "max": 319
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 267,
            "mean": 297,
            "median": 297,
            "max": 328
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22486,
            "mean": 22486,
            "median": 22486,
            "max": 22486
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 280,
            "mean": 302,
            "median": 302,
            "max": 324
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22411,
            "mean": 22411,
            "median": 22411,
            "max": 22411
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 290229,
          "size": 1124
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "fallback()": {
            "calls": 520,
            "min": 23750,
            "mean": 65866,
            "median": 90572,
            "max": 278475
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "receive()": {
            "calls": 260,
            "min": 89,
            "mean": 20846,
            "median": 21089,
            "max": 21089
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 720,
            "mean": 33867,
            "median": 24318,
            "max": 67551
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 2018,
            "mean": 35183,
            "median": 35183,
            "max": 68349
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 108363,
          "size": 281
        },
        "functions": {
          "fallback()": {
            "calls": 990,
            "min": 234,
            "mean": 23514,
            "median": 22388,
            "max": 173671
          },
          "receive()": {
            "calls": 17,
            "min": 21107,
            "mean": 21107,
            "median": 21107,
            "max": 21107
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 396649,
          "size": 1675
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 285,
            "mean": 394,
            "median": 449,
            "max": 449
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 1010,
            "mean": 1010,
            "median": 1010,
            "max": 1010
          },
          "getArgAddress(uint256)": {
            "calls": 11,
            "min": 3382,
            "mean": 3404,
            "median": 3407,
            "max": 3445
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 3730,
            "mean": 3759,
            "median": 3757,
            "max": 3792
          },
          "getArgUint256(uint256)": {
            "calls": 19,
            "min": 5719,
            "mean": 5744,
            "median": 5744,
            "max": 5782
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 11,
            "min": 16650,
            "mean": 18236,
            "median": 18096,
            "max": 19582
          },
          "getArgUint64(uint256)": {
            "calls": 11,
            "min": 3390,
            "mean": 3412,
            "median": 3415,
            "max": 3453
          },
          "getArgUint8(uint256)": {
            "calls": 11,
            "min": 3413,
            "mean": 3435,
            "median": 3438,
            "max": 3476
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 3985,
            "mean": 4072,
            "median": 4068,
            "max": 4169
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 441,
            "mean": 551,
            "median": 606,
            "max": 606
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 819,
            "mean": 819,
            "median": 819,
            "max": 819
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 762,
            "mean": 762,
            "median": 762,
            "max": 762
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "revertWithError()": {
            "calls": 11,
            "min": 5399,
            "mean": 5421,
            "median": 5424,
            "max": 5461
          },
          "setValue(uint256)": {
            "calls": 11,
            "min": 44071,
            "mean": 44120,
            "median": 44108,
            "max": 44294
          },
          "value()": {
            "calls": 11,
            "min": 5327,
            "mean": 5349,
            "median": 5352,
            "max": 5389
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 568978,
          "size": 3198
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5733,
            "mean": 6001,
            "median": 6091,
            "max": 6091
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 6022,
            "mean": 6201,
            "median": 6201,
            "max": 6380
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5889,
            "mean": 6068,
            "median": 6068,
            "max": 6247
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5853,
            "mean": 6032,
            "median": 6032,
            "max": 6211
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5774,
            "mean": 5953,
            "median": 5953,
            "max": 6132
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5832,
            "mean": 6011,
            "median": 6011,
            "max": 6190
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11742,
            "mean": 30467,
            "median": 33718,
            "max": 45942
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1455831,
          "size": 6517
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5457,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 450,
            "min": 745,
            "mean": 2949,
            "median": 1012,
            "max": 8044
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 628,
            "min": 23968,
            "mean": 30055,
            "median": 29423,
            "max": 50283
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4230,
            "min": 24018,
            "mean": 125276,
            "median": 79022,
            "max": 9902066
          },
          "burn(address,uint256,uint256)": {
            "calls": 382,
            "min": 25077,
            "mean": 29195,
            "median": 27969,
            "max": 33351
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 941,
            "min": 25012,
            "mean": 197803,
            "median": 63620,
            "max": 34722102
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1081,
            "min": 24383,
            "mean": 193867,
            "median": 58877,
            "max": 35285796
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1915,
            "min": 26564,
            "mean": 44733,
            "median": 46704,
            "max": 46712
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2675,
            "mean": 2675,
            "median": 2675,
            "max": 2675
          },
          "lastDataHash()": {
            "calls": 31,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5019,
            "min": 22994,
            "mean": 121349,
            "median": 72988,
            "max": 34929345
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 882,
            "min": 24215,
            "mean": 202641,
            "median": 63260,
            "max": 31905339
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1108,
            "min": 23732,
            "mean": 171765,
            "median": 58148,
            "max": 35551742
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1757,
            "min": 25851,
            "mean": 45281,
            "median": 45991,
            "max": 45991
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 140,
            "min": 26846,
            "mean": 36035,
            "median": 33982,
            "max": 47751
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 130,
            "min": 27464,
            "mean": 30560,
            "median": 30600,
            "max": 30868
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 128,
            "min": 33455,
            "mean": 98362,
            "median": 92898,
            "max": 1279751
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 126,
            "min": 39578,
            "mean": 99805,
            "median": 62869,
            "max": 1130823
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 448725,
          "size": 1889
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 482,
            "min": 2899,
            "mean": 2939,
            "median": 2914,
            "max": 6391
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26544,
            "mean": 26544,
            "median": 26544,
            "max": 26544
          },
          "signer()": {
            "calls": 4,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 816144,
          "size": 4125
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 435,
            "mean": 435,
            "median": 435,
            "max": 435
          },
          "allowance(address,address)": {
            "calls": 2442,
            "min": 758,
            "mean": 2337,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 2620,
            "min": 26110,
            "mean": 46144,
            "median": 46214,
            "max": 46406
          },
          "balanceOf(address)": {
            "calls": 13220,
            "min": 608,
            "mean": 2432,
            "median": 2608,
            "max": 2608
          },
          "burn(address,uint256)": {
            "calls": 516,
            "min": 24304,
            "mean": 29248,
            "median": 27408,
            "max": 34584
          },
          "decimals()": {
            "calls": 312,
            "min": 2311,
            "mean": 2311,
            "median": 2311,
            "max": 2311
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 25184,
            "mean": 27021,
            "median": 25764,
            "max": 28702
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 25152,
            "mean": 37562,
            "median": 25756,
            "max": 52654
          },
          "mint(address,uint256)": {
            "calls": 3210,
            "min": 24470,
            "mean": 67987,
            "median": 68480,
            "max": 68830
          },
          "name()": {
            "calls": 258,
            "min": 2929,
            "mean": 5241,
            "median": 3108,
            "max": 9486
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23697,
            "mean": 43833,
            "median": 30288,
            "max": 74424
          },
          "symbol()": {
            "calls": 258,
            "min": 2951,
            "mean": 5413,
            "median": 7349,
            "max": 9508
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 2574,
            "min": 24329,
            "mean": 45773,
            "median": 51658,
            "max": 51878
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1546,
            "min": 24999,
            "mean": 40820,
            "median": 32919,
            "max": 54959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 816276,
          "size": 4132
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 598,
            "mean": 598,
            "median": 598,
            "max": 598
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21925,
            "mean": 22233,
            "median": 21973,
            "max": 46346
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28642,
            "mean": 67874,
            "median": 68510,
            "max": 68826
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22821,
            "mean": 23110,
            "median": 23073,
            "max": 29232
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 25203,
            "mean": 38717,
            "median": 30837,
            "max": 52754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 840124,
          "size": 3816
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2758,
            "mean": 2758,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 1014,
            "min": 23978,
            "mean": 35271,
            "median": 36132,
            "max": 46658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1211914,
          "size": 5389
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2206,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 239,
            "min": 21548,
            "mean": 22021,
            "median": 21788,
            "max": 95473
          },
          "checkpointAt(address,uint256)": {
            "calls": 355,
            "min": 0,
            "mean": 43,
            "median": 0,
            "max": 4869
          },
          "checkpointCount(address)": {
            "calls": 1317,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 534,
            "min": 21192,
            "mean": 21633,
            "median": 21432,
            "max": 91760
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23536,
            "mean": 42113,
            "median": 41166,
            "max": 75897
          },
          "delegates(address)": {
            "calls": 4132,
            "min": 0,
            "mean": 243,
            "median": 0,
            "max": 2615
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 28297,
            "mean": 48394,
            "median": 48641,
            "max": 48653
          },
          "directIncrementNonce(address)": {
            "calls": 885,
            "min": 26857,
            "mean": 31196,
            "median": 26869,
            "max": 43969
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5425,
            "mean": 5925,
            "median": 5425,
            "max": 7425
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 408,
            "mean": 3561,
            "median": 5042,
            "max": 5234
          },
          "getVotes(address)": {
            "calls": 2938,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4825
          },
          "getVotesTotalSupply()": {
            "calls": 760,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4645
          },
          "mint(address,uint256)": {
            "calls": 726,
            "min": 21548,
            "mean": 21860,
            "median": 21800,
            "max": 94888
          },
          "name()": {
            "calls": 256,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "nonces(address)": {
            "calls": 505,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "totalSupply()": {
            "calls": 379,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 500,
            "min": 21548,
            "mean": 21852,
            "median": 21800,
            "max": 86998
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 307465,
          "size": 1206
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21490,
            "mean": 21490,
            "median": 21490,
            "max": 21490
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21723,
            "mean": 22020,
            "median": 22095,
            "max": 22095
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2629,
            "mean": 4146,
            "median": 4754,
            "max": 4754
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 392,
            "min": 22478,
            "mean": 37081,
            "median": 44639,
            "max": 44863
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 784,
            "min": 22660,
            "mean": 37611,
            "median": 45238,
            "max": 45486
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1428888,
          "size": 6672
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31983,
            "mean": 31983,
            "median": 31983,
            "max": 31983
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12238,
            "mean": 12238,
            "median": 12238,
            "max": 12238
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6454,
            "mean": 18757,
            "median": 9144,
            "max": 140472
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 1078,
            "mean": 1078,
            "median": 1078,
            "max": 1078
          },
          "entryPoint()": {
            "calls": 7,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2829,
            "mean": 16779,
            "median": 13197,
            "max": 37895
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 126,
            "min": 3006,
            "mean": 62848,
            "median": 73482,
            "max": 217517
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 133,
            "min": 3328,
            "mean": 62816,
            "median": 67110,
            "max": 304425
          },
          "fallback()": {
            "calls": 5,
            "min": 270,
            "mean": 28580,
            "median": 291,
            "max": 108870
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5452,
            "mean": 5452,
            "median": 5452,
            "max": 5452
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2513,
            "mean": 24017,
            "median": 24084,
            "max": 24084
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 7202,
            "mean": 8570,
            "median": 7243,
            "max": 14470
          },
          "owner()": {
            "calls": 267,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "receive()": {
            "calls": 258,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6971,
            "mean": 6971,
            "median": 6971,
            "max": 6971
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23483,
            "mean": 23483,
            "median": 23483,
            "max": 23483
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2411,
            "mean": 2411,
            "median": 2411,
            "max": 2411
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2522,
            "mean": 13570,
            "median": 13570,
            "max": 24619
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7174,
            "mean": 7174,
            "median": 7174,
            "max": 7174
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 459,
            "mean": 24429,
            "median": 29570,
            "max": 38120
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45605,
            "mean": 45605,
            "median": 45605,
            "max": 45605
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1345208,
          "size": 6980
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2393,
            "mean": 2393,
            "median": 2393,
            "max": 2393
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2535,
            "mean": 5340,
            "median": 7990,
            "max": 8071
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7975,
            "mean": 8011,
            "median": 8011,
            "max": 8047
          },
          "decimals()": {
            "calls": 20,
            "min": 347,
            "mean": 356,
            "median": 347,
            "max": 438
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30674,
            "mean": 119736,
            "median": 121203,
            "max": 121455
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30605,
            "mean": 120029,
            "median": 121146,
            "max": 132036
          },
          "name()": {
            "calls": 1,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 8035,
            "mean": 8035,
            "median": 8035,
            "max": 8107
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 8040,
            "mean": 8040,
            "median": 8040,
            "max": 8112
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24776,
            "mean": 77986,
            "median": 78450,
            "max": 93291
          },
          "symbol()": {
            "calls": 1,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5556,
            "mean": 5556,
            "median": 5556,
            "max": 5556
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26948,
            "mean": 78881,
            "median": 79621,
            "max": 79781
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1212662,
          "size": 5712
        },
        "functions": {
          "eip712Domain()": {
            "calls": 319,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 6309,
            "mean": 23195,
            "median": 11341,
            "max": 63789
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 111,
            "min": 6240,
            "mean": 87645,
            "median": 99481,
            "max": 243638
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 149,
            "min": 28959,
            "mean": 85965,
            "median": 64283,
            "max": 308179
          },
          "fallback()": {
            "calls": 872,
            "min": 262,
            "mean": 6347,
            "median": 3432,
            "max": 135263
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 330,
            "min": 655,
            "mean": 14851,
            "median": 14344,
            "max": 50724
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 6293,
            "mean": 6293,
            "median": 6293,
            "max": 6293
          },
          "mockId()": {
            "calls": 2,
            "min": 478,
            "mean": 478,
            "median": 478,
            "max": 478
          },
          "owner()": {
            "calls": 798,
            "min": 5731,
            "mean": 5731,
            "median": 5731,
            "max": 5731
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "receive()": {
            "calls": 1,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5725,
            "mean": 14277,
            "median": 14299,
            "max": 22873
          },
          "state()": {
            "calls": 772,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "token()": {
            "calls": 536,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 6234,
            "mean": 35618,
            "median": 35780,
            "max": 52880
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1239396,
          "size": 5839
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5205,
            "mean": 5205,
            "median": 5205,
            "max": 5205
          },
          "mockId()": {
            "calls": 1,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5902,
            "mean": 14454,
            "median": 14476,
            "max": 23050
          },
          "state()": {
            "calls": 513,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18857,
            "mean": 18857,
            "median": 18857,
            "max": 18857
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 178113,
          "size": 605
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2398,
            "min": 94883,
            "mean": 95456,
            "median": 95495,
            "max": 95723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 795817,
          "size": 3467
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2511,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 27015,
            "mean": 46997,
            "median": 47275,
            "max": 47687
          },
          "balanceOf(address,uint256)": {
            "calls": 2384,
            "min": 2585,
            "mean": 2585,
            "median": 2585,
            "max": 2585
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24455,
            "mean": 27394,
            "median": 25407,
            "max": 30684
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 46524,
            "mean": 47336,
            "median": 47328,
            "max": 47724
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 24077,
            "mean": 32803,
            "median": 26557,
            "max": 46469
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 386,
            "min": 26194,
            "mean": 40523,
            "median": 29232,
            "max": 61954
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24491,
            "mean": 45913,
            "median": 47311,
            "max": 47855
          },
          "name(uint256)": {
            "calls": 256,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 46198,
            "mean": 46198,
            "median": 46198,
            "max": 46198
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 862,
            "mean": 862,
            "median": 862,
            "max": 862
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1049,
            "min": 24482,
            "mean": 37643,
            "median": 30548,
            "max": 53088
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1649,
            "min": 27261,
            "mean": 38555,
            "median": 33253,
            "max": 61210
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1369290,
          "size": 6122
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1058,
            "min": 24346,
            "mean": 43367,
            "median": 48678,
            "max": 49002
          },
          "balanceOf(address)": {
            "calls": 10253,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "burn(uint256)": {
            "calls": 274,
            "min": 28388,
            "mean": 29388,
            "median": 28827,
            "max": 31512
          },
          "directApprove(address,uint256)": {
            "calls": 1085,
            "min": 24364,
            "mean": 44004,
            "median": 49409,
            "max": 49715
          },
          "directGetApproved(uint256)": {
            "calls": 1530,
            "min": 2571,
            "mean": 4629,
            "median": 4816,
            "max": 4816
          },
          "directOwnerOf(uint256)": {
            "calls": 2578,
            "min": 2570,
            "mean": 2776,
            "median": 2827,
            "max": 2827
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 642,
            "min": 57298,
            "mean": 77471,
            "median": 63831,
            "max": 130585
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 520,
            "min": 63856,
            "mean": 93849,
            "median": 65397,
            "max": 241548
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 959,
            "min": 24618,
            "mean": 42280,
            "median": 46758,
            "max": 46764
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1794,
            "min": 25407,
            "mean": 42934,
            "median": 41288,
            "max": 57854
          },
          "exists(uint256)": {
            "calls": 511,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "getApproved(uint256)": {
            "calls": 1540,
            "min": 2537,
            "mean": 4543,
            "median": 4727,
            "max": 4727
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2995,
            "mean": 2995,
            "median": 2995,
            "max": 2998
          },
          "getExtraData(uint256)": {
            "calls": 3581,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2988,
            "mean": 5577,
            "median": 6318,
            "max": 7380
          },
          "mint(address,uint256)": {
            "calls": 10855,
            "min": 24546,
            "mean": 64531,
            "median": 68679,
            "max": 69042
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 47201,
            "mean": 56518,
            "median": 52266,
            "max": 69729
          },
          "ownerOf(uint256)": {
            "calls": 5596,
            "min": 631,
            "mean": 2610,
            "median": 2631,
            "max": 2631
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71356,
            "mean": 81968,
            "median": 72329,
            "max": 121831
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72327,
            "mean": 98253,
            "median": 73901,
            "max": 232950
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1828,
            "min": 41329,
            "mean": 68589,
            "median": 64261,
            "max": 132067
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 504,
            "min": 64451,
            "mean": 95662,
            "median": 65923,
            "max": 242098
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1172,
            "min": 24223,
            "mean": 42836,
            "median": 46363,
            "max": 46366
          },
          "setAux(address,uint224)": {
            "calls": 757,
            "min": 27821,
            "mean": 44799,
            "median": 44906,
            "max": 44921
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1529,
            "min": 24062,
            "mean": 36981,
            "median": 44022,
            "max": 44478
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1848,
            "min": 24999,
            "mean": 42455,
            "median": 40852,
            "max": 57421
          },
          "uncheckedBurn(uint256)": {
            "calls": 2935,
            "min": 23777,
            "mean": 30343,
            "median": 31312,
            "max": 36496
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 183,
            "min": 55057,
            "mean": 55319,
            "median": 55288,
            "max": 55648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 597887,
          "size": 2555
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31263,
            "mean": 101727,
            "median": 91746,
            "max": 159808
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 263,
            "min": 302949,
            "mean": 386335,
            "median": 321800,
            "max": 3622834
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2898,
            "mean": 6166,
            "median": 5137,
            "max": 11614
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22237,
            "mean": 41410,
            "median": 44149,
            "max": 44149
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 168112,
          "size": 593
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "garbage()": {
            "calls": 780,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3168,
            "mean": 3171,
            "median": 3168,
            "max": 3180
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3521,
            "mean": 3521,
            "median": 3521,
            "max": 3521
          },
          "getArgUint256(uint256)": {
            "calls": 7,
            "min": 5505,
            "mean": 5509,
            "median": 5511,
            "max": 5517
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 6757,
            "mean": 7321,
            "median": 7318,
            "max": 7897
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3176,
            "mean": 3179,
            "median": 3176,
            "max": 3188
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3199,
            "mean": 3202,
            "median": 3199,
            "max": 3211
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3364,
            "mean": 3364,
            "median": 3364,
            "max": 3364
          },
          "receive()": {
            "calls": 10,
            "min": 0,
            "mean": 42029,
            "median": 21095,
            "max": 286581
          },
          "revertWithError()": {
            "calls": 6,
            "min": 5185,
            "mean": 5523,
            "median": 5188,
            "max": 7197
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 43857,
            "mean": 44280,
            "median": 43875,
            "max": 46305
          },
          "value()": {
            "calls": 6,
            "min": 5113,
            "mean": 5465,
            "median": 5116,
            "max": 7211
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 770452,
          "size": 3346
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7562,
            "min": 357,
            "mean": 4169,
            "median": 4516,
            "max": 4516
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 266,
            "min": 26900,
            "mean": 28308,
            "median": 28364,
            "max": 28364
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 34,
            "min": 26757,
            "mean": 41291,
            "median": 39082,
            "max": 59601
          },
          "guardedByOnlyRoles()": {
            "calls": 34,
            "min": 23992,
            "mean": 39998,
            "median": 39344,
            "max": 56836
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1300,
            "mean": 7989,
            "median": 8014,
            "max": 16989
          },
          "hasRole(address,uint256)": {
            "calls": 1691,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "owner()": {
            "calls": 1979,
            "min": 2330,
            "mean": 2537,
            "median": 2551,
            "max": 2551
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 235,
            "min": 2512,
            "mean": 2808,
            "median": 2629,
            "max": 4749
          },
          "roleHolderCount(uint256)": {
            "calls": 3667,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolders(uint256)": {
            "calls": 3745,
            "min": 2716,
            "mean": 3056,
            "median": 2716,
            "max": 18853
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23692,
            "mean": 43495,
            "median": 43676,
            "max": 43976
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 34,
            "min": 24509,
            "mean": 127177,
            "median": 133857,
            "max": 223179
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21669,
            "mean": 27067,
            "median": 26553,
            "max": 43953
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23774,
            "mean": 25267,
            "median": 26586,
            "max": 26586
          },
          "setOwner(address)": {
            "calls": 265,
            "min": 21769,
            "mean": 27199,
            "median": 26809,
            "max": 43909
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23769,
            "mean": 25186,
            "median": 23769,
            "max": 43681
          },
          "setRole(address,uint256,bool)": {
            "calls": 1423,
            "min": 24491,
            "mean": 60143,
            "median": 74046,
            "max": 74622
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6396,
            "min": 33590,
            "mean": 59608,
            "median": 73860,
            "max": 78764
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 131415,
          "size": 391
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "getValue(uint256)": {
            "calls": 962,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "setValue(uint256,uint256)": {
            "calls": 962,
            "min": 2479,
            "mean": 22316,
            "median": 22379,
            "max": 22379
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 366463,
          "size": 3054
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23437,
            "mean": 33955,
            "median": 33955,
            "max": 44473
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 209,
            "min": 27826,
            "mean": 60387,
            "median": 67889,
            "max": 91159
          },
          "isInitializing()": {
            "calls": 189,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23421,
            "mean": 23421,
            "median": 23421,
            "max": 23421
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 231,
            "min": 24769,
            "mean": 55331,
            "median": 67601,
            "max": 91135
          },
          "version()": {
            "calls": 256,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "x()": {
            "calls": 138,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 560701,
          "size": 2398
        },
        "functions": {
          "owner()": {
            "calls": 754,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 25048,
            "mean": 33744,
            "median": 25072,
            "max": 59312
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 742387,
          "size": 3290
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23998,
            "mean": 23998,
            "median": 23998,
            "max": 23998
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26280,
            "mean": 37934,
            "median": 44272,
            "max": 46421
          },
          "owner()": {
            "calls": 1703,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 134,
            "min": 29573,
            "mean": 70075,
            "median": 68711,
            "max": 1366526
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 115,
            "min": 28606,
            "mean": 53951,
            "median": 61167,
            "max": 61433
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 124,
            "min": 28907,
            "mean": 56122,
            "median": 62291,
            "max": 62685
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 272,
            "min": 28476,
            "mean": 49206,
            "median": 48171,
            "max": 64452
          },
          "rescueETH(address,uint256)": {
            "calls": 1411,
            "min": 5914,
            "mean": 32684,
            "median": 36818,
            "max": 62107
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 7093,
            "mean": 7093,
            "median": 7093,
            "max": 7093
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 671694,
          "size": 2892
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 508,
            "min": 21975,
            "mean": 24345,
            "median": 24510,
            "max": 37372
          },
          "multicallBrutalized(bytes[])": {
            "calls": 267,
            "min": 368727,
            "mean": 453043,
            "median": 376155,
            "max": 3738055
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 44682,
            "mean": 44682,
            "median": 44682,
            "max": 44682
          },
          "returnsRandomizedString(string)": {
            "calls": 252,
            "min": 781,
            "mean": 1811,
            "median": 1751,
            "max": 4010
          },
          "returnsSender()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 483,
            "mean": 483,
            "median": 483,
            "max": 483
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 857,
            "mean": 872,
            "median": 878,
            "max": 890
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 349220,
          "size": 1343
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22645,
            "mean": 22645,
            "median": 22645,
            "max": 22645
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23969,
            "mean": 28945,
            "median": 29065,
            "max": 29081
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28401,
            "mean": 28401,
            "median": 28401,
            "max": 28401
          },
          "owner()": {
            "calls": 838,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2919,
            "mean": 2919,
            "median": 2919,
            "max": 2923
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23131,
            "mean": 23131,
            "median": 23131,
            "max": 23131
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44547,
            "mean": 44547,
            "median": 44547,
            "max": 44547
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28405,
            "mean": 28550,
            "median": 28633,
            "max": 28637
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23987,
            "mean": 25260,
            "median": 24007,
            "max": 28837
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23351,
            "mean": 35884,
            "median": 45479,
            "max": 45479
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 265240,
          "size": 961
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2280,
            "mean": 2280,
            "median": 2280,
            "max": 2280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 704567,
          "size": 2987
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22666,
            "mean": 22666,
            "median": 22666,
            "max": 22666
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24048,
            "mean": 29020,
            "median": 29156,
            "max": 29160
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24199,
            "mean": 46030,
            "median": 48245,
            "max": 48609
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 26149,
            "mean": 45863,
            "median": 46105,
            "max": 46437
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 3047,
            "mean": 3047,
            "median": 3047,
            "max": 3051
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 3046,
            "mean": 3046,
            "median": 3046,
            "max": 3050
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28481,
            "mean": 28481,
            "median": 28481,
            "max": 28481
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 639,
            "mean": 11842,
            "median": 7349,
            "max": 41804
          },
          "owner()": {
            "calls": 842,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2991
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 24038,
            "mean": 27415,
            "median": 26234,
            "max": 29418
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23154,
            "mean": 23154,
            "median": 23154,
            "max": 23154
          },
          "renounceRoles(uint256)": {
            "calls": 67,
            "min": 23414,
            "mean": 27781,
            "median": 28214,
            "max": 28574
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44591,
            "mean": 44591,
            "median": 44591,
            "max": 44591
          },
          "revokeRoles(address,uint256)": {
            "calls": 59,
            "min": 24210,
            "mean": 27919,
            "median": 30955,
            "max": 31519
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 923,
            "mean": 25165,
            "median": 24964,
            "max": 53634
          },
          "rolesOf(address)": {
            "calls": 2273,
            "min": 2945,
            "mean": 2945,
            "median": 2945,
            "max": 2949
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28440,
            "mean": 28587,
            "median": 28668,
            "max": 28672
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 28712,
            "mean": 37684,
            "median": 37552,
            "max": 46404
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24066,
            "mean": 25410,
            "median": 24086,
            "max": 28916
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23374,
            "mean": 34524,
            "median": 45502,
            "max": 45502
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25781,
            "mean": 45924,
            "median": 46074,
            "max": 48299
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23679,
            "mean": 44387,
            "median": 45861,
            "max": 46197
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25758,
            "mean": 46335,
            "median": 47904,
            "max": 48276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 386578,
          "size": 1522
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 79383,
          "size": 146
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476990,
          "size": 1993
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 26463,
            "mean": 26463,
            "median": 26463,
            "max": 26463
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 43543,
            "mean": 43543,
            "median": 43543,
            "max": 43543
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65737,
            "mean": 65737,
            "median": 65737,
            "max": 65737
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45581,
            "mean": 45581,
            "median": 45581,
            "max": 45581
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69963,
            "mean": 69963,
            "median": 69963,
            "max": 69963
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 66032,
            "mean": 66032,
            "median": 66032,
            "max": 66032
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 67153,
            "mean": 67153,
            "median": 67153,
            "max": 67153
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 47971,
            "mean": 47971,
            "median": 47971,
            "max": 47971
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 58515,
            "mean": 58515,
            "median": 58515,
            "max": 58515
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2400,
            "mean": 2400,
            "median": 2400,
            "max": 2400
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 146464,
          "size": 521
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3156,
            "mean": 3159,
            "median": 3159,
            "max": 3162
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3509,
            "mean": 3509,
            "median": 3509,
            "max": 3509
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5493,
            "mean": 5497,
            "median": 5499,
            "max": 5499
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 6179,
            "mean": 6459,
            "median": 6459,
            "max": 6739
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3164,
            "mean": 3167,
            "median": 3167,
            "max": 3170
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3187,
            "mean": 3190,
            "median": 3190,
            "max": 3193
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3328,
            "mean": 3328,
            "median": 3328,
            "max": 3328
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5173,
            "mean": 7436,
            "median": 5179,
            "max": 11957
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43857,
            "mean": 46258,
            "median": 43863,
            "max": 51056
          },
          "value()": {
            "calls": 3,
            "min": 5101,
            "mean": 7394,
            "median": 5107,
            "max": 11974
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 896304,
          "size": 3928
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 695,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 256,
            "min": 28411,
            "mean": 28411,
            "median": 28411,
            "max": 28411
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 256,
            "min": 38124,
            "mean": 40094,
            "median": 40124,
            "max": 40124
          },
          "owner()": {
            "calls": 1219,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 23647,
            "mean": 43491,
            "median": 43571,
            "max": 43571
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91591,
            "mean": 111354,
            "median": 111515,
            "max": 111515
          },
          "setMaxTimedRole(uint256)": {
            "calls": 19,
            "min": 26513,
            "mean": 29521,
            "median": 26873,
            "max": 43973
          },
          "setOwner(address)": {
            "calls": 27,
            "min": 26820,
            "mean": 28731,
            "median": 26832,
            "max": 43932
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 707,
            "min": 24992,
            "mean": 50848,
            "median": 52256,
            "max": 52352
          },
          "timedRoleActive(address,uint256)": {
            "calls": 792,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 320727,
          "size": 1294
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22508,
            "mean": 22508,
            "median": 22508,
            "max": 22508
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "revertWithError()": {
            "calls": 1,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22309,
            "mean": 22309,
            "median": 22309,
            "max": 22309
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 3094,
            "mean": 10153,
            "median": 5760,
            "max": 32618
          },
          "value()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 378830,
          "size": 1350
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 1671,
            "min": 561,
            "mean": 1483,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 272746,
          "size": 858
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 549,
            "mean": 2543,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 527112,
          "size": 2034
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 2823,
            "min": 561,
            "mean": 1649,
            "median": 2561,
            "max": 2561
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24488,
            "mean": 64289,
            "median": 66794,
            "max": 114617
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 275892,
          "size": 874
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 549,
            "mean": 2543,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 377112,
          "size": 1342
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 1662,
            "min": 561,
            "mean": 1488,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 269728,
          "size": 844
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1024,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 266402,
          "size": 829
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 515,
            "min": 549,
            "mean": 2545,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 250429,
          "size": 1131
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24240,
            "mean": 73977,
            "median": 36264,
            "max": 117836
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 431,
            "mean": 431,
            "median": 431,
            "max": 431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 109410,
          "size": 455
        },
        "functions": {
          "fallback()": {
            "calls": 6256,
            "min": 2755,
            "mean": 15674,
            "median": 10050,
            "max": 355945
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1140965,
          "size": 5106
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "cancel(bytes32)": {
            "calls": 29,
            "min": 25408,
            "mean": 25565,
            "median": 25432,
            "max": 26221
          },
          "execute(bytes32,bytes)": {
            "calls": 258,
            "min": 28365,
            "mean": 43686,
            "median": 44823,
            "max": 95406
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2484,
            "mean": 2484,
            "median": 2484,
            "max": 2484
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 22953,
            "mean": 306594,
            "median": 377195,
            "max": 377195
          },
          "minDelay()": {
            "calls": 229,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "operationState(bytes32)": {
            "calls": 958,
            "min": 2443,
            "mean": 2448,
            "median": 2448,
            "max": 2454
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 26225,
            "mean": 54582,
            "median": 55271,
            "max": 57720
          },
          "readyTimestamp(bytes32)": {
            "calls": 716,
            "min": 2422,
            "mean": 2422,
            "median": 2422,
            "max": 2422
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23946,
            "mean": 33594,
            "median": 23958,
            "max": 75913
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 612847,
          "size": 2627
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "decimals()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "deposit()": {
            "calls": 541,
            "min": 27586,
            "mean": 65218,
            "median": 67386,
            "max": 67386
          },
          "name()": {
            "calls": 1,
            "min": 426,
            "mean": 426,
            "median": 426,
            "max": 426
          },
          "receive()": {
            "calls": 288,
            "min": 27376,
            "mean": 63397,
            "median": 67176,
            "max": 67176
          },
          "symbol()": {
            "calls": 1,
            "min": 388,
            "mean": 388,
            "median": 388,
            "max": 388
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "withdraw(uint256)": {
            "calls": 281,
            "min": 27898,
            "mean": 39315,
            "median": 40222,
            "max": 40342
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 766607,
          "size": 3337
        },
        "functions": {
          "adminOf(address)": {
            "calls": 474,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24164,
            "mean": 26372,
            "median": 26372,
            "max": 28580
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22231,
            "mean": 59552,
            "median": 22267,
            "max": 125970
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105414,
            "mean": 158772,
            "median": 159207,
            "max": 159327
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23741,
            "mean": 138306,
            "median": 159635,
            "max": 159791
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 581,
            "mean": 581,
            "median": 581,
            "max": 581
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24147,
            "mean": 27851,
            "median": 24159,
            "max": 33402
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35357,
            "mean": 51052,
            "median": 51052,
            "max": 66748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 261284,
          "size": 1112
        },
        "functions": {
          "implementation()": {
            "calls": 4909,
            "min": 0,
            "mean": 2269,
            "median": 2284,
            "max": 2284
          },
          "owner()": {
            "calls": 456,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "renounceOwnership()": {
            "calls": 42,
            "min": 23086,
            "mean": 23309,
            "median": 23354,
            "max": 23354
          },
          "transferOwnership(address)": {
            "calls": 145,
            "min": 23549,
            "mean": 26870,
            "median": 28217,
            "max": 28217
          },
          "upgradeTo(address)": {
            "calls": 91,
            "min": 23641,
            "mean": 26014,
            "median": 23735,
            "max": 32508
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/Brutalizer.t.sol:BrutalizerTest",
        "deployment": {
          "gas": 731345,
          "size": 3307
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 22,
            "min": 3513,
            "mean": 3564,
            "median": 3557,
            "max": 3621
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 10,
            "min": 3766,
            "mean": 3830,
            "median": 3849,
            "max": 3874
          },
          "getArgUint256(uint256)": {
            "calls": 42,
            "min": 4892,
            "mean": 4949,
            "median": 4955,
            "max": 5000
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 22,
            "min": 28761,
            "mean": 31807,
            "median": 31411,
            "max": 34718
          },
          "getArgUint64(uint256)": {
            "calls": 22,
            "min": 3526,
            "mean": 3577,
            "median": 3570,
            "max": 3634
          },
          "getArgUint8(uint256)": {
            "calls": 22,
            "min": 3547,
            "mean": 3598,
            "median": 3591,
            "max": 3655
          },
          "getCalldataHash()": {
            "calls": 10,
            "min": 4635,
            "mean": 4824,
            "median": 4879,
            "max": 4955
          },
          "revertWithError()": {
            "calls": 22,
            "min": 5585,
            "mean": 5636,
            "median": 5630,
            "max": 5694
          },
          "setValue(uint256)": {
            "calls": 22,
            "min": 44265,
            "mean": 44333,
            "median": 44323,
            "max": 44402
          },
          "value()": {
            "calls": 22,
            "min": 5540,
            "mean": 5591,
            "median": 5585,
            "max": 5649
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 3329412,
          "size": 16564
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 88938,
            "mean": 38969180,
            "median": 1049440,
            "max": 96809474
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/CallContextChecker.t.sol:CallContextCheckerTest",
        "deployment": {
          "gas": 1336587,
          "size": 6445
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 22,
            "min": 4173,
            "mean": 4258,
            "median": 4261,
            "max": 4350
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 11,
            "min": 4441,
            "mean": 4523,
            "median": 4535,
            "max": 4590
          },
          "getArgUint256(uint256)": {
            "calls": 44,
            "min": 5552,
            "mean": 5642,
            "median": 5643,
            "max": 5729
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 22,
            "min": 61594,
            "mean": 65511,
            "median": 65793,
            "max": 70358
          },
          "getArgUint64(uint256)": {
            "calls": 22,
            "min": 4186,
            "mean": 4271,
            "median": 4274,
            "max": 4363
          },
          "getArgUint8(uint256)": {
            "calls": 22,
            "min": 4207,
            "mean": 4292,
            "median": 4295,
            "max": 4384
          },
          "getCalldataHash()": {
            "calls": 11,
            "min": 6602,
            "mean": 6840,
            "median": 6876,
            "max": 7033
          },
          "revertWithError()": {
            "calls": 23,
            "min": 6246,
            "mean": 6580,
            "median": 6333,
            "max": 12067
          },
          "setValue(uint256)": {
            "calls": 23,
            "min": 44937,
            "mean": 45293,
            "median": 45032,
            "max": 50951
          },
          "value()": {
            "calls": 23,
            "min": 6201,
            "mean": 6537,
            "median": 6288,
            "max": 12081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 359749,
          "size": 1378
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 134,
            "min": 67264,
            "mean": 67496,
            "median": 67636,
            "max": 67636
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 168188,
          "size": 566
        },
        "functions": {
          "generate(bytes)": {
            "calls": 143,
            "min": 0,
            "mean": 2582,
            "median": 1304,
            "max": 68272
          },
          "next(uint256)": {
            "calls": 249,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 6576978,
          "size": 32779
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1376,
            "mean": 1376,
            "median": 1376,
            "max": 1376
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 6321790,
          "size": 31505
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 36,
            "min": 730,
            "mean": 793,
            "median": 793,
            "max": 823
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 37,
            "min": 582353,
            "mean": 638056,
            "median": 583028,
            "max": 2147956
          },
          "recover(bytes32,bytes)": {
            "calls": 166,
            "min": 22557,
            "mean": 27130,
            "median": 26758,
            "max": 30455
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 48,
            "min": 3597,
            "mean": 25104,
            "median": 26185,
            "max": 26197
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 294,
            "min": 25914,
            "mean": 26172,
            "median": 26298,
            "max": 26368
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 153,
            "min": 607919,
            "mean": 685279,
            "median": 608795,
            "max": 4063837
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 46,
            "min": 607405,
            "mean": 686143,
            "median": 608310,
            "max": 3790168
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 294,
            "min": 607441,
            "mean": 711317,
            "median": 608245,
            "max": 4544226
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 166,
            "min": 23058,
            "mean": 30277,
            "median": 30476,
            "max": 30488
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 48,
            "min": 3571,
            "mean": 25084,
            "median": 26159,
            "max": 26171
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 294,
            "min": 25959,
            "mean": 26209,
            "median": 26343,
            "max": 26355
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 153,
            "min": 611728,
            "mean": 724442,
            "median": 612510,
            "max": 4746547
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 46,
            "min": 607410,
            "mean": 740539,
            "median": 608115,
            "max": 4186934
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 294,
            "min": 607562,
            "mean": 770370,
            "median": 608420,
            "max": 4606549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 790561,
          "size": 3454
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2535,
            "mean": 5918,
            "median": 4800,
            "max": 9364
          },
          "batchData()": {
            "calls": 520,
            "min": 2705,
            "mean": 266173,
            "median": 2717,
            "max": 9105244
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "batchIds()": {
            "calls": 520,
            "min": 2570,
            "mean": 5955,
            "median": 4838,
            "max": 9402
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "from()": {
            "calls": 512,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "id()": {
            "calls": 512,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "mintData()": {
            "calls": 512,
            "min": 2729,
            "mean": 225988,
            "median": 2741,
            "max": 9062388
          },
          "operator()": {
            "calls": 512,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2240791,
          "size": 10194
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61348,
            "mean": 61481,
            "median": 61576,
            "max": 61590
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 57945,
            "mean": 58078,
            "median": 58173,
            "max": 58187
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 49350,
            "mean": 51575,
            "median": 49350,
            "max": 120550
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61556,
            "mean": 61689,
            "median": 61784,
            "max": 61791
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49274,
            "mean": 62627,
            "median": 58260,
            "max": 75125
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:RevertingERC1155Recipient",
        "deployment": {
          "gas": 237178,
          "size": 891
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3121,
            "mean": 3127,
            "median": 3127,
            "max": 3133
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3374,
            "mean": 3374,
            "median": 3374,
            "max": 3374
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 4500,
            "mean": 4503,
            "median": 4500,
            "max": 4512
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 9211,
            "mean": 9970,
            "median": 9970,
            "max": 10729
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3134,
            "mean": 3140,
            "median": 3140,
            "max": 3146
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3155,
            "mean": 3161,
            "median": 3161,
            "max": 3167
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3474,
            "mean": 3474,
            "median": 3474,
            "max": 3474
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5194,
            "mean": 5200,
            "median": 5200,
            "max": 5206
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43897,
            "mean": 43975,
            "median": 43975,
            "max": 44053
          },
          "value()": {
            "calls": 2,
            "min": 5149,
            "mean": 5155,
            "median": 5155,
            "max": 5161
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC1271.t.sol:ERC1271Test",
        "deployment": {
          "gas": 11520700,
          "size": 51548
        },
        "functions": {
          "revertWithError()": {
            "calls": 7,
            "min": 5055,
            "mean": 7959,
            "median": 7150,
            "max": 12067
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 44140,
            "mean": 47036,
            "median": 46235,
            "max": 51155
          },
          "value()": {
            "calls": 7,
            "min": 5066,
            "mean": 7971,
            "median": 7161,
            "max": 12081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 304434,
          "size": 1227
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 37,
            "min": 31095,
            "mean": 50537,
            "median": 51103,
            "max": 51379
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3194,
            "mean": 3206,
            "median": 3206,
            "max": 3219
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3472,
            "mean": 3472,
            "median": 3472,
            "max": 3472
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 4573,
            "mean": 4591,
            "median": 4598,
            "max": 4598
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 13810,
            "mean": 13974,
            "median": 13974,
            "max": 14138
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3207,
            "mean": 3219,
            "median": 3219,
            "max": 3232
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3228,
            "mean": 3240,
            "median": 3240,
            "max": 3253
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3766,
            "mean": 3766,
            "median": 3766,
            "max": 3766
          },
          "mint(address,uint256)": {
            "calls": 40,
            "min": 35766,
            "mean": 70157,
            "median": 61487,
            "max": 95831
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5267,
            "mean": 5279,
            "median": 5279,
            "max": 5292
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43958,
            "mean": 43970,
            "median": 43970,
            "max": 43983
          },
          "sum()": {
            "calls": 1,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "value()": {
            "calls": 2,
            "min": 5222,
            "mean": 5234,
            "median": 5234,
            "max": 5247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:ERC20Test",
        "deployment": {
          "gas": 6565568,
          "size": 32722
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 7150,
            "mean": 7150,
            "median": 7150,
            "max": 7150
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 45887,
            "mean": 45887,
            "median": 45887,
            "max": 45887
          },
          "value()": {
            "calls": 1,
            "min": 7161,
            "mean": 7161,
            "median": 7161,
            "max": 7161
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 8039373,
          "size": 40079
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24671,
            "mean": 50550,
            "median": 49889,
            "max": 74091
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC2981.t.sol:ERC2981Test",
        "deployment": {
          "gas": 1996625,
          "size": 9100
        },
        "functions": {
          "revertWithError()": {
            "calls": 4,
            "min": 5055,
            "mean": 9059,
            "median": 9558,
            "max": 12067
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 44140,
            "mean": 48146,
            "median": 48644,
            "max": 51155
          },
          "value()": {
            "calls": 4,
            "min": 5066,
            "mean": 9072,
            "median": 9570,
            "max": 12081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 404687,
          "size": 1666
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 179,
            "mean": 1149,
            "median": 179,
            "max": 3090
          },
          "data()": {
            "calls": 257,
            "min": 2710,
            "mean": 3398,
            "median": 2710,
            "max": 11450
          },
          "datahash()": {
            "calls": 631,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25127,
            "mean": 34913,
            "median": 25127,
            "max": 133846
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 18320857,
          "size": 91374
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 190,
            "mean": 190,
            "median": 190,
            "max": 190
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22118,
            "mean": 22464,
            "median": 22400,
            "max": 23049
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22244,
            "mean": 22525,
            "median": 22462,
            "max": 23062
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 392574,
          "size": 1610
        },
        "functions": {
          "datahash()": {
            "calls": 393,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC6909.t.sol:ERC6909Test",
        "deployment": {
          "gas": 8372334,
          "size": 43873
        },
        "functions": {
          "revertWithError()": {
            "calls": 16,
            "min": 5055,
            "mean": 8749,
            "median": 7170,
            "max": 12083
          },
          "setValue(uint256)": {
            "calls": 16,
            "min": 44116,
            "mean": 47748,
            "median": 46245,
            "max": 51155
          },
          "value()": {
            "calls": 16,
            "min": 5066,
            "mean": 8762,
            "median": 7181,
            "max": 12097
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 342289,
          "size": 1376
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2600,
            "mean": 4118,
            "median": 2600,
            "max": 11360
          },
          "from()": {
            "calls": 1024,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "id()": {
            "calls": 1024,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "operator()": {
            "calls": 1024,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 2160359,
          "size": 9865
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 359,
            "mean": 359,
            "median": 359,
            "max": 359
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61836,
            "mean": 63451,
            "median": 61848,
            "max": 113148
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 56826,
            "mean": 57484,
            "median": 57042,
            "max": 74154
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 64836,
            "mean": 69381,
            "median": 69522,
            "max": 69636
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 145501,
          "size": 459
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 11946,
            "mean": 11946,
            "median": 11946,
            "max": 11946
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 51034,
            "mean": 51034,
            "median": 51034,
            "max": 51034
          },
          "value()": {
            "calls": 1,
            "min": 11960,
            "mean": 11960,
            "median": 11960,
            "max": 11960
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2981576,
          "size": 14827
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 454,
            "min": 663,
            "mean": 684,
            "median": 675,
            "max": 858
          },
          "returnsHash(bytes)": {
            "calls": 471,
            "min": 582,
            "mean": 601,
            "median": 594,
            "max": 774
          },
          "revertsWithCustomError()": {
            "calls": 8,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1231386,
          "size": 6086
        },
        "functions": {
          "get(address)": {
            "calls": 508,
            "min": 2389,
            "mean": 5684,
            "median": 6852,
            "max": 8970
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 9340867,
          "size": 46575
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 201,
            "min": 21664,
            "mean": 46858,
            "median": 44024,
            "max": 142134
          },
          "addToBytes32Set(bytes32)": {
            "calls": 157,
            "min": 21689,
            "mean": 45901,
            "median": 46294,
            "max": 50670
          },
          "addressSetAt(uint256)": {
            "calls": 12,
            "min": 4694,
            "mean": 6108,
            "median": 4694,
            "max": 8938
          },
          "addressSetContains(address)": {
            "calls": 157,
            "min": 376,
            "mean": 6522,
            "median": 6852,
            "max": 6852
          },
          "bytes32SetAt(uint256)": {
            "calls": 19,
            "min": 4662,
            "mean": 5108,
            "median": 4662,
            "max": 11045
          },
          "bytes32SetContains(bytes32)": {
            "calls": 159,
            "min": 363,
            "mean": 8699,
            "median": 8915,
            "max": 8928
          },
          "removeFromAddressSet(address)": {
            "calls": 182,
            "min": 21679,
            "mean": 28159,
            "median": 28336,
            "max": 28336
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 170,
            "min": 21649,
            "mean": 30316,
            "median": 30526,
            "max": 30538
          },
          "uint8SetAt(uint256)": {
            "calls": 15,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26533,
            "mean": 50049,
            "median": 48731,
            "max": 142595
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28567,
            "mean": 54012,
            "median": 50866,
            "max": 161647
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24040,
            "mean": 27925,
            "median": 27015,
            "max": 44043
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 29666708,
          "size": 147921
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 391
          },
          "divWad(uint256,uint256)": {
            "calls": 95,
            "min": 428,
            "mean": 428,
            "median": 428,
            "max": 428
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 346,
            "mean": 377,
            "median": 390,
            "max": 390
          },
          "divWadUp(uint256,uint256)": {
            "calls": 95,
            "min": 427,
            "mean": 427,
            "median": 427,
            "max": 427
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 336,
            "mean": 336,
            "median": 336,
            "max": 336
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 330,
            "min": 535,
            "mean": 593,
            "median": 548,
            "max": 935
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 379,
            "mean": 441,
            "median": 415,
            "max": 555
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 606,
            "mean": 608,
            "median": 606,
            "max": 945
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 338,
            "mean": 338,
            "median": 338,
            "max": 338
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 322,
            "mean": 322,
            "median": 322,
            "max": 322
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 440,
            "mean": 451,
            "median": 457,
            "max": 457
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 393,
            "mean": 413,
            "median": 416,
            "max": 432
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 422,
            "mean": 447,
            "median": 458,
            "max": 471
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 413,
            "mean": 447,
            "median": 474,
            "max": 477
          },
          "mulWad(uint256,uint256)": {
            "calls": 110,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 416,
            "mean": 435,
            "median": 439,
            "max": 452
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 106,
            "min": 443,
            "mean": 443,
            "median": 443,
            "max": 443
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 918,
            "mean": 918,
            "median": 918,
            "max": 918
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 664,
            "mean": 1675,
            "median": 1675,
            "max": 2686
          },
          "sDivWad(int256,int256)": {
            "calls": 85,
            "min": 451,
            "mean": 451,
            "median": 451,
            "max": 451
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 448,
            "mean": 518,
            "median": 552,
            "max": 552
          },
          "sMulWad(int256,int256)": {
            "calls": 97,
            "min": 516,
            "mean": 528,
            "median": 529,
            "max": 529
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 447,
            "mean": 549,
            "median": 563,
            "max": 563
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/Initializable.t.sol:InitializableTest",
        "deployment": {
          "gas": 2729074,
          "size": 12709
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 5055,
            "mean": 5055,
            "median": 5055,
            "max": 5055
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44140,
            "mean": 44140,
            "median": 44140,
            "max": 44140
          },
          "value()": {
            "calls": 1,
            "min": 5066,
            "mean": 5066,
            "median": 5066,
            "max": 5066
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2613936,
          "size": 12991
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 4193932,
          "size": 20881
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23680,
            "mean": 33794,
            "median": 33794,
            "max": 43908
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26614,
            "mean": 35165,
            "median": 35165,
            "max": 43717
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 4889880,
          "size": 24356
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 535,
            "min": 23238,
            "mean": 24212,
            "median": 23862,
            "max": 26946
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 24857,
            "mean": 27170,
            "median": 26465,
            "max": 291841
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28127,
            "mean": 28742,
            "median": 28668,
            "max": 29755
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24383,
            "mean": 25794,
            "median": 26019,
            "max": 26755
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 272,
            "min": 2848,
            "mean": 710688,
            "median": 623806,
            "max": 4167551
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 4541800,
          "size": 22618
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 107504,
            "mean": 1364570,
            "median": 1053468,
            "max": 83526549
          },
          "getArgAddress(uint256)": {
            "calls": 8,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 8,
            "min": 519,
            "mean": 532,
            "median": 531,
            "max": 555
          },
          "getArgUint256(uint256)": {
            "calls": 24,
            "min": 1660,
            "mean": 1660,
            "median": 1660,
            "max": 1660
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 8,
            "min": 8396,
            "mean": 44604,
            "median": 48057,
            "max": 69138
          },
          "getArgUint64(uint256)": {
            "calls": 8,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getArgUint8(uint256)": {
            "calls": 8,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "getCalldataHash()": {
            "calls": 8,
            "min": 749,
            "mean": 2196,
            "median": 2329,
            "max": 3191
          },
          "revertWithError()": {
            "calls": 8,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 22332,
            "mean": 22332,
            "median": 22332,
            "max": 22332
          },
          "value()": {
            "calls": 1038,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 172773,
          "size": 588
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44553,
            "mean": 45094,
            "median": 44865,
            "max": 46552
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 1028979,
          "size": 5156
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 389,
            "min": 567,
            "mean": 696,
            "median": 761,
            "max": 785
          },
          "revertWithError()": {
            "calls": 1,
            "min": 12083,
            "mean": 12083,
            "median": 12083,
            "max": 12083
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 51171,
            "mean": 51171,
            "median": 51171,
            "max": 51171
          },
          "value()": {
            "calls": 1,
            "min": 12097,
            "mean": 12097,
            "median": 12097,
            "max": 12097
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 18629303,
          "size": 92912
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 10,
            "min": 485,
            "mean": 2735,
            "median": 2985,
            "max": 2985
          },
          "argsOnClone(address,uint256)": {
            "calls": 13,
            "min": 3029,
            "mean": 3031,
            "median": 3029,
            "max": 3046
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 11,
            "min": 3282,
            "mean": 3282,
            "median": 3282,
            "max": 3282
          },
          "argsOnERC1967(address)": {
            "calls": 12,
            "min": 2990,
            "mean": 2990,
            "median": 2990,
            "max": 2990
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 12,
            "min": 3013,
            "mean": 3013,
            "median": 3013,
            "max": 3013
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 6,
            "min": 3301,
            "mean": 3301,
            "median": 3301,
            "max": 3301
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 9,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 3,
            "min": 2988,
            "mean": 2993,
            "median": 2988,
            "max": 3005
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 3,
            "min": 3317,
            "mean": 3317,
            "median": 3317,
            "max": 3317
          },
          "argsOnERC1967I(address)": {
            "calls": 10,
            "min": 2969,
            "mean": 2969,
            "median": 2969,
            "max": 2969
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 9,
            "min": 3011,
            "mean": 3012,
            "median": 3011,
            "max": 3028
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 3,
            "min": 3307,
            "mean": 3307,
            "median": 3307,
            "max": 3307
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 5,
            "min": 2988,
            "mean": 2988,
            "median": 2988,
            "max": 2988
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 9,
            "min": 3012,
            "mean": 3012,
            "median": 3012,
            "max": 3012
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 4,
            "min": 3285,
            "mean": 3285,
            "median": 3285,
            "max": 3285
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 60,
            "min": 35882,
            "mean": 47455,
            "median": 56139,
            "max": 56371
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 652,
            "mean": 655,
            "median": 652,
            "max": 668
          },
          "clone(address)": {
            "calls": 257,
            "min": 85407,
            "mean": 85407,
            "median": 85407,
            "max": 85407
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69303,
            "mean": 2971117,
            "median": 71160,
            "max": 96825507
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 266,
            "min": 69799,
            "mean": 9381589,
            "median": 72785,
            "max": 96823536
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 85810,
            "mean": 117264,
            "median": 86182,
            "max": 586586
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 265,
            "min": 0,
            "mean": 390302,
            "median": 74711,
            "max": 11690604
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 262,
            "min": 0,
            "mean": 214516,
            "median": 100060,
            "max": 10482140
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 114389,
            "mean": 145425,
            "median": 114761,
            "max": 975341
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 358,
            "min": 0,
            "mean": 436171,
            "median": 104763,
            "max": 13349234
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 101502,
            "mean": 133345,
            "median": 101874,
            "max": 669474
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 523339,
            "median": 104502,
            "max": 13735043
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 118637,
            "mean": 162506,
            "median": 119009,
            "max": 2266376
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 361,
            "min": 0,
            "mean": 208748,
            "median": 105569,
            "max": 9221623
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102508,
            "mean": 158928,
            "median": 102880,
            "max": 4460887
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 262,
            "min": 95159,
            "mean": 4158419,
            "median": 99089,
            "max": 96832778
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 390,
            "min": 94309,
            "mean": 139258,
            "median": 111593,
            "max": 618432
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 440,
            "min": 99214,
            "mean": 16825832,
            "median": 104714,
            "max": 96810068
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 98511,
            "mean": 135965,
            "median": 98883,
            "max": 599287
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 267,
            "min": 99428,
            "mean": 6882417,
            "median": 103221,
            "max": 96827365
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 637,
            "min": 98511,
            "mean": 137946,
            "median": 99026,
            "max": 616467
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 459,
            "min": 80946,
            "mean": 17729690,
            "median": 106333,
            "max": 96818516
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99542,
            "mean": 125240,
            "median": 99902,
            "max": 600306
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 94641,
            "mean": 2177872,
            "median": 98202,
            "max": 96830157
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98056,
            "mean": 139251,
            "median": 98199,
            "max": 2369364
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 129,
            "min": 98659,
            "mean": 3981347,
            "median": 103635,
            "max": 96825636
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115170,
            "mean": 115170,
            "median": 115170,
            "max": 115170
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 98875,
            "mean": 1296067,
            "median": 101365,
            "max": 96807881
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99045,
            "mean": 123493,
            "median": 99188,
            "max": 599502
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 125,
            "min": 99649,
            "mean": 2527047,
            "median": 102795,
            "max": 96755476
          },
          "revertWithError()": {
            "calls": 7120,
            "min": 45,
            "mean": 2367,
            "median": 2384,
            "max": 2384
          },
          "setValue(uint256)": {
            "calls": 7496,
            "min": 395,
            "mean": 22204,
            "median": 22395,
            "max": 22395
          },
          "value()": {
            "calls": 21028,
            "min": 45,
            "mean": 2389,
            "median": 2400,
            "max": 2400
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 4233383,
          "size": 21078
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 592,
            "mean": 592,
            "median": 592,
            "max": 592
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 573,
            "mean": 573,
            "median": 573,
            "max": 573
          },
          "decodeBatch(bytes)": {
            "calls": 60,
            "min": 904,
            "mean": 2443,
            "median": 2925,
            "max": 4342
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 32,
            "min": 1253,
            "mean": 1471,
            "median": 1451,
            "max": 1625
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 652,
            "min": 508,
            "mean": 1609,
            "median": 863,
            "max": 4707
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 797,
            "mean": 816,
            "median": 809,
            "max": 845
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 841,
            "mean": 860,
            "median": 853,
            "max": 889
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23304,
            "mean": 23304,
            "median": 23304,
            "max": 23304
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 136,
            "min": 29706,
            "mean": 37513,
            "median": 36676,
            "max": 52080
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 617436,
            "mean": 709145,
            "median": 622928,
            "max": 4434405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 7801761,
          "size": 38893
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 43947,
            "mean": 43947,
            "median": 43947,
            "max": 43947
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 43920,
            "mean": 43920,
            "median": 43920,
            "max": 43920
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 5042496,
          "size": 25118
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2387,
            "mean": 3591,
            "median": 4738,
            "max": 4743
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23753,
            "mean": 23776,
            "median": 23789,
            "max": 23789
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21498,
            "mean": 43599,
            "median": 43694,
            "max": 43694
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23610,
            "mean": 23884,
            "median": 23982,
            "max": 23982
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibRLP.t.sol:LibRLPTest",
        "deployment": {
          "gas": 6578188,
          "size": 35715
        },
        "functions": {
          "revertWithError()": {
            "calls": 8,
            "min": 5055,
            "mean": 8744,
            "median": 7170,
            "max": 12083
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 43948,
            "mean": 47666,
            "median": 46255,
            "max": 51155
          },
          "value()": {
            "calls": 8,
            "min": 5066,
            "mean": 8756,
            "median": 7181,
            "max": 12097
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 11146309,
          "size": 55585
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24507,
            "mean": 45648,
            "median": 29423,
            "max": 130141
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24771,
            "mean": 49321,
            "median": 30424,
            "max": 148719
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 22085205,
          "size": 110142
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 657,
            "mean": 665,
            "median": 663,
            "max": 675
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 576,
            "mean": 576,
            "median": 576,
            "max": 576
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 670,
            "mean": 670,
            "median": 670,
            "max": 670
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 264667,
          "size": 1013
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27328,
            "mean": 51609,
            "median": 50794,
            "max": 82237
          },
          "x()": {
            "calls": 6,
            "min": 2598,
            "mean": 10249,
            "median": 5850,
            "max": 37652
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 169525,
          "size": 570
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27189,
            "mean": 41853,
            "median": 32589,
            "max": 82164
          },
          "x()": {
            "calls": 6,
            "min": 2449,
            "mean": 9350,
            "median": 4627,
            "max": 37319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2928242,
          "size": 14078
        },
        "functions": {
          "revertWithError()": {
            "calls": 6,
            "min": 5055,
            "mean": 8847,
            "median": 9550,
            "max": 11946
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 44140,
            "mean": 47932,
            "median": 48630,
            "max": 51034
          },
          "value()": {
            "calls": 6,
            "min": 5066,
            "mean": 8860,
            "median": 9562,
            "max": 11960
          },
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22403,
            "mean": 26939,
            "median": 28216,
            "max": 29884
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 24755,
            "mean": 35178,
            "median": 34295,
            "max": 84390
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2732881,
          "size": 13585
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "name()": {
            "calls": 256,
            "min": 4805,
            "mean": 6759,
            "median": 4857,
            "max": 13593
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 262
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 4839,
            "mean": 6805,
            "median": 4868,
            "max": 13681
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "returnsString()": {
            "calls": 512,
            "min": 4838,
            "mean": 6689,
            "median": 4880,
            "max": 13622
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "reverts()": {
            "calls": 258,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          },
          "symbol()": {
            "calls": 256,
            "min": 4828,
            "mean": 6782,
            "median": 4880,
            "max": 13616
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 10608048,
          "size": 52899
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 128,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "enqueue(uint256,uint256)": {
            "calls": 397,
            "min": 21654,
            "mean": 50559,
            "median": 66257,
            "max": 66389
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 117,
            "min": 400,
            "mean": 400,
            "median": 400,
            "max": 400
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 123,
            "min": 640,
            "mean": 644,
            "median": 648,
            "max": 648
          },
          "pop()": {
            "calls": 67,
            "min": 23441,
            "mean": 23441,
            "median": 23441,
            "max": 23441
          },
          "replace(uint256)": {
            "calls": 75,
            "min": 23634,
            "mean": 23913,
            "median": 24006,
            "max": 24006
          },
          "root()": {
            "calls": 115,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/OwnableRoles.t.sol:OwnableRolesTest",
        "deployment": {
          "gas": 6193994,
          "size": 29357
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 12083,
            "mean": 12083,
            "median": 12083,
            "max": 12083
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 51171,
            "mean": 51171,
            "median": 51171,
            "max": 51171
          },
          "value()": {
            "calls": 1,
            "min": 12097,
            "mean": 12097,
            "median": 12097,
            "max": 12097
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 5138833,
          "size": 25599
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22488,
            "mean": 23529,
            "median": 23976,
            "max": 23976
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 578304,
          "size": 2767
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 15,
            "min": 3405,
            "mean": 3440,
            "median": 3440,
            "max": 3481
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3665,
            "mean": 3699,
            "median": 3707,
            "max": 3715
          },
          "getArgUint256(uint256)": {
            "calls": 27,
            "min": 4784,
            "mean": 4818,
            "median": 4819,
            "max": 4860
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 15,
            "min": 23758,
            "mean": 25683,
            "median": 25299,
            "max": 28115
          },
          "getArgUint64(uint256)": {
            "calls": 15,
            "min": 3418,
            "mean": 3453,
            "median": 3453,
            "max": 3494
          },
          "getArgUint8(uint256)": {
            "calls": 15,
            "min": 3439,
            "mean": 3474,
            "median": 3474,
            "max": 3515
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 4337,
            "mean": 4419,
            "median": 4419,
            "max": 4487
          },
          "revertWithError()": {
            "calls": 15,
            "min": 5478,
            "mean": 5512,
            "median": 5512,
            "max": 5554
          },
          "setValue(uint256)": {
            "calls": 15,
            "min": 44157,
            "mean": 44325,
            "median": 44300,
            "max": 44586
          },
          "value()": {
            "calls": 15,
            "min": 5433,
            "mean": 5467,
            "median": 5467,
            "max": 5509
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 8627381,
          "size": 43014
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21484,
            "mean": 23891,
            "median": 23891,
            "max": 26298
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 23828,
            "mean": 24156,
            "median": 24159,
            "max": 24159
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 1298975,
          "size": 5931
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 8,
            "min": 4106,
            "mean": 4159,
            "median": 4165,
            "max": 4197
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 4360,
            "mean": 4436,
            "median": 4449,
            "max": 4465
          },
          "getArgUint256(uint256)": {
            "calls": 18,
            "min": 5485,
            "mean": 5541,
            "median": 5550,
            "max": 5576
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 8,
            "min": 57713,
            "mean": 60497,
            "median": 60617,
            "max": 61921
          },
          "getArgUint64(uint256)": {
            "calls": 8,
            "min": 4119,
            "mean": 4172,
            "median": 4178,
            "max": 4210
          },
          "getArgUint8(uint256)": {
            "calls": 8,
            "min": 4140,
            "mean": 4193,
            "median": 4199,
            "max": 4231
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 6368,
            "mean": 6544,
            "median": 6580,
            "max": 6638
          },
          "revertWithError()": {
            "calls": 8,
            "min": 6178,
            "mean": 6232,
            "median": 6237,
            "max": 6269
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 44858,
            "mean": 45012,
            "median": 44977,
            "max": 45283
          },
          "value()": {
            "calls": 8,
            "min": 6133,
            "mean": 6187,
            "median": 6192,
            "max": 6224
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 2600921,
          "size": 12926
        },
        "functions": {
          "read(address)": {
            "calls": 154,
            "min": 2907,
            "mean": 2962,
            "median": 2907,
            "max": 3213
          },
          "read(address,uint256)": {
            "calls": 107,
            "min": 2943,
            "mean": 3036,
            "median": 2943,
            "max": 3297
          },
          "read(address,uint256,uint256)": {
            "calls": 51,
            "min": 3204,
            "mean": 4175,
            "median": 3516,
            "max": 23966
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468298,
            "mean": 48556925,
            "median": 48556925,
            "max": 83645553
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 13469499,
          "size": 65565
        },
        "functions": {
          "argBytesHash()": {
            "calls": 1,
            "min": 56276,
            "mean": 56276,
            "median": 56276,
            "max": 56276
          },
          "revertWithError()": {
            "calls": 4,
            "min": 7150,
            "mean": 12972,
            "median": 9618,
            "max": 25501
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 46147,
            "mean": 51922,
            "median": 48677,
            "max": 64188
          },
          "toInt104(int256)": {
            "calls": 24,
            "min": 297,
            "mean": 330,
            "median": 335,
            "max": 335
          },
          "toInt104(uint256)": {
            "calls": 10,
            "min": 302,
            "mean": 313,
            "median": 302,
            "max": 340
          },
          "toInt112(int256)": {
            "calls": 40,
            "min": 286,
            "mean": 315,
            "median": 324,
            "max": 324
          },
          "toInt112(uint256)": {
            "calls": 12,
            "min": 311,
            "mean": 326,
            "median": 311,
            "max": 349
          },
          "toInt120(int256)": {
            "calls": 34,
            "min": 329,
            "mean": 354,
            "median": 367,
            "max": 367
          },
          "toInt120(uint256)": {
            "calls": 13,
            "min": 310,
            "mean": 336,
            "median": 348,
            "max": 348
          },
          "toInt128(int256)": {
            "calls": 46,
            "min": 317,
            "mean": 347,
            "median": 355,
            "max": 355
          },
          "toInt128(uint256)": {
            "calls": 12,
            "min": 279,
            "mean": 294,
            "median": 279,
            "max": 317
          },
          "toInt136(int256)": {
            "calls": 36,
            "min": 310,
            "mean": 337,
            "median": 348,
            "max": 348
          },
          "toInt136(uint256)": {
            "calls": 15,
            "min": 313,
            "mean": 328,
            "median": 313,
            "max": 351
          },
          "toInt144(int256)": {
            "calls": 24,
            "min": 311,
            "mean": 337,
            "median": 349,
            "max": 349
          },
          "toInt144(uint256)": {
            "calls": 12,
            "min": 312,
            "mean": 331,
            "median": 331,
            "max": 350
          },
          "toInt152(int256)": {
            "calls": 26,
            "min": 316,
            "mean": 343,
            "median": 354,
            "max": 354
          },
          "toInt152(uint256)": {
            "calls": 18,
            "min": 322,
            "mean": 336,
            "median": 322,
            "max": 360
          },
          "toInt16(int256)": {
            "calls": 64,
            "min": 310,
            "mean": 333,
            "median": 348,
            "max": 348
          },
          "toInt16(uint256)": {
            "calls": 15,
            "min": 269,
            "mean": 279,
            "median": 269,
            "max": 307
          },
          "toInt160(int256)": {
            "calls": 30,
            "min": 309,
            "mean": 336,
            "median": 347,
            "max": 347
          },
          "toInt160(uint256)": {
            "calls": 17,
            "min": 293,
            "mean": 306,
            "median": 293,
            "max": 331
          },
          "toInt168(int256)": {
            "calls": 32,
            "min": 309,
            "mean": 339,
            "median": 347,
            "max": 347
          },
          "toInt168(uint256)": {
            "calls": 17,
            "min": 312,
            "mean": 329,
            "median": 312,
            "max": 350
          },
          "toInt176(int256)": {
            "calls": 32,
            "min": 286,
            "mean": 315,
            "median": 324,
            "max": 324
          },
          "toInt176(uint256)": {
            "calls": 18,
            "min": 310,
            "mean": 326,
            "median": 310,
            "max": 348
          },
          "toInt184(int256)": {
            "calls": 28,
            "min": 318,
            "mean": 341,
            "median": 356,
            "max": 356
          },
          "toInt184(uint256)": {
            "calls": 12,
            "min": 323,
            "mean": 348,
            "median": 361,
            "max": 361
          },
          "toInt192(int256)": {
            "calls": 28,
            "min": 274,
            "mean": 302,
            "median": 312,
            "max": 312
          },
          "toInt192(uint256)": {
            "calls": 14,
            "min": 303,
            "mean": 308,
            "median": 303,
            "max": 341
          },
          "toInt200(int256)": {
            "calls": 36,
            "min": 308,
            "mean": 337,
            "median": 346,
            "max": 346
          },
          "toInt200(uint256)": {
            "calls": 11,
            "min": 311,
            "mean": 331,
            "median": 349,
            "max": 349
          },
          "toInt208(int256)": {
            "calls": 40,
            "min": 311,
            "mean": 339,
            "median": 349,
            "max": 349
          },
          "toInt208(uint256)": {
            "calls": 14,
            "min": 292,
            "mean": 316,
            "median": 330,
            "max": 330
          },
          "toInt216(int256)": {
            "calls": 24,
            "min": 310,
            "mean": 340,
            "median": 348,
            "max": 348
          },
          "toInt216(uint256)": {
            "calls": 18,
            "min": 311,
            "mean": 336,
            "median": 349,
            "max": 349
          },
          "toInt224(int256)": {
            "calls": 36,
            "min": 315,
            "mean": 344,
            "median": 353,
            "max": 353
          },
          "toInt224(uint256)": {
            "calls": 13,
            "min": 323,
            "mean": 355,
            "median": 361,
            "max": 361
          },
          "toInt232(int256)": {
            "calls": 32,
            "min": 306,
            "mean": 338,
            "median": 344,
            "max": 344
          },
          "toInt232(uint256)": {
            "calls": 14,
            "min": 311,
            "mean": 335,
            "median": 349,
            "max": 349
          },
          "toInt24(int256)": {
            "calls": 40,
            "min": 287,
            "mean": 309,
            "median": 325,
            "max": 325
          },
          "toInt24(uint256)": {
            "calls": 23,
            "min": 313,
            "mean": 317,
            "median": 313,
            "max": 351
          },
          "toInt240(int256)": {
            "calls": 40,
            "min": 309,
            "mean": 338,
            "median": 347,
            "max": 347
          },
          "toInt240(uint256)": {
            "calls": 11,
            "min": 291,
            "mean": 308,
            "median": 291,
            "max": 329
          },
          "toInt248(int256)": {
            "calls": 32,
            "min": 275,
            "mean": 309,
            "median": 314,
            "max": 314
          },
          "toInt248(uint256)": {
            "calls": 15,
            "min": 305,
            "mean": 319,
            "median": 333,
            "max": 333
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 306,
            "mean": 316,
            "median": 317,
            "max": 317
          },
          "toInt32(int256)": {
            "calls": 50,
            "min": 297,
            "mean": 320,
            "median": 335,
            "max": 335
          },
          "toInt32(uint256)": {
            "calls": 14,
            "min": 305,
            "mean": 310,
            "median": 305,
            "max": 343
          },
          "toInt40(int256)": {
            "calls": 36,
            "min": 275,
            "mean": 297,
            "median": 313,
            "max": 313
          },
          "toInt40(uint256)": {
            "calls": 22,
            "min": 303,
            "mean": 320,
            "median": 303,
            "max": 341
          },
          "toInt48(int256)": {
            "calls": 16,
            "min": 274,
            "mean": 293,
            "median": 293,
            "max": 312
          },
          "toInt48(uint256)": {
            "calls": 12,
            "min": 304,
            "mean": 307,
            "median": 304,
            "max": 342
          },
          "toInt56(int256)": {
            "calls": 40,
            "min": 286,
            "mean": 315,
            "median": 324,
            "max": 324
          },
          "toInt56(uint256)": {
            "calls": 15,
            "min": 313,
            "mean": 325,
            "median": 313,
            "max": 351
          },
          "toInt64(int256)": {
            "calls": 30,
            "min": 287,
            "mean": 308,
            "median": 314,
            "max": 314
          },
          "toInt64(uint256)": {
            "calls": 15,
            "min": 310,
            "mean": 315,
            "median": 310,
            "max": 337
          },
          "toInt72(int256)": {
            "calls": 38,
            "min": 330,
            "mean": 358,
            "median": 368,
            "max": 368
          },
          "toInt72(uint256)": {
            "calls": 20,
            "min": 312,
            "mean": 323,
            "median": 312,
            "max": 350
          },
          "toInt8(int256)": {
            "calls": 32,
            "min": 310,
            "mean": 311,
            "median": 310,
            "max": 346
          },
          "toInt8(uint256)": {
            "calls": 19,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "toInt80(int256)": {
            "calls": 36,
            "min": 317,
            "mean": 342,
            "median": 355,
            "max": 355
          },
          "toInt80(uint256)": {
            "calls": 7,
            "min": 279,
            "mean": 300,
            "median": 317,
            "max": 317
          },
          "toInt88(int256)": {
            "calls": 18,
            "min": 275,
            "mean": 300,
            "median": 313,
            "max": 313
          },
          "toInt88(uint256)": {
            "calls": 8,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "toInt96(int256)": {
            "calls": 26,
            "min": 315,
            "mean": 339,
            "median": 353,
            "max": 353
          },
          "toInt96(uint256)": {
            "calls": 23,
            "min": 320,
            "mean": 341,
            "median": 358,
            "max": 358
          },
          "toUint104(uint256)": {
            "calls": 15,
            "min": 302,
            "mean": 309,
            "median": 302,
            "max": 324
          },
          "toUint112(uint256)": {
            "calls": 14,
            "min": 322,
            "mean": 328,
            "median": 322,
            "max": 344
          },
          "toUint120(uint256)": {
            "calls": 12,
            "min": 321,
            "mean": 322,
            "median": 321,
            "max": 343
          },
          "toUint128(uint256)": {
            "calls": 13,
            "min": 302,
            "mean": 312,
            "median": 302,
            "max": 324
          },
          "toUint136(uint256)": {
            "calls": 14,
            "min": 303,
            "mean": 310,
            "median": 303,
            "max": 325
          },
          "toUint144(uint256)": {
            "calls": 17,
            "min": 303,
            "mean": 309,
            "median": 303,
            "max": 325
          },
          "toUint152(uint256)": {
            "calls": 18,
            "min": 303,
            "mean": 318,
            "median": 325,
            "max": 325
          },
          "toUint16(uint256)": {
            "calls": 23,
            "min": 304,
            "mean": 312,
            "median": 304,
            "max": 326
          },
          "toUint160(uint256)": {
            "calls": 15,
            "min": 323,
            "mean": 333,
            "median": 323,
            "max": 345
          },
          "toUint168(uint256)": {
            "calls": 17,
            "min": 322,
            "mean": 337,
            "median": 344,
            "max": 344
          },
          "toUint176(uint256)": {
            "calls": 17,
            "min": 308,
            "mean": 318,
            "median": 308,
            "max": 330
          },
          "toUint184(uint256)": {
            "calls": 16,
            "min": 304,
            "mean": 316,
            "median": 326,
            "max": 326
          },
          "toUint192(uint256)": {
            "calls": 9,
            "min": 301,
            "mean": 313,
            "median": 323,
            "max": 323
          },
          "toUint200(uint256)": {
            "calls": 16,
            "min": 279,
            "mean": 292,
            "median": 301,
            "max": 301
          },
          "toUint208(uint256)": {
            "calls": 18,
            "min": 323,
            "mean": 329,
            "median": 323,
            "max": 345
          },
          "toUint216(uint256)": {
            "calls": 13,
            "min": 321,
            "mean": 324,
            "median": 321,
            "max": 343
          },
          "toUint224(uint256)": {
            "calls": 17,
            "min": 303,
            "mean": 314,
            "median": 325,
            "max": 325
          },
          "toUint232(uint256)": {
            "calls": 12,
            "min": 320,
            "mean": 327,
            "median": 320,
            "max": 342
          },
          "toUint24(uint256)": {
            "calls": 12,
            "min": 323,
            "mean": 326,
            "median": 323,
            "max": 345
          },
          "toUint240(uint256)": {
            "calls": 14,
            "min": 321,
            "mean": 332,
            "median": 332,
            "max": 343
          },
          "toUint248(uint256)": {
            "calls": 21,
            "min": 303,
            "mean": 314,
            "median": 325,
            "max": 325
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 324,
            "mean": 331,
            "median": 335,
            "max": 335
          },
          "toUint32(uint256)": {
            "calls": 17,
            "min": 321,
            "mean": 323,
            "median": 321,
            "max": 343
          },
          "toUint40(uint256)": {
            "calls": 21,
            "min": 306,
            "mean": 311,
            "median": 306,
            "max": 328
          },
          "toUint48(uint256)": {
            "calls": 8,
            "min": 322,
            "mean": 327,
            "median": 322,
            "max": 344
          },
          "toUint56(uint256)": {
            "calls": 19,
            "min": 302,
            "mean": 310,
            "median": 302,
            "max": 324
          },
          "toUint64(uint256)": {
            "calls": 19,
            "min": 303,
            "mean": 312,
            "median": 303,
            "max": 325
          },
          "toUint72(uint256)": {
            "calls": 13,
            "min": 301,
            "mean": 307,
            "median": 301,
            "max": 323
          },
          "toUint8(uint256)": {
            "calls": 29,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 323
          },
          "toUint80(uint256)": {
            "calls": 11,
            "min": 322,
            "mean": 326,
            "median": 322,
            "max": 344
          },
          "toUint88(uint256)": {
            "calls": 16,
            "min": 280,
            "mean": 291,
            "median": 291,
            "max": 302
          },
          "toUint96(uint256)": {
            "calls": 22,
            "min": 301,
            "mean": 308,
            "median": 301,
            "max": 323
          },
          "value()": {
            "calls": 4,
            "min": 7161,
            "mean": 12969,
            "median": 9631,
            "max": 25456
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 4090587,
          "size": 18557
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33177,
            "mean": 42411,
            "median": 39839,
            "max": 71959
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 38062,
            "mean": 60310,
            "median": 51836,
            "max": 120603
          },
          "revertWithError()": {
            "calls": 2,
            "min": 7170,
            "mean": 7170,
            "median": 7170,
            "max": 7170
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 46255,
            "mean": 46255,
            "median": 46255,
            "max": 46255
          },
          "value()": {
            "calls": 2,
            "min": 7181,
            "mean": 7181,
            "median": 7181,
            "max": 7181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 6969006,
          "size": 34736
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1548,
            "mean": 8734,
            "median": 9356,
            "max": 16028
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 294,
            "min": 1052,
            "mean": 10311,
            "median": 10349,
            "max": 16380
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 126,
            "min": 6469,
            "mean": 6472,
            "median": 6469,
            "max": 6477
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/Timelock.t.sol:TimelockTest",
        "deployment": {
          "gas": 5135224,
          "size": 24346
        },
        "functions": {
          "revertWithError()": {
            "calls": 7,
            "min": 5055,
            "mean": 9601,
            "median": 11930,
            "max": 12067
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 44140,
            "mean": 48616,
            "median": 50658,
            "max": 51155
          },
          "value()": {
            "calls": 7,
            "min": 5066,
            "mean": 9614,
            "median": 11944,
            "max": 12081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/UUPSUpgradeable.t.sol:UUPSUpgradeableTest",
        "deployment": {
          "gas": 1330530,
          "size": 5673
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 22,
            "min": 4026,
            "mean": 4102,
            "median": 4079,
            "max": 4241
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 16,
            "min": 4286,
            "mean": 4361,
            "median": 4363,
            "max": 4495
          },
          "getArgUint256(uint256)": {
            "calls": 54,
            "min": 5405,
            "mean": 5484,
            "median": 5472,
            "max": 5620
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 22,
            "min": 54169,
            "mean": 57770,
            "median": 56735,
            "max": 64189
          },
          "getArgUint64(uint256)": {
            "calls": 22,
            "min": 4039,
            "mean": 4115,
            "median": 4092,
            "max": 4254
          },
          "getArgUint8(uint256)": {
            "calls": 22,
            "min": 4060,
            "mean": 4136,
            "median": 4113,
            "max": 4275
          },
          "getCalldataHash()": {
            "calls": 16,
            "min": 6156,
            "mean": 6374,
            "median": 6378,
            "max": 6758
          },
          "revertWithError()": {
            "calls": 23,
            "min": 5055,
            "mean": 6125,
            "median": 6138,
            "max": 6313
          },
          "setValue(uint256)": {
            "calls": 23,
            "min": 44140,
            "mean": 44873,
            "median": 44890,
            "max": 45353
          },
          "value()": {
            "calls": 23,
            "min": 5066,
            "mean": 6083,
            "median": 6093,
            "max": 6268
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 177480,
          "size": 696
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 25,
            "min": 44948,
            "mean": 54524,
            "median": 44948,
            "max": 79148
          },
          "fallbackDeposit(uint256)": {
            "calls": 31,
            "min": 32266,
            "mean": 48582,
            "median": 44566,
            "max": 78766
          },
          "withdraw(uint256)": {
            "calls": 22,
            "min": 45244,
            "mean": 45259,
            "median": 45256,
            "max": 45316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 3622177,
          "size": 18026
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 129,
            "min": 1474,
            "mean": 1490,
            "median": 1493,
            "max": 1508
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/forge-std/Test.sol:stdError",
        "deployment": {
          "gas": 278650,
          "size": 1099
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 7,
            "min": 3148,
            "mean": 3163,
            "median": 3164,
            "max": 3176
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 3411,
            "mean": 3422,
            "median": 3419,
            "max": 3441
          },
          "getArgUint256(uint256)": {
            "calls": 15,
            "min": 4527,
            "mean": 4540,
            "median": 4539,
            "max": 4555
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 7,
            "min": 10443,
            "mean": 11665,
            "median": 11671,
            "max": 12885
          },
          "getArgUint64(uint256)": {
            "calls": 7,
            "min": 3161,
            "mean": 3176,
            "median": 3177,
            "max": 3189
          },
          "getArgUint8(uint256)": {
            "calls": 7,
            "min": 3182,
            "mean": 3197,
            "median": 3198,
            "max": 3210
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 3562,
            "mean": 3590,
            "median": 3590,
            "max": 3620
          },
          "revertWithError()": {
            "calls": 7,
            "min": 5221,
            "mean": 5236,
            "median": 5236,
            "max": 5249
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 43912,
            "mean": 43949,
            "median": 43934,
            "max": 44080
          },
          "value()": {
            "calls": 7,
            "min": 5176,
            "mean": 5191,
            "median": 5191,
            "max": 5204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 359804,
          "size": 1482
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 234,
            "mean": 249,
            "median": 249,
            "max": 265
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 255,
            "mean": 270,
            "median": 270,
            "max": 286
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 253,
            "mean": 268,
            "median": 268,
            "max": 283
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22045,
            "mean": 22045,
            "median": 22045,
            "max": 22045
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 267351,
          "size": 1028
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "fallback()": {
            "calls": 520,
            "min": 22888,
            "mean": 64982,
            "median": 89567,
            "max": 216308
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "receive()": {
            "calls": 260,
            "min": 65,
            "mean": 20822,
            "median": 21065,
            "max": 21065
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 524,
            "mean": 33615,
            "median": 23955,
            "max": 67274
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1727,
            "mean": 34888,
            "median": 34888,
            "max": 68049
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 111261,
          "size": 300
        },
        "functions": {
          "fallback()": {
            "calls": 994,
            "min": 266,
            "mean": 23681,
            "median": 22383,
            "max": 289163
          },
          "receive()": {
            "calls": 15,
            "min": 21087,
            "mean": 21087,
            "median": 21087,
            "max": 21087
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 317975,
          "size": 1291
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 227,
            "mean": 339,
            "median": 396,
            "max": 396
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 762,
            "mean": 762,
            "median": 762,
            "max": 762
          },
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3206,
            "mean": 3217,
            "median": 3213,
            "max": 3243
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3497,
            "mean": 3497,
            "median": 3497,
            "max": 3497
          },
          "getArgUint256(uint256)": {
            "calls": 7,
            "min": 4585,
            "mean": 4603,
            "median": 4598,
            "max": 4622
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 14428,
            "mean": 14802,
            "median": 14737,
            "max": 15374
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3219,
            "mean": 3230,
            "median": 3226,
            "max": 3256
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3240,
            "mean": 3251,
            "median": 3247,
            "max": 3277
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3839,
            "mean": 3839,
            "median": 3839,
            "max": 3839
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 314,
            "mean": 422,
            "median": 476,
            "max": 476
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 690,
            "mean": 690,
            "median": 690,
            "max": 690
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 635,
            "mean": 635,
            "median": 635,
            "max": 635
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 680,
            "mean": 680,
            "median": 680,
            "max": 680
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5279,
            "mean": 5290,
            "median": 5285,
            "max": 5316
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 43965,
            "mean": 44156,
            "median": 44162,
            "max": 44330
          },
          "value()": {
            "calls": 5,
            "min": 5234,
            "mean": 5245,
            "median": 5240,
            "max": 5271
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 859357,
          "size": 5114
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5135,
            "mean": 5148,
            "median": 5153,
            "max": 5153
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5330,
            "mean": 5339,
            "median": 5339,
            "max": 5348
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5236,
            "mean": 5245,
            "median": 5245,
            "max": 5254
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5249,
            "mean": 5258,
            "median": 5258,
            "max": 5267
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5193,
            "mean": 5202,
            "median": 5202,
            "max": 5211
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5238,
            "mean": 5247,
            "median": 5247,
            "max": 5256
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11338,
            "mean": 30063,
            "median": 33314,
            "max": 45538
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1850210,
          "size": 8377
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5512,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 453,
            "min": 545,
            "mean": 2625,
            "median": 650,
            "max": 7659
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 626,
            "min": 23637,
            "mean": 29673,
            "median": 29004,
            "max": 49714
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4235,
            "min": 23587,
            "mean": 177396,
            "median": 78378,
            "max": 54053971
          },
          "burn(address,uint256,uint256)": {
            "calls": 394,
            "min": 24792,
            "mean": 29037,
            "median": 27755,
            "max": 33078
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 909,
            "min": 24416,
            "mean": 386001,
            "median": 63244,
            "max": 53740957
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1088,
            "min": 24122,
            "mean": 296924,
            "median": 58112,
            "max": 52437003
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1968,
            "min": 26345,
            "mean": 44604,
            "median": 46490,
            "max": 46504
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2471,
            "mean": 2471,
            "median": 2471,
            "max": 2471
          },
          "lastDataHash()": {
            "calls": 40,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5017,
            "min": 22694,
            "mean": 134785,
            "median": 72404,
            "max": 51620397
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 909,
            "min": 23684,
            "mean": 255706,
            "median": 62045,
            "max": 54414895
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1095,
            "min": 23499,
            "mean": 159074,
            "median": 57491,
            "max": 53611482
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1700,
            "min": 25745,
            "mean": 45045,
            "median": 45885,
            "max": 45885
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 142,
            "min": 26291,
            "mean": 37231,
            "median": 39248,
            "max": 47113
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 118,
            "min": 25173,
            "mean": 30206,
            "median": 30309,
            "max": 30544
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 127,
            "min": 32776,
            "mean": 109189,
            "median": 93735,
            "max": 1279703
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 132,
            "min": 59077,
            "mean": 100619,
            "median": 62241,
            "max": 1494754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 443677,
          "size": 1941
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 411,
            "min": 2794,
            "mean": 2830,
            "median": 2817,
            "max": 6061
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26441,
            "mean": 26441,
            "median": 26441,
            "max": 26441
          },
          "signer()": {
            "calls": 4,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 966540,
          "size": 5542
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1281,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "allowance(address,address)": {
            "calls": 1674,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "approve(address,uint256)": {
            "calls": 1843,
            "min": 25960,
            "mean": 45872,
            "median": 45968,
            "max": 46244
          },
          "balanceOf(address)": {
            "calls": 7682,
            "min": 422,
            "mean": 2354,
            "median": 2422,
            "max": 2422
          },
          "burn(address,uint256)": {
            "calls": 513,
            "min": 24104,
            "mean": 29106,
            "median": 27212,
            "max": 34362
          },
          "decimals()": {
            "calls": 312,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 24942,
            "mean": 26814,
            "median": 27840,
            "max": 28454
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 24922,
            "mean": 36682,
            "median": 25409,
            "max": 52267
          },
          "mint(address,uint256)": {
            "calls": 3138,
            "min": 24250,
            "mean": 67849,
            "median": 68216,
            "max": 68571
          },
          "name()": {
            "calls": 258,
            "min": 2714,
            "mean": 5098,
            "median": 4897,
            "max": 9273
          },
          "nonces(address)": {
            "calls": 257,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23413,
            "mean": 43557,
            "median": 30025,
            "max": 74098
          },
          "symbol()": {
            "calls": 258,
            "min": 2712,
            "mean": 5215,
            "median": 7066,
            "max": 9259
          },
          "totalSupply()": {
            "calls": 1030,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "transfer(address,uint256)": {
            "calls": 514,
            "min": 24122,
            "mean": 35460,
            "median": 35435,
            "max": 46772
          },
          "transferFrom(address,address,uint256)": {
            "calls": 772,
            "min": 24669,
            "mean": 35614,
            "median": 30216,
            "max": 52652
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 966540,
          "size": 5542
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21796,
            "mean": 22396,
            "median": 21856,
            "max": 46184
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2422,
            "mean": 2422,
            "median": 2422,
            "max": 2422
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28380,
            "mean": 67750,
            "median": 68228,
            "max": 68564
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22506,
            "mean": 22915,
            "median": 22800,
            "max": 28945
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24873,
            "mean": 38287,
            "median": 30317,
            "max": 52343
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1720655,
          "size": 7767
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2092,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 233,
            "min": 21560,
            "mean": 22048,
            "median": 21800,
            "max": 94951
          },
          "checkpointAt(address,uint256)": {
            "calls": 300,
            "min": 0,
            "mean": 48,
            "median": 0,
            "max": 4630
          },
          "checkpointCount(address)": {
            "calls": 1256,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 489,
            "min": 21192,
            "mean": 21664,
            "median": 21432,
            "max": 91346
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23252,
            "mean": 41419,
            "median": 26135,
            "max": 75518
          },
          "delegates(address)": {
            "calls": 3930,
            "min": 0,
            "mean": 237,
            "median": 0,
            "max": 2448
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 47958,
            "mean": 48249,
            "median": 48402,
            "max": 48402
          },
          "directIncrementNonce(address)": {
            "calls": 919,
            "min": 26743,
            "mean": 30990,
            "median": 26767,
            "max": 43867
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5198,
            "mean": 5698,
            "median": 5198,
            "max": 7198
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 280,
            "mean": 3419,
            "median": 4881,
            "max": 5097
          },
          "getVotes(address)": {
            "calls": 2805,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4619
          },
          "getVotesTotalSupply()": {
            "calls": 722,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4535
          },
          "mint(address,uint256)": {
            "calls": 694,
            "min": 21548,
            "mean": 21860,
            "median": 21800,
            "max": 94554
          },
          "name()": {
            "calls": 256,
            "min": 444,
            "mean": 444,
            "median": 444,
            "max": 444
          },
          "nonces(address)": {
            "calls": 505,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "totalSupply()": {
            "calls": 360,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 479,
            "min": 21548,
            "mean": 21858,
            "median": 21800,
            "max": 86487
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 263911,
          "size": 1009
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21454,
            "mean": 21454,
            "median": 21454,
            "max": 21454
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21654,
            "mean": 21945,
            "median": 22026,
            "max": 22026
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2506,
            "mean": 4016,
            "median": 4598,
            "max": 4620
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 372,
            "min": 21979,
            "mean": 37340,
            "median": 44130,
            "max": 44346
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 744,
            "min": 22155,
            "mean": 37862,
            "median": 44729,
            "max": 44969
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1677021,
          "size": 7861
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31900,
            "mean": 31900,
            "median": 31900,
            "max": 31900
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12087,
            "mean": 12087,
            "median": 12087,
            "max": 12087
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 5999,
            "mean": 19323,
            "median": 8551,
            "max": 139753
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 843,
            "mean": 843,
            "median": 843,
            "max": 843
          },
          "entryPoint()": {
            "calls": 7,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2530,
            "mean": 16340,
            "median": 12800,
            "max": 37232
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 114,
            "min": 2818,
            "mean": 62048,
            "median": 65886,
            "max": 194030
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 145,
            "min": 2985,
            "mean": 55416,
            "median": 37865,
            "max": 216430
          },
          "fallback()": {
            "calls": 5,
            "min": 222,
            "mean": 27762,
            "median": 269,
            "max": 105092
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5265,
            "mean": 5265,
            "median": 5265,
            "max": 5265
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2397,
            "mean": 23864,
            "median": 23931,
            "max": 23931
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6523,
            "mean": 7887,
            "median": 6523,
            "max": 13783
          },
          "owner()": {
            "calls": 267,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "receive()": {
            "calls": 258,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6902,
            "mean": 6902,
            "median": 6902,
            "max": 6902
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23499,
            "mean": 23499,
            "median": 23499,
            "max": 23499
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2362,
            "mean": 13436,
            "median": 13436,
            "max": 24511
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 6973,
            "mean": 6973,
            "median": 6973,
            "max": 6973
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 320,
            "mean": 24129,
            "median": 29216,
            "max": 37766
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45025,
            "mean": 45025,
            "median": 45025,
            "max": 45025
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1627700,
          "size": 7704
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2448,
            "mean": 2448,
            "median": 2448,
            "max": 2448
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2442,
            "mean": 5097,
            "median": 7603,
            "max": 7730
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7632,
            "mean": 7674,
            "median": 7674,
            "max": 7716
          },
          "decimals()": {
            "calls": 20,
            "min": 313,
            "mean": 317,
            "median": 313,
            "max": 354
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30188,
            "mean": 119055,
            "median": 120523,
            "max": 120768
          },
          "getArgAddress(uint256)": {
            "calls": 9,
            "min": 4508,
            "mean": 4568,
            "median": 4571,
            "max": 4655
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 4797,
            "mean": 4841,
            "median": 4832,
            "max": 4909
          },
          "getArgUint256(uint256)": {
            "calls": 19,
            "min": 5887,
            "mean": 5957,
            "median": 5957,
            "max": 6034
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 9,
            "min": 77900,
            "mean": 80219,
            "median": 79897,
            "max": 83861
          },
          "getArgUint64(uint256)": {
            "calls": 9,
            "min": 4521,
            "mean": 4581,
            "median": 4584,
            "max": 4668
          },
          "getArgUint8(uint256)": {
            "calls": 9,
            "min": 4542,
            "mean": 4602,
            "median": 4605,
            "max": 4689
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 7627,
            "mean": 7755,
            "median": 7727,
            "max": 7947
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30140,
            "mean": 119355,
            "median": 120463,
            "max": 131094
          },
          "name()": {
            "calls": 1,
            "min": 2764,
            "mean": 2764,
            "median": 2764,
            "max": 2764
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 7626,
            "mean": 7626,
            "median": 7626,
            "max": 7710
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7718,
            "mean": 7718,
            "median": 7718,
            "max": 7750
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24468,
            "mean": 76886,
            "median": 77331,
            "max": 92235
          },
          "revertWithError()": {
            "calls": 10,
            "min": 6580,
            "mean": 6691,
            "median": 6646,
            "max": 7150
          },
          "setValue(uint256)": {
            "calls": 10,
            "min": 45272,
            "mean": 45427,
            "median": 45350,
            "max": 46223
          },
          "symbol()": {
            "calls": 1,
            "min": 2746,
            "mean": 2746,
            "median": 2746,
            "max": 2746
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5339,
            "mean": 5339,
            "median": 5339,
            "max": 5339
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "value()": {
            "calls": 10,
            "min": 6535,
            "mean": 6652,
            "median": 6601,
            "max": 7161
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26670,
            "mean": 77606,
            "median": 78328,
            "max": 78484
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1514941,
          "size": 7115
        },
        "functions": {
          "eip712Domain()": {
            "calls": 347,
            "min": 822,
            "mean": 822,
            "median": 822,
            "max": 822
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 5783,
            "mean": 22572,
            "median": 10804,
            "max": 62899
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 125,
            "min": 5803,
            "mean": 84520,
            "median": 63288,
            "max": 242018
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 135,
            "min": 28360,
            "mean": 96373,
            "median": 91554,
            "max": 350838
          },
          "fallback()": {
            "calls": 920,
            "min": 224,
            "mean": 6585,
            "median": 3210,
            "max": 132384
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 354,
            "min": 518,
            "mean": 14347,
            "median": 13882,
            "max": 42998
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 5809,
            "mean": 5809,
            "median": 5809,
            "max": 5809
          },
          "mockId()": {
            "calls": 2,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "owner()": {
            "calls": 795,
            "min": 5578,
            "mean": 5578,
            "median": 5578,
            "max": 5578
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "receive()": {
            "calls": 5,
            "min": 0,
            "mean": 8827,
            "median": 60,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5602,
            "mean": 14155,
            "median": 14176,
            "max": 22750
          },
          "state()": {
            "calls": 772,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "token()": {
            "calls": 536,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 5775,
            "mean": 35047,
            "median": 35208,
            "max": 52308
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1508728,
          "size": 7083
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5234,
            "mean": 5234,
            "median": 5234,
            "max": 5234
          },
          "fallback()": {
            "calls": 160,
            "min": 4322,
            "mean": 16775,
            "median": 5839,
            "max": 76255
          },
          "mockId()": {
            "calls": 1,
            "min": 390,
            "mean": 390,
            "median": 390,
            "max": 390
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "receive()": {
            "calls": 12,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5716,
            "mean": 14269,
            "median": 14290,
            "max": 22864
          },
          "state()": {
            "calls": 513,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18222,
            "mean": 18222,
            "median": 18222,
            "max": 18222
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 188450,
          "size": 657
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2422,
            "min": 94662,
            "mean": 95246,
            "median": 95298,
            "max": 95502
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 871482,
          "size": 3834
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2498,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26780,
            "mean": 46835,
            "median": 47028,
            "max": 47443
          },
          "balanceOf(address,uint256)": {
            "calls": 2425,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24224,
            "mean": 27252,
            "median": 25179,
            "max": 30431
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 27009,
            "mean": 47101,
            "median": 47161,
            "max": 47533
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 23826,
            "mean": 31936,
            "median": 26282,
            "max": 46206
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 380,
            "min": 25449,
            "mean": 41339,
            "median": 33367,
            "max": 61570
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24268,
            "mean": 45718,
            "median": 47047,
            "max": 47591
          },
          "name(uint256)": {
            "calls": 256,
            "min": 370,
            "mean": 370,
            "median": 370,
            "max": 370
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 45915,
            "mean": 45915,
            "median": 45915,
            "max": 45915
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 382,
            "mean": 382,
            "median": 382,
            "max": 382
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 724,
            "mean": 724,
            "median": 724,
            "max": 724
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1051,
            "min": 24162,
            "mean": 37383,
            "median": 46966,
            "max": 52726
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1653,
            "min": 26897,
            "mean": 38416,
            "median": 32961,
            "max": 60757
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 2058749,
          "size": 9389
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1080,
            "min": 23977,
            "mean": 43014,
            "median": 48294,
            "max": 48630
          },
          "balanceOf(address)": {
            "calls": 10193,
            "min": 2453,
            "mean": 2453,
            "median": 2453,
            "max": 2453
          },
          "burn(uint256)": {
            "calls": 238,
            "min": 28204,
            "mean": 29318,
            "median": 28650,
            "max": 31351
          },
          "directApprove(address,uint256)": {
            "calls": 1037,
            "min": 24131,
            "mean": 43430,
            "median": 48887,
            "max": 49218
          },
          "directGetApproved(uint256)": {
            "calls": 1498,
            "min": 2463,
            "mean": 4456,
            "median": 4636,
            "max": 4636
          },
          "directOwnerOf(uint256)": {
            "calls": 2543,
            "min": 2468,
            "mean": 2645,
            "median": 2689,
            "max": 2689
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 627,
            "min": 56766,
            "mean": 74654,
            "median": 63036,
            "max": 129534
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 504,
            "min": 63552,
            "mean": 95018,
            "median": 64760,
            "max": 240741
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 957,
            "min": 24297,
            "mean": 41891,
            "median": 46437,
            "max": 46463
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1808,
            "min": 25090,
            "mean": 42411,
            "median": 40959,
            "max": 57528
          },
          "exists(uint256)": {
            "calls": 494,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          },
          "getApproved(uint256)": {
            "calls": 1538,
            "min": 2446,
            "mean": 4381,
            "median": 4563,
            "max": 4563
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2729,
            "mean": 2730,
            "median": 2729,
            "max": 2742
          },
          "getExtraData(uint256)": {
            "calls": 3530,
            "min": 2417,
            "mean": 2417,
            "median": 2417,
            "max": 2417
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2802,
            "mean": 5349,
            "median": 6085,
            "max": 7138
          },
          "mint(address,uint256)": {
            "calls": 10862,
            "min": 24358,
            "mean": 64370,
            "median": 68516,
            "max": 68877
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46696,
            "mean": 55872,
            "median": 51734,
            "max": 69194
          },
          "ownerOf(uint256)": {
            "calls": 5618,
            "min": 502,
            "mean": 2486,
            "median": 2502,
            "max": 2502
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5055,
            "mean": 5055,
            "median": 5055,
            "max": 5055
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71097,
            "mean": 81459,
            "median": 71843,
            "max": 121070
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72101,
            "mean": 97893,
            "median": 73464,
            "max": 232007
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1871,
            "min": 40512,
            "mean": 68170,
            "median": 63116,
            "max": 129779
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 520,
            "min": 63771,
            "mean": 92658,
            "median": 64851,
            "max": 240677
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1152,
            "min": 24037,
            "mean": 42728,
            "median": 46177,
            "max": 46190
          },
          "setAux(address,uint224)": {
            "calls": 777,
            "min": 27576,
            "mean": 44548,
            "median": 44651,
            "max": 44676
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1495,
            "min": 23903,
            "mean": 37020,
            "median": 43935,
            "max": 44319
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44140,
            "mean": 44140,
            "median": 44140,
            "max": 44140
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1790,
            "min": 24506,
            "mean": 42032,
            "median": 40347,
            "max": 56868
          },
          "uncheckedBurn(uint256)": {
            "calls": 2936,
            "min": 23619,
            "mean": 30063,
            "median": 31031,
            "max": 36215
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 191,
            "min": 54693,
            "mean": 54950,
            "median": 54933,
            "max": 55294
          },
          "value()": {
            "calls": 1,
            "min": 5066,
            "mean": 5066,
            "median": 5066,
            "max": 5066
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 658739,
          "size": 2849
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31160,
            "mean": 97537,
            "median": 91046,
            "max": 159086
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 263,
            "min": 360259,
            "mean": 452164,
            "median": 383079,
            "max": 3773018
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2601,
            "mean": 5492,
            "median": 4782,
            "max": 11361
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22080,
            "mean": 41253,
            "median": 43992,
            "max": 43992
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 159872,
          "size": 523
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3060,
            "mean": 3062,
            "median": 3060,
            "max": 3066
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3319,
            "mean": 3319,
            "median": 3319,
            "max": 3319
          },
          "getArgUint256(uint256)": {
            "calls": 5,
            "min": 4439,
            "mean": 4442,
            "median": 4445,
            "max": 4445
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 6450,
            "mean": 6846,
            "median": 7045,
            "max": 7045
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3073,
            "mean": 3075,
            "median": 3073,
            "max": 3079
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3094,
            "mean": 3096,
            "median": 3094,
            "max": 3100
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3310,
            "mean": 3310,
            "median": 3310,
            "max": 3310
          },
          "receive()": {
            "calls": 2,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5133,
            "mean": 5135,
            "median": 5133,
            "max": 5139
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43824,
            "mean": 43826,
            "median": 43824,
            "max": 43830
          },
          "value()": {
            "calls": 3,
            "min": 5088,
            "mean": 5090,
            "median": 5088,
            "max": 5094
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 836112,
          "size": 3666
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7646,
            "min": 338,
            "mean": 4132,
            "median": 4464,
            "max": 4464
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 262,
            "min": 26710,
            "mean": 28087,
            "median": 28120,
            "max": 28120
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 36,
            "min": 26296,
            "mean": 39040,
            "median": 39771,
            "max": 59272
          },
          "guardedByOnlyRoles()": {
            "calls": 36,
            "min": 23740,
            "mean": 38904,
            "median": 39116,
            "max": 56716
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1014,
            "mean": 8622,
            "median": 7735,
            "max": 16680
          },
          "hasRole(address,uint256)": {
            "calls": 1705,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          },
          "owner()": {
            "calls": 1939,
            "min": 2350,
            "mean": 2365,
            "median": 2367,
            "max": 2367
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 244,
            "min": 2434,
            "mean": 2680,
            "median": 2477,
            "max": 4573
          },
          "roleHolderCount(uint256)": {
            "calls": 3561,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "roleHolders(uint256)": {
            "calls": 3637,
            "min": 2552,
            "mean": 2874,
            "median": 2552,
            "max": 20876
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23621,
            "mean": 43346,
            "median": 43593,
            "max": 43905
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 36,
            "min": 24297,
            "mean": 124573,
            "median": 133669,
            "max": 223014
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21601,
            "mean": 27006,
            "median": 26461,
            "max": 43885
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23657,
            "mean": 25194,
            "median": 26469,
            "max": 26469
          },
          "setOwner(address)": {
            "calls": 271,
            "min": 21645,
            "mean": 27086,
            "median": 26685,
            "max": 43785
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23666,
            "mean": 25050,
            "median": 23666,
            "max": 26478
          },
          "setRole(address,uint256,bool)": {
            "calls": 1385,
            "min": 24262,
            "mean": 59277,
            "median": 73587,
            "max": 74115
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6524,
            "min": 33394,
            "mean": 59658,
            "median": 73635,
            "max": 78542
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 120869,
          "size": 346
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "getValue(uint256)": {
            "calls": 956,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "setValue(uint256,uint256)": {
            "calls": 956,
            "min": 2424,
            "mean": 22303,
            "median": 22324,
            "max": 22324
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 425146,
          "size": 3261
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23367,
            "mean": 33885,
            "median": 33885,
            "max": 44403
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 201,
            "min": 27446,
            "mean": 63247,
            "median": 68064,
            "max": 90580
          },
          "isInitializing()": {
            "calls": 206,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23404,
            "mean": 23404,
            "median": 23404,
            "max": 23404
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 250,
            "min": 24406,
            "mean": 52533,
            "median": 36453,
            "max": 90588
          },
          "version()": {
            "calls": 290,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "x()": {
            "calls": 143,
            "min": 2311,
            "mean": 2311,
            "median": 2311,
            "max": 2311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 894828,
          "size": 4339
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3698,
            "mean": 3737,
            "median": 3740,
            "max": 3770
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3978,
            "mean": 4003,
            "median": 4010,
            "max": 4023
          },
          "getArgUint256(uint256)": {
            "calls": 10,
            "min": 5077,
            "mean": 5124,
            "median": 5136,
            "max": 5149
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 38827,
            "mean": 40031,
            "median": 39956,
            "max": 41384
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3711,
            "mean": 3750,
            "median": 3753,
            "max": 3783
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3732,
            "mean": 3771,
            "median": 3774,
            "max": 3804
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 5257,
            "mean": 5333,
            "median": 5352,
            "max": 5390
          },
          "owner()": {
            "calls": 745,
            "min": 146,
            "mean": 146,
            "median": 146,
            "max": 146
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24795,
            "mean": 33550,
            "median": 24819,
            "max": 58994
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5771,
            "mean": 6077,
            "median": 5829,
            "max": 7150
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 44462,
            "mean": 44778,
            "median": 44521,
            "max": 45887
          },
          "value()": {
            "calls": 5,
            "min": 5726,
            "mean": 6044,
            "median": 5784,
            "max": 7161
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 1067844,
          "size": 4893
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23856,
            "mean": 23856,
            "median": 23856,
            "max": 23856
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26180,
            "mean": 37800,
            "median": 44018,
            "max": 46311
          },
          "owner()": {
            "calls": 1737,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 124,
            "min": 28943,
            "mean": 80883,
            "median": 67820,
            "max": 1279315
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 122,
            "min": 28100,
            "mean": 55713,
            "median": 60301,
            "max": 60584
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 118,
            "min": 28535,
            "mean": 56315,
            "median": 61549,
            "max": 61910
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 280,
            "min": 27890,
            "mean": 48212,
            "median": 47066,
            "max": 63336
          },
          "rescueETH(address,uint256)": {
            "calls": 1414,
            "min": 5723,
            "mean": 32482,
            "median": 36573,
            "max": 61941
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 6822,
            "mean": 6822,
            "median": 6822,
            "max": 6822
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 747850,
          "size": 3263
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 524,
            "min": 21853,
            "mean": 24321,
            "median": 24337,
            "max": 37447
          },
          "multicallBrutalized(bytes[])": {
            "calls": 251,
            "min": 449462,
            "mean": 559562,
            "median": 456621,
            "max": 3854433
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 42562,
            "mean": 42562,
            "median": 42562,
            "max": 42562
          },
          "returnsRandomizedString(string)": {
            "calls": 282,
            "min": 736,
            "mean": 1680,
            "median": 1697,
            "max": 2986
          },
          "returnsSender()": {
            "calls": 1,
            "min": 199,
            "mean": 199,
            "median": 199,
            "max": 199
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 458,
            "mean": 458,
            "median": 458,
            "max": 458
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 213,
            "mean": 213,
            "median": 213,
            "max": 213
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 685,
            "mean": 700,
            "median": 697,
            "max": 718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 394339,
          "size": 1538
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22664,
            "mean": 22664,
            "median": 22664,
            "max": 22664
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23821,
            "mean": 28697,
            "median": 28849,
            "max": 28856
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28233,
            "mean": 28233,
            "median": 28233,
            "max": 28233
          },
          "owner()": {
            "calls": 825,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2689,
            "mean": 2690,
            "median": 2689,
            "max": 2696
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23107,
            "mean": 23107,
            "median": 23107,
            "max": 23107
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44562,
            "mean": 44562,
            "median": 44562,
            "max": 44562
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23424,
            "mean": 28284,
            "median": 28464,
            "max": 28471
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23841,
            "mean": 24845,
            "median": 23871,
            "max": 28527
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23367,
            "mean": 35989,
            "median": 45500,
            "max": 45500
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 287487,
          "size": 1042
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 765418,
          "size": 3256
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22670,
            "mean": 22670,
            "median": 22670,
            "max": 22670
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23893,
            "mean": 28776,
            "median": 28915,
            "max": 28922
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 23988,
            "mean": 45896,
            "median": 47996,
            "max": 48339
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25894,
            "mean": 45668,
            "median": 45818,
            "max": 46185
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2741,
            "mean": 2741,
            "median": 2741,
            "max": 2748
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2757,
            "mean": 2757,
            "median": 2757,
            "max": 2764
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28275,
            "mean": 28275,
            "median": 28275,
            "max": 28275
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 555,
            "mean": 16350,
            "median": 11950,
            "max": 53101
          },
          "owner()": {
            "calls": 844,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2744
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23736,
            "mean": 27101,
            "median": 25940,
            "max": 29131
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23129,
            "mean": 23129,
            "median": 23129,
            "max": 23129
          },
          "renounceRoles(uint256)": {
            "calls": 57,
            "min": 23257,
            "mean": 27814,
            "median": 28069,
            "max": 28429
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44604,
            "mean": 44604,
            "median": 44604,
            "max": 44604
          },
          "revokeRoles(address,uint256)": {
            "calls": 75,
            "min": 24023,
            "mean": 27834,
            "median": 30665,
            "max": 31246
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 698,
            "mean": 24333,
            "median": 23511,
            "max": 54213
          },
          "rolesOf(address)": {
            "calls": 2280,
            "min": 2706,
            "mean": 2707,
            "median": 2706,
            "max": 2713
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23425,
            "mean": 28365,
            "median": 28465,
            "max": 28472
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 25698,
            "mean": 37478,
            "median": 37357,
            "max": 46205
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23888,
            "mean": 25203,
            "median": 23895,
            "max": 28551
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23389,
            "mean": 34201,
            "median": 23389,
            "max": 45534
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25713,
            "mean": 46134,
            "median": 46011,
            "max": 48221
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23622,
            "mean": 45007,
            "median": 45807,
            "max": 46119
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25719,
            "mean": 46427,
            "median": 46077,
            "max": 48227
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 413994,
          "size": 1627
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 88965,
          "size": 197
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 488870,
          "size": 2062
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 21302,
            "mean": 21302,
            "median": 21302,
            "max": 21302
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 21262,
            "mean": 21262,
            "median": 21262,
            "max": 21262
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65562,
            "mean": 65562,
            "median": 65562,
            "max": 65562
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45541,
            "mean": 45541,
            "median": 45541,
            "max": 45541
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69589,
            "mean": 69589,
            "median": 69589,
            "max": 69589
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65880,
            "mean": 65880,
            "median": 65880,
            "max": 65880
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66501,
            "mean": 66501,
            "median": 66501,
            "max": 66501
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 45521,
            "mean": 45521,
            "median": 45521,
            "max": 45521
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 51175,
            "mean": 51175,
            "median": 51175,
            "max": 51175
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 951612,
          "size": 4200
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 666,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 257,
            "min": 26697,
            "mean": 28138,
            "median": 28141,
            "max": 28901
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 257,
            "min": 33552,
            "mean": 39575,
            "median": 39659,
            "max": 39659
          },
          "owner()": {
            "calls": 1194,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43515,
            "mean": 43525,
            "median": 43527,
            "max": 43527
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91383,
            "mean": 111147,
            "median": 111307,
            "max": 111307
          },
          "setMaxTimedRole(uint256)": {
            "calls": 25,
            "min": 26466,
            "mean": 28775,
            "median": 26826,
            "max": 43926
          },
          "setOwner(address)": {
            "calls": 31,
            "min": 26673,
            "mean": 28339,
            "median": 26685,
            "max": 43785
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 680,
            "min": 24461,
            "mean": 50012,
            "median": 51677,
            "max": 51773
          },
          "timedRoleActive(address,uint256)": {
            "calls": 718,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 281667,
          "size": 1110
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22354,
            "mean": 22354,
            "median": 22354,
            "max": 22354
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "revertWithError()": {
            "calls": 1,
            "min": 307,
            "mean": 307,
            "median": 307,
            "max": 307
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22287,
            "mean": 22287,
            "median": 22287,
            "max": 22287
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2680,
            "mean": 9695,
            "median": 5343,
            "max": 32090
          },
          "value()": {
            "calls": 1,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 263231,
          "size": 1108
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24267,
            "mean": 74001,
            "median": 36267,
            "max": 117876
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 108048,
          "size": 372
        },
        "functions": {
          "fallback()": {
            "calls": 5564,
            "min": 2737,
            "mean": 15883,
            "median": 10022,
            "max": 266847
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1191952,
          "size": 5421
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "cancel(bytes32)": {
            "calls": 20,
            "min": 25437,
            "mean": 25596,
            "median": 25437,
            "max": 26243
          },
          "execute(bytes32,bytes)": {
            "calls": 255,
            "min": 28305,
            "mean": 43954,
            "median": 44728,
            "max": 95286
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 22921,
            "mean": 306487,
            "median": 377067,
            "max": 377067
          },
          "minDelay()": {
            "calls": 242,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "operationState(bytes32)": {
            "calls": 948,
            "min": 2485,
            "mean": 2490,
            "median": 2490,
            "max": 2496
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 26342,
            "mean": 54058,
            "median": 55283,
            "max": 57759
          },
          "readyTimestamp(bytes32)": {
            "calls": 710,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23969,
            "mean": 33596,
            "median": 23981,
            "max": 75891
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 588364,
          "size": 2530
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          },
          "decimals()": {
            "calls": 1,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "deposit()": {
            "calls": 549,
            "min": 27527,
            "mean": 64920,
            "median": 67327,
            "max": 67327
          },
          "name()": {
            "calls": 1,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "receive()": {
            "calls": 301,
            "min": 27355,
            "mean": 61855,
            "median": 67155,
            "max": 67155
          },
          "symbol()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "withdraw(uint256)": {
            "calls": 277,
            "min": 27903,
            "mean": 39470,
            "median": 40227,
            "max": 40347
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 855293,
          "size": 3768
        },
        "functions": {
          "adminOf(address)": {
            "calls": 485,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24162,
            "mean": 26373,
            "median": 26373,
            "max": 28584
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22251,
            "mean": 52569,
            "median": 22275,
            "max": 125981
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105412,
            "mean": 158797,
            "median": 159260,
            "max": 159320
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23660,
            "mean": 144024,
            "median": 159514,
            "max": 159676
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 546,
            "mean": 546,
            "median": 546,
            "max": 546
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24142,
            "mean": 27841,
            "median": 24154,
            "max": 33385
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35348,
            "mean": 51040,
            "median": 51040,
            "max": 66732
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 239127,
          "size": 940
        },
        "functions": {
          "implementation()": {
            "calls": 4805,
            "min": 106,
            "mean": 2254,
            "median": 2269,
            "max": 2269
          },
          "owner()": {
            "calls": 507,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "renounceOwnership()": {
            "calls": 53,
            "min": 22929,
            "mean": 23237,
            "median": 23338,
            "max": 23338
          },
          "transferOwnership(address)": {
            "calls": 165,
            "min": 23579,
            "mean": 26830,
            "median": 28244,
            "max": 28244
          },
          "upgradeTo(address)": {
            "calls": 106,
            "min": 23638,
            "mean": 26111,
            "median": 23763,
            "max": 32511
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/Brutalizer.t.sol:BrutalizerTest",
        "deployment": {
          "gas": 475976,
          "size": 2023
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 7,
            "min": 3323,
            "mean": 3367,
            "median": 3367,
            "max": 3392
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3571,
            "mean": 3587,
            "median": 3596,
            "max": 3596
          },
          "getArgUint256(uint256)": {
            "calls": 13,
            "min": 4723,
            "mean": 4774,
            "median": 4786,
            "max": 4792
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 7,
            "min": 19896,
            "mean": 21653,
            "median": 21733,
            "max": 22959
          },
          "getArgUint64(uint256)": {
            "calls": 7,
            "min": 3326,
            "mean": 3370,
            "median": 3370,
            "max": 3395
          },
          "getArgUint8(uint256)": {
            "calls": 7,
            "min": 3349,
            "mean": 3393,
            "median": 3393,
            "max": 3418
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 4205,
            "mean": 4254,
            "median": 4279,
            "max": 4279
          },
          "revertWithError()": {
            "calls": 9,
            "min": 5391,
            "mean": 6349,
            "median": 5453,
            "max": 11948
          },
          "setValue(uint256)": {
            "calls": 9,
            "min": 44157,
            "mean": 45165,
            "median": 44187,
            "max": 50691
          },
          "value()": {
            "calls": 9,
            "min": 5336,
            "mean": 6309,
            "median": 5398,
            "max": 11964
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 3482405,
          "size": 17335
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 88799,
            "mean": 38984845,
            "median": 1128291,
            "max": 96809476
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/CallContextChecker.t.sol:CallContextCheckerTest",
        "deployment": {
          "gas": 1488925,
          "size": 6987
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 32,
            "min": 4186,
            "mean": 4290,
            "median": 4284,
            "max": 4411
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 21,
            "min": 4391,
            "mean": 4498,
            "median": 4519,
            "max": 4595
          },
          "getArgUint256(uint256)": {
            "calls": 74,
            "min": 5586,
            "mean": 5692,
            "median": 5694,
            "max": 5811
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 32,
            "min": 60526,
            "mean": 65770,
            "median": 65633,
            "max": 72054
          },
          "getArgUint64(uint256)": {
            "calls": 32,
            "min": 4189,
            "mean": 4293,
            "median": 4287,
            "max": 4414
          },
          "getArgUint8(uint256)": {
            "calls": 32,
            "min": 4212,
            "mean": 4316,
            "median": 4310,
            "max": 4437
          },
          "getCalldataHash()": {
            "calls": 21,
            "min": 6599,
            "mean": 6911,
            "median": 6971,
            "max": 7188
          },
          "revertWithError()": {
            "calls": 32,
            "min": 6253,
            "mean": 6357,
            "median": 6351,
            "max": 6478
          },
          "setValue(uint256)": {
            "calls": 32,
            "min": 44953,
            "mean": 45095,
            "median": 45082,
            "max": 45372
          },
          "value()": {
            "calls": 32,
            "min": 6198,
            "mean": 6302,
            "median": 6296,
            "max": 6423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 414507,
          "size": 1566
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 131,
            "min": 67451,
            "mean": 67660,
            "median": 67811,
            "max": 67823
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 179032,
          "size": 620
        },
        "functions": {
          "generate(bytes)": {
            "calls": 146,
            "min": 0,
            "mean": 3805,
            "median": 1306,
            "max": 78108
          },
          "next(uint256)": {
            "calls": 243,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 10467157,
          "size": 52203
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1002,
            "mean": 1002,
            "median": 1002,
            "max": 1002
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 12589864,
          "size": 62795
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 38,
            "min": 691,
            "mean": 757,
            "median": 753,
            "max": 789
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 44,
            "min": 577677,
            "mean": 641143,
            "median": 577960,
            "max": 3358248
          },
          "recover(bytes32,bytes)": {
            "calls": 150,
            "min": 22485,
            "mean": 27225,
            "median": 26706,
            "max": 30123
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 46,
            "min": 3517,
            "mean": 24989,
            "median": 26067,
            "max": 26117
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 291,
            "min": 25832,
            "mean": 26077,
            "median": 26204,
            "max": 26254
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 137,
            "min": 603269,
            "mean": 672146,
            "median": 603962,
            "max": 4599575
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 44,
            "min": 602720,
            "mean": 682264,
            "median": 603309,
            "max": 2616030
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 291,
            "min": 602825,
            "mean": 649195,
            "median": 603387,
            "max": 3483172
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 150,
            "min": 22691,
            "mean": 29914,
            "median": 30109,
            "max": 30121
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 46,
            "min": 3530,
            "mean": 25007,
            "median": 26118,
            "max": 26130
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 291,
            "min": 25886,
            "mean": 26126,
            "median": 26258,
            "max": 26270
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 137,
            "min": 606737,
            "mean": 693176,
            "median": 607302,
            "max": 4007536
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 44,
            "min": 602745,
            "mean": 700823,
            "median": 603307,
            "max": 4429469
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 291,
            "min": 602917,
            "mean": 662495,
            "median": 603417,
            "max": 4461099
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 331791,
          "size": 1355
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 36,
            "min": 50783,
            "mean": 51068,
            "median": 51035,
            "max": 51395
          },
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3193,
            "mean": 3207,
            "median": 3208,
            "max": 3218
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3410,
            "mean": 3410,
            "median": 3410,
            "max": 3410
          },
          "getArgUint256(uint256)": {
            "calls": 6,
            "min": 4593,
            "mean": 4606,
            "median": 4605,
            "max": 4618
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 13213,
            "mean": 13958,
            "median": 13953,
            "max": 14713
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3196,
            "mean": 3210,
            "median": 3211,
            "max": 3221
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3219,
            "mean": 3233,
            "median": 3234,
            "max": 3244
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3726,
            "mean": 3726,
            "median": 3726,
            "max": 3726
          },
          "mint(address,uint256)": {
            "calls": 39,
            "min": 61055,
            "mean": 70980,
            "median": 61499,
            "max": 95819
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5261,
            "mean": 5274,
            "median": 5276,
            "max": 5286
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 43965,
            "mean": 43979,
            "median": 43980,
            "max": 43990
          },
          "sum()": {
            "calls": 1,
            "min": 2244,
            "mean": 2244,
            "median": 2244,
            "max": 2244
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 33619,
            "mean": 33619,
            "median": 33619,
            "max": 33619
          },
          "value()": {
            "calls": 4,
            "min": 5206,
            "mean": 5219,
            "median": 5221,
            "max": 5231
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC20.t.sol:ERC20ForPermit2Test",
        "deployment": {
          "gas": 2169024,
          "size": 11645
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 5057,
            "mean": 5057,
            "median": 5057,
            "max": 5057
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44157,
            "mean": 44157,
            "median": 44157,
            "max": 44157
          },
          "value()": {
            "calls": 1,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC2981.t.sol:ERC2981Test",
        "deployment": {
          "gas": 5261602,
          "size": 26655
        },
        "functions": {
          "revertWithError()": {
            "calls": 3,
            "min": 5057,
            "mean": 8094,
            "median": 7172,
            "max": 12054
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 44157,
            "mean": 47083,
            "median": 45936,
            "max": 51157
          },
          "value()": {
            "calls": 3,
            "min": 5070,
            "mean": 8108,
            "median": 7185,
            "max": 12070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 357150,
          "size": 1448
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 175,
            "mean": 1149,
            "median": 175,
            "max": 3098
          },
          "data()": {
            "calls": 257,
            "min": 2534,
            "mean": 3029,
            "median": 2534,
            "max": 11264
          },
          "datahash()": {
            "calls": 636,
            "min": 2253,
            "mean": 2253,
            "median": 2253,
            "max": 2253
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25114,
            "mean": 32526,
            "median": 25114,
            "max": 133833
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 25528341,
          "size": 127310
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22126,
            "mean": 22445,
            "median": 22424,
            "max": 22980
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22197,
            "mean": 22469,
            "median": 22413,
            "max": 22980
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 344426,
          "size": 1389
        },
        "functions": {
          "datahash()": {
            "calls": 387,
            "min": 2253,
            "mean": 2253,
            "median": 2253,
            "max": 2253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC6909.t.sol:ERC6909Test",
        "deployment": {
          "gas": 10097658,
          "size": 50153
        },
        "functions": {
          "revertWithError()": {
            "calls": 18,
            "min": 5057,
            "mean": 7224,
            "median": 7152,
            "max": 11948
          },
          "setValue(uint256)": {
            "calls": 18,
            "min": 44157,
            "mean": 46263,
            "median": 46252,
            "max": 51051
          },
          "value()": {
            "calls": 18,
            "min": 5070,
            "mean": 7238,
            "median": 7165,
            "max": 11964
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721HooksTest",
        "deployment": {
          "gas": 2581900,
          "size": 11874
        },
        "functions": {
          "revertWithError()": {
            "calls": 2,
            "min": 7172,
            "mean": 7172,
            "median": 7172,
            "max": 7172
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 46272,
            "mean": 46272,
            "median": 46272,
            "max": 46272
          },
          "value()": {
            "calls": 2,
            "min": 7185,
            "mean": 7185,
            "median": 7185,
            "max": 7185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 309789,
          "size": 1227
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2519,
            "mean": 4092,
            "median": 2519,
            "max": 11249
          },
          "from()": {
            "calls": 1024,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "id()": {
            "calls": 1024,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "operator()": {
            "calls": 1024,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 2207574,
          "size": 11054
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 359,
            "mean": 359,
            "median": 359,
            "max": 359
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61682,
            "mean": 63296,
            "median": 61694,
            "max": 112994
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5057,
            "mean": 5057,
            "median": 5057,
            "max": 5057
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 56656,
            "mean": 57314,
            "median": 56872,
            "max": 73984
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44157,
            "mean": 44157,
            "median": 44157,
            "max": 44157
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 64739,
            "mean": 69284,
            "median": 69425,
            "max": 69539
          },
          "value()": {
            "calls": 1,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 147019,
          "size": 477
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3047,
            "mean": 3049,
            "median": 3047,
            "max": 3053
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3251,
            "mean": 3251,
            "median": 3251,
            "max": 3251
          },
          "getArgUint256(uint256)": {
            "calls": 5,
            "min": 4447,
            "mean": 4448,
            "median": 4447,
            "max": 4453
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 5354,
            "mean": 6044,
            "median": 6239,
            "max": 6541
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3050,
            "mean": 3052,
            "median": 3050,
            "max": 3056
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3073,
            "mean": 3075,
            "median": 3073,
            "max": 3079
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3253,
            "mean": 3253,
            "median": 3253,
            "max": 3253
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5115,
            "mean": 5117,
            "median": 5115,
            "max": 5121
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43831,
            "mean": 43941,
            "median": 43957,
            "max": 44035
          },
          "value()": {
            "calls": 3,
            "min": 5060,
            "mean": 5062,
            "median": 5060,
            "max": 5066
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC721.t.sol:WrongReturnDataERC721Recipient",
        "deployment": {
          "gas": 132867,
          "size": 372
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3029,
            "mean": 3029,
            "median": 3029,
            "max": 3029
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 4429,
            "mean": 4429,
            "median": 4429,
            "max": 4429
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 5336,
            "mean": 5336,
            "median": 5336,
            "max": 5336
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3032,
            "mean": 3032,
            "median": 3032,
            "max": 3032
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5097,
            "mean": 7861,
            "median": 5097,
            "max": 12070
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 43789,
            "mean": 46756,
            "median": 44113,
            "max": 51173
          },
          "value()": {
            "calls": 5,
            "min": 5042,
            "mean": 7835,
            "median": 5042,
            "max": 12086
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 3292564,
          "size": 16387
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 457,
            "min": 557,
            "mean": 574,
            "median": 569,
            "max": 752
          },
          "returnsHash(bytes)": {
            "calls": 438,
            "min": 524,
            "mean": 546,
            "median": 536,
            "max": 716
          },
          "revertsWithCustomError()": {
            "calls": 6,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 2267534,
          "size": 11268
        },
        "functions": {
          "get(address)": {
            "calls": 506,
            "min": 2399,
            "mean": 5681,
            "median": 6817,
            "max": 8945
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 21517864,
          "size": 107321
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 180,
            "min": 21745,
            "mean": 45600,
            "median": 44067,
            "max": 142207
          },
          "addToBytes32Set(bytes32)": {
            "calls": 178,
            "min": 21734,
            "mean": 48335,
            "median": 46273,
            "max": 161443
          },
          "addressSetAt(uint256)": {
            "calls": 17,
            "min": 4729,
            "mean": 6221,
            "median": 4729,
            "max": 8961
          },
          "addressSetContains(address)": {
            "calls": 116,
            "min": 418,
            "mean": 6707,
            "median": 6818,
            "max": 6818
          },
          "bytes32SetAt(uint256)": {
            "calls": 10,
            "min": 4681,
            "mean": 5518,
            "median": 4681,
            "max": 8909
          },
          "bytes32SetContains(bytes32)": {
            "calls": 191,
            "min": 407,
            "mean": 8494,
            "median": 8917,
            "max": 8917
          },
          "removeFromAddressSet(address)": {
            "calls": 183,
            "min": 21720,
            "mean": 28109,
            "median": 28306,
            "max": 28306
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 180,
            "min": 21687,
            "mean": 29998,
            "median": 30502,
            "max": 30502
          },
          "uint8SetAt(uint256)": {
            "calls": 19,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26524,
            "mean": 49767,
            "median": 46507,
            "max": 142559
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28530,
            "mean": 53724,
            "median": 48668,
            "max": 161645
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24070,
            "mean": 27956,
            "median": 27037,
            "max": 44067
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 3169612,
          "size": 15773
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 6655500,
          "size": 33178
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23731,
            "mean": 33795,
            "median": 33795,
            "max": 43859
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26652,
            "mean": 35191,
            "median": 35191,
            "max": 43731
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 6584790,
          "size": 32825
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 528,
            "min": 22975,
            "mean": 23934,
            "median": 23591,
            "max": 26683
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 24601,
            "mean": 26456,
            "median": 26069,
            "max": 29105
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 27852,
            "mean": 28422,
            "median": 28295,
            "max": 29684
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24273,
            "mean": 25684,
            "median": 25909,
            "max": 26645
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 290,
            "min": 2800,
            "mean": 708876,
            "median": 651611,
            "max": 4613848
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 4968584,
          "size": 25417
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 105589,
            "mean": 1336050,
            "median": 998448,
            "max": 83526783
          },
          "getArgAddress(uint256)": {
            "calls": 9,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 9,
            "min": 469,
            "mean": 489,
            "median": 505,
            "max": 505
          },
          "getArgUint256(uint256)": {
            "calls": 27,
            "min": 1680,
            "mean": 1680,
            "median": 1680,
            "max": 1680
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 9,
            "min": 10182,
            "mean": 49967,
            "median": 52663,
            "max": 73844
          },
          "getArgUint64(uint256)": {
            "calls": 9,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "getArgUint8(uint256)": {
            "calls": 9,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "getCalldataHash()": {
            "calls": 9,
            "min": 795,
            "mean": 2457,
            "median": 2586,
            "max": 3460
          },
          "revertWithError()": {
            "calls": 13,
            "min": 2352,
            "mean": 3509,
            "median": 2352,
            "max": 7172
          },
          "setValue(uint256)": {
            "calls": 13,
            "min": 22339,
            "mean": 29366,
            "median": 22339,
            "max": 46260
          },
          "value()": {
            "calls": 1043,
            "min": 2299,
            "mean": 2313,
            "median": 2299,
            "max": 7185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 158003,
          "size": 522
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44363,
            "mean": 45113,
            "median": 44917,
            "max": 46348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 1283445,
          "size": 6353
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 375,
            "min": 486,
            "mean": 597,
            "median": 647,
            "max": 671
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 79576832,
          "size": 395960
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 20,
            "min": 2979,
            "mean": 2979,
            "median": 2979,
            "max": 2979
          },
          "argsOnClone(address,uint256)": {
            "calls": 11,
            "min": 3015,
            "mean": 3015,
            "median": 3015,
            "max": 3015
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 12,
            "min": 3191,
            "mean": 3191,
            "median": 3191,
            "max": 3191
          },
          "argsOnERC1967(address)": {
            "calls": 10,
            "min": 2984,
            "mean": 2984,
            "median": 2984,
            "max": 2984
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 8,
            "min": 3007,
            "mean": 3009,
            "median": 3007,
            "max": 3027
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 10,
            "min": 3228,
            "mean": 3228,
            "median": 3228,
            "max": 3228
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 6,
            "min": 2965,
            "mean": 2965,
            "median": 2965,
            "max": 2965
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 7,
            "min": 2971,
            "mean": 2971,
            "median": 2971,
            "max": 2971
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 4,
            "min": 3224,
            "mean": 3224,
            "median": 3224,
            "max": 3224
          },
          "argsOnERC1967I(address)": {
            "calls": 6,
            "min": 2965,
            "mean": 2965,
            "median": 2965,
            "max": 2965
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 4,
            "min": 2996,
            "mean": 2996,
            "median": 2996,
            "max": 2996
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 5,
            "min": 2984,
            "mean": 2984,
            "median": 2984,
            "max": 2984
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 3,
            "min": 3006,
            "mean": 3006,
            "median": 3006,
            "max": 3006
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 2,
            "min": 3195,
            "mean": 3195,
            "median": 3195,
            "max": 3195
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 67,
            "min": 35798,
            "mean": 46471,
            "median": 55940,
            "max": 56300
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 561,
            "mean": 565,
            "median": 561,
            "max": 575
          },
          "clone(address)": {
            "calls": 257,
            "min": 85435,
            "mean": 85435,
            "median": 85435,
            "max": 85435
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69140,
            "mean": 2105161,
            "median": 71209,
            "max": 96822996
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 266,
            "min": 69602,
            "mean": 5472307,
            "median": 73137,
            "max": 96799233
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 85834,
            "mean": 122929,
            "median": 86206,
            "max": 2812346
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 217569,
            "median": 74866,
            "max": 9381524
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 261,
            "min": 0,
            "mean": 411586,
            "median": 100342,
            "max": 12958796
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 114350,
            "mean": 140947,
            "median": 114722,
            "max": 489067
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 365,
            "min": 0,
            "mean": 212445,
            "median": 103901,
            "max": 13621697
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 101320,
            "mean": 131790,
            "median": 101692,
            "max": 1094435
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 264,
            "min": 0,
            "mean": 450447,
            "median": 105238,
            "max": 13217664
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 118436,
            "mean": 148561,
            "median": 118808,
            "max": 1402639
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 370,
            "min": 0,
            "mean": 299660,
            "median": 104904,
            "max": 11944241
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102315,
            "mean": 120151,
            "median": 102687,
            "max": 476933
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 269,
            "min": 94914,
            "mean": 8176711,
            "median": 99084,
            "max": 96813141
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 371,
            "min": 94298,
            "mean": 126350,
            "median": 111546,
            "max": 1508747
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 459,
            "min": 79507,
            "mean": 18468726,
            "median": 103929,
            "max": 96821358
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 98342,
            "mean": 127850,
            "median": 98714,
            "max": 3089517
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 265,
            "min": 99320,
            "mean": 4340557,
            "median": 102898,
            "max": 96829435
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 656,
            "min": 98422,
            "mean": 138088,
            "median": 98914,
            "max": 4214637
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 446,
            "min": 83734,
            "mean": 17342114,
            "median": 105794,
            "max": 96809323
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99356,
            "mean": 123036,
            "median": 99728,
            "max": 473974
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 94476,
            "mean": 2851864,
            "median": 97500,
            "max": 96823934
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 97949,
            "mean": 131233,
            "median": 98057,
            "max": 2157332
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 140,
            "min": 78556,
            "mean": 2285369,
            "median": 100838,
            "max": 96827781
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115047,
            "mean": 115047,
            "median": 115047,
            "max": 115047
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 98827,
            "mean": 2278579,
            "median": 101305,
            "max": 96798694
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 98956,
            "mean": 125402,
            "median": 98956,
            "max": 2043606
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 132,
            "min": 99494,
            "mean": 5342928,
            "median": 103530,
            "max": 96823125
          },
          "revertWithError()": {
            "calls": 7151,
            "min": 0,
            "mean": 2372,
            "median": 2386,
            "max": 2386
          },
          "setValue(uint256)": {
            "calls": 7506,
            "min": 412,
            "mean": 22247,
            "median": 22412,
            "max": 22412
          },
          "value()": {
            "calls": 21072,
            "min": 0,
            "mean": 2396,
            "median": 2404,
            "max": 2404
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 6933135,
          "size": 34564
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 538,
            "mean": 538,
            "median": 538,
            "max": 538
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          },
          "decodeBatch(bytes)": {
            "calls": 62,
            "min": 687,
            "mean": 2153,
            "median": 1819,
            "max": 4246
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 24,
            "min": 980,
            "mean": 1207,
            "median": 1229,
            "max": 1491
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 630,
            "min": 559,
            "mean": 1534,
            "median": 858,
            "max": 4706
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 608,
            "mean": 627,
            "median": 620,
            "max": 656
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 643,
            "mean": 662,
            "median": 655,
            "max": 691
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23326,
            "mean": 23326,
            "median": 23326,
            "max": 23326
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 123,
            "min": 29435,
            "mean": 37593,
            "median": 36814,
            "max": 54492
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 642510,
            "mean": 751017,
            "median": 648140,
            "max": 4793698
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 17773777,
          "size": 88653
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2530,
            "mean": 2530,
            "median": 2530,
            "max": 2530
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 43889,
            "mean": 43889,
            "median": 43889,
            "max": 43889
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 43891,
            "mean": 43891,
            "median": 43891,
            "max": 43891
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 7448165,
          "size": 37135
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2417,
            "mean": 3530,
            "median": 2417,
            "max": 4742
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23737,
            "mean": 23761,
            "median": 23773,
            "max": 23773
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21501,
            "mean": 43240,
            "median": 43679,
            "max": 43679
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23623,
            "mean": 23900,
            "median": 23995,
            "max": 23995
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 25603800,
          "size": 127686
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24352,
            "mean": 41078,
            "median": 28282,
            "max": 107498
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24513,
            "mean": 47338,
            "median": 29773,
            "max": 139764
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibStorage.t.sol:LibStorageTest",
        "deployment": {
          "gas": 265662,
          "size": 1035
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3156,
            "mean": 3161,
            "median": 3159,
            "max": 3169
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3367,
            "mean": 3370,
            "median": 3370,
            "max": 3373
          },
          "getArgUint256(uint256)": {
            "calls": 8,
            "min": 4556,
            "mean": 4563,
            "median": 4563,
            "max": 4569
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 11090,
            "mean": 11459,
            "median": 11535,
            "max": 11678
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3159,
            "mean": 3164,
            "median": 3162,
            "max": 3172
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3182,
            "mean": 3187,
            "median": 3185,
            "max": 3195
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3598,
            "mean": 3607,
            "median": 3607,
            "max": 3617
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5224,
            "mean": 5228,
            "median": 5227,
            "max": 5237
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 43916,
            "mean": 43930,
            "median": 43931,
            "max": 43941
          },
          "value()": {
            "calls": 4,
            "min": 5169,
            "mean": 5173,
            "median": 5172,
            "max": 5182
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 58008545,
          "size": 288918
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 583,
            "mean": 592,
            "median": 595,
            "max": 601
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 543,
            "mean": 543,
            "median": 543,
            "max": 543
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 624,
            "mean": 624,
            "median": 624,
            "max": 624
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 243828,
          "size": 919
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27336,
            "mean": 51661,
            "median": 50822,
            "max": 82443
          },
          "x()": {
            "calls": 6,
            "min": 2545,
            "mean": 10145,
            "median": 5785,
            "max": 37340
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 171495,
          "size": 583
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27215,
            "mean": 41884,
            "median": 32613,
            "max": 82226
          },
          "x()": {
            "calls": 6,
            "min": 2460,
            "mean": 9368,
            "median": 4646,
            "max": 37347
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 4221364,
          "size": 20361
        },
        "functions": {
          "revertWithError()": {
            "calls": 4,
            "min": 5057,
            "mean": 6643,
            "median": 7172,
            "max": 7172
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 44097,
            "mean": 45632,
            "median": 46080,
            "max": 46272
          },
          "value()": {
            "calls": 4,
            "min": 5070,
            "mean": 6656,
            "median": 7185,
            "max": 7185
          },
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22214,
            "mean": 26611,
            "median": 27882,
            "max": 29459
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 23986,
            "mean": 31940,
            "median": 32440,
            "max": 59778
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 6481630,
          "size": 32310
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "name()": {
            "calls": 256,
            "min": 4694,
            "mean": 6658,
            "median": 4750,
            "max": 13449
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 288
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 4706,
            "mean": 6694,
            "median": 4756,
            "max": 13547
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "returnsString()": {
            "calls": 512,
            "min": 4721,
            "mean": 6482,
            "median": 4779,
            "max": 13484
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "reverts()": {
            "calls": 258,
            "min": 269,
            "mean": 269,
            "median": 269,
            "max": 269
          },
          "symbol()": {
            "calls": 256,
            "min": 4714,
            "mean": 6679,
            "median": 4772,
            "max": 13470
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/Ownable.t.sol:OwnableTest",
        "deployment": {
          "gas": 3120749,
          "size": 16351
        },
        "functions": {
          "revertWithError()": {
            "calls": 2,
            "min": 7172,
            "mean": 7172,
            "median": 7172,
            "max": 7172
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 46272,
            "mean": 46272,
            "median": 46272,
            "max": 46272
          },
          "value()": {
            "calls": 2,
            "min": 7185,
            "mean": 7185,
            "median": 7185,
            "max": 7185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/OwnableRoles.t.sol:OwnableRolesTest",
        "deployment": {
          "gas": 7048520,
          "size": 34229
        },
        "functions": {
          "revertWithError()": {
            "calls": 6,
            "min": 5057,
            "mean": 6812,
            "median": 7162,
            "max": 7172
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 44157,
            "mean": 45734,
            "median": 45912,
            "max": 46272
          },
          "value()": {
            "calls": 6,
            "min": 5070,
            "mean": 6825,
            "median": 7175,
            "max": 7185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 7531302,
          "size": 37550
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22443,
            "mean": 23396,
            "median": 23883,
            "max": 23907
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 568308,
          "size": 2507
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 13,
            "min": 3364,
            "mean": 3411,
            "median": 3404,
            "max": 3455
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 3568,
            "mean": 3623,
            "median": 3629,
            "max": 3659
          },
          "getArgUint256(uint256)": {
            "calls": 23,
            "min": 4764,
            "mean": 4807,
            "median": 4804,
            "max": 4855
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 13,
            "min": 21136,
            "mean": 23795,
            "median": 23880,
            "max": 25724
          },
          "getArgUint64(uint256)": {
            "calls": 13,
            "min": 3367,
            "mean": 3414,
            "median": 3407,
            "max": 3458
          },
          "getArgUint8(uint256)": {
            "calls": 13,
            "min": 3390,
            "mean": 3437,
            "median": 3430,
            "max": 3481
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 4201,
            "mean": 4313,
            "median": 4295,
            "max": 4464
          },
          "revertWithError()": {
            "calls": 13,
            "min": 5431,
            "mean": 5479,
            "median": 5472,
            "max": 5522
          },
          "setValue(uint256)": {
            "calls": 13,
            "min": 44214,
            "mean": 44368,
            "median": 44371,
            "max": 44536
          },
          "value()": {
            "calls": 13,
            "min": 5376,
            "mean": 5424,
            "median": 5417,
            "max": 5467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 1473707,
          "size": 6763
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 15,
            "min": 4206,
            "mean": 4333,
            "median": 4315,
            "max": 4431
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 7,
            "min": 4456,
            "mean": 4549,
            "median": 4543,
            "max": 4629
          },
          "getArgUint256(uint256)": {
            "calls": 29,
            "min": 5606,
            "mean": 5730,
            "median": 5711,
            "max": 5831
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 15,
            "min": 62422,
            "mean": 67887,
            "median": 67547,
            "max": 73023
          },
          "getArgUint64(uint256)": {
            "calls": 15,
            "min": 4209,
            "mean": 4336,
            "median": 4318,
            "max": 4434
          },
          "getArgUint8(uint256)": {
            "calls": 15,
            "min": 4232,
            "mean": 4359,
            "median": 4341,
            "max": 4457
          },
          "getCalldataHash()": {
            "calls": 7,
            "min": 6751,
            "mean": 7011,
            "median": 6967,
            "max": 7286
          },
          "revertWithError()": {
            "calls": 15,
            "min": 6273,
            "mean": 6400,
            "median": 6382,
            "max": 6498
          },
          "setValue(uint256)": {
            "calls": 15,
            "min": 45044,
            "mean": 45249,
            "median": 45203,
            "max": 45518
          },
          "value()": {
            "calls": 15,
            "min": 6218,
            "mean": 6345,
            "median": 6327,
            "max": 6443
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 4172296,
          "size": 20780
        },
        "functions": {
          "read(address)": {
            "calls": 169,
            "min": 2886,
            "mean": 2941,
            "median": 2886,
            "max": 3164
          },
          "read(address,uint256)": {
            "calls": 89,
            "min": 410,
            "mean": 2916,
            "median": 2910,
            "max": 3220
          },
          "read(address,uint256,uint256)": {
            "calls": 66,
            "min": 3147,
            "mean": 3905,
            "median": 3417,
            "max": 23876
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468243,
            "mean": 48556968,
            "median": 48556968,
            "max": 83645693
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 26665814,
          "size": 132978
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 78,
            "min": 170607,
            "mean": 170670,
            "median": 170697,
            "max": 170703
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 699,
            "min": 22105,
            "mean": 149953,
            "median": 161774,
            "max": 296922
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 45954,
            "mean": 67278,
            "median": 69145,
            "max": 85027
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29118,
            "mean": 29560,
            "median": 29497,
            "max": 31805
          },
          "safeApprove(address,address,uint256)": {
            "calls": 254,
            "min": 24690,
            "mean": 25173,
            "median": 25206,
            "max": 25518
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 255,
            "min": 25155,
            "mean": 25656,
            "median": 25707,
            "max": 25971
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24775,
            "mean": 25189,
            "median": 25207,
            "max": 25495
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28645,
            "mean": 28645,
            "median": 28645,
            "max": 28645
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22117,
            "mean": 28834,
            "median": 28904,
            "max": 29132
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 254,
            "min": 25616,
            "mean": 26232,
            "median": 26336,
            "max": 26655
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 27878,
            "mean": 49196,
            "median": 67918,
            "max": 68836
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 485,
            "mean": 3715,
            "median": 5330,
            "max": 5330
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2555,
            "min": 25557,
            "mean": 39567,
            "median": 31139,
            "max": 61272
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 408831,
            "mean": 530179,
            "median": 436413,
            "max": 4215727
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 408221,
            "mean": 536550,
            "median": 436514,
            "max": 4221667
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 36892149,
          "size": 183908
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33125,
            "mean": 40860,
            "median": 38062,
            "max": 68702
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 37068,
            "mean": 57012,
            "median": 49150,
            "max": 114387
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 16902942,
          "size": 84310
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1203,
            "mean": 8486,
            "median": 9097,
            "max": 15891
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 296,
            "min": 663,
            "mean": 9923,
            "median": 9959,
            "max": 16177
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 115,
            "min": 6383,
            "mean": 6388,
            "median": 6393,
            "max": 6393
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/Timelock.t.sol:TimelockTest",
        "deployment": {
          "gas": 5957388,
          "size": 28542
        },
        "functions": {
          "revertWithError()": {
            "calls": 2,
            "min": 7172,
            "mean": 9560,
            "median": 9560,
            "max": 11948
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 46272,
            "mean": 48661,
            "median": 48661,
            "max": 51051
          },
          "value()": {
            "calls": 2,
            "min": 7185,
            "mean": 9574,
            "median": 9574,
            "max": 11964
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/UUPSUpgradeable.t.sol:UUPSUpgradeableTest",
        "deployment": {
          "gas": 1240863,
          "size": 5771
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 17,
            "min": 4025,
            "mean": 4083,
            "median": 4092,
            "max": 4172
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 7,
            "min": 4230,
            "mean": 4266,
            "median": 4256,
            "max": 4316
          },
          "getArgUint256(uint256)": {
            "calls": 31,
            "min": 5425,
            "mean": 5473,
            "median": 5492,
            "max": 5572
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 17,
            "min": 52900,
            "mean": 56228,
            "median": 56705,
            "max": 60825
          },
          "getArgUint64(uint256)": {
            "calls": 17,
            "min": 4028,
            "mean": 4086,
            "median": 4095,
            "max": 4175
          },
          "getArgUint8(uint256)": {
            "calls": 17,
            "min": 4051,
            "mean": 4109,
            "median": 4118,
            "max": 4198
          },
          "getCalldataHash()": {
            "calls": 7,
            "min": 6133,
            "mean": 6241,
            "median": 6211,
            "max": 6385
          },
          "revertWithError()": {
            "calls": 17,
            "min": 6092,
            "mean": 6150,
            "median": 6159,
            "max": 6240
          },
          "setValue(uint256)": {
            "calls": 17,
            "min": 44785,
            "mean": 44858,
            "median": 44865,
            "max": 44948
          },
          "value()": {
            "calls": 17,
            "min": 6037,
            "mean": 6095,
            "median": 6104,
            "max": 6185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTest",
        "deployment": {
          "gas": 2835646,
          "size": 13952
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 11948,
            "mean": 11948,
            "median": 11948,
            "max": 11948
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 50691,
            "mean": 50691,
            "median": 50691,
            "max": 50691
          },
          "value()": {
            "calls": 1,
            "min": 11964,
            "mean": 11964,
            "median": 11964,
            "max": 11964
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 184417,
          "size": 651
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 33,
            "min": 32622,
            "mean": 49731,
            "median": 44922,
            "max": 79122
          },
          "fallbackDeposit(uint256)": {
            "calls": 44,
            "min": 32291,
            "mean": 48416,
            "median": 44591,
            "max": 78791
          },
          "withdraw(uint256)": {
            "calls": 18,
            "min": 32955,
            "mean": 43933,
            "median": 45279,
            "max": 45375
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 5323095,
          "size": 26526
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 131,
            "min": 1186,
            "mean": 1200,
            "median": 1205,
            "max": 1220
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/TestPlus.sol:TestPlus",
        "deployment": {
          "gas": 99704,
          "size": 232
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 5057,
            "mean": 5057,
            "median": 5057,
            "max": 5057
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44157,
            "mean": 44157,
            "median": 44157,
            "max": 44157
          },
          "value()": {
            "calls": 1,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 337655,
          "size": 1387
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 202,
            "mean": 211,
            "median": 211,
            "max": 221
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 222,
            "mean": 231,
            "median": 231,
            "max": 241
          },
          "getArgAddress(uint256)": {
            "calls": 6,
            "min": 3224,
            "mean": 3252,
            "median": 3261,
            "max": 3273
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3478,
            "mean": 3478,
            "median": 3478,
            "max": 3478
          },
          "getArgUint256(uint256)": {
            "calls": 8,
            "min": 4624,
            "mean": 4657,
            "median": 4673,
            "max": 4673
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 6,
            "min": 15017,
            "mean": 16289,
            "median": 16396,
            "max": 17454
          },
          "getArgUint64(uint256)": {
            "calls": 6,
            "min": 3227,
            "mean": 3255,
            "median": 3264,
            "max": 3276
          },
          "getArgUint8(uint256)": {
            "calls": 6,
            "min": 3250,
            "mean": 3278,
            "median": 3287,
            "max": 3299
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3928,
            "mean": 3928,
            "median": 3928,
            "max": 3928
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22367,
            "mean": 22367,
            "median": 22367,
            "max": 22367
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 232,
            "mean": 241,
            "median": 241,
            "max": 250
          },
          "revertWithError()": {
            "calls": 6,
            "min": 5292,
            "mean": 5320,
            "median": 5328,
            "max": 5341
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 43996,
            "mean": 44084,
            "median": 44045,
            "max": 44381
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22076,
            "mean": 22076,
            "median": 22076,
            "max": 22076
          },
          "value()": {
            "calls": 6,
            "min": 5237,
            "mean": 5265,
            "median": 5273,
            "max": 5286
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 273767,
          "size": 1060
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          },
          "fallback()": {
            "calls": 520,
            "min": 22896,
            "mean": 63776,
            "median": 79932,
            "max": 216989
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "receive()": {
            "calls": 260,
            "min": 64,
            "mean": 20821,
            "median": 21064,
            "max": 21064
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 490,
            "mean": 33577,
            "median": 23911,
            "max": 67224
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1755,
            "mean": 34929,
            "median": 34929,
            "max": 68103
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 109347,
          "size": 295
        },
        "functions": {
          "fallback()": {
            "calls": 998,
            "min": 237,
            "mean": 23430,
            "median": 22353,
            "max": 76105
          },
          "receive()": {
            "calls": 13,
            "min": 21084,
            "mean": 21084,
            "median": 21084,
            "max": 21084
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 364212,
          "size": 1483
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 204,
            "mean": 290,
            "median": 334,
            "max": 334
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "getArgAddress(uint256)": {
            "calls": 11,
            "min": 3233,
            "mean": 3258,
            "median": 3255,
            "max": 3286
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3437,
            "mean": 3468,
            "median": 3478,
            "max": 3490
          },
          "getArgUint256(uint256)": {
            "calls": 23,
            "min": 4633,
            "mean": 4658,
            "median": 4655,
            "max": 4686
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 11,
            "min": 14728,
            "mean": 16217,
            "median": 16539,
            "max": 17759
          },
          "getArgUint64(uint256)": {
            "calls": 11,
            "min": 3236,
            "mean": 3261,
            "median": 3258,
            "max": 3289
          },
          "getArgUint8(uint256)": {
            "calls": 11,
            "min": 3259,
            "mean": 3284,
            "median": 3281,
            "max": 3312
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 3815,
            "mean": 3889,
            "median": 3898,
            "max": 3965
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 336,
            "mean": 408,
            "median": 444,
            "max": 444
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 541,
            "mean": 541,
            "median": 541,
            "max": 541
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 484,
            "mean": 484,
            "median": 484,
            "max": 484
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 529,
            "mean": 529,
            "median": 529,
            "max": 529
          },
          "revertWithError()": {
            "calls": 11,
            "min": 5301,
            "mean": 5326,
            "median": 5323,
            "max": 5354
          },
          "setValue(uint256)": {
            "calls": 11,
            "min": 44008,
            "mean": 44186,
            "median": 44165,
            "max": 44396
          },
          "value()": {
            "calls": 11,
            "min": 5246,
            "mean": 5271,
            "median": 5268,
            "max": 5299
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 1052411,
          "size": 5916
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 4963,
            "mean": 5041,
            "median": 5067,
            "max": 5067
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5137,
            "mean": 5175,
            "median": 5175,
            "max": 5213
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5088,
            "mean": 5140,
            "median": 5140,
            "max": 5192
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5062,
            "mean": 5116,
            "median": 5116,
            "max": 5171
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5012,
            "mean": 5066,
            "median": 5066,
            "max": 5121
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5057,
            "mean": 5106,
            "median": 5106,
            "max": 5155
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11199,
            "mean": 29924,
            "median": 33175,
            "max": 45399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 2163864,
          "size": 9880
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 183,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "lastDataHash()": {
            "calls": 33,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 265,
            "min": 53357,
            "mean": 73370,
            "median": 73562,
            "max": 73641
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 3,
            "min": 55712,
            "mean": 59956,
            "median": 60572,
            "max": 63586
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 3,
            "min": 53367,
            "mean": 57523,
            "median": 58237,
            "max": 60966
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Malicious.sol:MockERC1271Malicious",
        "deployment": {
          "gas": 113331,
          "size": 306
        },
        "functions": {
          "revertWithError()": {
            "calls": 3,
            "min": 5057,
            "mean": 5057,
            "median": 5057,
            "max": 5057
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43857,
            "mean": 44057,
            "median": 44157,
            "max": 44157
          },
          "value()": {
            "calls": 3,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 429098,
          "size": 1808
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3292,
            "mean": 3296,
            "median": 3292,
            "max": 3311
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3496,
            "mean": 3496,
            "median": 3496,
            "max": 3496
          },
          "getArgUint256(uint256)": {
            "calls": 10,
            "min": 4692,
            "mean": 4693,
            "median": 4692,
            "max": 4711
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 17472,
            "mean": 17925,
            "median": 17472,
            "max": 19285
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3295,
            "mean": 3299,
            "median": 3295,
            "max": 3314
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3318,
            "mean": 3322,
            "median": 3318,
            "max": 3337
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3983,
            "mean": 3983,
            "median": 3983,
            "max": 3983
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 460,
            "min": 2682,
            "mean": 2713,
            "median": 2699,
            "max": 6132
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5360,
            "mean": 5364,
            "median": 5360,
            "max": 5378
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26531,
            "mean": 26531,
            "median": 26531,
            "max": 26531
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 44064,
            "mean": 44107,
            "median": 44067,
            "max": 44232
          },
          "signer()": {
            "calls": 4,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "value()": {
            "calls": 4,
            "min": 5305,
            "mean": 5309,
            "median": 5305,
            "max": 5323
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1045548,
          "size": 5814
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 435,
            "mean": 435,
            "median": 435,
            "max": 435
          },
          "allowance(address,address)": {
            "calls": 2441,
            "min": 487,
            "mean": 2065,
            "median": 2487,
            "max": 2487
          },
          "approve(address,uint256)": {
            "calls": 2621,
            "min": 25764,
            "mean": 45961,
            "median": 46084,
            "max": 46276
          },
          "balanceOf(address)": {
            "calls": 13276,
            "min": 461,
            "mean": 2287,
            "median": 2461,
            "max": 2461
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24029,
            "mean": 29124,
            "median": 27164,
            "max": 34282
          },
          "decimals()": {
            "calls": 312,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 24792,
            "mean": 26601,
            "median": 25375,
            "max": 28271
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 24597,
            "mean": 38582,
            "median": 51521,
            "max": 52122
          },
          "mint(address,uint256)": {
            "calls": 3226,
            "min": 24163,
            "mean": 67606,
            "median": 68192,
            "max": 68547
          },
          "name()": {
            "calls": 258,
            "min": 2574,
            "mean": 4920,
            "median": 6951,
            "max": 9127
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23416,
            "mean": 43570,
            "median": 29983,
            "max": 74115
          },
          "symbol()": {
            "calls": 258,
            "min": 2588,
            "mean": 5036,
            "median": 6966,
            "max": 9142
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          },
          "transfer(address,uint256)": {
            "calls": 2575,
            "min": 23999,
            "mean": 45456,
            "median": 51326,
            "max": 51549
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1546,
            "min": 24485,
            "mean": 40282,
            "median": 32411,
            "max": 54426
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 1045548,
          "size": 5814
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21830,
            "mean": 22065,
            "median": 21914,
            "max": 46216
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28351,
            "mean": 67275,
            "median": 68204,
            "max": 68547
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22549,
            "mean": 22848,
            "median": 22849,
            "max": 28963
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24677,
            "mean": 38075,
            "median": 30184,
            "max": 52193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 1061525,
          "size": 4880
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "approve(address,uint256)": {
            "calls": 1004,
            "min": 23773,
            "mean": 35121,
            "median": 35913,
            "max": 46414
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 259752,
          "size": 997
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21436,
            "mean": 21436,
            "median": 21436,
            "max": 21436
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 194,
            "mean": 194,
            "median": 194,
            "max": 194
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21652,
            "mean": 21942,
            "median": 22024,
            "max": 22024
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2522,
            "mean": 4041,
            "median": 4627,
            "max": 4649
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 406,
            "min": 22000,
            "mean": 36110,
            "median": 44157,
            "max": 44373
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 812,
            "min": 22164,
            "mean": 36588,
            "median": 44666,
            "max": 44972
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 2038128,
          "size": 9555
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31906,
            "mean": 31906,
            "median": 31906,
            "max": 31906
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12065,
            "mean": 12065,
            "median": 12065,
            "max": 12065
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 5895,
            "mean": 18299,
            "median": 8275,
            "max": 139640
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 521,
            "mean": 521,
            "median": 521,
            "max": 521
          },
          "entryPoint()": {
            "calls": 7,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2612,
            "mean": 16363,
            "median": 12792,
            "max": 37258
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 131,
            "min": 2725,
            "mean": 69351,
            "median": 72462,
            "max": 216105
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 128,
            "min": 2764,
            "mean": 51456,
            "median": 37645,
            "max": 216148
          },
          "fallback()": {
            "calls": 5,
            "min": 203,
            "mean": 27784,
            "median": 226,
            "max": 105328
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5271,
            "mean": 5271,
            "median": 5271,
            "max": 5271
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2408,
            "mean": 23858,
            "median": 23925,
            "max": 23925
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6300,
            "mean": 7675,
            "median": 6300,
            "max": 13663
          },
          "owner()": {
            "calls": 267,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "receive()": {
            "calls": 258,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6747,
            "mean": 6747,
            "median": 6747,
            "max": 6747
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23485,
            "mean": 23485,
            "median": 23485,
            "max": 23485
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2423,
            "mean": 13480,
            "median": 13480,
            "max": 24537
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 6865,
            "mean": 6865,
            "median": 6865,
            "max": 6865
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 357,
            "mean": 24111,
            "median": 29179,
            "max": 37729
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45055,
            "mean": 45055,
            "median": 45055,
            "max": 45055
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 2922073,
          "size": 15148
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2446,
            "mean": 5121,
            "median": 7646,
            "max": 7760
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7664,
            "mean": 7703,
            "median": 7703,
            "max": 7742
          },
          "decimals()": {
            "calls": 20,
            "min": 293,
            "mean": 297,
            "median": 293,
            "max": 338
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 29949,
            "mean": 118880,
            "median": 120353,
            "max": 120593
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 29901,
            "mean": 119217,
            "median": 120340,
            "max": 130932
          },
          "name()": {
            "calls": 1,
            "min": 2666,
            "mean": 2666,
            "median": 2666,
            "max": 2666
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 7645,
            "mean": 7645,
            "median": 7645,
            "max": 7726
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7694,
            "mean": 7694,
            "median": 7694,
            "max": 7761
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24490,
            "mean": 76890,
            "median": 77348,
            "max": 92188
          },
          "symbol()": {
            "calls": 1,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5379,
            "mean": 5379,
            "median": 5379,
            "max": 5379
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26673,
            "mean": 77529,
            "median": 78256,
            "max": 78412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1576485,
          "size": 8503
        },
        "functions": {
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 5747,
            "mean": 22490,
            "median": 10726,
            "max": 62764
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 125,
            "min": 5766,
            "mean": 80459,
            "median": 63153,
            "max": 261766
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 135,
            "min": 28306,
            "mean": 94968,
            "median": 98128,
            "max": 241866
          },
          "fallback()": {
            "calls": 1054,
            "min": 181,
            "mean": 7960,
            "median": 3134,
            "max": 133134
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 5709,
            "mean": 5709,
            "median": 5709,
            "max": 5709
          },
          "mockId()": {
            "calls": 2,
            "min": 299,
            "mean": 299,
            "median": 299,
            "max": 299
          },
          "owner()": {
            "calls": 804,
            "min": 5524,
            "mean": 5524,
            "median": 5524,
            "max": 5524
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 269,
            "mean": 269,
            "median": 269,
            "max": 269
          },
          "receive()": {
            "calls": 15,
            "min": 0,
            "mean": 10288,
            "median": 59,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5508,
            "mean": 14061,
            "median": 14082,
            "max": 22656
          },
          "state()": {
            "calls": 772,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "token()": {
            "calls": 536,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 5747,
            "mean": 35008,
            "median": 35169,
            "max": 52269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1721726,
          "size": 8107
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5215,
            "mean": 5215,
            "median": 5215,
            "max": 5215
          },
          "fallback()": {
            "calls": 16,
            "min": 4598,
            "mean": 19932,
            "median": 6307,
            "max": 81129
          },
          "mockId()": {
            "calls": 1,
            "min": 299,
            "mean": 299,
            "median": 299,
            "max": 299
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 269,
            "mean": 269,
            "median": 269,
            "max": 269
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5569,
            "mean": 14122,
            "median": 14143,
            "max": 22717
          },
          "state()": {
            "calls": 513,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18146,
            "mean": 18146,
            "median": 18146,
            "max": 18146
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 185407,
          "size": 649
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2068,
            "min": 94687,
            "mean": 95260,
            "median": 95311,
            "max": 95515
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 909795,
          "size": 4037
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2490,
            "min": 2500,
            "mean": 2500,
            "median": 2500,
            "max": 2500
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26911,
            "mean": 46834,
            "median": 46967,
            "max": 47382
          },
          "balanceOf(address,uint256)": {
            "calls": 2404,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24222,
            "mean": 27186,
            "median": 25182,
            "max": 30412
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 46266,
            "mean": 47120,
            "median": 47166,
            "max": 47478
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 23831,
            "mean": 31974,
            "median": 26287,
            "max": 46199
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 382,
            "min": 25465,
            "mean": 41499,
            "median": 33360,
            "max": 61415
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24294,
            "mean": 45758,
            "median": 47064,
            "max": 47599
          },
          "name(uint256)": {
            "calls": 256,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 45909,
            "mean": 45909,
            "median": 45909,
            "max": 45909
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 623,
            "mean": 623,
            "median": 623,
            "max": 623
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1044,
            "min": 24192,
            "mean": 37328,
            "median": 30313,
            "max": 52762
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1658,
            "min": 26887,
            "mean": 38442,
            "median": 32984,
            "max": 60760
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 2140169,
          "size": 9911
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1060,
            "min": 24051,
            "mean": 42425,
            "median": 48314,
            "max": 48650
          },
          "balanceOf(address)": {
            "calls": 10139,
            "min": 2469,
            "mean": 2469,
            "median": 2469,
            "max": 2469
          },
          "burn(uint256)": {
            "calls": 226,
            "min": 28251,
            "mean": 29368,
            "median": 28686,
            "max": 31376
          },
          "directApprove(address,uint256)": {
            "calls": 1085,
            "min": 24063,
            "mean": 44006,
            "median": 48745,
            "max": 49033
          },
          "directGetApproved(uint256)": {
            "calls": 1539,
            "min": 2455,
            "mean": 4483,
            "median": 4653,
            "max": 4653
          },
          "directOwnerOf(uint256)": {
            "calls": 2507,
            "min": 2476,
            "mean": 2630,
            "median": 2668,
            "max": 2668
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 659,
            "min": 56766,
            "mean": 74741,
            "median": 62802,
            "max": 129294
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 519,
            "min": 63161,
            "mean": 92881,
            "median": 64276,
            "max": 240355
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 916,
            "min": 24047,
            "mean": 41642,
            "median": 46187,
            "max": 46187
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1823,
            "min": 24646,
            "mean": 41638,
            "median": 40498,
            "max": 57053
          },
          "exists(uint256)": {
            "calls": 491,
            "min": 2471,
            "mean": 2471,
            "median": 2471,
            "max": 2471
          },
          "getApproved(uint256)": {
            "calls": 1491,
            "min": 2458,
            "mean": 4390,
            "median": 4586,
            "max": 4586
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2715
          },
          "getExtraData(uint256)": {
            "calls": 3521,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2700,
            "mean": 5223,
            "median": 5951,
            "max": 7005
          },
          "mint(address,uint256)": {
            "calls": 10505,
            "min": 24242,
            "mean": 64100,
            "median": 68380,
            "max": 68728
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46711,
            "mean": 55997,
            "median": 51746,
            "max": 69194
          },
          "ownerOf(uint256)": {
            "calls": 5304,
            "min": 459,
            "mean": 2445,
            "median": 2459,
            "max": 2459
          },
          "revertWithError()": {
            "calls": 3,
            "min": 7152,
            "mean": 8752,
            "median": 7172,
            "max": 11932
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71061,
            "mean": 81429,
            "median": 71800,
            "max": 121030
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72263,
            "mean": 97939,
            "median": 73232,
            "max": 232001
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1492,
            "min": 43187,
            "mean": 70152,
            "median": 68273,
            "max": 129430
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 505,
            "min": 63456,
            "mean": 94450,
            "median": 64488,
            "max": 240228
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1175,
            "min": 23930,
            "mean": 42457,
            "median": 46070,
            "max": 46077
          },
          "setAux(address,uint224)": {
            "calls": 745,
            "min": 27507,
            "mean": 44492,
            "median": 44600,
            "max": 44607
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1530,
            "min": 23906,
            "mean": 37056,
            "median": 43926,
            "max": 44322
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 45892,
            "mean": 47725,
            "median": 46272,
            "max": 51011
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1804,
            "min": 24415,
            "mean": 42111,
            "median": 40268,
            "max": 56807
          },
          "uncheckedBurn(uint256)": {
            "calls": 2939,
            "min": 23620,
            "mean": 30038,
            "median": 31007,
            "max": 36191
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 180,
            "min": 54187,
            "mean": 54430,
            "median": 54415,
            "max": 54775
          },
          "value()": {
            "calls": 3,
            "min": 7165,
            "mean": 8766,
            "median": 7185,
            "max": 11948
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 648029,
          "size": 2805
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31244,
            "mean": 100465,
            "median": 90848,
            "max": 158842
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 261,
            "min": 349752,
            "mean": 444234,
            "median": 372312,
            "max": 3113270
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2550,
            "mean": 5733,
            "median": 4752,
            "max": 11280
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22107,
            "mean": 41284,
            "median": 44024,
            "max": 44024
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 179181,
          "size": 1306
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "garbage()": {
            "calls": 780,
            "min": 2268,
            "mean": 2268,
            "median": 2268,
            "max": 2268
          },
          "receive()": {
            "calls": 8,
            "min": 0,
            "mean": 49750,
            "median": 21104,
            "max": 286395
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 841356,
          "size": 3701
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 8169,
            "min": 351,
            "mean": 4173,
            "median": 4489,
            "max": 4489
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 264,
            "min": 26924,
            "mean": 28307,
            "median": 28351,
            "max": 28351
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 33,
            "min": 26375,
            "mean": 41117,
            "median": 39603,
            "max": 59369
          },
          "guardedByOnlyRoles()": {
            "calls": 33,
            "min": 23592,
            "mean": 39256,
            "median": 38972,
            "max": 56568
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 872,
            "mean": 8099,
            "median": 7583,
            "max": 16515
          },
          "hasRole(address,uint256)": {
            "calls": 1790,
            "min": 2474,
            "mean": 2474,
            "median": 2474,
            "max": 2474
          },
          "owner()": {
            "calls": 1967,
            "min": 2401,
            "mean": 2611,
            "median": 2627,
            "max": 2627
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 225,
            "min": 2435,
            "mean": 2663,
            "median": 2478,
            "max": 4574
          },
          "roleHolderCount(uint256)": {
            "calls": 3891,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "roleHolders(uint256)": {
            "calls": 3975,
            "min": 2556,
            "mean": 2887,
            "median": 2556,
            "max": 20911
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23614,
            "mean": 43178,
            "median": 43574,
            "max": 43898
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 33,
            "min": 24191,
            "mean": 125745,
            "median": 113558,
            "max": 222898
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21594,
            "mean": 26911,
            "median": 26442,
            "max": 43878
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23691,
            "mean": 25083,
            "median": 23691,
            "max": 26497
          },
          "setOwner(address)": {
            "calls": 268,
            "min": 21732,
            "mean": 27177,
            "median": 26772,
            "max": 43872
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23735,
            "mean": 25169,
            "median": 26538,
            "max": 26538
          },
          "setRole(address,uint256,bool)": {
            "calls": 1414,
            "min": 24309,
            "mean": 59654,
            "median": 73809,
            "max": 74361
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 7015,
            "min": 33252,
            "mean": 58786,
            "median": 73508,
            "max": 78415
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 120659,
          "size": 349
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 161,
            "mean": 161,
            "median": 161,
            "max": 161
          },
          "getValue(uint256)": {
            "calls": 968,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "setValue(uint256,uint256)": {
            "calls": 968,
            "min": 2420,
            "mean": 22237,
            "median": 22320,
            "max": 22320
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 163,
            "mean": 163,
            "median": 163,
            "max": 163
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 349314,
          "size": 2671
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23356,
            "mean": 33879,
            "median": 33879,
            "max": 44402
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 199,
            "min": 27498,
            "mean": 64683,
            "median": 67898,
            "max": 90406
          },
          "isInitializing()": {
            "calls": 180,
            "min": 2280,
            "mean": 2280,
            "median": 2280,
            "max": 2280
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23381,
            "mean": 23381,
            "median": 23381,
            "max": 23381
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 231,
            "min": 24461,
            "mean": 54301,
            "median": 66999,
            "max": 90396
          },
          "version()": {
            "calls": 247,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "x()": {
            "calls": 123,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 838916,
          "size": 3819
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 13,
            "min": 3671,
            "mean": 3737,
            "median": 3736,
            "max": 3808
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3876,
            "mean": 3948,
            "median": 3954,
            "max": 4012
          },
          "getArgUint256(uint256)": {
            "calls": 25,
            "min": 5071,
            "mean": 5140,
            "median": 5136,
            "max": 5208
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 13,
            "min": 35954,
            "mean": 39637,
            "median": 39070,
            "max": 42802
          },
          "getArgUint64(uint256)": {
            "calls": 13,
            "min": 3674,
            "mean": 3740,
            "median": 3739,
            "max": 3811
          },
          "getArgUint8(uint256)": {
            "calls": 13,
            "min": 3697,
            "mean": 3763,
            "median": 3762,
            "max": 3834
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 5102,
            "mean": 5314,
            "median": 5330,
            "max": 5501
          },
          "owner()": {
            "calls": 735,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24799,
            "mean": 33640,
            "median": 24823,
            "max": 58999
          },
          "revertWithError()": {
            "calls": 13,
            "min": 5739,
            "mean": 5805,
            "median": 5804,
            "max": 5875
          },
          "setValue(uint256)": {
            "calls": 13,
            "min": 44443,
            "mean": 44555,
            "median": 44532,
            "max": 44829
          },
          "value()": {
            "calls": 13,
            "min": 5684,
            "mean": 5750,
            "median": 5749,
            "max": 5820
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 1016422,
          "size": 4683
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 29,
            "min": 3821,
            "mean": 3898,
            "median": 3893,
            "max": 4005
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 15,
            "min": 4032,
            "mean": 4095,
            "median": 4091,
            "max": 4210
          },
          "getArgUint256(uint256)": {
            "calls": 59,
            "min": 5221,
            "mean": 5294,
            "median": 5286,
            "max": 5405
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 29,
            "min": 43449,
            "mean": 47287,
            "median": 47198,
            "max": 51950
          },
          "getArgUint64(uint256)": {
            "calls": 29,
            "min": 3824,
            "mean": 3901,
            "median": 3896,
            "max": 4008
          },
          "getArgUint8(uint256)": {
            "calls": 29,
            "min": 3847,
            "mean": 3924,
            "median": 3919,
            "max": 4031
          },
          "getCalldataHash()": {
            "calls": 15,
            "min": 5558,
            "mean": 5744,
            "median": 5730,
            "max": 6075
          },
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23845,
            "mean": 23845,
            "median": 23845,
            "max": 23845
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26169,
            "mean": 37788,
            "median": 44019,
            "max": 46293
          },
          "owner()": {
            "calls": 1679,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 121,
            "min": 28904,
            "mean": 68190,
            "median": 67270,
            "max": 734974
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 138,
            "min": 28085,
            "mean": 52927,
            "median": 60240,
            "max": 60533
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 115,
            "min": 28372,
            "mean": 53830,
            "median": 61346,
            "max": 61796
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 238,
            "min": 27878,
            "mean": 47982,
            "median": 47030,
            "max": 63228
          },
          "rescueETH(address,uint256)": {
            "calls": 1421,
            "min": 5616,
            "mean": 32548,
            "median": 36441,
            "max": 61846
          },
          "revertWithError()": {
            "calls": 29,
            "min": 5888,
            "mean": 5965,
            "median": 5960,
            "max": 6072
          },
          "setValue(uint256)": {
            "calls": 29,
            "min": 44581,
            "mean": 44684,
            "median": 44679,
            "max": 44870
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          },
          "value()": {
            "calls": 29,
            "min": 5833,
            "mean": 5910,
            "median": 5905,
            "max": 6017
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 759511,
          "size": 3323
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 523,
            "min": 21775,
            "mean": 24031,
            "median": 24129,
            "max": 35424
          },
          "multicallBrutalized(bytes[])": {
            "calls": 252,
            "min": 461521,
            "mean": 542556,
            "median": 468158,
            "max": 3241986
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 40184,
            "mean": 40184,
            "median": 40184,
            "max": 40184
          },
          "returnsRandomizedString(string)": {
            "calls": 256,
            "min": 625,
            "mean": 1390,
            "median": 1267,
            "max": 2567
          },
          "returnsSender()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 544,
            "mean": 559,
            "median": 565,
            "max": 577
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 391394,
          "size": 1555
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22625,
            "mean": 22625,
            "median": 22625,
            "max": 22625
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23714,
            "mean": 28660,
            "median": 28799,
            "max": 28806
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28110,
            "mean": 28110,
            "median": 28110,
            "max": 28110
          },
          "owner()": {
            "calls": 831,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2667,
            "mean": 2667,
            "median": 2667,
            "max": 2674
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 22938,
            "mean": 22938,
            "median": 22938,
            "max": 22938
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44523,
            "mean": 44523,
            "median": 44523,
            "max": 44523
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23311,
            "mean": 28156,
            "median": 28351,
            "max": 28351
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23736,
            "mean": 24820,
            "median": 23751,
            "max": 28395
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 34824,
            "median": 45454,
            "max": 45454
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 278067,
          "size": 1025
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2271,
            "mean": 2271,
            "median": 2271,
            "max": 2271
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 874156,
          "size": 3817
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22642,
            "mean": 22642,
            "median": 22642,
            "max": 22642
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23781,
            "mean": 28712,
            "median": 28865,
            "max": 28872
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3659,
            "mean": 3659,
            "median": 3659,
            "max": 3659
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3863,
            "mean": 3863,
            "median": 3863,
            "max": 3863
          },
          "getArgUint256(uint256)": {
            "calls": 6,
            "min": 5059,
            "mean": 5059,
            "median": 5059,
            "max": 5059
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 35331,
            "mean": 35331,
            "median": 35331,
            "max": 35331
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3662,
            "mean": 3662,
            "median": 3662,
            "max": 3662
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3685,
            "mean": 3685,
            "median": 3685,
            "max": 3685
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 5064,
            "mean": 5064,
            "median": 5064,
            "max": 5064
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 23911,
            "mean": 45640,
            "median": 47911,
            "max": 48254
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25851,
            "mean": 45643,
            "median": 45799,
            "max": 46142
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2726,
            "mean": 2726,
            "median": 2726,
            "max": 2733
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2751
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28164,
            "mean": 28164,
            "median": 28164,
            "max": 28164
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 460,
            "mean": 19941,
            "median": 17246,
            "max": 54620
          },
          "owner()": {
            "calls": 837,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2717,
            "mean": 2718,
            "median": 2717,
            "max": 2724
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23717,
            "mean": 27020,
            "median": 25885,
            "max": 29076
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 22963,
            "mean": 22963,
            "median": 22963,
            "max": 22963
          },
          "renounceRoles(uint256)": {
            "calls": 65,
            "min": 23256,
            "mean": 27514,
            "median": 28080,
            "max": 28416
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44574,
            "mean": 44574,
            "median": 44574,
            "max": 44574
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5726,
            "mean": 5726,
            "median": 5726,
            "max": 5726
          },
          "revokeRoles(address,uint256)": {
            "calls": 53,
            "min": 23924,
            "mean": 27412,
            "median": 27825,
            "max": 31165
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 512,
            "mean": 24825,
            "median": 24137,
            "max": 53185
          },
          "rolesOf(address)": {
            "calls": 2258,
            "min": 2695,
            "mean": 2696,
            "median": 2695,
            "max": 2702
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28128,
            "mean": 28277,
            "median": 28356,
            "max": 28356
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 28457,
            "mean": 37445,
            "median": 37310,
            "max": 46164
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 44431,
            "mean": 44431,
            "median": 44431,
            "max": 44431
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23752,
            "mean": 24966,
            "median": 23777,
            "max": 28421
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23373,
            "mean": 34688,
            "median": 45486,
            "max": 45486
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25731,
            "mean": 45496,
            "median": 45998,
            "max": 48228
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23620,
            "mean": 43362,
            "median": 45781,
            "max": 46117
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25730,
            "mean": 45863,
            "median": 46100,
            "max": 48227
          },
          "value()": {
            "calls": 2,
            "min": 5671,
            "mean": 5671,
            "median": 5671,
            "max": 5671
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 411122,
          "size": 1649
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2295,
            "mean": 2295,
            "median": 2295,
            "max": 2295
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 89643,
          "size": 204
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 470924,
          "size": 1986
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 26329,
            "mean": 26329,
            "median": 26329,
            "max": 26329
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 43407,
            "mean": 43407,
            "median": 43407,
            "max": 43407
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65657,
            "mean": 65657,
            "median": 65657,
            "max": 65657
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45507,
            "mean": 45507,
            "median": 45507,
            "max": 45507
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69568,
            "mean": 69568,
            "median": 69568,
            "max": 69568
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65879,
            "mean": 65879,
            "median": 65879,
            "max": 65879
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66549,
            "mean": 66549,
            "median": 66549,
            "max": 66549
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 45238,
            "mean": 45238,
            "median": 45238,
            "max": 45238
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 52313,
            "mean": 52313,
            "median": 52313,
            "max": 52313
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 959893,
          "size": 4252
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 696,
            "min": 2480,
            "mean": 2480,
            "median": 2480,
            "max": 2480
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 256,
            "min": 28373,
            "mean": 28375,
            "median": 28373,
            "max": 29108
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 256,
            "min": 35976,
            "mean": 39723,
            "median": 39768,
            "max": 39768
          },
          "owner()": {
            "calls": 1229,
            "min": 2631,
            "mean": 2631,
            "median": 2631,
            "max": 2631
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43509,
            "mean": 43519,
            "median": 43521,
            "max": 43521
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91281,
            "mean": 110889,
            "median": 111205,
            "max": 111205
          },
          "setMaxTimedRole(uint256)": {
            "calls": 16,
            "min": 26451,
            "mean": 29979,
            "median": 26811,
            "max": 43911
          },
          "setOwner(address)": {
            "calls": 45,
            "min": 26775,
            "mean": 27915,
            "median": 26775,
            "max": 43875
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 717,
            "min": 24745,
            "mean": 50183,
            "median": 51932,
            "max": 52028
          },
          "timedRoleActive(address,uint256)": {
            "calls": 778,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 291650,
          "size": 1163
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3181,
            "mean": 3181,
            "median": 3181,
            "max": 3181
          },
          "getArgUint256(uint256)": {
            "calls": 1,
            "min": 4581,
            "mean": 4581,
            "median": 4581,
            "max": 4581
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 12890,
            "mean": 12890,
            "median": 12890,
            "max": 12890
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3184,
            "mean": 3184,
            "median": 3184,
            "max": 3184
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3207,
            "mean": 3207,
            "median": 3207,
            "max": 3207
          },
          "initialize(address)": {
            "calls": 8,
            "min": 22364,
            "mean": 22364,
            "median": 22364,
            "max": 22364
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "revertWithError()": {
            "calls": 2,
            "min": 341,
            "mean": 2795,
            "median": 2795,
            "max": 5249
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 22269,
            "mean": 33111,
            "median": 33111,
            "max": 43953
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2769,
            "mean": 9772,
            "median": 5404,
            "max": 32148
          },
          "value()": {
            "calls": 2,
            "min": 2255,
            "mean": 3724,
            "median": 3724,
            "max": 5194
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 360777,
          "size": 1303
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 543,
            "mean": 543,
            "median": 543,
            "max": 543
          },
          "balanceOf(address)": {
            "calls": 1666,
            "min": 422,
            "mean": 1347,
            "median": 422,
            "max": 2422
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 219369,
          "size": 811
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 554,
            "mean": 554,
            "median": 554,
            "max": 554
          },
          "balanceOf(address)": {
            "calls": 1028,
            "min": 433,
            "mean": 2431,
            "median": 2433,
            "max": 2433
          },
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3101,
            "mean": 3105,
            "median": 3101,
            "max": 3114
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 4501,
            "mean": 4505,
            "median": 4501,
            "max": 4514
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 8955,
            "mean": 9156,
            "median": 8955,
            "max": 9559
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3104,
            "mean": 3108,
            "median": 3104,
            "max": 3117
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3127,
            "mean": 3131,
            "median": 3127,
            "max": 3140
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5169,
            "mean": 5173,
            "median": 5169,
            "max": 5182
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43873,
            "mean": 43877,
            "median": 43873,
            "max": 43886
          },
          "value()": {
            "calls": 3,
            "min": 5114,
            "mean": 5118,
            "median": 5114,
            "max": 5127
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 625608,
          "size": 2532
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 543,
            "mean": 543,
            "median": 543,
            "max": 543
          },
          "balanceOf(address)": {
            "calls": 2814,
            "min": 422,
            "mean": 1513,
            "median": 2422,
            "max": 2422
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24241,
            "mean": 63189,
            "median": 66527,
            "max": 114352
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 199809,
          "size": 797
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 543,
            "mean": 543,
            "median": 543,
            "max": 543
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 422,
            "mean": 2414,
            "median": 2422,
            "max": 2422
          },
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3095,
            "mean": 3106,
            "median": 3111,
            "max": 3114
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3342,
            "mean": 3342,
            "median": 3342,
            "max": 3342
          },
          "getArgUint256(uint256)": {
            "calls": 5,
            "min": 4495,
            "mean": 4508,
            "median": 4511,
            "max": 4514
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 8076,
            "mean": 8762,
            "median": 8652,
            "max": 9559
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3098,
            "mean": 3109,
            "median": 3114,
            "max": 3117
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3121,
            "mean": 3132,
            "median": 3137,
            "max": 3140
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3449,
            "mean": 3449,
            "median": 3449,
            "max": 3449
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5163,
            "mean": 6898,
            "median": 5180,
            "max": 12070
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 43867,
            "mean": 45741,
            "median": 44094,
            "max": 50909
          },
          "value()": {
            "calls": 4,
            "min": 5108,
            "mean": 6861,
            "median": 5125,
            "max": 12086
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 362529,
          "size": 1311
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 543,
            "mean": 543,
            "median": 543,
            "max": 543
          },
          "balanceOf(address)": {
            "calls": 1674,
            "min": 422,
            "mean": 1343,
            "median": 422,
            "max": 2422
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 256232,
          "size": 818
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 554,
            "mean": 554,
            "median": 554,
            "max": 554
          },
          "balanceOf(address)": {
            "calls": 1027,
            "min": 433,
            "mean": 2427,
            "median": 2433,
            "max": 2433
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 180092,
          "size": 619
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 532,
            "mean": 532,
            "median": 532,
            "max": 532
          },
          "balanceOf(address)": {
            "calls": 515,
            "min": 433,
            "mean": 2429,
            "median": 2433,
            "max": 2433
          },
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3071,
            "mean": 3075,
            "median": 3077,
            "max": 3077
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3275,
            "mean": 3275,
            "median": 3275,
            "max": 3275
          },
          "getArgUint256(uint256)": {
            "calls": 5,
            "min": 4471,
            "mean": 4473,
            "median": 4471,
            "max": 4477
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 6559,
            "mean": 7350,
            "median": 7746,
            "max": 7746
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3074,
            "mean": 3078,
            "median": 3080,
            "max": 3080
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3097,
            "mean": 3101,
            "median": 3103,
            "max": 3103
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3325,
            "mean": 3325,
            "median": 3325,
            "max": 3325
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5139,
            "mean": 5143,
            "median": 5145,
            "max": 5145
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43837,
            "mean": 43839,
            "median": 43837,
            "max": 43843
          },
          "value()": {
            "calls": 3,
            "min": 5084,
            "mean": 5088,
            "median": 5090,
            "max": 5090
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "solmate": {
    "solc": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 904688,
          "size": 4136
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4941,
            "mean": 7855,
            "median": 9286,
            "max": 9286
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2712,
            "mean": 2712,
            "median": 2712,
            "max": 2712
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2611,
            "mean": 2611,
            "median": 2611,
            "max": 2611
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27701,
            "mean": 40251,
            "median": 49613,
            "max": 49661
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28317,
            "mean": 40868,
            "median": 50225,
            "max": 50273
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27863,
            "mean": 38073,
            "median": 33143,
            "max": 50243
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28373,
            "mean": 39480,
            "median": 39441,
            "max": 50510
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 826820,
          "size": 3770
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2806,
            "mean": 6746,
            "median": 7239,
            "max": 7239
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2755,
            "mean": 2755,
            "median": 2755,
            "max": 2755
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28525,
            "mean": 39665,
            "median": 39625,
            "max": 50725
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 29017,
            "mean": 42335,
            "median": 50938,
            "max": 51202
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28329,
            "mean": 39434,
            "median": 39397,
            "max": 50466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 399869,
          "size": 1668
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25857,
            "min": 30931,
            "mean": 50588,
            "median": 51179,
            "max": 51443
          },
          "burn(address,uint256)": {
            "calls": 510,
            "min": 35708,
            "mean": 39470,
            "median": 35936,
            "max": 44708
          },
          "mint(address,uint256)": {
            "calls": 22433,
            "min": 35529,
            "mean": 61153,
            "median": 61377,
            "max": 95853
          },
          "sum()": {
            "calls": 1,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 405,
            "min": 33603,
            "mean": 38169,
            "median": 33819,
            "max": 56843
          },
          "transferFrom(address,address,uint256)": {
            "calls": 316,
            "min": 36105,
            "mean": 36549,
            "median": 36561,
            "max": 36561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 549769,
          "size": 2567
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 392,
            "mean": 534,
            "median": 534,
            "max": 677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 232936,
          "size": 889
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23431,
            "min": 31837,
            "mean": 46550,
            "median": 46637,
            "max": 80837
          },
          "fallbackDeposit(uint256)": {
            "calls": 23501,
            "min": 31195,
            "mean": 45939,
            "median": 45995,
            "max": 80195
          },
          "withdraw(uint256)": {
            "calls": 23510,
            "min": 34493,
            "mean": 46557,
            "median": 46829,
            "max": 46937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111424,
          "size": 414
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25857,
            "min": 25691,
            "mean": 45350,
            "median": 45939,
            "max": 46203
          },
          "burn(address,uint256)": {
            "calls": 510,
            "min": 28080,
            "mean": 30656,
            "median": 28308,
            "max": 34280
          },
          "mint(address,uint256)": {
            "calls": 22433,
            "min": 27956,
            "mean": 50623,
            "median": 51004,
            "max": 68380
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "transfer(address,uint256)": {
            "calls": 405,
            "min": 28196,
            "mean": 32762,
            "median": 28412,
            "max": 51436
          },
          "transferFrom(address,address,uint256)": {
            "calls": 316,
            "min": 30783,
            "mean": 31227,
            "median": 31239,
            "max": 31239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 221104,
          "size": 749
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23191,
            "mean": 28043,
            "median": 28231,
            "max": 28231
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23414,
            "mean": 23425,
            "median": 23414,
            "max": 26252
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 935400,
          "size": 4921
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "deposit()": {
            "calls": 23946,
            "min": 29138,
            "mean": 35522,
            "median": 34738,
            "max": 68938
          },
          "receive()": {
            "calls": 23758,
            "min": 28791,
            "mean": 34843,
            "median": 34391,
            "max": 68591
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "withdraw(uint256)": {
            "calls": 23768,
            "min": 29345,
            "mean": 41406,
            "median": 41681,
            "max": 41789
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 928554,
          "size": 4296
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4985,
            "mean": 7965,
            "median": 9357,
            "max": 9357
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2657,
            "mean": 2657,
            "median": 2657,
            "max": 2657
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2679,
            "mean": 2679,
            "median": 2679,
            "max": 2679
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2602,
            "mean": 2602,
            "median": 2602,
            "max": 2602
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2562,
            "mean": 2562,
            "median": 2562,
            "max": 2562
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27824,
            "mean": 40375,
            "median": 49736,
            "max": 49784
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28505,
            "mean": 41070,
            "median": 50436,
            "max": 50484
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27936,
            "mean": 38141,
            "median": 33216,
            "max": 50316
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28485,
            "mean": 39601,
            "median": 39564,
            "max": 50644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 848184,
          "size": 3916
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2870,
            "mean": 6817,
            "median": 7311,
            "max": 7311
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2844,
            "mean": 2844,
            "median": 2844,
            "max": 2844
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2717,
            "mean": 2717,
            "median": 2717,
            "max": 2717
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28522,
            "mean": 39662,
            "median": 39622,
            "max": 50722
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 29185,
            "mean": 42523,
            "median": 51128,
            "max": 51392
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28507,
            "mean": 39625,
            "median": 39586,
            "max": 50666
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 345486,
          "size": 1414
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25838,
            "min": 29011,
            "mean": 51064,
            "median": 51531,
            "max": 51795
          },
          "burn(address,uint256)": {
            "calls": 490,
            "min": 33473,
            "mean": 38717,
            "median": 35973,
            "max": 44733
          },
          "mint(address,uint256)": {
            "calls": 22323,
            "min": 35803,
            "mean": 61444,
            "median": 61639,
            "max": 96115
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "transfer(address,uint256)": {
            "calls": 398,
            "min": 33642,
            "mean": 36821,
            "median": 33870,
            "max": 56618
          },
          "transferFrom(address,address,uint256)": {
            "calls": 302,
            "min": 36693,
            "mean": 36999,
            "median": 37005,
            "max": 37005
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 541963,
          "size": 2532
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 558,
            "mean": 690,
            "median": 690,
            "max": 822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 209530,
          "size": 771
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23198,
            "min": 31798,
            "mean": 46546,
            "median": 46598,
            "max": 80798
          },
          "fallbackDeposit(uint256)": {
            "calls": 23491,
            "min": 33945,
            "mean": 46175,
            "median": 46245,
            "max": 80445
          },
          "withdraw(uint256)": {
            "calls": 22765,
            "min": 34739,
            "mean": 46801,
            "median": 47063,
            "max": 47183
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111281,
          "size": 406
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25838,
            "min": 25986,
            "mean": 45732,
            "median": 46198,
            "max": 46462
          },
          "burn(address,uint256)": {
            "calls": 490,
            "min": 28143,
            "mean": 30193,
            "median": 28359,
            "max": 34319
          },
          "mint(address,uint256)": {
            "calls": 22323,
            "min": 28166,
            "mean": 50850,
            "median": 51202,
            "max": 68578
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 398,
            "min": 28255,
            "mean": 31434,
            "median": 28483,
            "max": 51231
          },
          "transferFrom(address,address,uint256)": {
            "calls": 302,
            "min": 31221,
            "mean": 31527,
            "median": 31533,
            "max": 31533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 235926,
          "size": 831
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23376,
            "mean": 28258,
            "median": 28416,
            "max": 28416
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23402,
            "mean": 23413,
            "median": 23402,
            "max": 26332
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 939688,
          "size": 4638
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2527,
            "mean": 2527,
            "median": 2527,
            "max": 2527
          },
          "deposit()": {
            "calls": 23713,
            "min": 29088,
            "mean": 35493,
            "median": 34688,
            "max": 68888
          },
          "receive()": {
            "calls": 23748,
            "min": 28940,
            "mean": 34972,
            "median": 34540,
            "max": 68740
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "withdraw(uint256)": {
            "calls": 23023,
            "min": 29583,
            "mean": 41641,
            "median": 41907,
            "max": 42027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 847197,
          "size": 3970
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4787,
            "mean": 7648,
            "median": 9138,
            "max": 9138
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2433,
            "mean": 2433,
            "median": 2433,
            "max": 2433
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27648,
            "mean": 40199,
            "median": 49560,
            "max": 49608
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28218,
            "mean": 40770,
            "median": 50127,
            "max": 50175
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27738,
            "mean": 37955,
            "median": 33018,
            "max": 50118
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28223,
            "mean": 39326,
            "median": 39292,
            "max": 50362
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 728552,
          "size": 3412
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2571,
            "mean": 6483,
            "median": 6973,
            "max": 6973
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2566,
            "mean": 2566,
            "median": 2566,
            "max": 2566
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2517,
            "mean": 2517,
            "median": 2517,
            "max": 2517
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28282,
            "mean": 39418,
            "median": 39382,
            "max": 50482
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 28807,
            "mean": 42156,
            "median": 50742,
            "max": 51006
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28222,
            "mean": 39325,
            "median": 39290,
            "max": 50359
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 337000,
          "size": 1445
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25881,
            "min": 29057,
            "mean": 50486,
            "median": 51077,
            "max": 51341
          },
          "burn(address,uint256)": {
            "calls": 507,
            "min": 35225,
            "mean": 38978,
            "median": 35453,
            "max": 44237
          },
          "mint(address,uint256)": {
            "calls": 22644,
            "min": 35282,
            "mean": 60874,
            "median": 61094,
            "max": 95582
          },
          "sum()": {
            "calls": 1,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "transfer(address,uint256)": {
            "calls": 538,
            "min": 33212,
            "mean": 42975,
            "median": 33440,
            "max": 56512
          },
          "transferFrom(address,address,uint256)": {
            "calls": 330,
            "min": 35928,
            "mean": 36365,
            "median": 36372,
            "max": 36372
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 608236,
          "size": 2868
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 389,
            "mean": 524,
            "median": 524,
            "max": 660
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 185636,
          "size": 736
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23778,
            "min": 31557,
            "mean": 46275,
            "median": 46357,
            "max": 80557
          },
          "fallbackDeposit(uint256)": {
            "calls": 23511,
            "min": 33676,
            "mean": 45889,
            "median": 45976,
            "max": 80176
          },
          "withdraw(uint256)": {
            "calls": 23377,
            "min": 31855,
            "mean": 46442,
            "median": 46691,
            "max": 46799
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 118667,
          "size": 488
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 849829,
          "size": 5508
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25881,
            "min": 23922,
            "mean": 45353,
            "median": 45942,
            "max": 46206
          },
          "burn(address,uint256)": {
            "calls": 507,
            "min": 27864,
            "mean": 30435,
            "median": 28092,
            "max": 34076
          },
          "mint(address,uint256)": {
            "calls": 22644,
            "min": 27903,
            "mean": 50541,
            "median": 50915,
            "max": 68303
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "transfer(address,uint256)": {
            "calls": 538,
            "min": 27964,
            "mean": 37727,
            "median": 28192,
            "max": 51264
          },
          "transferFrom(address,address,uint256)": {
            "calls": 330,
            "min": 30669,
            "mean": 31106,
            "median": 31113,
            "max": 31113
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 206604,
          "size": 711
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23188,
            "mean": 28049,
            "median": 28228,
            "max": 28228
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23436,
            "mean": 23447,
            "median": 23436,
            "max": 26283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 871616,
          "size": 4492
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "deposit()": {
            "calls": 24293,
            "min": 28995,
            "mean": 35373,
            "median": 34595,
            "max": 68795
          },
          "receive()": {
            "calls": 23768,
            "min": 28785,
            "mean": 34801,
            "median": 34385,
            "max": 68585
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "withdraw(uint256)": {
            "calls": 23635,
            "min": 29321,
            "mean": 41403,
            "median": 41657,
            "max": 41765
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 1014224,
          "size": 4682
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4803,
            "mean": 7628,
            "median": 9152,
            "max": 9152
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27658,
            "mean": 40210,
            "median": 49575,
            "max": 49623
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28222,
            "mean": 40774,
            "median": 50131,
            "max": 50179
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27742,
            "mean": 37956,
            "median": 33022,
            "max": 50122
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28253,
            "mean": 39355,
            "median": 39321,
            "max": 50390
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 883622,
          "size": 4075
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2624,
            "mean": 6544,
            "median": 7035,
            "max": 7035
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2570,
            "mean": 2570,
            "median": 2570,
            "max": 2570
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2565,
            "mean": 2565,
            "median": 2565,
            "max": 2565
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28296,
            "mean": 39432,
            "median": 39398,
            "max": 50501
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 28861,
            "mean": 42181,
            "median": 50770,
            "max": 51034
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28228,
            "mean": 39336,
            "median": 39296,
            "max": 50365
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 330847,
          "size": 1351
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25818,
            "min": 30884,
            "mean": 50562,
            "median": 51132,
            "max": 51396
          },
          "burn(address,uint256)": {
            "calls": 539,
            "min": 35278,
            "mean": 38904,
            "median": 35506,
            "max": 44182
          },
          "mint(address,uint256)": {
            "calls": 22631,
            "min": 33043,
            "mean": 60934,
            "median": 61163,
            "max": 95639
          },
          "sum()": {
            "calls": 1,
            "min": 2244,
            "mean": 2244,
            "median": 2244,
            "max": 2244
          },
          "transfer(address,uint256)": {
            "calls": 417,
            "min": 33179,
            "mean": 39032,
            "median": 33407,
            "max": 56419
          },
          "transferFrom(address,address,uint256)": {
            "calls": 320,
            "min": 33860,
            "mean": 36340,
            "median": 36360,
            "max": 36360
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 514948,
          "size": 2409
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 430,
            "mean": 560,
            "median": 560,
            "max": 691
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 194091,
          "size": 698
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23372,
            "min": 34055,
            "mean": 46277,
            "median": 46355,
            "max": 80555
          },
          "fallbackDeposit(uint256)": {
            "calls": 23336,
            "min": 33720,
            "mean": 45951,
            "median": 46020,
            "max": 80220
          },
          "withdraw(uint256)": {
            "calls": 23229,
            "min": 34422,
            "mean": 46504,
            "median": 46758,
            "max": 46866
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 119021,
          "size": 423
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857653,
          "size": 5365
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25818,
            "min": 25765,
            "mean": 45446,
            "median": 46013,
            "max": 46277
          },
          "burn(address,uint256)": {
            "calls": 539,
            "min": 27881,
            "mean": 30370,
            "median": 28109,
            "max": 33985
          },
          "mint(address,uint256)": {
            "calls": 22631,
            "min": 27900,
            "mean": 50565,
            "median": 50948,
            "max": 68324
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "transfer(address,uint256)": {
            "calls": 417,
            "min": 28025,
            "mean": 33878,
            "median": 28253,
            "max": 51265
          },
          "transferFrom(address,address,uint256)": {
            "calls": 320,
            "min": 30737,
            "mean": 31169,
            "median": 31181,
            "max": 31181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 208339,
          "size": 739
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23333,
            "mean": 28198,
            "median": 28373,
            "max": 28373
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23421,
            "mean": 23432,
            "median": 23421,
            "max": 26454
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 898779,
          "size": 4548
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "deposit()": {
            "calls": 23887,
            "min": 28960,
            "mean": 35353,
            "median": 34560,
            "max": 68760
          },
          "receive()": {
            "calls": 23593,
            "min": 28788,
            "mean": 34833,
            "median": 34388,
            "max": 68588
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "withdraw(uint256)": {
            "calls": 23487,
            "min": 29370,
            "mean": 41451,
            "median": 41706,
            "max": 41814
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  },
  "tokenlon": {
    "solc": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 643922,
          "size": 3071
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23485,
            "mean": 26545,
            "median": 27565,
            "max": 27565
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24715,
            "mean": 50069,
            "median": 48497,
            "max": 89862
          },
          "unpause()": {
            "calls": 2,
            "min": 23375,
            "mean": 25350,
            "median": 25350,
            "max": 27326
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9759810,
          "size": 47833
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 307229,
            "mean": 307305,
            "median": 307305,
            "max": 307381
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 705609,
          "size": 3116
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25706,
            "mean": 79373,
            "median": 79373,
            "max": 133041
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25012,
            "mean": 54660,
            "median": 54660,
            "max": 84308
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 378556,
          "size": 1804
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 337,
            "mean": 705,
            "median": 705,
            "max": 1074
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 1006,
            "mean": 1006,
            "median": 1006,
            "max": 1006
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "originalChainId()": {
            "calls": 1,
            "min": 139,
            "mean": 139,
            "median": 139,
            "max": 139
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 288249,
          "size": 1168
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23398,
            "mean": 25713,
            "median": 25713,
            "max": 28029
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23728,
            "mean": 42317,
            "median": 46965,
            "max": 46965
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "owner()": {
            "calls": 3,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23375,
            "mean": 24659,
            "median": 25105,
            "max": 25497
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 349547,
          "size": 1409
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 510,
            "mean": 2275,
            "median": 517,
            "max": 5799
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 306,
            "mean": 309,
            "median": 309,
            "max": 313
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22170,
            "mean": 34261,
            "median": 27062,
            "max": 56716
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 230000,
          "size": 852
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3934,
            "mean": 3934,
            "median": 3934,
            "max": 3934
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3192362,
          "size": 15492
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 9918,
            "mean": 9918,
            "median": 9918,
            "max": 9918
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 787264,
          "size": 3420
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46269,
            "mean": 46269,
            "median": 46269,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 480,
            "mean": 998,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 50,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 669646,
          "size": 2934
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 2889,
            "mean": 4928,
            "median": 6223,
            "max": 6250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 759220,
          "size": 4056
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2727,
            "mean": 2727,
            "median": 2727,
            "max": 2727
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46242,
            "mean": 46242,
            "median": 46242,
            "max": 46242
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 510,
            "mean": 1398,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 10,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68010,
            "mean": 68012,
            "median": 68010,
            "max": 68022
          },
          "totalSupply()": {
            "calls": 50,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 771016,
          "size": 3346
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46251,
            "mean": 46251,
            "median": 46251,
            "max": 46251
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 480,
            "mean": 1025,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 50,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 764300,
          "size": 3747
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46277,
            "mean": 46277,
            "median": 46277,
            "max": 46277
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 510,
            "mean": 941,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 10,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "totalSupply()": {
            "calls": 50,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 703448,
          "size": 3444
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23402,
            "mean": 26580,
            "median": 27640,
            "max": 27640
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24987,
            "mean": 50857,
            "median": 49334,
            "max": 91027
          },
          "unpause()": {
            "calls": 2,
            "min": 23403,
            "mean": 25510,
            "median": 25510,
            "max": 27618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 8984811,
          "size": 42642
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 316492,
            "mean": 316564,
            "median": 316564,
            "max": 316636
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 844372,
          "size": 3776
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25917,
            "mean": 80692,
            "median": 80692,
            "max": 135467
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25160,
            "mean": 55469,
            "median": 55469,
            "max": 85779
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 331107,
          "size": 1561
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 298,
            "mean": 467,
            "median": 467,
            "max": 636
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 539,
            "mean": 539,
            "median": 539,
            "max": 539
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "originalChainId()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 302284,
          "size": 1251
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23392,
            "mean": 25871,
            "median": 25871,
            "max": 28351
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23848,
            "mean": 42444,
            "median": 47093,
            "max": 47093
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "owner()": {
            "calls": 3,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23369,
            "mean": 24725,
            "median": 25312,
            "max": 25495
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 420284,
          "size": 1737
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 715,
            "mean": 2485,
            "median": 720,
            "max": 6022
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 417,
            "mean": 419,
            "median": 419,
            "max": 422
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22347,
            "mean": 34533,
            "median": 27257,
            "max": 56933
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 281629,
          "size": 1093
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 4375,
            "mean": 4375,
            "median": 4375,
            "max": 4375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3229415,
          "size": 15682
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 8156,
            "mean": 8156,
            "median": 8156,
            "max": 8156
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 735333,
          "size": 3316
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46511,
            "mean": 46511,
            "median": 46511,
            "max": 46511
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 558,
            "mean": 1076,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 50,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 772690,
          "size": 3408
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 921,
            "mean": 3891,
            "median": 4361,
            "max": 6522
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 689248,
          "size": 3528
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2752
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46629,
            "mean": 46629,
            "median": 46629,
            "max": 46629
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 558,
            "mean": 1446,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68294,
            "mean": 68296,
            "median": 68294,
            "max": 68306
          },
          "totalSupply()": {
            "calls": 50,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 677862,
          "size": 3037
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46441,
            "mean": 46441,
            "median": 46441,
            "max": 46441
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 558,
            "mean": 1103,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 50,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 683410,
          "size": 3085
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46630,
            "mean": 46630,
            "median": 46630,
            "max": 46630
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 558,
            "mean": 989,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "totalSupply()": {
            "calls": 50,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 385415,
          "size": 1889
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 250,
            "mean": 476,
            "median": 476,
            "max": 702
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 868,
            "mean": 868,
            "median": 868,
            "max": 868
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 366,
            "mean": 366,
            "median": 366,
            "max": 366
          },
          "originalChainId()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 270968,
          "size": 1181
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23389,
            "mean": 25706,
            "median": 25706,
            "max": 28024
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23736,
            "mean": 42346,
            "median": 46999,
            "max": 46999
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "owner()": {
            "calls": 3,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23359,
            "mean": 24645,
            "median": 25091,
            "max": 25486
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 353261,
          "size": 1434
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 427,
            "mean": 2137,
            "median": 437,
            "max": 5548
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22110,
            "mean": 34130,
            "median": 26987,
            "max": 56652
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 217140,
          "size": 801
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3855,
            "mean": 3855,
            "median": 3855,
            "max": 3855
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3578252,
          "size": 17425
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 9512,
            "mean": 9512,
            "median": 9512,
            "max": 9512
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 808139,
          "size": 3641
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 2711,
            "mean": 4729,
            "median": 6023,
            "max": 6084
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 667065,
          "size": 4168
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 4,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "mint(address,uint256)": {
            "calls": 8,
            "min": 67913,
            "mean": 67913,
            "median": 67913,
            "max": 67913
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 349578,
          "size": 1642
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 226,
            "mean": 358,
            "median": 358,
            "max": 491
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 463,
            "mean": 463,
            "median": 463,
            "max": 463
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "originalChainId()": {
            "calls": 1,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 187,
            "mean": 187,
            "median": 187,
            "max": 187
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 314327,
          "size": 1326
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23422,
            "mean": 25864,
            "median": 25864,
            "max": 28306
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23819,
            "mean": 42422,
            "median": 47073,
            "max": 47073
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "owner()": {
            "calls": 3,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23399,
            "mean": 24727,
            "median": 25242,
            "max": 25540
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 309393,
          "size": 1231
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 409,
            "mean": 2104,
            "median": 419,
            "max": 5485
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22116,
            "mean": 34109,
            "median": 26993,
            "max": 56620
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 196979,
          "size": 710
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3757,
            "mean": 3757,
            "median": 3757,
            "max": 3757
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3948120,
          "size": 19279
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 7263,
            "mean": 7263,
            "median": 7263,
            "max": 7263
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 746267,
          "size": 3287
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 477,
            "mean": 3336,
            "median": 3788,
            "max": 5967
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 614734,
          "size": 3815
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 4,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "mint(address,uint256)": {
            "calls": 8,
            "min": 67920,
            "mean": 67920,
            "median": 67920,
            "max": 67920
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-alpha.4"
        }
      }
    ]
  }
};