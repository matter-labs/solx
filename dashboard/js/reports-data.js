// Auto-generated file from build.js
const REPORTS_DATA = {
  "aave-v3": {
    "solc": [
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 821471,
          "size": 3581
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2834,
            "mean": 2834,
            "median": 2834,
            "max": 2834
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 157262,
            "mean": 157262,
            "median": 157262,
            "max": 157262
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1079
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2295,
            "mean": 2295,
            "median": 2295,
            "max": 2295
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 547575,
          "size": 2789
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5091,
            "mean": 26847,
            "median": 7571,
            "max": 2412228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 504619,
          "size": 2090
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 781,
            "mean": 2381,
            "median": 2781,
            "max": 2781
          },
          "approve(address,uint256)": {
            "calls": 3553,
            "min": 28777,
            "mean": 44738,
            "median": 45985,
            "max": 46249
          },
          "balanceOf(address)": {
            "calls": 19617,
            "min": 530,
            "mean": 2526,
            "median": 2530,
            "max": 2530
          },
          "decimals()": {
            "calls": 2438,
            "min": 364,
            "mean": 2322,
            "median": 2364,
            "max": 2364
          },
          "deposit()": {
            "calls": 51,
            "min": 45033,
            "mean": 45033,
            "median": 45033,
            "max": 45033
          },
          "name()": {
            "calls": 16,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "symbol()": {
            "calls": 46,
            "min": 2835,
            "mean": 2835,
            "median": 2835,
            "max": 2835
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 46767,
            "mean": 46767,
            "median": 46767,
            "max": 46767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1589167,
          "size": 7707
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 333459,
            "mean": 423659,
            "median": 455038,
            "max": 482480
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 1692459,
          "size": 8257
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 35848,
            "mean": 35848,
            "median": 35848,
            "max": 35848
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 364475,
            "mean": 466364,
            "median": 490329,
            "max": 520324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1403419,
          "size": 6831
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 333470,
            "mean": 361396,
            "median": 354794,
            "max": 395925
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3183
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2384897,
            "mean": 2384897,
            "median": 2384897,
            "max": 2384897
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2516,
            "mean": 2516,
            "median": 2516,
            "max": 2516
          },
          "initialize()": {
            "calls": 797,
            "min": 23576,
            "mean": 24028,
            "median": 24040,
            "max": 24040
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 20870
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 5983,
            "mean": 5983,
            "median": 5983,
            "max": 5983
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "aToken()": {
            "calls": 1,
            "min": 3073,
            "mean": 3073,
            "median": 3073,
            "max": 3073
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 3713,
            "mean": 3713,
            "median": 3713,
            "max": 3713
          },
          "asset()": {
            "calls": 1,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2979,
            "mean": 2979,
            "median": 2979,
            "max": 2979
          },
          "canPause(address)": {
            "calls": 257,
            "min": 11936,
            "mean": 11936,
            "median": 11936,
            "max": 11936
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 328083,
            "mean": 328083,
            "median": 328083,
            "max": 328083
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 3523,
            "mean": 3523,
            "median": 3523,
            "max": 3523
          },
          "decimals()": {
            "calls": 1,
            "min": 2632,
            "mean": 2632,
            "median": 2632,
            "max": 2632
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 260332,
            "mean": 269532,
            "median": 269532,
            "max": 278732
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 160022,
            "mean": 160982,
            "median": 160022,
            "max": 201967
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 6401,
            "mean": 126600,
            "median": 127305,
            "max": 149156
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2787,
            "mean": 2787,
            "median": 2787,
            "max": 2787
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25918,
            "mean": 231162,
            "median": 231964,
            "max": 238964
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 28729,
            "mean": 28729,
            "median": 28729,
            "max": 28729
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 31799,
            "mean": 31799,
            "median": 31799,
            "max": 31799
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 260702,
            "mean": 260702,
            "median": 260702,
            "max": 260702
          },
          "name()": {
            "calls": 1,
            "min": 2834,
            "mean": 2834,
            "median": 2834,
            "max": 2834
          },
          "nonces(address)": {
            "calls": 3,
            "min": 3016,
            "mean": 3016,
            "median": 3016,
            "max": 3016
          },
          "paused()": {
            "calls": 2,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 1438,
            "mean": 30601,
            "median": 33112,
            "max": 57255
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 17531,
            "mean": 17531,
            "median": 17531,
            "max": 17531
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 34065,
            "mean": 108829,
            "median": 108829,
            "max": 183593
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 133394,
            "mean": 133394,
            "median": 133394,
            "max": 133394
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 156830,
            "mean": 156830,
            "median": 156830,
            "max": 156830
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 11479,
            "mean": 12100,
            "median": 11479,
            "max": 34847
          },
          "symbol()": {
            "calls": 1,
            "min": 3560,
            "mean": 3560,
            "median": 3560,
            "max": 3560
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 3340,
            "mean": 3340,
            "median": 3340,
            "max": 3340
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 37291,
            "mean": 37291,
            "median": 37291,
            "max": 37291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 8937
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 9,
            "min": 504,
            "mean": 504,
            "median": 504,
            "max": 504
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 3,
            "min": 139831,
            "mean": 210381,
            "median": 139831,
            "max": 351481
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 1546950,
            "mean": 1546950,
            "median": 1546950,
            "max": 1546950
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 773,
            "min": 1545936,
            "mean": 4432432,
            "median": 4439200,
            "max": 4449298
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 192775,
            "mean": 192775,
            "median": 192775,
            "max": 192775
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 18883,
            "mean": 79883,
            "median": 79883,
            "max": 140884
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 60540,
            "mean": 60540,
            "median": 60540,
            "max": 60540
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 6565,
            "mean": 29287,
            "median": 6874,
            "max": 63217
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 21282,
            "mean": 35048,
            "median": 24569,
            "max": 69773
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 38541,
            "mean": 38541,
            "median": 38541,
            "max": 38541
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 114697,
            "mean": 114697,
            "median": 114697,
            "max": 114697
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7173
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2602,
            "min": 4310,
            "mean": 7586,
            "median": 6310,
            "max": 31548
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 12075,
            "mean": 12075,
            "median": 12075,
            "max": 12075
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 12417,
            "mean": 12417,
            "median": 12417,
            "max": 12417
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 8,
            "min": 8693,
            "mean": 8693,
            "median": 8693,
            "max": 8693
          },
          "getIsVirtualAccActive(address)": {
            "calls": 8792,
            "min": 669,
            "mean": 669,
            "median": 669,
            "max": 669
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 12097,
            "mean": 12097,
            "median": 12097,
            "max": 12097
          },
          "getPaused(address)": {
            "calls": 9059,
            "min": 12430,
            "mean": 12430,
            "median": 12430,
            "max": 12540
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 12160,
            "mean": 12160,
            "median": 12160,
            "max": 12160
          },
          "getReserveConfigurationData(address)": {
            "calls": 10388,
            "min": 12398,
            "mean": 12398,
            "median": 12398,
            "max": 12508
          },
          "getReserveTokensAddresses(address)": {
            "calls": 8909,
            "min": 15945,
            "mean": 15945,
            "median": 15945,
            "max": 16055
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 12480,
            "mean": 12480,
            "median": 12480,
            "max": 12480
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 5890,
            "mean": 23545,
            "median": 29431,
            "max": 29431
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 514,
            "mean": 514,
            "median": 514,
            "max": 514
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 66962,
            "mean": 67207,
            "median": 67203,
            "max": 71032
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 11474,
            "mean": 11474,
            "median": 11474,
            "max": 11474
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3052
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 34887,
            "mean": 34887,
            "median": 34887,
            "max": 34887
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 57928,
            "mean": 57928,
            "median": 57928,
            "max": 57928
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 34920,
            "mean": 34920,
            "median": 34920,
            "max": 34920
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 34898,
            "mean": 34898,
            "median": 34898,
            "max": 34898
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35344,
            "mean": 35344,
            "median": 35344,
            "max": 35344
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 34901,
            "mean": 34901,
            "median": 34901,
            "max": 34901
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 35003,
            "mean": 35003,
            "median": 35003,
            "max": 35003
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35141,
            "mean": 35141,
            "median": 35141,
            "max": 35141
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 34767,
            "mean": 34805,
            "median": 34805,
            "max": 34844
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1631192,
          "size": 7642
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 179914,
            "mean": 180200,
            "median": 180200,
            "max": 180487
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 149551,
            "mean": 179311,
            "median": 181231,
            "max": 220296
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 4835
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 239089,
            "mean": 242378,
            "median": 242378,
            "max": 245668
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 196631,
            "mean": 231568,
            "median": 235450,
            "max": 235450
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33800,
            "mean": 33800,
            "median": 33800,
            "max": 33800
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52705,
            "mean": 52705,
            "median": 52705,
            "max": 52705
          },
          "fallback()": {
            "calls": 2,
            "min": 21703,
            "mean": 21703,
            "median": 21703,
            "max": 21703
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 332,
            "mean": 332,
            "median": 332,
            "max": 332
          },
          "owner()": {
            "calls": 2,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "receive()": {
            "calls": 1,
            "min": 21206,
            "mean": 21206,
            "median": 21206,
            "max": 21206
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 152537,
            "mean": 158991,
            "median": 155633,
            "max": 171773
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 222610,
            "mean": 234121,
            "median": 228580,
            "max": 251174
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 240812,
            "mean": 259066,
            "median": 265302,
            "max": 271084
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2280428,
          "size": 11226
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2529,
            "mean": 2536,
            "median": 2529,
            "max": 3478
          },
          "POOL()": {
            "calls": 107,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 11634,
            "min": 684,
            "mean": 684,
            "median": 684,
            "max": 684
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 794,
            "mean": 794,
            "median": 794,
            "max": 794
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8882,
            "min": 2812,
            "mean": 2812,
            "median": 2812,
            "max": 2812
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 3278,
            "mean": 3278,
            "median": 3278,
            "max": 3278
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24371,
            "mean": 24371,
            "median": 24371,
            "max": 24371
          },
          "balanceOf(address)": {
            "calls": 18085,
            "min": 3802,
            "mean": 12580,
            "median": 18802,
            "max": 19043
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 1105,
            "mean": 40892,
            "median": 35388,
            "max": 61488
          },
          "decimals()": {
            "calls": 9582,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7905,
            "mean": 7905,
            "median": 7905,
            "max": 7905
          },
          "getIncentivesController()": {
            "calls": 8790,
            "min": 508,
            "mean": 508,
            "median": 508,
            "max": 508
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 3136,
            "mean": 3136,
            "median": 3136,
            "max": 3136
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 587,
            "mean": 4326,
            "median": 4587,
            "max": 4587
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7685,
            "mean": 21675,
            "median": 24785,
            "max": 24785
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44384,
            "min": 123835,
            "mean": 210695,
            "median": 209261,
            "max": 298961
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 992,
            "mean": 58705,
            "median": 62245,
            "max": 69863
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 637,
            "mean": 41200,
            "median": 44807,
            "max": 61907
          },
          "name()": {
            "calls": 8966,
            "min": 2786,
            "mean": 5051,
            "median": 2795,
            "max": 9404
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2803,
            "mean": 2803,
            "median": 2803,
            "max": 2803
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 1157,
            "mean": 24671,
            "median": 9748,
            "max": 53997
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 12474,
            "mean": 24913,
            "median": 14653,
            "max": 47612
          },
          "scaledBalanceOf(address)": {
            "calls": 26198,
            "min": 535,
            "mean": 2284,
            "median": 2535,
            "max": 2535
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 810,
            "mean": 2017,
            "median": 2810,
            "max": 2810
          },
          "symbol()": {
            "calls": 8947,
            "min": 3245,
            "mean": 5462,
            "median": 3254,
            "max": 9836
          },
          "totalSupply()": {
            "calls": 9990,
            "min": 399,
            "mean": 6230,
            "median": 7396,
            "max": 18637
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 781,
            "mean": 104311,
            "median": 109642,
            "max": 179296
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2901,
            "mean": 94760,
            "median": 112642,
            "max": 149022
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 1011,
            "mean": 30215,
            "median": 34832,
            "max": 41859
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 557,
            "mean": 28084,
            "median": 33637,
            "max": 33637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 20580
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2366,
            "mean": 2366,
            "median": 2366,
            "max": 2366
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 3771,
            "mean": 25530,
            "median": 25605,
            "max": 25605
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 190968,
            "mean": 198482,
            "median": 196568,
            "max": 240250
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 197029,
            "mean": 197029,
            "median": 197029,
            "max": 197029
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 6585,
            "mean": 28572,
            "median": 49974,
            "max": 49974
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 25284,
            "mean": 25284,
            "median": 25284,
            "max": 25284
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 7335,
            "mean": 7335,
            "median": 7335,
            "max": 7335
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 6311,
            "mean": 6595,
            "median": 6311,
            "max": 79509
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 1806,
            "mean": 1824,
            "median": 1806,
            "max": 3806
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 3180,
            "mean": 3180,
            "median": 3180,
            "max": 3180
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 3488,
            "mean": 3488,
            "median": 3488,
            "max": 3488
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 1696,
            "mean": 1696,
            "median": 1696,
            "max": 1696
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 398,
            "mean": 398,
            "median": 398,
            "max": 398
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 970,
            "mean": 970,
            "median": 970,
            "max": 970
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 1520,
            "mean": 1520,
            "median": 1520,
            "max": 1520
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 1707,
            "mean": 1753,
            "median": 1707,
            "max": 3707
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 6449,
            "mean": 21481,
            "median": 22449,
            "max": 24949
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 1937,
            "mean": 1967,
            "median": 1937,
            "max": 5937
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 888,
            "mean": 3617,
            "median": 4117,
            "max": 5347
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getReservesList()": {
            "calls": 2,
            "min": 12477,
            "mean": 12477,
            "median": 12477,
            "max": 12477
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 904,
            "mean": 904,
            "median": 904,
            "max": 904
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 82632,
            "mean": 82632,
            "median": 82632,
            "max": 82632
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 3057,
            "mean": 3057,
            "median": 3057,
            "max": 3057
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 6769,
            "mean": 39740,
            "median": 6769,
            "max": 146008
          },
          "initialize(address)": {
            "calls": 69,
            "min": 46346,
            "mean": 46346,
            "median": 46346,
            "max": 46346
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 4192,
            "mean": 4192,
            "median": 4192,
            "max": 4192
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 370379,
            "mean": 370379,
            "median": 370379,
            "max": 370379
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 73772,
            "mean": 75170,
            "median": 75170,
            "max": 76568
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 220579,
            "mean": 220579,
            "median": 220579,
            "max": 220579
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 8824,
            "mean": 8824,
            "median": 8824,
            "max": 8824
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 125560,
            "mean": 125560,
            "median": 125560,
            "max": 125560
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 117786,
            "mean": 117786,
            "median": 117786,
            "max": 117786
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 131027,
            "mean": 131027,
            "median": 131027,
            "max": 131027
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 164179,
            "mean": 170855,
            "median": 170509,
            "max": 172628
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 49431,
            "mean": 49431,
            "median": 49431,
            "max": 49431
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 5494,
            "mean": 6577,
            "median": 7213,
            "max": 16494
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 3361,
            "mean": 5690,
            "median": 3361,
            "max": 25581
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 6918,
            "mean": 12099,
            "median": 11432,
            "max": 18015
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 19160,
            "mean": 40020,
            "median": 38779,
            "max": 84189
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2934,
            "mean": 3083,
            "median": 2934,
            "max": 41363
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 11354,
            "mean": 12768,
            "median": 11354,
            "max": 59429
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 27193,
            "mean": 27193,
            "median": 27193,
            "max": 27193
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 3535,
            "mean": 4300,
            "median": 3535,
            "max": 57629
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 151794,
            "mean": 202594,
            "median": 203094,
            "max": 203094
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 206211,
            "mean": 206211,
            "median": 206211,
            "max": 206211
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 254392,
            "mean": 254392,
            "median": 254392,
            "max": 254392
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 9504,
            "mean": 16137,
            "median": 9504,
            "max": 29404
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 15790,
            "mean": 15790,
            "median": 15790,
            "max": 15790
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 6684,
            "mean": 10001,
            "median": 6684,
            "max": 22308
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 120135,
            "mean": 122555,
            "median": 122555,
            "max": 124976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3605346,
          "size": 16354
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4627,
            "min": 14638,
            "mean": 26322,
            "median": 15122,
            "max": 88984
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 17128,
            "mean": 28917,
            "median": 31184,
            "max": 40689
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 14133,
            "mean": 14986,
            "median": 14133,
            "max": 102394
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 596,
            "mean": 596,
            "median": 596,
            "max": 596
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2803,
            "mean": 2803,
            "median": 2803,
            "max": 2803
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2824,
            "min": 17324,
            "mean": 20373893,
            "median": 1372919,
            "max": 177672763
          },
          "initialize(address)": {
            "calls": 805,
            "min": 72898,
            "mean": 90753,
            "median": 90798,
            "max": 90798
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1812,
            "min": 20355,
            "mean": 84166,
            "median": 84255,
            "max": 98524
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3897,
            "min": 18032,
            "mean": 71671,
            "median": 81628,
            "max": 81936
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2584,
            "min": 13951,
            "mean": 14543,
            "median": 13951,
            "max": 46971
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2335,
            "min": 13153,
            "mean": 13458,
            "median": 13153,
            "max": 46426
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2592,
            "min": 17753,
            "mean": 38763,
            "median": 38480,
            "max": 88433
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3383,
            "min": 17726,
            "mean": 77173,
            "median": 82249,
            "max": 82315
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2326,
            "min": 13506,
            "mean": 13680,
            "median": 13506,
            "max": 46526
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 17380,
            "mean": 17853,
            "median": 17380,
            "max": 98638
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 17130,
            "mean": 67302,
            "median": 65855,
            "max": 118705
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 14535,
            "mean": 17350,
            "median": 14535,
            "max": 85242
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3348,
            "min": 13420,
            "mean": 20910,
            "median": 13640,
            "max": 44231
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2576,
            "min": 17442,
            "mean": 44796,
            "median": 41063,
            "max": 111154
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2831,
            "min": 13772,
            "mean": 19430,
            "median": 13772,
            "max": 46803
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 20932,
            "mean": 50029,
            "median": 55722,
            "max": 75828
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 17744,
            "mean": 29556,
            "median": 17744,
            "max": 98286
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 17332,
            "mean": 31568,
            "median": 45749,
            "max": 45749
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 14702,
            "mean": 41486,
            "median": 50491,
            "max": 52920
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2323,
            "min": 13956,
            "mean": 14140,
            "median": 13956,
            "max": 73869
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2847,
            "min": 13555,
            "mean": 17681,
            "median": 13555,
            "max": 46575
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 13972,
            "mean": 29321,
            "median": 13972,
            "max": 109515
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1061,
            "min": 14353,
            "mean": 27384,
            "median": 31534,
            "max": 36434
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 14500,
            "mean": 14865,
            "median": 14500,
            "max": 108316
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4200588,
          "size": 19540
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6427,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 751,
            "min": 2366,
            "mean": 2366,
            "median": 2366,
            "max": 2366
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 685,
            "mean": 685,
            "median": 685,
            "max": 685
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 1565,
            "mean": 1565,
            "median": 1565,
            "max": 1565
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46528,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 3661,
            "mean": 25420,
            "median": 25495,
            "max": 25495
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 21988,
            "mean": 216833,
            "median": 225006,
            "max": 297228
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3114,
            "min": 6519,
            "mean": 46288,
            "median": 49908,
            "max": 49908
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1810,
            "min": 3186,
            "mean": 25049,
            "median": 25086,
            "max": 25086
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3115,
            "min": 2447,
            "mean": 7239,
            "median": 7247,
            "max": 7247
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 33916,
            "mean": 194650,
            "median": 203857,
            "max": 203857
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 6267,
            "mean": 7081,
            "median": 6267,
            "max": 79465
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 6522,
            "mean": 54865,
            "median": 96034,
            "max": 104775
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 9744,
            "mean": 49579,
            "median": 52370,
            "max": 111024
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 29486,
            "mean": 113134,
            "median": 89141,
            "max": 504486
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 23508,
            "mean": 293554,
            "median": 159442,
            "max": 687334
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "getConfiguration(address)": {
            "calls": 50772,
            "min": 1696,
            "mean": 2839,
            "median": 3696,
            "max": 3696
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1848,
            "min": 1092,
            "mean": 3087,
            "median": 3092,
            "max": 3092
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4706,
            "min": 1378,
            "mean": 3375,
            "median": 3378,
            "max": 3378
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 143,
            "min": 2138,
            "mean": 4110,
            "median": 4138,
            "max": 4138
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 4331,
            "mean": 5661,
            "median": 6322,
            "max": 6331
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 34,
            "min": 3086,
            "mean": 3086,
            "median": 3086,
            "max": 3086
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 1542,
            "mean": 1542,
            "median": 1542,
            "max": 1542
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 398,
            "mean": 398,
            "median": 398,
            "max": 398
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5649,
            "min": 865,
            "mean": 1580,
            "median": 865,
            "max": 2865
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 882,
            "mean": 882,
            "median": 882,
            "max": 882
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 1410,
            "mean": 1410,
            "median": 1410,
            "max": 1410
          },
          "getReserveAToken(address)": {
            "calls": 20787,
            "min": 1597,
            "mean": 3188,
            "median": 3597,
            "max": 3597
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2775,
            "mean": 2775,
            "median": 2775,
            "max": 2775
          },
          "getReserveData(address)": {
            "calls": 14619,
            "min": 4449,
            "mean": 18131,
            "median": 22449,
            "max": 24949
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 1553,
            "mean": 3401,
            "median": 3553,
            "max": 3553
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42008,
            "min": 1827,
            "mean": 3330,
            "median": 1827,
            "max": 6068
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4081,
            "min": 888,
            "mean": 2652,
            "median": 888,
            "max": 5347
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 13607,
            "min": 695,
            "mean": 2428,
            "median": 2695,
            "max": 2695
          },
          "getReservesList()": {
            "calls": 3689,
            "min": 4367,
            "mean": 19052,
            "median": 12367,
            "max": 363252
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 838,
            "mean": 838,
            "median": 838,
            "max": 838
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 5473,
            "mean": 66573,
            "median": 82501,
            "max": 125486
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 948,
            "mean": 2026,
            "median": 2948,
            "max": 2948
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 1733,
            "mean": 2524,
            "median": 1733,
            "max": 3733
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1953,
            "min": 991,
            "mean": 2720,
            "median": 2991,
            "max": 2991
          },
          "initReserve(address,address,address)": {
            "calls": 44731,
            "min": 6681,
            "mean": 158981,
            "median": 158596,
            "max": 187172
          },
          "initialize(address)": {
            "calls": 742,
            "min": 27257,
            "mean": 46184,
            "median": 46236,
            "max": 46236
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 4016,
            "mean": 4016,
            "median": 4016,
            "max": 4016
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6378,
            "min": 29012,
            "mean": 256512,
            "median": 299156,
            "max": 453726
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 3187,
            "mean": 48969,
            "median": 52162,
            "max": 133736
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 154234,
            "mean": 219511,
            "median": 220322,
            "max": 480549
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 8626,
            "mean": 8626,
            "median": 8626,
            "max": 8626
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 15328,
            "mean": 90977,
            "median": 97202,
            "max": 126848
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 80288,
            "mean": 126022,
            "median": 126443,
            "max": 138252
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 117194,
            "mean": 142117,
            "median": 131324,
            "max": 172947
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 49321,
            "mean": 49321,
            "median": 49321,
            "max": 49321
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2411,
            "min": 5340,
            "mean": 5531,
            "median": 5340,
            "max": 16340
          },
          "setConfiguration(address,(uint256))": {
            "calls": 72014,
            "min": 3207,
            "mean": 17088,
            "median": 25207,
            "max": 25427
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3515,
            "min": 5896,
            "mean": 13059,
            "median": 13405,
            "max": 17905
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 5606,
            "mean": 44938,
            "median": 38778,
            "max": 109414
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2934,
            "mean": 3835,
            "median": 2934,
            "max": 111999
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 7280,
            "mean": 14183,
            "median": 11280,
            "max": 92164
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 3425,
            "mean": 4482,
            "median": 3425,
            "max": 57530
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 30336,
            "mean": 184861,
            "median": 203021,
            "max": 210639
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 109600,
            "mean": 191221,
            "median": 212280,
            "max": 251784
          },
          "syncIndexesState(address)": {
            "calls": 2198,
            "min": 9394,
            "mean": 16364,
            "median": 9394,
            "max": 48817
          },
          "syncRatesState(address)": {
            "calls": 2198,
            "min": 15680,
            "mean": 15739,
            "median": 15680,
            "max": 20180
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 991,
            "min": 6574,
            "mean": 18146,
            "median": 22198,
            "max": 22198
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 35003,
            "mean": 129483,
            "median": 131689,
            "max": 195367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1681536,
          "size": 8296
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8787,
            "min": 2724,
            "mean": 2724,
            "median": 2724,
            "max": 2724
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 27328,
            "mean": 27328,
            "median": 27328,
            "max": 27328
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 773,
            "mean": 9941,
            "median": 4843,
            "max": 18302
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2836,
            "mean": 2836,
            "median": 2836,
            "max": 2836
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 12429,
            "mean": 24218,
            "median": 24229,
            "max": 24229
          },
          "decimals()": {
            "calls": 9559,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 563,
            "mean": 28492,
            "median": 21636,
            "max": 55836
          },
          "getIncentivesController()": {
            "calls": 8787,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44384,
            "min": 123203,
            "mean": 206508,
            "median": 208198,
            "max": 298321
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 23973,
            "mean": 60073,
            "median": 60173,
            "max": 69831
          },
          "name()": {
            "calls": 8888,
            "min": 2786,
            "mean": 5082,
            "median": 4998,
            "max": 9404
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "scaledBalanceOf(address)": {
            "calls": 18693,
            "min": 535,
            "mean": 1813,
            "median": 2535,
            "max": 2535
          },
          "scaledTotalSupply()": {
            "calls": 44926,
            "min": 722,
            "mean": 2613,
            "median": 2722,
            "max": 2722
          },
          "symbol()": {
            "calls": 8881,
            "min": 3179,
            "mean": 5402,
            "median": 3188,
            "max": 9770
          },
          "totalSupply()": {
            "calls": 190,
            "min": 2444,
            "mean": 5689,
            "median": 6444,
            "max": 17903
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3198
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "getAssetPrice(address)": {
            "calls": 58332,
            "min": 0,
            "mean": 5631,
            "median": 7844,
            "max": 15297
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5593,
            "mean": 7589,
            "median": 8588,
            "max": 8588
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "getSourceOfAsset(address)": {
            "calls": 1156,
            "min": 2511,
            "mean": 2511,
            "median": 2511,
            "max": 2511
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 36938,
            "mean": 58426,
            "median": 61291,
            "max": 62411
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 59369,
            "mean": 59369,
            "median": 59369,
            "max": 59369
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 814671,
          "size": 3715
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42581,
            "min": 0,
            "mean": 4210,
            "median": 3990,
            "max": 5335
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2921,
            "min": 2743,
            "mean": 2743,
            "median": 2743,
            "max": 2743
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3694,
            "mean": 3694,
            "median": 3694,
            "max": 3694
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1375,
            "min": 2983,
            "mean": 2983,
            "median": 2983,
            "max": 2983
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2149,
            "min": 2671,
            "mean": 2671,
            "median": 2671,
            "max": 2671
          },
          "getVariableRateSlope1(address)": {
            "calls": 2153,
            "min": 2545,
            "mean": 2545,
            "median": 2545,
            "max": 2545
          },
          "getVariableRateSlope2(address)": {
            "calls": 1381,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 28060,
            "mean": 29409,
            "median": 28716,
            "max": 36701
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 28327,
            "mean": 32876,
            "median": 29512,
            "max": 37081
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 392243,
          "size": 1638
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 9953,
            "mean": 10807,
            "median": 9953,
            "max": 12088
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 9975,
            "mean": 10829,
            "median": 9975,
            "max": 12110
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 36233,
            "mean": 39241,
            "median": 39241,
            "max": 42249
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 32908,
            "mean": 33524,
            "median": 33524,
            "max": 34140
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 339168,
          "size": 1510
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21371,
            "mean": 21371,
            "median": 21371,
            "max": 21371
          },
          "fallback()": {
            "calls": 554264,
            "min": 0,
            "mean": 124348,
            "median": 7733,
            "max": 180137971
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26731,
            "mean": 28626,
            "median": 28626,
            "max": 30522
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28589,
            "mean": 151970,
            "median": 186652,
            "max": 186652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 475114,
          "size": 2236
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43523,
            "mean": 43523,
            "median": 43523,
            "max": 43523
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43654,
            "mean": 43654,
            "median": 43654,
            "max": 43654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 349321,
          "size": 1653
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43545,
            "mean": 43545,
            "median": 43545,
            "max": 43545
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43654,
            "mean": 43654,
            "median": 43654,
            "max": 43654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4256273,
          "size": 19708
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 29158,
            "mean": 29158,
            "median": 29158,
            "max": 29158
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 113748,
          "size": 336
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "decimals()": {
            "calls": 94,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "description()": {
            "calls": 94,
            "min": 152,
            "mean": 152,
            "median": 152,
            "max": 152
          },
          "latestAnswer()": {
            "calls": 56496,
            "min": 277,
            "mean": 1745,
            "median": 2277,
            "max": 2277
          },
          "name()": {
            "calls": 94,
            "min": 152,
            "mean": 152,
            "median": 152,
            "max": 152
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 133239,
          "size": 396
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25625,
            "mean": 38919,
            "median": 45561,
            "max": 45573
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 227580,
          "size": 1010
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4532,
            "mean": 4542,
            "median": 4549,
            "max": 4549
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26034,
            "mean": 27230,
            "median": 26034,
            "max": 45946
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 422133,
          "size": 1732
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133299,
            "mean": 133299,
            "median": 133299,
            "max": 133299
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133367,
            "mean": 133380,
            "median": 133391,
            "max": 133391
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 85510,
          "size": 297
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1024440,
          "size": 5517
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 991,
            "mean": 2102,
            "median": 2991,
            "max": 2991
          },
          "approve(address,uint256)": {
            "calls": 23018,
            "min": 26032,
            "mean": 45541,
            "median": 46076,
            "max": 46316
          },
          "balanceOf(address)": {
            "calls": 89433,
            "min": 603,
            "mean": 2601,
            "median": 2603,
            "max": 2603
          },
          "decimals()": {
            "calls": 81137,
            "min": 372,
            "mean": 2366,
            "median": 2372,
            "max": 2372
          },
          "mint(address,uint256)": {
            "calls": 6464,
            "min": 36229,
            "mean": 62360,
            "median": 70441,
            "max": 70549
          },
          "name()": {
            "calls": 2080,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2670,
            "mean": 2670,
            "median": 2670,
            "max": 2670
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 76519,
            "mean": 76575,
            "median": 76567,
            "max": 76723
          },
          "symbol()": {
            "calls": 96,
            "min": 3049,
            "mean": 3049,
            "median": 3049,
            "max": 3049
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46940,
            "mean": 51032,
            "median": 51716,
            "max": 51716
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28773,
            "mean": 28773,
            "median": 28773,
            "max": 28773
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 109021,
          "size": 283
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 412,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 651,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 219,
            "mean": 253,
            "median": 256,
            "max": 256
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 247,
            "mean": 271,
            "median": 287,
            "max": 287
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 230240,
          "size": 848
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "HALF_WAD()": {
            "calls": 416,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "RAY()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "WAD()": {
            "calls": 630,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "WAD_RAY_RATIO()": {
            "calls": 1766,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 231,
            "mean": 235,
            "median": 231,
            "max": 249
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 426,
            "mean": 457,
            "median": 463,
            "max": 463
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 335,
            "mean": 360,
            "median": 375,
            "max": 375
          },
          "wadToRay(uint256)": {
            "calls": 489,
            "min": 175,
            "mean": 194,
            "median": 196,
            "max": 196
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2349985,
          "size": 11547
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 728,
            "mean": 728,
            "median": 728,
            "max": 728
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 552,
            "mean": 552,
            "median": 552,
            "max": 552
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 56081,
            "mean": 56081,
            "median": 56081,
            "max": 56081
          },
          "name()": {
            "calls": 1,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67988,
            "mean": 67988,
            "median": 67988,
            "max": 67988
          },
          "symbol()": {
            "calls": 1,
            "min": 3298,
            "mean": 3298,
            "median": 3298,
            "max": 3298
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 63822,
            "mean": 63822,
            "median": 63822,
            "max": 63822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1681508,
          "size": 8295
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 55404,
            "mean": 55404,
            "median": 55404,
            "max": 55404
          },
          "name()": {
            "calls": 1,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "symbol()": {
            "calls": 1,
            "min": 3188,
            "mean": 3188,
            "median": 3188,
            "max": 3188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 413421,
          "size": 1594
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 156865,
            "mean": 156865,
            "median": 156865,
            "max": 156865
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5195,
            "mean": 5195,
            "median": 5195,
            "max": 5195
          },
          "text()": {
            "calls": 6,
            "min": 2711,
            "mean": 2711,
            "median": 2711,
            "max": 2711
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "value()": {
            "calls": 7,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4519,
            "mean": 4519,
            "median": 4519,
            "max": 4519
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 413853,
          "size": 1596
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51465,
            "mean": 51465,
            "median": 51465,
            "max": 51465
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5195,
            "mean": 5195,
            "median": 5195,
            "max": 5195
          },
          "text()": {
            "calls": 2,
            "min": 2711,
            "mean": 2711,
            "median": 2711,
            "max": 2711
          },
          "value()": {
            "calls": 4,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4519,
            "mean": 4519,
            "median": 4519,
            "max": 4519
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132032,
          "size": 291
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 44876,
            "mean": 44876,
            "median": 44876,
            "max": 44876
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 132032,
          "size": 291
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 27776,
            "mean": 27776,
            "median": 27776,
            "max": 27776
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1372170,
          "size": 6407
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1626,
            "min": 724,
            "mean": 724,
            "median": 724,
            "max": 724
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 803,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 51063,
            "mean": 51063,
            "median": 51063,
            "max": 51063
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 51041,
            "mean": 51041,
            "median": 51041,
            "max": 51041
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50623,
            "mean": 50623,
            "median": 50623,
            "max": 50623
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 48746,
            "mean": 50500,
            "median": 51085,
            "max": 51085
          },
          "addPoolAdmin(address)": {
            "calls": 793,
            "min": 50655,
            "mean": 50666,
            "median": 50667,
            "max": 50667
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 50865,
            "mean": 50865,
            "median": 50865,
            "max": 50865
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 48954,
            "mean": 51050,
            "median": 51350,
            "max": 51350
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "isAssetListingAdmin(address)": {
            "calls": 3888,
            "min": 535,
            "mean": 2136,
            "median": 2535,
            "max": 2535
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2645,
            "mean": 2645,
            "median": 2645,
            "max": 2645
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 3170,
            "mean": 3170,
            "median": 3170,
            "max": 3170
          },
          "isPoolAdmin(address)": {
            "calls": 56680,
            "min": 931,
            "mean": 2020,
            "median": 2931,
            "max": 2931
          },
          "isRiskAdmin(address)": {
            "calls": 41125,
            "min": 821,
            "mean": 1731,
            "median": 821,
            "max": 2821
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 29220,
            "mean": 29220,
            "median": 29220,
            "max": 29220
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 28648,
            "mean": 28648,
            "median": 28648,
            "max": 28648
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 29066,
            "mean": 29066,
            "median": 29066,
            "max": 29066
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 28824,
            "mean": 38609,
            "median": 38609,
            "max": 48394
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 29285,
            "mean": 29285,
            "median": 29285,
            "max": 29285
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28890,
            "mean": 28890,
            "median": 28890,
            "max": 28890
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 46613,
            "mean": 48325,
            "median": 48668,
            "max": 48668
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1582423,
          "size": 8012
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1090,
            "min": 319,
            "mean": 845,
            "median": 319,
            "max": 2319
          },
          "getACLManager()": {
            "calls": 51857,
            "min": 531,
            "mean": 1535,
            "median": 2531,
            "max": 2531
          },
          "getAddress(bytes32)": {
            "calls": 18713,
            "min": 377,
            "mean": 1905,
            "median": 2377,
            "max": 2377
          },
          "getMarketId()": {
            "calls": 6,
            "min": 2873,
            "mean": 2873,
            "median": 2873,
            "max": 2873
          },
          "getPool()": {
            "calls": 2627,
            "min": 297,
            "mean": 1021,
            "median": 297,
            "max": 2297
          },
          "getPoolConfigurator()": {
            "calls": 196498,
            "min": 509,
            "mean": 827,
            "median": 509,
            "max": 2509
          },
          "getPoolDataProvider()": {
            "calls": 2640,
            "min": 729,
            "mean": 1560,
            "median": 729,
            "max": 2729
          },
          "getPriceOracle()": {
            "calls": 33077,
            "min": 812,
            "mean": 2667,
            "median": 2812,
            "max": 2812
          },
          "getPriceOracleSentinel()": {
            "calls": 15835,
            "min": 487,
            "mean": 2486,
            "median": 2487,
            "max": 2487
          },
          "owner()": {
            "calls": 806,
            "min": 2538,
            "mean": 2538,
            "median": 2538,
            "max": 2538
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 24115,
            "mean": 47320,
            "median": 47967,
            "max": 47967
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 24269,
            "mean": 37883,
            "median": 39571,
            "max": 48121
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24699,
            "mean": 48520,
            "median": 48638,
            "max": 48914
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24275,
            "mean": 181039,
            "median": 56442,
            "max": 399989
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24634,
            "mean": 28465,
            "median": 28465,
            "max": 32296
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 24225,
            "mean": 233648,
            "median": 241748,
            "max": 426872
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 24203,
            "mean": 37817,
            "median": 39505,
            "max": 48055
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 24159,
            "mean": 220254,
            "median": 228358,
            "max": 400144
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 23936,
            "mean": 37391,
            "median": 39026,
            "max": 47576
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 24093,
            "mean": 41119,
            "median": 47945,
            "max": 47945
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 1982
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2506,
            "mean": 4813,
            "median": 4813,
            "max": 7120
          },
          "owner()": {
            "calls": 803,
            "min": 2359,
            "mean": 2359,
            "median": 2359,
            "max": 2359
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 24123,
            "mean": 103955,
            "median": 119922,
            "max": 119922
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 26014,
            "mean": 38822,
            "median": 39852,
            "max": 49570
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 716541,
          "size": 3270
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 210941,
            "mean": 284126,
            "median": 284098,
            "max": 289806
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "owner()": {
            "calls": 2,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 59330,
            "mean": 59330,
            "median": 59330,
            "max": 59330
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43937,
            "mean": 43937,
            "median": 43937,
            "max": 43937
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48659,
            "mean": 48666,
            "median": 48671,
            "max": 48671
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 60623,
            "mean": 60623,
            "median": 60623,
            "max": 60623
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46814,
            "mean": 46814,
            "median": 46814,
            "max": 46814
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28754,
            "mean": 28754,
            "median": 28754,
            "max": 28754
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 44916,
            "mean": 44916,
            "median": 44916,
            "max": 44916
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 2421138,
          "size": 11056
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 806,
            "min": 728,
            "mean": 728,
            "median": 728,
            "max": 728
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 91344,
            "mean": 91344,
            "median": 91344,
            "max": 91344
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 93626,
            "mean": 93626,
            "median": 93626,
            "max": 93626
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 91221,
            "mean": 91221,
            "median": 91221,
            "max": 91221
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 711,
            "min": 682,
            "mean": 74071,
            "median": 83395,
            "max": 118726
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 86736,
            "mean": 86736,
            "median": 86736,
            "max": 86736
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 84345,
            "mean": 84345,
            "median": 84345,
            "max": 84345
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 173758,
            "mean": 246958,
            "median": 246939,
            "max": 252623
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 29065,
            "mean": 29065,
            "median": 29065,
            "max": 29065
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "getAssetIndex(address,address)": {
            "calls": 9698,
            "min": 3170,
            "mean": 10697,
            "median": 11045,
            "max": 16503
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 508,
            "mean": 508,
            "median": 508,
            "max": 508
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 3163,
            "mean": 5606,
            "median": 5692,
            "max": 8221
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 2998,
            "mean": 2998,
            "median": 2998,
            "max": 2998
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 5301,
            "mean": 5301,
            "median": 5301,
            "max": 5301
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 7506,
            "mean": 7506,
            "median": 7506,
            "max": 7506
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 2861,
            "mean": 2861,
            "median": 2861,
            "max": 2861
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 12161,
            "mean": 18022,
            "median": 17936,
            "max": 22978
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 605,
            "mean": 2231,
            "median": 2605,
            "max": 37505
          },
          "initialize(address)": {
            "calls": 803,
            "min": 26426,
            "mean": 45391,
            "median": 45415,
            "max": 45415
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24708,
            "mean": 24708,
            "median": 24708,
            "max": 24708
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 9139,
            "mean": 9139,
            "median": 9139,
            "max": 9139
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 24251,
            "mean": 24251,
            "median": 24251,
            "max": 24251
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12345,
            "mean": 12345,
            "median": 12345,
            "max": 12345
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 10257,
            "mean": 10257,
            "median": 10257,
            "max": 10257
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 285742,
          "size": 1373
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 479112,
          "size": 2642
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25848,
            "mean": 25848,
            "median": 25848,
            "max": 25848
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52701,
            "mean": 52701,
            "median": 52701,
            "max": 52701
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 26927,
            "mean": 26927,
            "median": 26927,
            "max": 26927
          },
          "renewApproval()": {
            "calls": 1,
            "min": 28024,
            "mean": 28024,
            "median": 28024,
            "max": 28024
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1310611,
          "size": 5901
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 404,
            "mean": 404,
            "median": 404,
            "max": 404
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2934,
            "mean": 16554,
            "median": 16554,
            "max": 30174
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19747,
            "mean": 19881,
            "median": 19881,
            "max": 20015
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7618,
            "mean": 42201,
            "median": 35030,
            "max": 91127
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2880,
            "mean": 122399,
            "median": 206007,
            "max": 206007
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2552,
            "mean": 7598,
            "median": 2552,
            "max": 17691
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7148,
            "mean": 18253,
            "median": 18253,
            "max": 29359
          },
          "initialize(uint256,address)": {
            "calls": 873,
            "min": 95869,
            "mean": 116872,
            "median": 117987,
            "max": 117987
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2884,
            "mean": 2884,
            "median": 2884,
            "max": 2884
          },
          "receive()": {
            "calls": 4,
            "min": 67,
            "mean": 67,
            "median": 67,
            "max": 67
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2846,
            "mean": 19256,
            "median": 19256,
            "max": 35666
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7646,
            "mean": 35402,
            "median": 20362,
            "max": 87348
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 457832,
          "size": 2153
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23675,
            "mean": 90410,
            "median": 92593,
            "max": 92593
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24316,
            "mean": 132782,
            "median": 134999,
            "max": 134999
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 2420523,
          "size": 19207
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 826,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 2677199,
          "size": 15866
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 801,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 5971953,
          "size": 28651
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 776,
            "min": 17852,
            "mean": 17852,
            "median": 17852,
            "max": 17852
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 6961277,
          "size": 30340
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 776,
            "min": 9001,
            "mean": 9001,
            "median": 9001,
            "max": 9001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8142935,
          "size": 37570
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 944472,
          "size": 6030
        },
        "functions": {
          "getMiscReport()": {
            "calls": 826,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 4795507,
          "size": 24424
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 6392306,
          "size": 31256
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 826,
            "min": 17852,
            "mean": 17852,
            "median": 17852,
            "max": 17852
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 7917592,
          "size": 36530
        },
        "functions": {
          "getPoolReport()": {
            "calls": 745,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5918141,
          "size": 30628
        },
        "functions": {
          "getInitialReport()": {
            "calls": 826,
            "min": 6932,
            "mean": 6932,
            "median": 6932,
            "max": 6932
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 776,
            "min": 649756,
            "mean": 652013,
            "median": 649756,
            "max": 770560
          },
          "setProtocolDataProvider(address)": {
            "calls": 801,
            "min": 60045,
            "mean": 60056,
            "median": 60057,
            "max": 60057
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 803,
            "min": 2399349,
            "mean": 2785239,
            "median": 2785195,
            "max": 2811586
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 801,
            "min": 47975,
            "mean": 47979,
            "median": 47975,
            "max": 48047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4062003,
          "size": 20086
        },
        "functions": {
          "getTokensReport()": {
            "calls": 801,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 1563085,
          "size": 7206
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 57483,
            "mean": 106491,
            "median": 57858,
            "max": 170139
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 34496,
            "mean": 85888,
            "median": 58760,
            "max": 174754
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 57280,
            "mean": 103214,
            "median": 57655,
            "max": 169936
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 47982,
            "mean": 90770,
            "median": 56755,
            "max": 129068
          },
          "getClaimableRewards(address,address)": {
            "calls": 3401,
            "min": 26554,
            "mean": 29603,
            "median": 29692,
            "max": 29697
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 28774,
            "mean": 34487,
            "median": 34549,
            "max": 34554
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1092,
            "min": 2901,
            "mean": 2901,
            "median": 2901,
            "max": 2901
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "mint(address,uint256)": {
            "calls": 2451,
            "min": 53293,
            "mean": 96481,
            "median": 97030,
            "max": 100163
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 79813,
            "mean": 79813,
            "median": 79813,
            "max": 79813
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 116623,
            "mean": 116642,
            "median": 116643,
            "max": 116998
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 5300,
            "mean": 5300,
            "median": 5300,
            "max": 5300
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 59377,
            "mean": 74718,
            "median": 71588,
            "max": 102350
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1041576,
          "size": 5596
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2416,
            "mean": 2416,
            "median": 2416,
            "max": 2416
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 962,
            "min": 2567,
            "mean": 3635,
            "median": 4567,
            "max": 4567
          },
          "mint(address,uint256)": {
            "calls": 2451,
            "min": 51045,
            "mean": 67378,
            "median": 68409,
            "max": 68409
          },
          "scaledTotalSupply()": {
            "calls": 12000,
            "min": 2696,
            "mean": 2696,
            "median": 2696,
            "max": 2696
          },
          "transfer(address,uint256)": {
            "calls": 2451,
            "min": 29884,
            "mean": 46032,
            "median": 47056,
            "max": 47056
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2016957,
          "size": 9402
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26100,
            "mean": 45759,
            "median": 46048,
            "max": 46144
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 16298,
            "mean": 16298,
            "median": 16298,
            "max": 16298
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 16848,
            "mean": 16848,
            "median": 16848,
            "max": 16848
          },
          "decimals()": {
            "calls": 256,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 60534,
            "mean": 196025,
            "median": 209190,
            "max": 214358
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 76566,
            "mean": 242964,
            "median": 265933,
            "max": 348604
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 37220,
            "mean": 51310,
            "median": 51475,
            "max": 51475
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 37809,
            "mean": 37809,
            "median": 37809,
            "max": 37809
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 14908,
            "mean": 23774,
            "median": 28206,
            "max": 28210
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 68426,
            "mean": 187055,
            "median": 187018,
            "max": 305623
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 133210,
            "mean": 133210,
            "median": 133210,
            "max": 133210
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 16979,
            "mean": 16979,
            "median": 16979,
            "max": 16979
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 16832,
            "mean": 16832,
            "median": 16832,
            "max": 16832
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 16540,
            "mean": 16540,
            "median": 16540,
            "max": 16540
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 16458,
            "mean": 16458,
            "median": 16458,
            "max": 16458
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 169799,
            "mean": 170010,
            "median": 170075,
            "max": 170147
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 40854,
            "mean": 119535,
            "median": 158469,
            "max": 159345
          },
          "totalAssets()": {
            "calls": 258,
            "min": 18370,
            "mean": 18370,
            "median": 18370,
            "max": 18370
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 53019,
            "mean": 113199,
            "median": 113169,
            "max": 173319
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 833976,
          "size": 3920
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 219092,
            "mean": 219092,
            "median": 219092,
            "max": 219092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 825756,
          "size": 3819
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 166596,
            "mean": 166596,
            "median": 166596,
            "max": 166596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 825540,
          "size": 3818
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 44602,
            "mean": 44602,
            "median": 44602,
            "max": 44602
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 790313,
          "size": 3655
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86050,
            "mean": 86050,
            "median": 86050,
            "max": 86050
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 826428,
          "size": 3822
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 825564,
          "size": 3818
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 32292,
            "mean": 32292,
            "median": 32292,
            "max": 32292
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 826428,
          "size": 3822
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 827292,
          "size": 3826
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 32578,
            "mean": 32578,
            "median": 32578,
            "max": 32578
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 917935,
          "size": 4403
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 380221,
            "mean": 380221,
            "median": 380221,
            "max": 380221
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 778943,
          "size": 3518
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 95712,
            "mean": 95712,
            "median": 95712,
            "max": 95712
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 805784,
          "size": 3642
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 53695,
            "mean": 53695,
            "median": 53695,
            "max": 53695
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 778739,
          "size": 3517
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 47221,
            "mean": 47221,
            "median": 47221,
            "max": 47221
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 883884,
          "size": 4151
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1535212,
            "mean": 1535212,
            "median": 1535212,
            "max": 1535212
          },
          "newListings()": {
            "calls": 4,
            "min": 2906,
            "mean": 2906,
            "median": 2906,
            "max": 2906
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 949815,
          "size": 4582
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1534838,
            "mean": 1534838,
            "median": 1534838,
            "max": 1534838
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 3655,
            "mean": 3655,
            "median": 3655,
            "max": 3655
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1027628,
          "size": 4950
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1677576,
            "mean": 1677576,
            "median": 1677576,
            "max": 1677576
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 3655,
            "mean": 3655,
            "median": 3655,
            "max": 3655
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 960184,
          "size": 4512
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1677949,
            "mean": 1677949,
            "median": 1677949,
            "max": 1677949
          },
          "newListings()": {
            "calls": 4,
            "min": 2906,
            "mean": 2906,
            "median": 2906,
            "max": 2906
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 837657,
          "size": 3937
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 64023,
            "mean": 64023,
            "median": 64023,
            "max": 64023
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 821895,
          "size": 3801
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 140541,
            "mean": 140541,
            "median": 140541,
            "max": 140541
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 1664,
            "mean": 1664,
            "median": 1664,
            "max": 1664
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1683943,
          "size": 8307
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 663,
            "mean": 663,
            "median": 663,
            "max": 663
          },
          "POOL()": {
            "calls": 2818,
            "min": 442,
            "mean": 442,
            "median": 442,
            "max": 442
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2724,
            "mean": 2724,
            "median": 2724,
            "max": 2724
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 924,
            "mean": 924,
            "median": 924,
            "max": 924
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21562,
            "mean": 21562,
            "median": 21562,
            "max": 21562
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 27350,
            "mean": 27350,
            "median": 27350,
            "max": 27350
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 28251,
            "mean": 28251,
            "median": 28251,
            "max": 28251
          },
          "decimals()": {
            "calls": 2818,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21936,
            "mean": 21936,
            "median": 21936,
            "max": 21936
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21738,
            "mean": 21738,
            "median": 21738,
            "max": 21738
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 46284,
            "mean": 182088,
            "median": 208176,
            "max": 275873
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 62173,
            "mean": 64587,
            "median": 62173,
            "max": 71831
          },
          "name()": {
            "calls": 2818,
            "min": 2786,
            "mean": 3857,
            "median": 2795,
            "max": 9404
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "symbol()": {
            "calls": 2818,
            "min": 3179,
            "mean": 4211,
            "median": 3188,
            "max": 9770
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21958,
            "mean": 21958,
            "median": 21958,
            "max": 21958
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 21867,
            "mean": 21867,
            "median": 21867,
            "max": 21867
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 75513659,
          "size": 376200
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 76130,
            "mean": 76325,
            "median": 76418,
            "max": 76428
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 78021,
            "mean": 78021,
            "median": 78021,
            "max": 78021
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 156792,
            "mean": 156792,
            "median": 156792,
            "max": 156792
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 434458,
            "mean": 793821,
            "median": 853876,
            "max": 856746
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 730325,
            "mean": 730325,
            "median": 730325,
            "max": 730325
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 60364,
            "mean": 76291,
            "median": 76291,
            "max": 92219
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 63519,
            "mean": 75202,
            "median": 77189,
            "max": 77199
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 477844,
            "mean": 726796,
            "median": 726796,
            "max": 975748
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 561390,
            "mean": 582015,
            "median": 581890,
            "max": 602767
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 462209,
            "mean": 598295,
            "median": 643929,
            "max": 709348
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 649103,
            "mean": 687572,
            "median": 687572,
            "max": 726042
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 162464,
            "mean": 162464,
            "median": 162464,
            "max": 162464
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 130374,
            "mean": 139894,
            "median": 144655,
            "max": 144655
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 591214,
            "mean": 627855,
            "median": 619396,
            "max": 667743
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 646193,
            "mean": 646193,
            "median": 646193,
            "max": 646193
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 575046,
            "mean": 586714,
            "median": 575046,
            "max": 621719
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 36630,
            "mean": 36865,
            "median": 37002,
            "max": 37014
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 594872,
            "mean": 594872,
            "median": 594872,
            "max": 594872
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 624398,
            "mean": 624398,
            "median": 624398,
            "max": 624398
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 621946,
            "mean": 678732,
            "median": 627551,
            "max": 786699
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 594556,
            "mean": 631694,
            "median": 626619,
            "max": 687076
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 592689,
            "mean": 646159,
            "median": 648449,
            "max": 697341
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 627308,
            "mean": 627308,
            "median": 627308,
            "max": 627308
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 480012,
            "mean": 644133,
            "median": 709257,
            "max": 709257
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 431676,
            "mean": 566667,
            "median": 621397,
            "max": 646929
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 701831,
            "mean": 1158036,
            "median": 1297598,
            "max": 1306319
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 514103,
            "mean": 514103,
            "median": 514103,
            "max": 514103
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 706237,
            "mean": 706237,
            "median": 706237,
            "max": 706237
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 755886,
            "mean": 755886,
            "median": 755886,
            "max": 755886
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 130390,
          "size": 413
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 299,
            "mean": 1097,
            "median": 299,
            "max": 2299
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 3418855,
          "size": 13565
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 768,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "WBTC_ADDRESS()": {
            "calls": 768,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "execute()": {
            "calls": 771,
            "min": 4355483,
            "mean": 4356203,
            "median": 4355483,
            "max": 4365581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 80019,
          "size": 147
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 259
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 120311,
          "size": 336
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3233917,
          "size": 15634
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 509,
            "mean": 509,
            "median": 509,
            "max": 509
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24371,
            "mean": 24371,
            "median": 24371,
            "max": 24371
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 18956,
            "mean": 19139,
            "median": 19197,
            "max": 19197
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 47694,
            "mean": 74955,
            "median": 71083,
            "max": 88183
          },
          "delegate(address)": {
            "calls": 26,
            "min": 7153,
            "mean": 68441,
            "median": 71665,
            "max": 91565
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 28043,
            "mean": 47310,
            "median": 50052,
            "max": 62063
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5820,
            "mean": 6998,
            "median": 8024,
            "max": 8031
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5558,
            "mean": 8314,
            "median": 9969,
            "max": 9969
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 6327,
            "mean": 6513,
            "median": 6515,
            "max": 6521
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 6807,
            "mean": 7100,
            "median": 7184,
            "max": 7184
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 56191,
            "mean": 56191,
            "median": 56191,
            "max": 56191
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 31608,
            "mean": 56156,
            "median": 48708,
            "max": 89197
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply()": {
            "calls": 5,
            "min": 7418,
            "mean": 7418,
            "median": 7418,
            "max": 7418
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 86183,
            "mean": 122091,
            "median": 123928,
            "max": 141916
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 93029,
            "mean": 138140,
            "median": 134846,
            "max": 194101
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 40498,
            "mean": 75172,
            "median": 73676,
            "max": 121476
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 33446,
            "mean": 33446,
            "median": 33446,
            "max": 33446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 270528,
          "size": 1381
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1372,
            "mean": 1372,
            "median": 1372,
            "max": 1372
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 53320,
          "size": 296
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 565,
            "mean": 1874,
            "median": 3065,
            "max": 3065
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 823931,
          "size": 3593
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2810,
            "mean": 2810,
            "median": 2810,
            "max": 2810
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 157609,
            "mean": 157609,
            "median": 157609,
            "max": 157609
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1245
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 652623,
          "size": 3607
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5175,
            "mean": 27070,
            "median": 7333,
            "max": 2690044
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 530447,
          "size": 2330
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 799,
            "mean": 2399,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 3553,
            "min": 28991,
            "mean": 44952,
            "median": 46199,
            "max": 46463
          },
          "balanceOf(address)": {
            "calls": 19617,
            "min": 538,
            "mean": 2534,
            "median": 2538,
            "max": 2538
          },
          "decimals()": {
            "calls": 2438,
            "min": 312,
            "mean": 2270,
            "median": 2312,
            "max": 2312
          },
          "deposit()": {
            "calls": 51,
            "min": 44976,
            "mean": 44976,
            "median": 44976,
            "max": 44976
          },
          "name()": {
            "calls": 16,
            "min": 3077,
            "mean": 3077,
            "median": 3077,
            "max": 3077
          },
          "symbol()": {
            "calls": 46,
            "min": 3121,
            "mean": 3121,
            "median": 3121,
            "max": 3121
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 47047,
            "mean": 47047,
            "median": 47047,
            "max": 47047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1878917,
          "size": 9298
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 326177,
            "mean": 416976,
            "median": 448888,
            "max": 475863
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 2003830,
          "size": 9963
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 36113,
            "mean": 36113,
            "median": 36113,
            "max": 36113
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 357734,
            "mean": 459416,
            "median": 483264,
            "max": 513403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1561933,
          "size": 7750
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 326114,
            "mean": 355983,
            "median": 350586,
            "max": 391251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3530
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2662624,
            "mean": 2662624,
            "median": 2662624,
            "max": 2662624
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "initialize()": {
            "calls": 797,
            "min": 23515,
            "mean": 24075,
            "median": 24089,
            "max": 24089
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 19639
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 6513,
            "mean": 6513,
            "median": 6513,
            "max": 6513
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "aToken()": {
            "calls": 1,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 2805,
            "mean": 2805,
            "median": 2805,
            "max": 2805
          },
          "asset()": {
            "calls": 1,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2650,
            "mean": 2650,
            "median": 2650,
            "max": 2650
          },
          "canPause(address)": {
            "calls": 257,
            "min": 11507,
            "mean": 11507,
            "median": 11507,
            "max": 11507
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 332132,
            "mean": 332132,
            "median": 332132,
            "max": 332132
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 3160,
            "mean": 3160,
            "median": 3160,
            "max": 3160
          },
          "decimals()": {
            "calls": 1,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 258033,
            "mean": 267756,
            "median": 267756,
            "max": 277480
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 155521,
            "mean": 156476,
            "median": 155521,
            "max": 197233
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 5919,
            "mean": 121489,
            "median": 122157,
            "max": 143966
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25518,
            "mean": 230315,
            "median": 231125,
            "max": 238125
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 26566,
            "mean": 26566,
            "median": 26566,
            "max": 26566
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 29319,
            "mean": 29319,
            "median": 29319,
            "max": 29319
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 258126,
            "mean": 258126,
            "median": 258126,
            "max": 258126
          },
          "name()": {
            "calls": 1,
            "min": 3269,
            "mean": 3269,
            "median": 3269,
            "max": 3269
          },
          "nonces(address)": {
            "calls": 3,
            "min": 2776,
            "mean": 2776,
            "median": 2776,
            "max": 2776
          },
          "paused()": {
            "calls": 2,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 777,
            "mean": 30644,
            "median": 33447,
            "max": 57709
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 16046,
            "mean": 16046,
            "median": 16046,
            "max": 16046
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 31858,
            "mean": 105619,
            "median": 105619,
            "max": 179380
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 130290,
            "mean": 130290,
            "median": 130290,
            "max": 130290
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 156130,
            "mean": 156130,
            "median": 156130,
            "max": 156130
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 11489,
            "mean": 12111,
            "median": 11489,
            "max": 34887
          },
          "symbol()": {
            "calls": 1,
            "min": 3281,
            "mean": 3281,
            "median": 3281,
            "max": 3281
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 2759,
            "mean": 2759,
            "median": 2759,
            "max": 2759
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 34612,
            "mean": 34612,
            "median": 34612,
            "max": 34612
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 9880
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 9,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 3,
            "min": 132782,
            "mean": 199991,
            "median": 132782,
            "max": 334410
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 1720106,
            "mean": 1720106,
            "median": 1720106,
            "max": 1720106
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 773,
            "min": 1719548,
            "mean": 4945851,
            "median": 4954089,
            "max": 4955937
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 180574,
            "mean": 180574,
            "median": 180574,
            "max": 180574
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 18820,
            "mean": 73576,
            "median": 73576,
            "max": 128333
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 58161,
            "mean": 58161,
            "median": 58161,
            "max": 58161
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 7617,
            "mean": 28859,
            "median": 7656,
            "max": 60685
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 20356,
            "mean": 33769,
            "median": 23635,
            "max": 67452
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 38010,
            "mean": 38010,
            "median": 38010,
            "max": 38010
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 110458,
            "mean": 110458,
            "median": 110458,
            "max": 110458
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7910
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2602,
            "min": 3553,
            "mean": 6728,
            "median": 5553,
            "max": 30085
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 11351,
            "mean": 11351,
            "median": 11351,
            "max": 11351
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 11346,
            "mean": 11346,
            "median": 11346,
            "max": 11346
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 8,
            "min": 8811,
            "mean": 8811,
            "median": 8811,
            "max": 8811
          },
          "getIsVirtualAccActive(address)": {
            "calls": 8416,
            "min": 463,
            "mean": 463,
            "median": 463,
            "max": 463
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 11373,
            "mean": 11373,
            "median": 11373,
            "max": 11373
          },
          "getPaused(address)": {
            "calls": 8683,
            "min": 11440,
            "mean": 11461,
            "median": 11462,
            "max": 11462
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 11383,
            "mean": 11383,
            "median": 11383,
            "max": 11383
          },
          "getReserveConfigurationData(address)": {
            "calls": 10012,
            "min": 11797,
            "mean": 11818,
            "median": 11819,
            "max": 11819
          },
          "getReserveTokensAddresses(address)": {
            "calls": 8533,
            "min": 14934,
            "mean": 14934,
            "median": 14934,
            "max": 14979
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 11399,
            "mean": 11399,
            "median": 11399,
            "max": 11399
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 6109,
            "mean": 23641,
            "median": 29486,
            "max": 29486
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 66386,
            "mean": 66840,
            "median": 66846,
            "max": 70414
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 11144,
            "mean": 11144,
            "median": 11144,
            "max": 11144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3812
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 35195,
            "mean": 35195,
            "median": 35195,
            "max": 35195
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 58427,
            "mean": 58427,
            "median": 58427,
            "max": 58427
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 35079,
            "mean": 35079,
            "median": 35079,
            "max": 35079
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 35106,
            "mean": 35106,
            "median": 35106,
            "max": 35106
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35565,
            "mean": 35565,
            "median": 35565,
            "max": 35565
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 35021,
            "mean": 35021,
            "median": 35021,
            "max": 35021
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 35124,
            "mean": 35124,
            "median": 35124,
            "max": 35124
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35480,
            "mean": 35480,
            "median": 35480,
            "max": 35480
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 34965,
            "mean": 34998,
            "median": 34998,
            "max": 35032
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1677119,
          "size": 7853
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 172474,
            "mean": 172750,
            "median": 172750,
            "max": 173026
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 142738,
            "mean": 171779,
            "median": 173508,
            "max": 213618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 6326
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 235164,
            "mean": 238263,
            "median": 238263,
            "max": 241362
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 194700,
            "mean": 229032,
            "median": 232847,
            "max": 232847
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33756,
            "mean": 33756,
            "median": 33756,
            "max": 33756
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52882,
            "mean": 52882,
            "median": 52882,
            "max": 52882
          },
          "fallback()": {
            "calls": 2,
            "min": 21596,
            "mean": 21596,
            "median": 21596,
            "max": 21596
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "owner()": {
            "calls": 2,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "receive()": {
            "calls": 1,
            "min": 21206,
            "mean": 21206,
            "median": 21206,
            "max": 21206
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 150472,
            "mean": 157180,
            "median": 153710,
            "max": 170609
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 216854,
            "mean": 227854,
            "median": 221441,
            "max": 245269
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 233262,
            "mean": 251417,
            "median": 257632,
            "max": 263358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2301071,
          "size": 11182
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2455,
            "mean": 2459,
            "median": 2455,
            "max": 3539
          },
          "POOL()": {
            "calls": 107,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 11258,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8506,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24585,
            "mean": 24585,
            "median": 24585,
            "max": 24585
          },
          "balanceOf(address)": {
            "calls": 18099,
            "min": 2743,
            "mean": 11538,
            "median": 17743,
            "max": 18203
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 591,
            "mean": 40556,
            "median": 35049,
            "max": 61149
          },
          "decimals()": {
            "calls": 9206,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7704,
            "mean": 7704,
            "median": 7704,
            "max": 7704
          },
          "getIncentivesController()": {
            "calls": 8414,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 825,
            "mean": 4564,
            "median": 4825,
            "max": 4825
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7771,
            "mean": 21761,
            "median": 24871,
            "max": 24871
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44008,
            "min": 123674,
            "mean": 209165,
            "median": 209087,
            "max": 298803
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 572,
            "mean": 58595,
            "median": 62135,
            "max": 69886
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 351,
            "mean": 41149,
            "median": 44783,
            "max": 61883
          },
          "name()": {
            "calls": 8590,
            "min": 2997,
            "mean": 5345,
            "median": 5236,
            "max": 9554
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 709,
            "mean": 24207,
            "median": 9265,
            "max": 53570
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 11555,
            "mean": 23984,
            "median": 13708,
            "max": 46689
          },
          "scaledBalanceOf(address)": {
            "calls": 26212,
            "min": 665,
            "mean": 2414,
            "median": 2665,
            "max": 2665
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 373,
            "mean": 1580,
            "median": 2373,
            "max": 2373
          },
          "symbol()": {
            "calls": 8571,
            "min": 3062,
            "mean": 5390,
            "median": 3241,
            "max": 9619
          },
          "totalSupply()": {
            "calls": 9990,
            "min": 406,
            "mean": 5527,
            "median": 6478,
            "max": 17938
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 535,
            "mean": 100968,
            "median": 106157,
            "max": 175585
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2974,
            "mean": 92082,
            "median": 109568,
            "max": 145496
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 592,
            "mean": 29780,
            "median": 34397,
            "max": 41466
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 440,
            "mean": 27967,
            "median": 33520,
            "max": 33559
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 22463
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 2756,
            "mean": 24543,
            "median": 24618,
            "max": 24618
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 186092,
            "mean": 193627,
            "median": 191692,
            "max": 235669
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 191727,
            "mean": 191727,
            "median": 191727,
            "max": 191727
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 5991,
            "mean": 28113,
            "median": 49647,
            "max": 49647
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 23735,
            "mean": 23735,
            "median": 23735,
            "max": 23735
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 6629,
            "mean": 6629,
            "median": 6629,
            "max": 6629
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 5825,
            "mean": 6109,
            "median": 5825,
            "max": 79050
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 369,
            "mean": 369,
            "median": 369,
            "max": 369
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 723,
            "mean": 741,
            "median": 723,
            "max": 2723
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 2666,
            "mean": 2666,
            "median": 2666,
            "max": 2666
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 654,
            "mean": 700,
            "median": 654,
            "max": 2654
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 6072,
            "mean": 21104,
            "median": 22072,
            "max": 24572
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 867,
            "mean": 897,
            "median": 867,
            "max": 4867
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 912,
            "mean": 3723,
            "median": 4223,
            "max": 5535
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2699,
            "mean": 2699,
            "median": 2699,
            "max": 2699
          },
          "getReservesList()": {
            "calls": 2,
            "min": 10982,
            "mean": 10982,
            "median": 10982,
            "max": 10982
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 80899,
            "mean": 80899,
            "median": 80899,
            "max": 80899
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 5993,
            "mean": 38793,
            "median": 5993,
            "max": 144632
          },
          "initialize(address)": {
            "calls": 69,
            "min": 45373,
            "mean": 45373,
            "median": 45373,
            "max": 45373
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2815,
            "mean": 2815,
            "median": 2815,
            "max": 2815
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 361278,
            "mean": 361278,
            "median": 361278,
            "max": 361278
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 72784,
            "mean": 74145,
            "median": 74145,
            "max": 75506
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 217089,
            "mean": 217089,
            "median": 217089,
            "max": 217089
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7416,
            "mean": 7416,
            "median": 7416,
            "max": 7416
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 124170,
            "mean": 124170,
            "median": 124170,
            "max": 124170
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 116050,
            "mean": 116050,
            "median": 116050,
            "max": 116050
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 125992,
            "mean": 125992,
            "median": 125992,
            "max": 125992
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 162856,
            "mean": 169641,
            "median": 169291,
            "max": 171088
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 48002,
            "mean": 48002,
            "median": 48002,
            "max": 48002
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 4197,
            "mean": 5251,
            "median": 5868,
            "max": 15197
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 1904,
            "mean": 4219,
            "median": 1904,
            "max": 24059
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 5928,
            "mean": 10987,
            "median": 10347,
            "max": 16798
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 18799,
            "mean": 39708,
            "median": 38529,
            "max": 83617
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2842,
            "mean": 2990,
            "median": 2842,
            "max": 40936
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 10480,
            "mean": 11901,
            "median": 10480,
            "max": 58619
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 26682,
            "mean": 26682,
            "median": 26682,
            "max": 26682
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 2926,
            "mean": 3680,
            "median": 2926,
            "max": 56434
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 150008,
            "mean": 200806,
            "median": 201308,
            "max": 201308
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 203491,
            "mean": 203491,
            "median": 203491,
            "max": 203491
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 252980,
            "mean": 252980,
            "median": 252980,
            "max": 252980
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 7757,
            "mean": 14390,
            "median": 7757,
            "max": 27657
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 14052,
            "mean": 14052,
            "median": 14052,
            "max": 14052
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 5809,
            "mean": 9129,
            "median": 5809,
            "max": 21449
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 117208,
            "mean": 119633,
            "median": 119633,
            "max": 122058
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3656968,
          "size": 16598
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4627,
            "min": 11342,
            "mean": 23521,
            "median": 11551,
            "max": 84039
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 16751,
            "mean": 27943,
            "median": 29645,
            "max": 39123
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 13570,
            "mean": 14411,
            "median": 13570,
            "max": 101270
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2640,
            "mean": 2640,
            "median": 2640,
            "max": 2640
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2824,
            "min": 16955,
            "mean": 23366884,
            "median": 1580661,
            "max": 205940869
          },
          "initialize(address)": {
            "calls": 805,
            "min": 72440,
            "mean": 90295,
            "median": 90340,
            "max": 90340
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1812,
            "min": 18016,
            "mean": 81822,
            "median": 81916,
            "max": 94887
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3897,
            "min": 16986,
            "mean": 68568,
            "median": 77852,
            "max": 77897
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2584,
            "min": 10599,
            "mean": 11385,
            "median": 10599,
            "max": 43554
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2335,
            "min": 10318,
            "mean": 10586,
            "median": 10318,
            "max": 43318
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2592,
            "min": 16770,
            "mean": 33080,
            "median": 32328,
            "max": 83516
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3383,
            "min": 17290,
            "mean": 76083,
            "median": 81102,
            "max": 81191
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2326,
            "min": 10616,
            "mean": 10756,
            "median": 10616,
            "max": 43571
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 16739,
            "mean": 17150,
            "median": 16739,
            "max": 87493
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 16850,
            "mean": 59949,
            "median": 55454,
            "max": 104578
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 13702,
            "mean": 16336,
            "median": 13702,
            "max": 80102
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3348,
            "min": 10405,
            "mean": 18044,
            "median": 10560,
            "max": 41214
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2576,
            "min": 16815,
            "mean": 38820,
            "median": 34543,
            "max": 105316
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2831,
            "min": 10404,
            "mean": 16032,
            "median": 10404,
            "max": 43368
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 20040,
            "mean": 47423,
            "median": 52229,
            "max": 72428
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 17071,
            "mean": 28300,
            "median": 17071,
            "max": 93636
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 16861,
            "mean": 29692,
            "median": 42475,
            "max": 42475
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 13876,
            "mean": 38258,
            "median": 46191,
            "max": 48501
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2323,
            "min": 10775,
            "mean": 10923,
            "median": 10775,
            "max": 70071
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2847,
            "min": 10645,
            "mean": 14941,
            "median": 10645,
            "max": 43600
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 13666,
            "mean": 28904,
            "median": 13666,
            "max": 108517
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1061,
            "min": 13614,
            "mean": 26128,
            "median": 30128,
            "max": 35028
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 13686,
            "mean": 14052,
            "median": 13686,
            "max": 107954
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4537988,
          "size": 21163
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6427,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 751,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46152,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 2778,
            "mean": 24565,
            "median": 24640,
            "max": 24640
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 19661,
            "mean": 212218,
            "median": 220335,
            "max": 292660
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3114,
            "min": 5902,
            "mean": 45916,
            "median": 49558,
            "max": 49558
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1810,
            "min": 1835,
            "mean": 23698,
            "median": 23735,
            "max": 23735
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3115,
            "min": 1829,
            "mean": 6621,
            "median": 6629,
            "max": 6629
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 31615,
            "mean": 192108,
            "median": 201307,
            "max": 201307
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 5825,
            "mean": 6634,
            "median": 5825,
            "max": 78983
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 5967,
            "mean": 53174,
            "median": 93294,
            "max": 102383
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 8134,
            "mean": 47334,
            "median": 50123,
            "max": 108551
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 27385,
            "mean": 84995,
            "median": 63818,
            "max": 488086
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 23256,
            "mean": 289354,
            "median": 157228,
            "max": 676533
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "getConfiguration(address)": {
            "calls": 50020,
            "min": 745,
            "mean": 1875,
            "median": 2745,
            "max": 2745
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1848,
            "min": 666,
            "mean": 2661,
            "median": 2666,
            "max": 2666
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4706,
            "min": 672,
            "mean": 2669,
            "median": 2672,
            "max": 2672
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 143,
            "min": 848,
            "mean": 2820,
            "median": 2848,
            "max": 2848
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 4015,
            "mean": 5288,
            "median": 5836,
            "max": 6015
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 34,
            "min": 3478,
            "mean": 3478,
            "median": 3478,
            "max": 3478
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5637,
            "min": 701,
            "mean": 1413,
            "median": 701,
            "max": 2701
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "getReserveAToken(address)": {
            "calls": 20411,
            "min": 676,
            "mean": 2259,
            "median": 2676,
            "max": 2676
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "getReserveData(address)": {
            "calls": 14619,
            "min": 4094,
            "mean": 17776,
            "median": 22094,
            "max": 24594
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 609,
            "mean": 2457,
            "median": 2609,
            "max": 2609
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42022,
            "min": 889,
            "mean": 2406,
            "median": 889,
            "max": 5349
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4085,
            "min": 845,
            "mean": 2658,
            "median": 845,
            "max": 5468
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 13231,
            "min": 632,
            "mean": 2357,
            "median": 2632,
            "max": 2632
          },
          "getReservesList()": {
            "calls": 3689,
            "min": 2915,
            "mean": 17136,
            "median": 10915,
            "max": 349320
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 4222,
            "mean": 64920,
            "median": 80862,
            "max": 124537
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 746,
            "mean": 1824,
            "median": 2746,
            "max": 2746
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 612,
            "mean": 1403,
            "median": 612,
            "max": 2612
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1953,
            "min": 680,
            "mean": 2409,
            "median": 2680,
            "max": 2680
          },
          "initReserve(address,address,address)": {
            "calls": 44355,
            "min": 5993,
            "mean": 152166,
            "median": 153312,
            "max": 173184
          },
          "initialize(address)": {
            "calls": 742,
            "min": 26381,
            "mean": 45343,
            "median": 45395,
            "max": 45395
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2837,
            "mean": 2837,
            "median": 2837,
            "max": 2837
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6392,
            "min": 25967,
            "mean": 250422,
            "median": 292309,
            "max": 444655
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 2412,
            "mean": 48128,
            "median": 51262,
            "max": 132908
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 150842,
            "mean": 216218,
            "median": 217089,
            "max": 467361
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7416,
            "mean": 7416,
            "median": 7416,
            "max": 7416
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 14299,
            "mean": 89683,
            "median": 96217,
            "max": 125728
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 78073,
            "mean": 124260,
            "median": 124640,
            "max": 135267
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 115307,
            "mean": 140309,
            "median": 129538,
            "max": 170817
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 48024,
            "mean": 48024,
            "median": 48024,
            "max": 48024
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2411,
            "min": 4197,
            "mean": 4383,
            "median": 4197,
            "max": 15197
          },
          "setConfiguration(address,(uint256))": {
            "calls": 71638,
            "min": 1828,
            "mean": 15656,
            "median": 23828,
            "max": 23983
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3512,
            "min": 4843,
            "mean": 12009,
            "median": 12298,
            "max": 16798
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 5302,
            "mean": 44550,
            "median": 38529,
            "max": 108726
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2886,
            "mean": 3782,
            "median": 2886,
            "max": 111177
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 6480,
            "mean": 13395,
            "median": 10480,
            "max": 91385
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 2904,
            "mean": 3946,
            "median": 2904,
            "max": 56412
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 29351,
            "mean": 183165,
            "median": 201308,
            "max": 209059
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 109054,
            "mean": 190401,
            "median": 211334,
            "max": 250816
          },
          "syncIndexesState(address)": {
            "calls": 2198,
            "min": 7735,
            "mean": 14704,
            "median": 7735,
            "max": 47602
          },
          "syncRatesState(address)": {
            "calls": 2198,
            "min": 14030,
            "mean": 14089,
            "median": 14030,
            "max": 18530
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 991,
            "min": 5876,
            "mean": 17460,
            "median": 21516,
            "max": 21516
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 33040,
            "mean": 126783,
            "median": 128952,
            "max": 193186
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1671293,
          "size": 8105
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8411,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 27030,
            "mean": 27030,
            "median": 27030,
            "max": 27030
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 674,
            "mean": 9855,
            "median": 4702,
            "max": 18392
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2827,
            "mean": 2827,
            "median": 2827,
            "max": 2827
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 12242,
            "mean": 24031,
            "median": 24042,
            "max": 24043
          },
          "decimals()": {
            "calls": 9183,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 689,
            "mean": 28619,
            "median": 21779,
            "max": 55979
          },
          "getIncentivesController()": {
            "calls": 8411,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44008,
            "min": 123201,
            "mean": 208227,
            "median": 208431,
            "max": 298327
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 23985,
            "mean": 60085,
            "median": 60185,
            "max": 69972
          },
          "name()": {
            "calls": 8512,
            "min": 2997,
            "mean": 5263,
            "median": 3176,
            "max": 9554
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "scaledBalanceOf(address)": {
            "calls": 18721,
            "min": 687,
            "mean": 1964,
            "median": 2687,
            "max": 2687
          },
          "scaledTotalSupply()": {
            "calls": 44940,
            "min": 439,
            "mean": 2330,
            "median": 2439,
            "max": 2439
          },
          "symbol()": {
            "calls": 8505,
            "min": 3040,
            "mean": 5361,
            "median": 3219,
            "max": 9597
          },
          "totalSupply()": {
            "calls": 190,
            "min": 2416,
            "mean": 5731,
            "median": 6416,
            "max": 18039
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3718
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "getAssetPrice(address)": {
            "calls": 58360,
            "min": 0,
            "mean": 5652,
            "median": 7865,
            "max": 15388
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5602,
            "mean": 7675,
            "median": 8712,
            "max": 8712
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2364,
            "mean": 2364,
            "median": 2364,
            "max": 2364
          },
          "getSourceOfAsset(address)": {
            "calls": 1156,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 36887,
            "mean": 57572,
            "median": 60249,
            "max": 61841
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 59354,
            "mean": 59354,
            "median": 59354,
            "max": 59354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 827932,
          "size": 3791
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42581,
            "min": 0,
            "mean": 4278,
            "median": 3969,
            "max": 5688
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2921,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3788,
            "mean": 3788,
            "median": 3788,
            "max": 3788
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 2970,
            "mean": 2970,
            "median": 2970,
            "max": 2970
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1375,
            "min": 2958,
            "mean": 2958,
            "median": 2958,
            "max": 2958
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2149,
            "min": 2734,
            "mean": 2734,
            "median": 2734,
            "max": 2734
          },
          "getVariableRateSlope1(address)": {
            "calls": 2153,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "getVariableRateSlope2(address)": {
            "calls": 1381,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 27838,
            "mean": 29173,
            "median": 28518,
            "max": 36364
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 28169,
            "mean": 32560,
            "median": 29152,
            "max": 36701
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 431441,
          "size": 1842
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 10307,
            "mean": 11177,
            "median": 10307,
            "max": 12484
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 10262,
            "mean": 11132,
            "median": 10262,
            "max": 12439
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 35724,
            "mean": 38744,
            "median": 38744,
            "max": 41765
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 32590,
            "mean": 33231,
            "median": 33231,
            "max": 33873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 451714,
          "size": 2040
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21388,
            "mean": 21388,
            "median": 21388,
            "max": 21388
          },
          "fallback()": {
            "calls": 548423,
            "min": 0,
            "mean": 139601,
            "median": 7539,
            "max": 207809032
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26838,
            "mean": 28730,
            "median": 28730,
            "max": 30622
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28725,
            "mean": 152584,
            "median": 187354,
            "max": 187354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 545865,
          "size": 2554
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43635,
            "mean": 43635,
            "median": 43635,
            "max": 43635
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43679,
            "mean": 43679,
            "median": 43679,
            "max": 43679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 383040,
          "size": 1801
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43657,
            "mean": 43657,
            "median": 43657,
            "max": 43657
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43679,
            "mean": 43679,
            "median": 43679,
            "max": 43679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4596073,
          "size": 21402
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 28321,
            "mean": 28321,
            "median": 28321,
            "max": 28321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 108459,
          "size": 305
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "decimals()": {
            "calls": 94,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "description()": {
            "calls": 94,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          },
          "latestAnswer()": {
            "calls": 56524,
            "min": 279,
            "mean": 1747,
            "median": 2279,
            "max": 2279
          },
          "name()": {
            "calls": 94,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 154707,
          "size": 497
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25767,
            "mean": 39061,
            "median": 45703,
            "max": 45715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 273597,
          "size": 1358
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4721,
            "mean": 4724,
            "median": 4726,
            "max": 4726
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26202,
            "mean": 27398,
            "median": 26202,
            "max": 46114
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 472482,
          "size": 1967
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133431,
            "mean": 133431,
            "median": 133431,
            "max": 133431
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133499,
            "mean": 133512,
            "median": 133523,
            "max": 133523
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 93907,
          "size": 334
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1108671,
          "size": 5931
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 832,
            "mean": 1943,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 23018,
            "min": 26299,
            "mean": 45806,
            "median": 46343,
            "max": 46583
          },
          "balanceOf(address)": {
            "calls": 89433,
            "min": 648,
            "mean": 2646,
            "median": 2648,
            "max": 2648
          },
          "decimals()": {
            "calls": 79633,
            "min": 311,
            "mean": 2305,
            "median": 2311,
            "max": 2311
          },
          "mint(address,uint256)": {
            "calls": 6464,
            "min": 36474,
            "mean": 62606,
            "median": 70686,
            "max": 70794
          },
          "name()": {
            "calls": 2080,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2601,
            "mean": 2601,
            "median": 2601,
            "max": 2601
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 76762,
            "mean": 76820,
            "median": 76810,
            "max": 76966
          },
          "symbol()": {
            "calls": 96,
            "min": 3240,
            "mean": 3240,
            "median": 3240,
            "max": 3240
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46924,
            "mean": 51016,
            "median": 51700,
            "max": 51700
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28797,
            "mean": 28797,
            "median": 28797,
            "max": 28797
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 117443,
          "size": 325
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 445,
            "min": 146,
            "mean": 146,
            "median": 146,
            "max": 146
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 679,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 314,
            "mean": 417,
            "median": 427,
            "max": 427
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 331,
            "mean": 404,
            "median": 430,
            "max": 430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 229220,
          "size": 844
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "HALF_WAD()": {
            "calls": 421,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "RAY()": {
            "calls": 1,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "WAD()": {
            "calls": 625,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          },
          "WAD_RAY_RATIO()": {
            "calls": 1772,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 493,
            "mean": 493,
            "median": 493,
            "max": 493
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 496,
            "mean": 496,
            "median": 496,
            "max": 496
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 384,
            "mean": 387,
            "median": 384,
            "max": 398
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 424,
            "mean": 515,
            "median": 537,
            "max": 537
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 331,
            "mean": 396,
            "median": 430,
            "max": 430
          },
          "wadToRay(uint256)": {
            "calls": 495,
            "min": 279,
            "mean": 353,
            "median": 357,
            "max": 357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2360651,
          "size": 11509
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 56152,
            "mean": 56152,
            "median": 56152,
            "max": 56152
          },
          "name()": {
            "calls": 1,
            "min": 3176,
            "mean": 3176,
            "median": 3176,
            "max": 3176
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2687
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67806,
            "mean": 67806,
            "median": 67806,
            "max": 67806
          },
          "symbol()": {
            "calls": 1,
            "min": 3174,
            "mean": 3174,
            "median": 3174,
            "max": 3174
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 63785,
            "mean": 63785,
            "median": 63785,
            "max": 63785
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1677678,
          "size": 8219
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 55657,
            "mean": 55657,
            "median": 55657,
            "max": 55657
          },
          "name()": {
            "calls": 1,
            "min": 3176,
            "mean": 3176,
            "median": 3176,
            "max": 3176
          },
          "symbol()": {
            "calls": 1,
            "min": 3219,
            "mean": 3219,
            "median": 3219,
            "max": 3219
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 407218,
          "size": 1569
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 157367,
            "mean": 157367,
            "median": 157367,
            "max": 157367
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5255,
            "mean": 5255,
            "median": 5255,
            "max": 5255
          },
          "text()": {
            "calls": 6,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "value()": {
            "calls": 7,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4594,
            "mean": 4594,
            "median": 4594,
            "max": 4594
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 407650,
          "size": 1571
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51970,
            "mean": 51970,
            "median": 51970,
            "max": 51970
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5255,
            "mean": 5255,
            "median": 5255,
            "max": 5255
          },
          "text()": {
            "calls": 2,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "value()": {
            "calls": 4,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4594,
            "mean": 4594,
            "median": 4594,
            "max": 4594
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 142020,
          "size": 342
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 45128,
            "mean": 45128,
            "median": 45128,
            "max": 45128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 142452,
          "size": 344
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 28031,
            "mean": 28031,
            "median": 28031,
            "max": 28031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 839430,
          "size": 3973
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1626,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 803,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 50952,
            "mean": 50952,
            "median": 50952,
            "max": 50952
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 51018,
            "mean": 51018,
            "median": 51018,
            "max": 51018
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50953,
            "mean": 50953,
            "median": 50953,
            "max": 50953
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 50974,
            "mean": 51933,
            "median": 50974,
            "max": 54813
          },
          "addPoolAdmin(address)": {
            "calls": 793,
            "min": 50985,
            "mean": 50996,
            "median": 50997,
            "max": 50997
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 51018,
            "mean": 51018,
            "median": 51018,
            "max": 51018
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 51473,
            "mean": 51954,
            "median": 51473,
            "max": 55323
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2736,
            "mean": 2736,
            "median": 2736,
            "max": 2736
          },
          "isAssetListingAdmin(address)": {
            "calls": 3888,
            "min": 806,
            "mean": 2407,
            "median": 2806,
            "max": 2806
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2739,
            "mean": 2739,
            "median": 2739,
            "max": 2739
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "isPoolAdmin(address)": {
            "calls": 56680,
            "min": 749,
            "mean": 1838,
            "median": 2749,
            "max": 2749
          },
          "isRiskAdmin(address)": {
            "calls": 41125,
            "min": 739,
            "mean": 1649,
            "median": 739,
            "max": 2739
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 29044,
            "mean": 29044,
            "median": 29044,
            "max": 29044
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 29013,
            "mean": 29013,
            "median": 29013,
            "max": 29013
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 28989,
            "mean": 28989,
            "median": 28989,
            "max": 28989
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 29012,
            "mean": 41913,
            "median": 41913,
            "max": 54814
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 29042,
            "mean": 29042,
            "median": 29042,
            "max": 29042
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28989,
            "mean": 28989,
            "median": 28989,
            "max": 28989
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 48882,
            "mean": 49597,
            "median": 48882,
            "max": 53174
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1615912,
          "size": 8284
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1090,
            "min": 388,
            "mean": 914,
            "median": 388,
            "max": 2388
          },
          "getACLManager()": {
            "calls": 51857,
            "min": 431,
            "mean": 1435,
            "median": 2431,
            "max": 2431
          },
          "getAddress(bytes32)": {
            "calls": 18713,
            "min": 531,
            "mean": 2059,
            "median": 2531,
            "max": 2531
          },
          "getMarketId()": {
            "calls": 6,
            "min": 3241,
            "mean": 3241,
            "median": 3241,
            "max": 3241
          },
          "getPool()": {
            "calls": 2627,
            "min": 355,
            "mean": 1079,
            "median": 355,
            "max": 2355
          },
          "getPoolConfigurator()": {
            "calls": 195367,
            "min": 409,
            "mean": 729,
            "median": 409,
            "max": 2409
          },
          "getPoolDataProvider()": {
            "calls": 2640,
            "min": 386,
            "mean": 1217,
            "median": 386,
            "max": 2386
          },
          "getPriceOracle()": {
            "calls": 33091,
            "min": 474,
            "mean": 2329,
            "median": 2474,
            "max": 2474
          },
          "getPriceOracleSentinel()": {
            "calls": 15849,
            "min": 387,
            "mean": 2386,
            "median": 2387,
            "max": 2387
          },
          "owner()": {
            "calls": 806,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 24013,
            "mean": 46973,
            "median": 47617,
            "max": 47617
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 24056,
            "mean": 37484,
            "median": 39110,
            "max": 47660
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24621,
            "mean": 48241,
            "median": 48359,
            "max": 48635
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24327,
            "mean": 223180,
            "median": 56885,
            "max": 505068
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24399,
            "mean": 28404,
            "median": 28404,
            "max": 32410
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 24012,
            "mean": 285504,
            "median": 293502,
            "max": 531000
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 24101,
            "mean": 37529,
            "median": 39155,
            "max": 47705
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 24057,
            "mean": 272024,
            "median": 280020,
            "max": 504000
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 24080,
            "mean": 37508,
            "median": 39134,
            "max": 47684
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 24123,
            "mean": 40943,
            "median": 47727,
            "max": 47727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2439
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2519,
            "mean": 2519,
            "median": 2519,
            "max": 2519
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2663,
            "mean": 4995,
            "median": 5009,
            "max": 7286
          },
          "owner()": {
            "calls": 803,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 24147,
            "mean": 103773,
            "median": 119699,
            "max": 119699
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 26122,
            "mean": 38899,
            "median": 39940,
            "max": 49596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 831432,
          "size": 3937
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 211129,
            "mean": 284049,
            "median": 284019,
            "max": 289745
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "owner()": {
            "calls": 2,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 58787,
            "mean": 58787,
            "median": 58787,
            "max": 58787
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43704,
            "mean": 43704,
            "median": 43704,
            "max": 43704
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48601,
            "mean": 48608,
            "median": 48613,
            "max": 48613
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 60835,
            "mean": 60835,
            "median": 60835,
            "max": 60835
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46867,
            "mean": 46867,
            "median": 46867,
            "max": 46867
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28729,
            "mean": 28729,
            "median": 28729,
            "max": 28729
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 44414,
            "mean": 44414,
            "median": 44414,
            "max": 44414
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3095547,
          "size": 14187
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 806,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 91905,
            "mean": 91905,
            "median": 91905,
            "max": 91905
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 94203,
            "mean": 94203,
            "median": 94203,
            "max": 94203
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 91704,
            "mean": 91704,
            "median": 91704,
            "max": 91704
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 694,
            "min": 949,
            "mean": 74207,
            "median": 84678,
            "max": 120615
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 88143,
            "mean": 88143,
            "median": 88143,
            "max": 88143
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 85647,
            "mean": 85647,
            "median": 85647,
            "max": 85647
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 173491,
            "mean": 246425,
            "median": 246405,
            "max": 252107
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 29353,
            "mean": 29353,
            "median": 29353,
            "max": 29353
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2656,
            "mean": 2656,
            "median": 2656,
            "max": 2656
          },
          "getAssetIndex(address,address)": {
            "calls": 9783,
            "min": 3062,
            "mean": 10675,
            "median": 10983,
            "max": 16470
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2625,
            "mean": 2625,
            "median": 2625,
            "max": 2625
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 3041,
            "mean": 5579,
            "median": 5668,
            "max": 8256
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 2975,
            "mean": 2975,
            "median": 2975,
            "max": 2975
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 5109,
            "mean": 5109,
            "median": 5109,
            "max": 5109
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2648,
            "mean": 2648,
            "median": 2648,
            "max": 2648
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 7574,
            "mean": 7574,
            "median": 7574,
            "max": 7574
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 3004,
            "mean": 3004,
            "median": 3004,
            "max": 3004
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 12230,
            "mean": 18506,
            "median": 18443,
            "max": 23648
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 727,
            "mean": 2353,
            "median": 2727,
            "max": 38060
          },
          "initialize(address)": {
            "calls": 803,
            "min": 26065,
            "mean": 45226,
            "median": 45250,
            "max": 45250
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24278,
            "mean": 24278,
            "median": 24278,
            "max": 24278
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 8883,
            "mean": 8883,
            "median": 8883,
            "max": 8883
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 24237,
            "mean": 24237,
            "median": 24237,
            "max": 24237
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12317,
            "mean": 12317,
            "median": 12317,
            "max": 12317
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 9854,
            "mean": 9854,
            "median": 9854,
            "max": 9854
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 309033,
          "size": 1494
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 493587,
          "size": 2778
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25880,
            "mean": 25880,
            "median": 25880,
            "max": 25880
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52964,
            "mean": 52964,
            "median": 52964,
            "max": 52964
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 27082,
            "mean": 27082,
            "median": 27082,
            "max": 27082
          },
          "renewApproval()": {
            "calls": 1,
            "min": 27971,
            "mean": 27971,
            "median": 27971,
            "max": 27971
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1484455,
          "size": 6710
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2937,
            "mean": 16690,
            "median": 16690,
            "max": 30443
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19753,
            "mean": 19941,
            "median": 19941,
            "max": 20130
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7634,
            "mean": 42572,
            "median": 35360,
            "max": 91936
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2911,
            "mean": 122835,
            "median": 206712,
            "max": 206712
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2675,
            "mean": 7749,
            "median": 2675,
            "max": 17898
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7504,
            "mean": 18622,
            "median": 18622,
            "max": 29741
          },
          "initialize(uint256,address)": {
            "calls": 873,
            "min": 96424,
            "mean": 117418,
            "median": 118533,
            "max": 118533
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "receive()": {
            "calls": 4,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2960,
            "mean": 19489,
            "median": 19489,
            "max": 36019
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7678,
            "mean": 35657,
            "median": 20509,
            "max": 88037
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 500248,
          "size": 2366
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 170,
            "mean": 170,
            "median": 170,
            "max": 170
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23633,
            "mean": 90748,
            "median": 92645,
            "max": 92645
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24230,
            "mean": 133205,
            "median": 135729,
            "max": 135729
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 2881932,
          "size": 22568
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 826,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3104569,
          "size": 18867
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 801,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 7395224,
          "size": 35544
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 776,
            "min": 17693,
            "mean": 17693,
            "median": 17693,
            "max": 17693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 7110884,
          "size": 30758
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 776,
            "min": 8968,
            "mean": 8968,
            "median": 8968,
            "max": 8968
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8578653,
          "size": 39711
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 950905,
          "size": 6288
        },
        "functions": {
          "getMiscReport()": {
            "calls": 826,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5553853,
          "size": 28790
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 7618797,
          "size": 38002
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 826,
            "min": 17693,
            "mean": 17693,
            "median": 17693,
            "max": 17693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 8297803,
          "size": 38411
        },
        "functions": {
          "getPoolReport()": {
            "calls": 745,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5653909,
          "size": 30109
        },
        "functions": {
          "getInitialReport()": {
            "calls": 826,
            "min": 6848,
            "mean": 6848,
            "median": 6848,
            "max": 6848
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 776,
            "min": 652531,
            "mean": 654788,
            "median": 652531,
            "max": 773335
          },
          "setProtocolDataProvider(address)": {
            "calls": 801,
            "min": 59524,
            "mean": 59535,
            "median": 59536,
            "max": 59536
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 803,
            "min": 2107841,
            "mean": 2598111,
            "median": 2598230,
            "max": 2624015
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 801,
            "min": 47667,
            "mean": 47671,
            "median": 47667,
            "max": 47739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4062096,
          "size": 19813
        },
        "functions": {
          "getTokensReport()": {
            "calls": 801,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 1765931,
          "size": 8162
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 58130,
            "mean": 111350,
            "median": 58556,
            "max": 172228
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 34372,
            "mean": 83825,
            "median": 59085,
            "max": 176475
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 57641,
            "mean": 101064,
            "median": 58067,
            "max": 171739
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 48125,
            "mean": 89361,
            "median": 57094,
            "max": 130232
          },
          "getClaimableRewards(address,address)": {
            "calls": 3469,
            "min": 26262,
            "mean": 29966,
            "median": 30062,
            "max": 30093
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 29005,
            "mean": 35129,
            "median": 35218,
            "max": 35227
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1160,
            "min": 2817,
            "mean": 2817,
            "median": 2817,
            "max": 2817
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2575,
            "mean": 2575,
            "median": 2575,
            "max": 2575
          },
          "mint(address,uint256)": {
            "calls": 2468,
            "min": 53648,
            "mean": 96862,
            "median": 97552,
            "max": 100760
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 79933,
            "mean": 79933,
            "median": 79933,
            "max": 79933
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 116360,
            "mean": 116368,
            "median": 116368,
            "max": 116786
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 5007,
            "mean": 5007,
            "median": 5007,
            "max": 5007
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 60047,
            "mean": 75059,
            "median": 72731,
            "max": 103007
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1134869,
          "size": 6059
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 945,
            "min": 2735,
            "mean": 3822,
            "median": 4735,
            "max": 4735
          },
          "mint(address,uint256)": {
            "calls": 2468,
            "min": 51319,
            "mean": 67504,
            "median": 68647,
            "max": 68647
          },
          "scaledTotalSupply()": {
            "calls": 12085,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "transfer(address,uint256)": {
            "calls": 2468,
            "min": 29802,
            "mean": 45840,
            "median": 46974,
            "max": 46974
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2113246,
          "size": 9855
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26447,
            "mean": 46071,
            "median": 46395,
            "max": 46491
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 16024,
            "mean": 16024,
            "median": 16024,
            "max": 16024
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 16025,
            "mean": 16025,
            "median": 16025,
            "max": 16025
          },
          "decimals()": {
            "calls": 256,
            "min": 2540,
            "mean": 2540,
            "median": 2540,
            "max": 2540
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 58961,
            "mean": 191832,
            "median": 204778,
            "max": 209934
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 74940,
            "mean": 239917,
            "median": 261143,
            "max": 346390
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 22235,
            "mean": 22235,
            "median": 22235,
            "max": 22235
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 37175,
            "mean": 50740,
            "median": 50897,
            "max": 50897
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 37788,
            "mean": 37788,
            "median": 37788,
            "max": 37788
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 13586,
            "mean": 22217,
            "median": 26528,
            "max": 26538
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 68383,
            "mean": 185976,
            "median": 185950,
            "max": 303518
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 133320,
            "mean": 133320,
            "median": 133320,
            "max": 133320
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 16068,
            "mean": 16068,
            "median": 16068,
            "max": 16068
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 16064,
            "mean": 16064,
            "median": 16064,
            "max": 16064
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 16000,
            "mean": 16000,
            "median": 16000,
            "max": 16000
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 16046,
            "mean": 16046,
            "median": 16046,
            "max": 16046
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 165560,
            "mean": 165754,
            "median": 165788,
            "max": 165908
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 40816,
            "mean": 117441,
            "median": 155309,
            "max": 156242
          },
          "totalAssets()": {
            "calls": 258,
            "min": 18017,
            "mean": 18017,
            "median": 18017,
            "max": 18017
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 51322,
            "mean": 110064,
            "median": 110030,
            "max": 168739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 830217,
          "size": 3906
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 206881,
            "mean": 206881,
            "median": 206881,
            "max": 206881
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 805741,
          "size": 3726
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 154326,
            "mean": 154326,
            "median": 154326,
            "max": 154326
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 812193,
          "size": 3756
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 45036,
            "mean": 45036,
            "median": 45036,
            "max": 45036
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 793856,
          "size": 3671
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 83827,
            "mean": 83827,
            "median": 83827,
            "max": 83827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 806605,
          "size": 3730
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86682,
            "mean": 86682,
            "median": 86682,
            "max": 86682
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 812457,
          "size": 3757
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 33875,
            "mean": 33875,
            "median": 33875,
            "max": 33875
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 806605,
          "size": 3730
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86682,
            "mean": 86682,
            "median": 86682,
            "max": 86682
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 807481,
          "size": 3734
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 33420,
            "mean": 33420,
            "median": 33420,
            "max": 33420
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 892983,
          "size": 4303
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 363097,
            "mean": 363097,
            "median": 363097,
            "max": 363097
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 775051,
          "size": 3495
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 93473,
            "mean": 93473,
            "median": 93473,
            "max": 93473
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 775687,
          "size": 3498
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 52654,
            "mean": 52654,
            "median": 52654,
            "max": 52654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 790404,
          "size": 3566
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 46603,
            "mean": 46603,
            "median": 46603,
            "max": 46603
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 868030,
          "size": 4081
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1708344,
            "mean": 1708344,
            "median": 1708344,
            "max": 1708344
          },
          "newListings()": {
            "calls": 4,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 932363,
          "size": 4519
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1708250,
            "mean": 1708250,
            "median": 1708250,
            "max": 1708250
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2959,
            "mean": 2959,
            "median": 2959,
            "max": 2959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1035441,
          "size": 5012
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1843838,
            "mean": 1843838,
            "median": 1843838,
            "max": 1843838
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2959,
            "mean": 2959,
            "median": 2959,
            "max": 2959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 970903,
          "size": 4573
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1843928,
            "mean": 1843928,
            "median": 1843928,
            "max": 1843928
          },
          "newListings()": {
            "calls": 4,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 796485,
          "size": 3750
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 63560,
            "mean": 63560,
            "median": 63560,
            "max": 63560
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 797752,
          "size": 3689
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 136315,
            "mean": 136315,
            "median": 136315,
            "max": 136315
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 1182,
            "mean": 1182,
            "median": 1182,
            "max": 1182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1675945,
          "size": 8165
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "POOL()": {
            "calls": 2818,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 482,
            "mean": 482,
            "median": 482,
            "max": 482
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21747,
            "mean": 21747,
            "median": 21747,
            "max": 21747
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 27030,
            "mean": 27030,
            "median": 27030,
            "max": 27030
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 28042,
            "mean": 28042,
            "median": 28042,
            "max": 28042
          },
          "decimals()": {
            "calls": 2818,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21790,
            "mean": 21790,
            "median": 21790,
            "max": 21790
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21768,
            "mean": 21768,
            "median": 21768,
            "max": 21768
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 46168,
            "mean": 181045,
            "median": 208383,
            "max": 298317
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 62251,
            "mean": 64697,
            "median": 62251,
            "max": 72038
          },
          "name()": {
            "calls": 2818,
            "min": 2997,
            "mean": 4191,
            "median": 3176,
            "max": 9554
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2687
          },
          "symbol()": {
            "calls": 2818,
            "min": 3040,
            "mean": 4152,
            "median": 3219,
            "max": 9597
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21723,
            "mean": 21723,
            "median": 21723,
            "max": 21723
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 22016,
            "mean": 22016,
            "median": 22016,
            "max": 22016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 79661491,
          "size": 395763
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 76220,
            "mean": 76415,
            "median": 76508,
            "max": 76517
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 78384,
            "mean": 78384,
            "median": 78384,
            "max": 78384
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 151591,
            "mean": 151591,
            "median": 151591,
            "max": 151591
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 416528,
            "mean": 756809,
            "median": 813419,
            "max": 817838
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 700079,
            "mean": 700079,
            "median": 700079,
            "max": 700079
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 59844,
            "mean": 75706,
            "median": 75706,
            "max": 91569
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 63064,
            "mean": 74747,
            "median": 76735,
            "max": 76744
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 461158,
            "mean": 700632,
            "median": 700632,
            "max": 940106
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 533452,
            "mean": 553089,
            "median": 553958,
            "max": 571858
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 447327,
            "mean": 571989,
            "median": 610248,
            "max": 677303
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 614458,
            "mean": 654907,
            "median": 654907,
            "max": 695356
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 158383,
            "mean": 158383,
            "median": 158383,
            "max": 158383
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 128356,
            "mean": 137011,
            "median": 141339,
            "max": 141339
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 561663,
            "mean": 597586,
            "median": 588647,
            "max": 636999
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 613122,
            "mean": 613122,
            "median": 613122,
            "max": 613122
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 552300,
            "mean": 564496,
            "median": 552300,
            "max": 601087
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 36172,
            "mean": 36407,
            "median": 36544,
            "max": 36556
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 564512,
            "mean": 564512,
            "median": 564512,
            "max": 564512
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 587349,
            "mean": 587349,
            "median": 587349,
            "max": 587349
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 590830,
            "mean": 647945,
            "median": 596878,
            "max": 756127
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 564521,
            "mean": 601451,
            "median": 595988,
            "max": 656970
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 562152,
            "mean": 615083,
            "median": 616394,
            "max": 666703
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 592799,
            "mean": 592799,
            "median": 592799,
            "max": 592799
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 458776,
            "mean": 613394,
            "median": 674679,
            "max": 674679
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 417291,
            "mean": 542853,
            "median": 593397,
            "max": 617871
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 666463,
            "mean": 1121262,
            "median": 1260061,
            "max": 1271407
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 493224,
            "mean": 493224,
            "median": 493224,
            "max": 493224
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 685813,
            "mean": 685813,
            "median": 685813,
            "max": 685813
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 721508,
            "mean": 721508,
            "median": 721508,
            "max": 721508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 132089,
          "size": 418
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 301,
            "mean": 1099,
            "median": 301,
            "max": 2301
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 3537962,
          "size": 13939
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 768,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "WBTC_ADDRESS()": {
            "calls": 768,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute()": {
            "calls": 771,
            "min": 4869745,
            "mean": 4869876,
            "median": 4869745,
            "max": 4871593
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 88481,
          "size": 188
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 130081,
          "size": 383
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3099582,
          "size": 14931
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24585,
            "mean": 24585,
            "median": 24585,
            "max": 24585
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 17809,
            "mean": 18159,
            "median": 18269,
            "max": 18269
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 47324,
            "mean": 73983,
            "median": 69961,
            "max": 87061
          },
          "delegate(address)": {
            "calls": 26,
            "min": 6439,
            "mean": 66460,
            "median": 69479,
            "max": 89379
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 26301,
            "mean": 45602,
            "median": 48303,
            "max": 60381
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5407,
            "mean": 6582,
            "median": 7590,
            "max": 7612
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5588,
            "mean": 8316,
            "median": 9954,
            "max": 9954
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 5710,
            "mean": 5927,
            "median": 5931,
            "max": 5935
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 6946,
            "mean": 7289,
            "median": 7388,
            "max": 7388
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 56174,
            "mean": 56174,
            "median": 56174,
            "max": 56174
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 31253,
            "mean": 55737,
            "median": 48353,
            "max": 88090
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "totalSupply()": {
            "calls": 5,
            "min": 6478,
            "mean": 6478,
            "median": 6478,
            "max": 6478
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 82778,
            "mean": 117707,
            "median": 119354,
            "max": 137527
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 90149,
            "mean": 134150,
            "median": 130538,
            "max": 189527
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 39509,
            "mean": 73167,
            "median": 71184,
            "max": 118984
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 33648,
            "mean": 33648,
            "median": 33648,
            "max": 33648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 315578,
          "size": 1628
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1450,
            "mean": 1450,
            "median": 1450,
            "max": 1450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 66140,
          "size": 382
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 712,
            "mean": 2021,
            "median": 3212,
            "max": 3212
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 986518,
          "size": 4351
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2526,
            "mean": 2526,
            "median": 2526,
            "max": 2526
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 156904,
            "mean": 156904,
            "median": 156904,
            "max": 156904
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1466
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2279,
            "mean": 2279,
            "median": 2279,
            "max": 2279
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 846602,
          "size": 3436
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5038,
            "mean": 26189,
            "median": 7183,
            "max": 2630913
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 546423,
          "size": 2333
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 523,
            "mean": 2123,
            "median": 2523,
            "max": 2523
          },
          "approve(address,uint256)": {
            "calls": 3553,
            "min": 28727,
            "mean": 44689,
            "median": 45935,
            "max": 46199
          },
          "balanceOf(address)": {
            "calls": 19617,
            "min": 406,
            "mean": 2402,
            "median": 2406,
            "max": 2406
          },
          "decimals()": {
            "calls": 2438,
            "min": 299,
            "mean": 2257,
            "median": 2299,
            "max": 2299
          },
          "deposit()": {
            "calls": 51,
            "min": 44879,
            "mean": 44879,
            "median": 44879,
            "max": 44879
          },
          "name()": {
            "calls": 16,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "symbol()": {
            "calls": 46,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 46480,
            "mean": 46480,
            "median": 46480,
            "max": 46480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1858220,
          "size": 9099
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 306214,
            "mean": 393482,
            "median": 424128,
            "max": 450104
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 1998540,
          "size": 9818
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 35053,
            "mean": 35053,
            "median": 35053,
            "max": 35053
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 334137,
            "mean": 426978,
            "median": 448009,
            "max": 477758
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1478735,
          "size": 7327
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 306085,
            "mean": 336448,
            "median": 331805,
            "max": 371456
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3969
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2603608,
            "mean": 2603608,
            "median": 2603608,
            "max": 2603608
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2389,
            "mean": 2389,
            "median": 2389,
            "max": 2389
          },
          "initialize()": {
            "calls": 797,
            "min": 23430,
            "mean": 23568,
            "median": 23572,
            "max": 23572
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 37756
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 5287,
            "mean": 5287,
            "median": 5287,
            "max": 5287
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "aToken()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 2580,
            "mean": 2580,
            "median": 2580,
            "max": 2580
          },
          "asset()": {
            "calls": 1,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2476,
            "mean": 2476,
            "median": 2476,
            "max": 2476
          },
          "canPause(address)": {
            "calls": 257,
            "min": 10757,
            "mean": 10757,
            "median": 10757,
            "max": 10757
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 312588,
            "mean": 312588,
            "median": 312588,
            "max": 312588
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 2784,
            "mean": 2784,
            "median": 2784,
            "max": 2784
          },
          "decimals()": {
            "calls": 1,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 246146,
            "mean": 254640,
            "median": 254640,
            "max": 263135
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 146085,
            "mean": 147035,
            "median": 146085,
            "max": 187606
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 5521,
            "mean": 112707,
            "median": 113314,
            "max": 134960
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25062,
            "mean": 225306,
            "median": 226050,
            "max": 233050
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 24056,
            "mean": 24056,
            "median": 24056,
            "max": 24056
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 25741,
            "mean": 25741,
            "median": 25741,
            "max": 25741
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 246228,
            "mean": 246228,
            "median": 246228,
            "max": 246228
          },
          "name()": {
            "calls": 1,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "nonces(address)": {
            "calls": 3,
            "min": 2482,
            "mean": 2482,
            "median": 2482,
            "max": 2482
          },
          "paused()": {
            "calls": 2,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 363,
            "mean": 28925,
            "median": 31163,
            "max": 55249
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 15010,
            "mean": 15010,
            "median": 15010,
            "max": 15010
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 28034,
            "mean": 97492,
            "median": 97492,
            "max": 166951
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 122167,
            "mean": 122167,
            "median": 122167,
            "max": 122167
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 151714,
            "mean": 151714,
            "median": 151714,
            "max": 151714
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 10747,
            "mean": 11363,
            "median": 10747,
            "max": 33916
          },
          "symbol()": {
            "calls": 1,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 29850,
            "mean": 29850,
            "median": 29850,
            "max": 29850
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 11305
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 9,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 3,
            "min": 113519,
            "mean": 174056,
            "median": 113519,
            "max": 295131
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 1690174,
            "mean": 1690174,
            "median": 1690174,
            "max": 1690174
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 773,
            "min": 1689586,
            "mean": 4879211,
            "median": 4887466,
            "max": 4887742
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 156773,
            "mean": 156773,
            "median": 156773,
            "max": 156773
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 16089,
            "mean": 65110,
            "median": 65110,
            "max": 114131
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 54039,
            "mean": 54039,
            "median": 54039,
            "max": 54039
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 5494,
            "mean": 25434,
            "median": 5532,
            "max": 55326
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 17456,
            "mean": 29486,
            "median": 19994,
            "max": 60500
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 35113,
            "mean": 35113,
            "median": 35113,
            "max": 35113
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 101535,
            "mean": 101535,
            "median": 101535,
            "max": 101535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 8439
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2602,
            "min": 2490,
            "mean": 5613,
            "median": 4490,
            "max": 28229
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 10775,
            "mean": 10775,
            "median": 10775,
            "max": 10775
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 10792,
            "mean": 10792,
            "median": 10792,
            "max": 10792
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 8,
            "min": 8251,
            "mean": 8251,
            "median": 8251,
            "max": 8251
          },
          "getIsVirtualAccActive(address)": {
            "calls": 9261,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 10780,
            "mean": 10780,
            "median": 10780,
            "max": 10780
          },
          "getPaused(address)": {
            "calls": 9528,
            "min": 10860,
            "mean": 10885,
            "median": 10886,
            "max": 10886
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 10805,
            "mean": 10805,
            "median": 10805,
            "max": 10805
          },
          "getReserveConfigurationData(address)": {
            "calls": 10857,
            "min": 11064,
            "mean": 11089,
            "median": 11090,
            "max": 11090
          },
          "getReserveTokensAddresses(address)": {
            "calls": 9378,
            "min": 13735,
            "mean": 13735,
            "median": 13735,
            "max": 13795
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 10794,
            "mean": 10794,
            "median": 10794,
            "max": 10794
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 4318,
            "mean": 22108,
            "median": 28039,
            "max": 28039
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 60885,
            "mean": 61099,
            "median": 61096,
            "max": 64386
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 10473,
            "mean": 10473,
            "median": 10473,
            "max": 10473
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3835
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 32192,
            "mean": 32192,
            "median": 32192,
            "max": 32192
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 52544,
            "mean": 52544,
            "median": 52544,
            "max": 52544
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32151,
            "mean": 32151,
            "median": 32151,
            "max": 32151
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32144,
            "mean": 32144,
            "median": 32144,
            "max": 32144
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32291,
            "mean": 32291,
            "median": 32291,
            "max": 32291
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 32136,
            "mean": 32136,
            "median": 32136,
            "max": 32136
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 32152,
            "mean": 32152,
            "median": 32152,
            "max": 32152
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32283,
            "mean": 32283,
            "median": 32283,
            "max": 32283
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 32049,
            "mean": 32065,
            "median": 32065,
            "max": 32082
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 2292762,
          "size": 10719
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 151756,
            "mean": 151947,
            "median": 151947,
            "max": 152139
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 123746,
            "mean": 153189,
            "median": 154476,
            "max": 191212
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 5406
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 220706,
            "mean": 224514,
            "median": 224514,
            "max": 228323
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 185788,
            "mean": 222051,
            "median": 226081,
            "max": 226081
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33474,
            "mean": 33474,
            "median": 33474,
            "max": 33474
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52021,
            "mean": 52021,
            "median": 52021,
            "max": 52021
          },
          "fallback()": {
            "calls": 2,
            "min": 21480,
            "mean": 21480,
            "median": 21480,
            "max": 21480
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "owner()": {
            "calls": 2,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "receive()": {
            "calls": 1,
            "min": 21164,
            "mean": 21164,
            "median": 21164,
            "max": 21164
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 140948,
            "mean": 146980,
            "median": 143879,
            "max": 158461
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 203652,
            "mean": 211488,
            "median": 205123,
            "max": 225690
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 215923,
            "mean": 233912,
            "median": 240130,
            "max": 245685
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 3077914,
          "size": 15405
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2406,
            "mean": 2410,
            "median": 2406,
            "max": 3044
          },
          "POOL()": {
            "calls": 107,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 12103,
            "min": 269,
            "mean": 269,
            "median": 269,
            "max": 269
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 9351,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 2565,
            "mean": 2565,
            "median": 2565,
            "max": 2565
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24360,
            "mean": 24360,
            "median": 24360,
            "max": 24360
          },
          "balanceOf(address)": {
            "calls": 18093,
            "min": 2031,
            "mean": 10802,
            "median": 17031,
            "max": 17242
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 402,
            "mean": 38284,
            "median": 32654,
            "max": 58754
          },
          "decimals()": {
            "calls": 10051,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7407,
            "mean": 7407,
            "median": 7407,
            "max": 7407
          },
          "getIncentivesController()": {
            "calls": 9259,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 533,
            "mean": 4272,
            "median": 4533,
            "max": 4533
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7409,
            "mean": 21399,
            "median": 24509,
            "max": 24509
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44853,
            "min": 121840,
            "mean": 207397,
            "median": 207246,
            "max": 296978
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 419,
            "mean": 56879,
            "median": 60419,
            "max": 67636
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 266,
            "mean": 39704,
            "median": 43186,
            "max": 60286
          },
          "name()": {
            "calls": 9435,
            "min": 2733,
            "mean": 4963,
            "median": 2742,
            "max": 9298
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 337,
            "mean": 23289,
            "median": 8390,
            "max": 52564
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 10684,
            "mean": 22937,
            "median": 12815,
            "max": 45314
          },
          "scaledBalanceOf(address)": {
            "calls": 26206,
            "min": 462,
            "mean": 2211,
            "median": 2462,
            "max": 2462
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 339,
            "mean": 1546,
            "median": 2339,
            "max": 2339
          },
          "symbol()": {
            "calls": 9416,
            "min": 2736,
            "mean": 4992,
            "median": 2745,
            "max": 9289
          },
          "totalSupply()": {
            "calls": 9990,
            "min": 360,
            "mean": 5065,
            "median": 5888,
            "max": 17099
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 315,
            "mean": 94943,
            "median": 100189,
            "max": 165781
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2574,
            "mean": 86676,
            "median": 103338,
            "max": 136282
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 395,
            "mean": 27065,
            "median": 31681,
            "max": 38580
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 290,
            "mean": 27317,
            "median": 32898,
            "max": 32898
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 23927
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 2551,
            "mean": 24286,
            "median": 24361,
            "max": 24361
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 174537,
            "mean": 181739,
            "median": 180201,
            "max": 223425
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 180325,
            "mean": 180325,
            "median": 180325,
            "max": 180325
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 5622,
            "mean": 27378,
            "median": 48556,
            "max": 48556
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 23337,
            "mean": 23337,
            "median": 23337,
            "max": 23337
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 6224,
            "mean": 6224,
            "median": 6224,
            "max": 6224
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 5538,
            "mean": 5815,
            "median": 5538,
            "max": 76807
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 320,
            "mean": 320,
            "median": 320,
            "max": 320
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 631,
            "mean": 649,
            "median": 631,
            "max": 2631
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 2504,
            "mean": 2504,
            "median": 2504,
            "max": 2504
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2512,
            "mean": 2512,
            "median": 2512,
            "max": 2512
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 518,
            "mean": 564,
            "median": 518,
            "max": 2518
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 4551,
            "mean": 19583,
            "median": 20551,
            "max": 23051
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 627,
            "mean": 657,
            "median": 627,
            "max": 4627
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 661,
            "mean": 3331,
            "median": 3831,
            "max": 5001
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2524,
            "mean": 2524,
            "median": 2524,
            "max": 2524
          },
          "getReservesList()": {
            "calls": 2,
            "min": 10286,
            "mean": 10286,
            "median": 10286,
            "max": 10286
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 76051,
            "mean": 76051,
            "median": 76051,
            "max": 76051
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 5570,
            "mean": 37963,
            "median": 5570,
            "max": 142593
          },
          "initialize(address)": {
            "calls": 69,
            "min": 44815,
            "mean": 44815,
            "median": 44815,
            "max": 44815
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2587,
            "mean": 2587,
            "median": 2587,
            "max": 2587
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 327064,
            "mean": 327064,
            "median": 327064,
            "max": 327064
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 70135,
            "mean": 71373,
            "median": 71373,
            "max": 72611
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 208347,
            "mean": 208347,
            "median": 208347,
            "max": 208347
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7220,
            "mean": 7220,
            "median": 7220,
            "max": 7220
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 115602,
            "mean": 115602,
            "median": 115602,
            "max": 115602
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 108821,
            "mean": 108821,
            "median": 108821,
            "max": 108821
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 116331,
            "mean": 116331,
            "median": 116331,
            "max": 116331
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 152842,
            "mean": 159294,
            "median": 159016,
            "max": 161453
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46205,
            "mean": 46205,
            "median": 46205,
            "max": 46205
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 3539,
            "mean": 4796,
            "median": 5545,
            "max": 14539
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 1461,
            "mean": 3779,
            "median": 1461,
            "max": 23601
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 5569,
            "mean": 10514,
            "median": 9936,
            "max": 16159
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 17702,
            "mean": 37906,
            "median": 37141,
            "max": 79038
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2580,
            "mean": 2723,
            "median": 2580,
            "max": 39485
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 9220,
            "mean": 10604,
            "median": 9220,
            "max": 55331
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 24732,
            "mean": 24732,
            "median": 24732,
            "max": 24732
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 2604,
            "mean": 3321,
            "median": 2604,
            "max": 54397
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 143961,
            "mean": 194752,
            "median": 195261,
            "max": 195261
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 197439,
            "mean": 197439,
            "median": 197439,
            "max": 197439
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 245477,
            "mean": 245477,
            "median": 245477,
            "max": 245477
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 6849,
            "mean": 13482,
            "median": 6849,
            "max": 26749
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 11679,
            "mean": 11679,
            "median": 11679,
            "max": 11679
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 5521,
            "mean": 8838,
            "median": 5521,
            "max": 21149
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 110365,
            "mean": 112583,
            "median": 112583,
            "max": 114802
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 4112987,
          "size": 18721
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4627,
            "min": 8891,
            "mean": 21134,
            "median": 9033,
            "max": 77307
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 15610,
            "mean": 26605,
            "median": 28116,
            "max": 37590
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 12825,
            "mean": 13635,
            "median": 12825,
            "max": 98193
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2824,
            "min": 15668,
            "mean": 24247713,
            "median": 1610661,
            "max": 209478065
          },
          "initialize(address)": {
            "calls": 805,
            "min": 71787,
            "mean": 89642,
            "median": 89687,
            "max": 89687
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1812,
            "min": 12462,
            "mean": 76263,
            "median": 76362,
            "max": 88044
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3897,
            "min": 12485,
            "mean": 62579,
            "median": 70970,
            "max": 71000
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2584,
            "min": 8237,
            "mean": 9135,
            "median": 8237,
            "max": 41177
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2335,
            "min": 7820,
            "mean": 8079,
            "median": 7820,
            "max": 40762
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2592,
            "min": 15611,
            "mean": 26117,
            "median": 24721,
            "max": 76761
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3383,
            "min": 15817,
            "mean": 73097,
            "median": 77993,
            "max": 78035
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2326,
            "min": 8222,
            "mean": 8355,
            "median": 8222,
            "max": 41162
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 15610,
            "mean": 15976,
            "median": 15610,
            "max": 78463
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 15634,
            "mean": 53334,
            "median": 47173,
            "max": 93374
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 12851,
            "mean": 15246,
            "median": 12851,
            "max": 73656
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3348,
            "min": 7921,
            "mean": 15647,
            "median": 8061,
            "max": 38721
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2576,
            "min": 15611,
            "mean": 33177,
            "median": 28419,
            "max": 97095
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2831,
            "min": 7932,
            "mean": 13552,
            "median": 7932,
            "max": 40872
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 18313,
            "mean": 45011,
            "median": 49501,
            "max": 69216
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 15759,
            "mean": 26215,
            "median": 15759,
            "max": 87054
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 15651,
            "mean": 27700,
            "median": 39704,
            "max": 39704
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 13000,
            "mean": 35835,
            "median": 43134,
            "max": 45422
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2323,
            "min": 8257,
            "mean": 8394,
            "median": 8257,
            "max": 65810
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2847,
            "min": 8232,
            "mean": 12628,
            "median": 8232,
            "max": 41172
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 12882,
            "mean": 27256,
            "median": 12882,
            "max": 102356
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1061,
            "min": 12826,
            "mean": 24544,
            "median": 28285,
            "max": 33185
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 12885,
            "mean": 13231,
            "median": 12885,
            "max": 101964
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4553202,
          "size": 21246
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6427,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 751,
            "min": 2376,
            "mean": 2376,
            "median": 2376,
            "max": 2376
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 286,
            "mean": 286,
            "median": 286,
            "max": 286
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 287,
            "mean": 287,
            "median": 287,
            "max": 287
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46997,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 2567,
            "mean": 24302,
            "median": 24377,
            "max": 24377
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 16523,
            "mean": 200584,
            "median": 208689,
            "max": 276659
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3114,
            "min": 5578,
            "mean": 44931,
            "median": 48514,
            "max": 48514
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1810,
            "min": 1431,
            "mean": 23294,
            "median": 23331,
            "max": 23331
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3115,
            "min": 1418,
            "mean": 6210,
            "median": 6218,
            "max": 6218
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 25466,
            "mean": 185958,
            "median": 195170,
            "max": 195170
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 5531,
            "mean": 6312,
            "median": 5531,
            "max": 76816
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 5510,
            "mean": 49760,
            "median": 87505,
            "max": 95462
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 6061,
            "mean": 45037,
            "median": 47769,
            "max": 102361
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 24064,
            "mean": 98369,
            "median": 75331,
            "max": 439276
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 21495,
            "mean": 269853,
            "median": 148434,
            "max": 633636
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "getConfiguration(address)": {
            "calls": 51710,
            "min": 657,
            "mean": 1816,
            "median": 2657,
            "max": 2657
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1848,
            "min": 498,
            "mean": 2493,
            "median": 2498,
            "max": 2498
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4706,
            "min": 485,
            "mean": 2482,
            "median": 2485,
            "max": 2485
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 143,
            "min": 878,
            "mean": 2850,
            "median": 2878,
            "max": 2878
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 3368,
            "mean": 4698,
            "median": 5359,
            "max": 5368
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 34,
            "min": 2885,
            "mean": 2885,
            "median": 2885,
            "max": 2885
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5607,
            "min": 506,
            "mean": 1211,
            "median": 506,
            "max": 2506
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "getReserveAToken(address)": {
            "calls": 21256,
            "min": 497,
            "mean": 2097,
            "median": 2497,
            "max": 2497
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2489,
            "mean": 2489,
            "median": 2489,
            "max": 2489
          },
          "getReserveData(address)": {
            "calls": 14619,
            "min": 2561,
            "mean": 16243,
            "median": 20561,
            "max": 23061
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 496,
            "mean": 2344,
            "median": 2496,
            "max": 2496
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42016,
            "min": 637,
            "mean": 2137,
            "median": 637,
            "max": 4848
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4088,
            "min": 633,
            "mean": 2366,
            "median": 633,
            "max": 4984
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 14076,
            "min": 485,
            "mean": 2227,
            "median": 2485,
            "max": 2485
          },
          "getReservesList()": {
            "calls": 3689,
            "min": 2258,
            "mean": 16688,
            "median": 10258,
            "max": 330646
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 2608,
            "mean": 60661,
            "median": 76029,
            "max": 116573
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 645,
            "mean": 1723,
            "median": 2645,
            "max": 2645
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 496,
            "mean": 1287,
            "median": 496,
            "max": 2496
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1953,
            "min": 487,
            "mean": 2216,
            "median": 2487,
            "max": 2487
          },
          "initReserve(address,address,address)": {
            "calls": 45200,
            "min": 5564,
            "mean": 147038,
            "median": 148135,
            "max": 163903
          },
          "initialize(address)": {
            "calls": 742,
            "min": 26175,
            "mean": 44777,
            "median": 44828,
            "max": 44828
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2566,
            "mean": 2566,
            "median": 2566,
            "max": 2566
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6386,
            "min": 20791,
            "mean": 231501,
            "median": 267680,
            "max": 402704
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 1866,
            "mean": 46025,
            "median": 48625,
            "max": 127442
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 140920,
            "mean": 206976,
            "median": 208212,
            "max": 411940
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7220,
            "mean": 7220,
            "median": 7220,
            "max": 7220
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 11875,
            "mean": 82794,
            "median": 86718,
            "max": 117416
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 68689,
            "mean": 113555,
            "median": 113927,
            "max": 123659
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 105739,
            "mean": 130160,
            "median": 119334,
            "max": 161132
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46213,
            "mean": 46213,
            "median": 46213,
            "max": 46213
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2411,
            "min": 3549,
            "mean": 3769,
            "median": 3549,
            "max": 14549
          },
          "setConfiguration(address,(uint256))": {
            "calls": 72483,
            "min": 1433,
            "mean": 15355,
            "median": 23433,
            "max": 23573
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3481,
            "min": 4232,
            "mean": 11447,
            "median": 11680,
            "max": 16180
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 4436,
            "mean": 42526,
            "median": 37133,
            "max": 103202
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2618,
            "mean": 3469,
            "median": 2618,
            "max": 105586
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 5183,
            "mean": 12018,
            "median": 9183,
            "max": 86056
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 2619,
            "mean": 3611,
            "median": 2619,
            "max": 54408
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 27946,
            "mean": 176939,
            "median": 195169,
            "max": 202386
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 104103,
            "mean": 183802,
            "median": 203970,
            "max": 243333
          },
          "syncIndexesState(address)": {
            "calls": 2198,
            "min": 6832,
            "mean": 13803,
            "median": 6832,
            "max": 45344
          },
          "syncRatesState(address)": {
            "calls": 2198,
            "min": 11668,
            "mean": 11727,
            "median": 11668,
            "max": 16168
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 991,
            "min": 5531,
            "mean": 17106,
            "median": 21159,
            "max": 21159
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 29253,
            "mean": 119351,
            "median": 121554,
            "max": 180391
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 2199578,
          "size": 11179
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 9256,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 26809,
            "mean": 26809,
            "median": 26809,
            "max": 26809
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 453,
            "mean": 9114,
            "median": 3954,
            "max": 17322
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 10333,
            "mean": 22123,
            "median": 22133,
            "max": 22148
          },
          "decimals()": {
            "calls": 10028,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 334,
            "mean": 27839,
            "median": 20805,
            "max": 55005
          },
          "getIncentivesController()": {
            "calls": 9256,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44853,
            "min": 121530,
            "mean": 205140,
            "median": 206562,
            "max": 296657
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 22179,
            "mean": 58279,
            "median": 58379,
            "max": 67948
          },
          "name()": {
            "calls": 9357,
            "min": 2711,
            "mean": 4980,
            "median": 4900,
            "max": 9276
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2417,
            "mean": 2417,
            "median": 2417,
            "max": 2417
          },
          "scaledBalanceOf(address)": {
            "calls": 18709,
            "min": 447,
            "mean": 1725,
            "median": 2447,
            "max": 2447
          },
          "scaledTotalSupply()": {
            "calls": 44934,
            "min": 356,
            "mean": 2247,
            "median": 2356,
            "max": 2356
          },
          "symbol()": {
            "calls": 9350,
            "min": 2735,
            "mean": 4995,
            "median": 4924,
            "max": 9288
          },
          "totalSupply()": {
            "calls": 190,
            "min": 1907,
            "mean": 5089,
            "median": 5907,
            "max": 17258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 4700
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          },
          "getAssetPrice(address)": {
            "calls": 58348,
            "min": 0,
            "mean": 5431,
            "median": 7630,
            "max": 14857
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5170,
            "mean": 7116,
            "median": 8089,
            "max": 8089
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "getSourceOfAsset(address)": {
            "calls": 1156,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 35617,
            "mean": 56306,
            "median": 58956,
            "max": 60614
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 58174,
            "mean": 58174,
            "median": 58174,
            "max": 58174
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 856425,
          "size": 3948
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42581,
            "min": 0,
            "mean": 3217,
            "median": 3122,
            "max": 3938
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2921,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3144,
            "mean": 3144,
            "median": 3144,
            "max": 3144
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 2801,
            "mean": 2801,
            "median": 2801,
            "max": 2801
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1375,
            "min": 2771,
            "mean": 2771,
            "median": 2771,
            "max": 2771
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2149,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "getVariableRateSlope1(address)": {
            "calls": 2153,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "getVariableRateSlope2(address)": {
            "calls": 1381,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 27397,
            "mean": 28412,
            "median": 27787,
            "max": 35328
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 27776,
            "mean": 31771,
            "median": 28360,
            "max": 35732
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 408200,
          "size": 1760
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2298,
            "mean": 2298,
            "median": 2298,
            "max": 2298
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 9674,
            "mean": 10536,
            "median": 9674,
            "max": 11830
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 9669,
            "mean": 10531,
            "median": 9669,
            "max": 11825
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 34579,
            "mean": 37584,
            "median": 37584,
            "max": 40589
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 31789,
            "mean": 32411,
            "median": 32411,
            "max": 33034
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 476427,
          "size": 2174
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21289,
            "mean": 21289,
            "median": 21289,
            "max": 21289
          },
          "fallback()": {
            "calls": 561834,
            "min": 0,
            "mean": 139502,
            "median": 7304,
            "max": 212027297
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26572,
            "mean": 28502,
            "median": 28502,
            "max": 30432
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28435,
            "mean": 151455,
            "median": 186068,
            "max": 186068
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 585209,
          "size": 2762
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43544,
            "mean": 43544,
            "median": 43544,
            "max": 43544
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43549,
            "mean": 43549,
            "median": 43549,
            "max": 43549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 367079,
          "size": 1752
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43529,
            "mean": 43529,
            "median": 43529,
            "max": 43529
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43549,
            "mean": 43549,
            "median": 43549,
            "max": 43549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4606476,
          "size": 21404
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 27690,
            "mean": 27690,
            "median": 27690,
            "max": 27690
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 120134,
          "size": 378
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "decimals()": {
            "calls": 94,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "latestAnswer()": {
            "calls": 56512,
            "min": 286,
            "mean": 1754,
            "median": 2286,
            "max": 2286
          },
          "name()": {
            "calls": 94,
            "min": 120,
            "mean": 120,
            "median": 120,
            "max": 120
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 138713,
          "size": 427
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25583,
            "mean": 38877,
            "median": 45519,
            "max": 45531
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 272923,
          "size": 1280
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4464,
            "mean": 4464,
            "median": 4464,
            "max": 4464
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26014,
            "mean": 27210,
            "median": 26014,
            "max": 45926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 470173,
          "size": 1968
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133200,
            "mean": 133200,
            "median": 133200,
            "max": 133200
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133236,
            "mean": 133249,
            "median": 133260,
            "max": 133260
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 97497,
          "size": 377
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1137048,
          "size": 6535
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 543,
            "mean": 1654,
            "median": 2543,
            "max": 2543
          },
          "approve(address,uint256)": {
            "calls": 23018,
            "min": 26021,
            "mean": 45535,
            "median": 46065,
            "max": 46305
          },
          "balanceOf(address)": {
            "calls": 89433,
            "min": 467,
            "mean": 2465,
            "median": 2467,
            "max": 2467
          },
          "decimals()": {
            "calls": 83013,
            "min": 322,
            "mean": 2317,
            "median": 2322,
            "max": 2322
          },
          "mint(address,uint256)": {
            "calls": 6464,
            "min": 36052,
            "mean": 62183,
            "median": 70264,
            "max": 70372
          },
          "name()": {
            "calls": 2080,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 75585,
            "mean": 75645,
            "median": 75633,
            "max": 75789
          },
          "symbol()": {
            "calls": 96,
            "min": 2767,
            "mean": 2767,
            "median": 2767,
            "max": 2767
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46504,
            "mean": 50596,
            "median": 51280,
            "max": 51280
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28293,
            "mean": 28293,
            "median": 28293,
            "max": 28293
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 436,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 673,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 236,
            "mean": 276,
            "median": 280,
            "max": 280
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 206,
            "mean": 254,
            "median": 274,
            "max": 274
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 227378,
          "size": 839
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "HALF_WAD()": {
            "calls": 432,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "RAY()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "WAD()": {
            "calls": 647,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "WAD_RAY_RATIO()": {
            "calls": 1771,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 317,
            "mean": 317,
            "median": 317,
            "max": 317
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 283,
            "mean": 320,
            "median": 328,
            "max": 328
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 250,
            "mean": 290,
            "median": 308,
            "max": 308
          },
          "wadToRay(uint256)": {
            "calls": 494,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 3141542,
          "size": 15700
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 307,
            "mean": 307,
            "median": 307,
            "max": 307
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 54062,
            "mean": 54062,
            "median": 54062,
            "max": 54062
          },
          "name()": {
            "calls": 1,
            "min": 2742,
            "mean": 2742,
            "median": 2742,
            "max": 2742
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67624,
            "mean": 67624,
            "median": 67624,
            "max": 67624
          },
          "symbol()": {
            "calls": 1,
            "min": 2729,
            "mean": 2729,
            "median": 2729,
            "max": 2729
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 60785,
            "mean": 60785,
            "median": 60785,
            "max": 60785
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 2199578,
          "size": 11179
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 53746,
            "mean": 53746,
            "median": 53746,
            "max": 53746
          },
          "name()": {
            "calls": 1,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "symbol()": {
            "calls": 1,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 474473,
          "size": 1883
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 156405,
            "mean": 156405,
            "median": 156405,
            "max": 156405
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5204,
            "mean": 5204,
            "median": 5204,
            "max": 5204
          },
          "text()": {
            "calls": 6,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "value()": {
            "calls": 7,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4467,
            "mean": 4467,
            "median": 4467,
            "max": 4467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 475553,
          "size": 1888
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51014,
            "mean": 51014,
            "median": 51014,
            "max": 51014
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5204,
            "mean": 5204,
            "median": 5204,
            "max": 5204
          },
          "text()": {
            "calls": 2,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "value()": {
            "calls": 4,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4467,
            "mean": 4467,
            "median": 4467,
            "max": 4467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132782,
          "size": 302
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 24624,
            "mean": 24624,
            "median": 24624,
            "max": 24624
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 133646,
          "size": 306
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 7533,
            "mean": 7533,
            "median": 7533,
            "max": 7533
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1575282,
          "size": 7384
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1626,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 803,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 50374,
            "mean": 50374,
            "median": 50374,
            "max": 50374
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 50391,
            "mean": 50391,
            "median": 50391,
            "max": 50391
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50373,
            "mean": 50373,
            "median": 50373,
            "max": 50373
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 39768,
            "mean": 47734,
            "median": 50390,
            "max": 50390
          },
          "addPoolAdmin(address)": {
            "calls": 793,
            "min": 50362,
            "mean": 50373,
            "median": 50374,
            "max": 50374
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 50380,
            "mean": 50380,
            "median": 50380,
            "max": 50380
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 40317,
            "mean": 49724,
            "median": 51068,
            "max": 51068
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2519,
            "mean": 2519,
            "median": 2519,
            "max": 2519
          },
          "isAssetListingAdmin(address)": {
            "calls": 3888,
            "min": 460,
            "mean": 2061,
            "median": 2460,
            "max": 2460
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2455,
            "mean": 2455,
            "median": 2455,
            "max": 2455
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          },
          "isPoolAdmin(address)": {
            "calls": 56680,
            "min": 472,
            "mean": 1561,
            "median": 2472,
            "max": 2472
          },
          "isRiskAdmin(address)": {
            "calls": 41125,
            "min": 455,
            "mean": 1365,
            "median": 455,
            "max": 2455
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 28477,
            "mean": 28477,
            "median": 28477,
            "max": 28477
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 28474,
            "mean": 28474,
            "median": 28474,
            "max": 28474
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 28460,
            "mean": 28460,
            "median": 28460,
            "max": 28460
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 28475,
            "mean": 34121,
            "median": 34121,
            "max": 39767
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 28461,
            "mean": 28461,
            "median": 28461,
            "max": 28461
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28460,
            "mean": 28460,
            "median": 28460,
            "max": 28460
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 38172,
            "mean": 46852,
            "median": 48589,
            "max": 48589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 2047723,
          "size": 10460
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1090,
            "min": 359,
            "mean": 885,
            "median": 359,
            "max": 2359
          },
          "getACLManager()": {
            "calls": 51857,
            "min": 339,
            "mean": 1343,
            "median": 2339,
            "max": 2339
          },
          "getAddress(bytes32)": {
            "calls": 18713,
            "min": 386,
            "mean": 1914,
            "median": 2386,
            "max": 2386
          },
          "getMarketId()": {
            "calls": 6,
            "min": 2747,
            "mean": 2747,
            "median": 2747,
            "max": 2747
          },
          "getPool()": {
            "calls": 2627,
            "min": 343,
            "mean": 1067,
            "median": 343,
            "max": 2343
          },
          "getPoolConfigurator()": {
            "calls": 197871,
            "min": 376,
            "mean": 692,
            "median": 376,
            "max": 2376
          },
          "getPoolDataProvider()": {
            "calls": 2640,
            "min": 361,
            "mean": 1192,
            "median": 361,
            "max": 2361
          },
          "getPriceOracle()": {
            "calls": 33085,
            "min": 379,
            "mean": 2234,
            "median": 2379,
            "max": 2379
          },
          "getPriceOracleSentinel()": {
            "calls": 15843,
            "min": 360,
            "mean": 2359,
            "median": 2360,
            "max": 2360
          },
          "owner()": {
            "calls": 806,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 23870,
            "mean": 46852,
            "median": 47496,
            "max": 47496
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 23909,
            "mean": 37349,
            "median": 38979,
            "max": 47529
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24405,
            "mean": 48036,
            "median": 48154,
            "max": 48430
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24118,
            "mean": 229997,
            "median": 49257,
            "max": 526133
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24173,
            "mean": 27881,
            "median": 27881,
            "max": 31590
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 23835,
            "mean": 295631,
            "median": 303305,
            "max": 552079
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 23909,
            "mean": 37349,
            "median": 38979,
            "max": 47529
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 23835,
            "mean": 282157,
            "median": 289832,
            "max": 525129
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 23892,
            "mean": 37332,
            "median": 38962,
            "max": 47512
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 23909,
            "mean": 40742,
            "median": 47529,
            "max": 47529
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2590
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2501,
            "mean": 4794,
            "median": 4793,
            "max": 7092
          },
          "owner()": {
            "calls": 803,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 23927,
            "mean": 103637,
            "median": 119579,
            "max": 119579
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 25958,
            "mean": 38587,
            "median": 39664,
            "max": 49064
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 864438,
          "size": 4020
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 204930,
            "mean": 278066,
            "median": 278038,
            "max": 283420
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "owner()": {
            "calls": 2,
            "min": 2298,
            "mean": 2298,
            "median": 2298,
            "max": 2298
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 58187,
            "mean": 58187,
            "median": 58187,
            "max": 58187
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43781,
            "mean": 43781,
            "median": 43781,
            "max": 43781
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48303,
            "mean": 48310,
            "median": 48315,
            "max": 48315
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 57404,
            "mean": 57404,
            "median": 57404,
            "max": 57404
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46266,
            "mean": 46266,
            "median": 46266,
            "max": 46266
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28580,
            "mean": 28580,
            "median": 28580,
            "max": 28580
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 43842,
            "mean": 43842,
            "median": 43842,
            "max": 43842
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3453405,
          "size": 15882
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 806,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 86652,
            "mean": 86652,
            "median": 86652,
            "max": 86652
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 86529,
            "mean": 86529,
            "median": 86529,
            "max": 86529
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 727,
            "min": 666,
            "mean": 71010,
            "median": 80419,
            "max": 114569
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 83522,
            "mean": 83522,
            "median": 83522,
            "max": 83522
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 81179,
            "mean": 81179,
            "median": 81179,
            "max": 81179
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 168346,
            "mean": 241494,
            "median": 241478,
            "max": 246836
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 26676,
            "mean": 26676,
            "median": 26676,
            "max": 26676
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getAssetIndex(address,address)": {
            "calls": 9743,
            "min": 2104,
            "mean": 9763,
            "median": 10186,
            "max": 15286
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 2759,
            "mean": 5109,
            "median": 5192,
            "max": 7623
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 3265,
            "mean": 3265,
            "median": 3265,
            "max": 3265
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 4880,
            "mean": 4880,
            "median": 4880,
            "max": 4880
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 6908,
            "mean": 6908,
            "median": 6908,
            "max": 6908
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 2658,
            "mean": 2658,
            "median": 2658,
            "max": 2658
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 10951,
            "mean": 16340,
            "median": 16244,
            "max": 21168
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 517,
            "mean": 2143,
            "median": 2517,
            "max": 36340
          },
          "initialize(address)": {
            "calls": 803,
            "min": 24729,
            "mean": 24730,
            "median": 24729,
            "max": 25882
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24036,
            "mean": 24036,
            "median": 24036,
            "max": 24036
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 9375,
            "mean": 9375,
            "median": 9375,
            "max": 9375
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 21744,
            "mean": 21744,
            "median": 21744,
            "max": 21744
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12087,
            "mean": 12087,
            "median": 12087,
            "max": 12087
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 9627,
            "mean": 9627,
            "median": 9627,
            "max": 9627
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 307450,
          "size": 1521
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 487525,
          "size": 2828
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25576,
            "mean": 25576,
            "median": 25576,
            "max": 25576
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52050,
            "mean": 52050,
            "median": 52050,
            "max": 52050
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 26596,
            "mean": 26596,
            "median": 26596,
            "max": 26596
          },
          "renewApproval()": {
            "calls": 1,
            "min": 27395,
            "mean": 27395,
            "median": 27395,
            "max": 27395
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1487288,
          "size": 6728
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2469,
            "mean": 15967,
            "median": 15967,
            "max": 29466
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19374,
            "mean": 19418,
            "median": 19418,
            "max": 19462
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7445,
            "mean": 41426,
            "median": 34361,
            "max": 89536
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2446,
            "mean": 121711,
            "median": 205141,
            "max": 205141
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2455,
            "mean": 7538,
            "median": 2455,
            "max": 17706
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 6943,
            "mean": 18017,
            "median": 18017,
            "max": 29092
          },
          "initialize(uint256,address)": {
            "calls": 873,
            "min": 94429,
            "mean": 115423,
            "median": 116538,
            "max": 116538
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "receive()": {
            "calls": 4,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2481,
            "mean": 18673,
            "median": 18673,
            "max": 34866
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7467,
            "mean": 34768,
            "median": 19873,
            "max": 86145
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 538442,
          "size": 2540
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23588,
            "mean": 91266,
            "median": 92486,
            "max": 92486
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24081,
            "mean": 129887,
            "median": 132125,
            "max": 132125
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 3558909,
          "size": 27074
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 826,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3073410,
          "size": 18673
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 801,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 6913958,
          "size": 33815
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 776,
            "min": 17612,
            "mean": 17612,
            "median": 17612,
            "max": 17612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 11150990,
          "size": 49761
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 776,
            "min": 8926,
            "mean": 8926,
            "median": 8926,
            "max": 8926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 9367558,
          "size": 43397
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 995752,
          "size": 6473
        },
        "functions": {
          "getMiscReport()": {
            "calls": 826,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5457781,
          "size": 28236
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 8180877,
          "size": 40806
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 826,
            "min": 17612,
            "mean": 17612,
            "median": 17612,
            "max": 17612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 8787062,
          "size": 40716
        },
        "functions": {
          "getPoolReport()": {
            "calls": 745,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 7027687,
          "size": 37144
        },
        "functions": {
          "getInitialReport()": {
            "calls": 826,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 776,
            "min": 648594,
            "mean": 650851,
            "median": 648594,
            "max": 769398
          },
          "setProtocolDataProvider(address)": {
            "calls": 801,
            "min": 59221,
            "mean": 59232,
            "median": 59233,
            "max": 59233
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 803,
            "min": 2824061,
            "mean": 3334472,
            "median": 3334615,
            "max": 3360201
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 801,
            "min": 46537,
            "mean": 46541,
            "median": 46537,
            "max": 46609
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 5387569,
          "size": 27266
        },
        "functions": {
          "getTokensReport()": {
            "calls": 801,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 2422734,
          "size": 11233
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 55400,
            "mean": 103998,
            "median": 55672,
            "max": 163403
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 33431,
            "mean": 83560,
            "median": 56099,
            "max": 167105
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 54982,
            "mean": 100140,
            "median": 55254,
            "max": 162985
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 45852,
            "mean": 86154,
            "median": 54160,
            "max": 125329
          },
          "getClaimableRewards(address,address)": {
            "calls": 3437,
            "min": 24839,
            "mean": 27620,
            "median": 27674,
            "max": 27677
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 26556,
            "mean": 31798,
            "median": 31849,
            "max": 31852
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1128,
            "min": 2538,
            "mean": 2538,
            "median": 2538,
            "max": 2538
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "mint(address,uint256)": {
            "calls": 2460,
            "min": 53019,
            "mean": 94481,
            "median": 95155,
            "max": 98137
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 78279,
            "mean": 78279,
            "median": 78279,
            "max": 78279
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 113920,
            "mean": 113920,
            "median": 113920,
            "max": 114192
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 4879,
            "mean": 4879,
            "median": 4879,
            "max": 4879
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 56780,
            "mean": 72581,
            "median": 68352,
            "max": 99466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1156128,
          "size": 6623
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 978,
            "min": 2541,
            "mean": 3592,
            "median": 4541,
            "max": 4541
          },
          "mint(address,uint256)": {
            "calls": 2460,
            "min": 50874,
            "mean": 67111,
            "median": 68202,
            "max": 68202
          },
          "scaledTotalSupply()": {
            "calls": 12045,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "transfer(address,uint256)": {
            "calls": 2460,
            "min": 29388,
            "mean": 45477,
            "median": 46560,
            "max": 46560
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2910231,
          "size": 13577
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26000,
            "mean": 45584,
            "median": 45948,
            "max": 46044
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 14926,
            "mean": 14926,
            "median": 14926,
            "max": 14926
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 14975,
            "mean": 14975,
            "median": 14975,
            "max": 14975
          },
          "decimals()": {
            "calls": 256,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 55894,
            "mean": 183051,
            "median": 195404,
            "max": 200540
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 70520,
            "mean": 230792,
            "median": 250519,
            "max": 335701
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 20975,
            "mean": 20975,
            "median": 20975,
            "max": 20975
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 34223,
            "mean": 46074,
            "median": 46213,
            "max": 46213
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 34397,
            "mean": 34397,
            "median": 34397,
            "max": 34397
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 12950,
            "mean": 20346,
            "median": 24039,
            "max": 24051
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 63355,
            "mean": 177388,
            "median": 177352,
            "max": 291349
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 130672,
            "mean": 130672,
            "median": 130672,
            "max": 130672
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 15015,
            "mean": 15015,
            "median": 15015,
            "max": 15015
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 14971,
            "mean": 14971,
            "median": 14971,
            "max": 14971
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 14933,
            "mean": 14933,
            "median": 14933,
            "max": 14933
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 15066,
            "mean": 15066,
            "median": 15066,
            "max": 15066
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 153630,
            "mean": 153833,
            "median": 153888,
            "max": 153978
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 39284,
            "mean": 111465,
            "median": 147248,
            "max": 147921
          },
          "totalAssets()": {
            "calls": 258,
            "min": 17012,
            "mean": 17012,
            "median": 17012,
            "max": 17012
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 47514,
            "mean": 101692,
            "median": 101655,
            "max": 155796
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 1069194,
          "size": 5060
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 182299,
            "mean": 182299,
            "median": 182299,
            "max": 182299
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 1057418,
          "size": 4922
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 139232,
            "mean": 139232,
            "median": 139232,
            "max": 139232
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 1056770,
          "size": 4919
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 41191,
            "mean": 41191,
            "median": 41191,
            "max": 41191
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 1003793,
          "size": 4666
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 78931,
            "mean": 78931,
            "median": 78931,
            "max": 78931
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 1059347,
          "size": 4931
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80428,
            "mean": 80428,
            "median": 80428,
            "max": 80428
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 1057922,
          "size": 4925
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 30596,
            "mean": 30596,
            "median": 30596,
            "max": 30596
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 1059347,
          "size": 4931
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80428,
            "mean": 80428,
            "median": 80428,
            "max": 80428
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 1060211,
          "size": 4935
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 30650,
            "mean": 30650,
            "median": 30650,
            "max": 30650
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 1329041,
          "size": 6397
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 322386,
            "mean": 322386,
            "median": 322386,
            "max": 322386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 1000029,
          "size": 4577
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 85721,
            "mean": 85721,
            "median": 85721,
            "max": 85721
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 1036780,
          "size": 4747
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 47772,
            "mean": 47772,
            "median": 47772,
            "max": 47772
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 999223,
          "size": 4573
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 42683,
            "mean": 42683,
            "median": 42683,
            "max": 42683
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 1109852,
          "size": 5239
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1677298,
            "mean": 1677298,
            "median": 1677298,
            "max": 1677298
          },
          "newListings()": {
            "calls": 4,
            "min": 2173,
            "mean": 2173,
            "median": 2173,
            "max": 2173
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 1207982,
          "size": 5869
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1677135,
            "mean": 1677135,
            "median": 1677135,
            "max": 1677135
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2603,
            "mean": 2603,
            "median": 2603,
            "max": 2603
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1341780,
          "size": 6513
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1792795,
            "mean": 1792795,
            "median": 1792795,
            "max": 1792795
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 1243216,
          "size": 5881
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1792951,
            "mean": 1792951,
            "median": 1792951,
            "max": 1792951
          },
          "newListings()": {
            "calls": 4,
            "min": 2184,
            "mean": 2184,
            "median": 2184,
            "max": 2184
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 1108323,
          "size": 5240
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 59980,
            "mean": 59980,
            "median": 59980,
            "max": 59980
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 1058282,
          "size": 4926
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 126686,
            "mean": 126686,
            "median": 126686,
            "max": 126686
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 1031,
            "mean": 1031,
            "median": 1031,
            "max": 1031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 2205203,
          "size": 11205
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "POOL()": {
            "calls": 2818,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 344,
            "mean": 344,
            "median": 344,
            "max": 344
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21616,
            "mean": 21616,
            "median": 21616,
            "max": 21616
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 26809,
            "mean": 26809,
            "median": 26809,
            "max": 26809
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 26133,
            "mean": 26133,
            "median": 26133,
            "max": 26133
          },
          "decimals()": {
            "calls": 2818,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21623,
            "mean": 21623,
            "median": 21623,
            "max": 21623
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21618,
            "mean": 21618,
            "median": 21618,
            "max": 21618
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 45527,
            "mean": 180825,
            "median": 206550,
            "max": 296645
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 60397,
            "mean": 62789,
            "median": 60397,
            "max": 69966
          },
          "name()": {
            "calls": 2818,
            "min": 2711,
            "mean": 3762,
            "median": 2720,
            "max": 9276
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "symbol()": {
            "calls": 2818,
            "min": 2720,
            "mean": 3766,
            "median": 2729,
            "max": 9273
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21618,
            "mean": 21618,
            "median": 21618,
            "max": 21618
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 21764,
            "mean": 21764,
            "median": 21764,
            "max": 21764
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 93154905,
          "size": 463625
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 74603,
            "mean": 74798,
            "median": 74891,
            "max": 74900
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 76740,
            "mean": 76740,
            "median": 76740,
            "max": 76740
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 143531,
            "mean": 143531,
            "median": 143531,
            "max": 143531
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 381753,
            "mean": 687007,
            "median": 740540,
            "max": 742488
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 630409,
            "mean": 630409,
            "median": 630409,
            "max": 630409
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 58577,
            "mean": 74281,
            "median": 74281,
            "max": 89985
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 61340,
            "mean": 73023,
            "median": 75010,
            "max": 75020
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 418642,
            "mean": 628982,
            "median": 628982,
            "max": 839323
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 469040,
            "mean": 489709,
            "median": 489516,
            "max": 510573
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 413171,
            "mean": 516233,
            "median": 540972,
            "max": 604795
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 546855,
            "mean": 584624,
            "median": 584624,
            "max": 622393
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 150549,
            "mean": 150549,
            "median": 150549,
            "max": 150549
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 121797,
            "mean": 129595,
            "median": 133494,
            "max": 133494
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 496360,
            "mean": 528951,
            "median": 517792,
            "max": 565966
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 537923,
            "mean": 537923,
            "median": 537923,
            "max": 537923
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 511441,
            "mean": 523040,
            "median": 511441,
            "max": 557837
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 35686,
            "mean": 35921,
            "median": 36058,
            "max": 36070
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 499349,
            "mean": 499349,
            "median": 499349,
            "max": 499349
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 516541,
            "mean": 516541,
            "median": 516541,
            "max": 516541
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 521792,
            "mean": 577926,
            "median": 526322,
            "max": 685664
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 499391,
            "mean": 535388,
            "median": 528153,
            "max": 592029
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 496858,
            "mean": 547275,
            "median": 543304,
            "max": 601664
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 533587,
            "mean": 533587,
            "median": 533587,
            "max": 533587
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 412239,
            "mean": 548416,
            "median": 604270,
            "max": 604270
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 383657,
            "mean": 486628,
            "median": 528748,
            "max": 547480
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 589445,
            "mean": 1055471,
            "median": 1197001,
            "max": 1204227
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 444422,
            "mean": 444422,
            "median": 444422,
            "max": 444422
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 625886,
            "mean": 625886,
            "median": 625886,
            "max": 625886
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 643829,
            "mean": 643829,
            "median": 643829,
            "max": 643829
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 136370,
          "size": 453
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 270,
            "mean": 1068,
            "median": 270,
            "max": 2270
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 4015130,
          "size": 17057
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 768,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "WBTC_ADDRESS()": {
            "calls": 768,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "execute()": {
            "calls": 771,
            "min": 4800974,
            "mean": 4800993,
            "median": 4800974,
            "max": 4801250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 84001,
          "size": 174
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 128989,
          "size": 382
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 157,
            "mean": 157,
            "median": 157,
            "max": 157
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 4908240,
          "size": 23886
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24360,
            "mean": 24360,
            "median": 24360,
            "max": 24360
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 17038,
            "mean": 17198,
            "median": 17249,
            "max": 17249
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 44488,
            "mean": 70262,
            "median": 66018,
            "max": 83118
          },
          "delegate(address)": {
            "calls": 26,
            "min": 5739,
            "mean": 63701,
            "median": 66439,
            "max": 86339
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 24777,
            "mean": 43883,
            "median": 46472,
            "max": 58762
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5075,
            "mean": 6230,
            "median": 7236,
            "max": 7248
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5134,
            "mean": 7864,
            "median": 9502,
            "max": 9502
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 5070,
            "mean": 5251,
            "median": 5253,
            "max": 5259
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 5719,
            "mean": 5990,
            "median": 6068,
            "max": 6068
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 54088,
            "mean": 54088,
            "median": 54088,
            "max": 54088
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 29000,
            "mean": 53380,
            "median": 46100,
            "max": 84615
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "totalSupply()": {
            "calls": 5,
            "min": 5888,
            "mean": 5888,
            "median": 5888,
            "max": 5888
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 75730,
            "mean": 109004,
            "median": 110277,
            "max": 129083
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 82927,
            "mean": 125159,
            "median": 120780,
            "max": 179833
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 36069,
            "mean": 67899,
            "median": 65292,
            "max": 113092
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 32829,
            "mean": 32829,
            "median": 32829,
            "max": 32829
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 309558,
          "size": 1579
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1226,
            "mean": 1226,
            "median": 1226,
            "max": 1226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 53113,
          "size": 298
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 422,
            "mean": 1731,
            "median": 2922,
            "max": 2922
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 904901,
          "size": 3973
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2439,
            "mean": 2439,
            "median": 2439,
            "max": 2439
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 156680,
            "mean": 156680,
            "median": 156680,
            "max": 156680
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1124
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2256,
            "mean": 2256,
            "median": 2256,
            "max": 2256
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 725535,
          "size": 2946
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5024,
            "mean": 25890,
            "median": 7202,
            "max": 2420703
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 509462,
          "size": 2226
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 537,
            "mean": 2137,
            "median": 2537,
            "max": 2537
          },
          "approve(address,uint256)": {
            "calls": 3553,
            "min": 28781,
            "mean": 44743,
            "median": 45989,
            "max": 46253
          },
          "balanceOf(address)": {
            "calls": 19617,
            "min": 421,
            "mean": 2417,
            "median": 2421,
            "max": 2421
          },
          "decimals()": {
            "calls": 2438,
            "min": 283,
            "mean": 2241,
            "median": 2283,
            "max": 2283
          },
          "deposit()": {
            "calls": 51,
            "min": 44887,
            "mean": 44887,
            "median": 44887,
            "max": 44887
          },
          "name()": {
            "calls": 16,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "symbol()": {
            "calls": 46,
            "min": 2621,
            "mean": 2621,
            "median": 2621,
            "max": 2621
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 46546,
            "mean": 46546,
            "median": 46546,
            "max": 46546
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1691895,
          "size": 8241
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 306318,
            "mean": 393195,
            "median": 423612,
            "max": 449655
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 1889394,
          "size": 9235
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 35159,
            "mean": 35159,
            "median": 35159,
            "max": 35159
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 333875,
            "mean": 426601,
            "median": 447676,
            "max": 477176
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1345751,
          "size": 6626
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 306389,
            "mean": 336641,
            "median": 331914,
            "max": 371620
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3606
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2393395,
            "mean": 2393395,
            "median": 2393395,
            "max": 2393395
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "initialize()": {
            "calls": 797,
            "min": 23412,
            "mean": 23541,
            "median": 23545,
            "max": 23545
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 26278
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 5230,
            "mean": 5230,
            "median": 5230,
            "max": 5230
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "aToken()": {
            "calls": 1,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 2691,
            "mean": 2691,
            "median": 2691,
            "max": 2691
          },
          "asset()": {
            "calls": 1,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "canPause(address)": {
            "calls": 257,
            "min": 10907,
            "mean": 10907,
            "median": 10907,
            "max": 10907
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 313241,
            "mean": 313241,
            "median": 313241,
            "max": 313241
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "decimals()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 246188,
            "mean": 254724,
            "median": 254724,
            "max": 263261
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 146569,
            "mean": 147520,
            "median": 146569,
            "max": 188113
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 5565,
            "mean": 112734,
            "median": 113340,
            "max": 135119
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25073,
            "mean": 224543,
            "median": 225286,
            "max": 232286
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 24191,
            "mean": 24191,
            "median": 24191,
            "max": 24191
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 25934,
            "mean": 25934,
            "median": 25934,
            "max": 25934
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 246266,
            "mean": 246266,
            "median": 246266,
            "max": 246266
          },
          "name()": {
            "calls": 1,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "nonces(address)": {
            "calls": 3,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "paused()": {
            "calls": 2,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 409,
            "mean": 28958,
            "median": 31208,
            "max": 55257
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 15112,
            "mean": 15112,
            "median": 15112,
            "max": 15112
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 28291,
            "mean": 97792,
            "median": 97792,
            "max": 167294
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 122384,
            "mean": 122384,
            "median": 122384,
            "max": 122384
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 151663,
            "mean": 151663,
            "median": 151663,
            "max": 151663
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 10900,
            "mean": 11515,
            "median": 10900,
            "max": 34037
          },
          "symbol()": {
            "calls": 1,
            "min": 2675,
            "mean": 2675,
            "median": 2675,
            "max": 2675
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 2605,
            "mean": 2605,
            "median": 2605,
            "max": 2605
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 30102,
            "mean": 30102,
            "median": 30102,
            "max": 30102
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 11874
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 9,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 3,
            "min": 114498,
            "mean": 175373,
            "median": 114498,
            "max": 297124
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 1596482,
            "mean": 1596482,
            "median": 1596482,
            "max": 1596482
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 773,
            "min": 1596178,
            "mean": 4599545,
            "median": 4607343,
            "max": 4607343
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 157986,
            "mean": 157986,
            "median": 157986,
            "max": 157986
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 15956,
            "mean": 65133,
            "median": 65133,
            "max": 114310
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 54204,
            "mean": 54204,
            "median": 54204,
            "max": 54204
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 5493,
            "mean": 25472,
            "median": 5531,
            "max": 55422
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 17475,
            "mean": 29451,
            "median": 19893,
            "max": 60544
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 34563,
            "mean": 34563,
            "median": 34563,
            "max": 34563
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 101204,
            "mean": 101204,
            "median": 101204,
            "max": 101204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7670
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2602,
            "min": 2618,
            "mean": 5743,
            "median": 4618,
            "max": 28386
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 10643,
            "mean": 10643,
            "median": 10643,
            "max": 10643
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 10650,
            "mean": 10650,
            "median": 10650,
            "max": 10650
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 8,
            "min": 8294,
            "mean": 8294,
            "median": 8294,
            "max": 8294
          },
          "getIsVirtualAccActive(address)": {
            "calls": 7531,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 10648,
            "mean": 10648,
            "median": 10648,
            "max": 10648
          },
          "getPaused(address)": {
            "calls": 7798,
            "min": 10700,
            "mean": 10732,
            "median": 10733,
            "max": 10733
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 10657,
            "mean": 10657,
            "median": 10657,
            "max": 10657
          },
          "getReserveConfigurationData(address)": {
            "calls": 9127,
            "min": 10909,
            "mean": 10941,
            "median": 10942,
            "max": 10942
          },
          "getReserveTokensAddresses(address)": {
            "calls": 7648,
            "min": 13901,
            "mean": 13901,
            "median": 13901,
            "max": 13932
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 10655,
            "mean": 10655,
            "median": 10655,
            "max": 10655
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 4521,
            "mean": 22305,
            "median": 28233,
            "max": 28233
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 61069,
            "mean": 61286,
            "median": 61283,
            "max": 64603
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 10535,
            "mean": 10535,
            "median": 10535,
            "max": 10535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 7641
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 32221,
            "mean": 32221,
            "median": 32221,
            "max": 32221
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 52590,
            "mean": 52590,
            "median": 52590,
            "max": 52590
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32261,
            "mean": 32261,
            "median": 32261,
            "max": 32261
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32234,
            "mean": 32234,
            "median": 32234,
            "max": 32234
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32380,
            "mean": 32380,
            "median": 32380,
            "max": 32380
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 32103,
            "mean": 32103,
            "median": 32103,
            "max": 32103
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 32142,
            "mean": 32142,
            "median": 32142,
            "max": 32142
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32296,
            "mean": 32296,
            "median": 32296,
            "max": 32296
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 32095,
            "mean": 32123,
            "median": 32123,
            "max": 32151
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1901902,
          "size": 8774
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 150506,
            "mean": 150640,
            "median": 150640,
            "max": 150774
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 122670,
            "mean": 152064,
            "median": 153294,
            "max": 190258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 4989
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 220413,
            "mean": 224191,
            "median": 224191,
            "max": 227970
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 185507,
            "mean": 221693,
            "median": 225714,
            "max": 225714
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33454,
            "mean": 33454,
            "median": 33454,
            "max": 33454
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52054,
            "mean": 52054,
            "median": 52054,
            "max": 52054
          },
          "fallback()": {
            "calls": 2,
            "min": 21490,
            "mean": 21490,
            "median": 21490,
            "max": 21490
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "owner()": {
            "calls": 2,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "receive()": {
            "calls": 1,
            "min": 21165,
            "mean": 21165,
            "median": 21165,
            "max": 21165
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 141012,
            "mean": 147090,
            "median": 143992,
            "max": 158612
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 204159,
            "mean": 212071,
            "median": 205603,
            "max": 226453
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 216366,
            "mean": 234410,
            "median": 240596,
            "max": 246269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2549958,
          "size": 12703
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2429,
            "mean": 2431,
            "median": 2429,
            "max": 3028
          },
          "POOL()": {
            "calls": 107,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 10373,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 252,
            "mean": 252,
            "median": 252,
            "max": 252
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 7621,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24451,
            "mean": 24451,
            "median": 24451,
            "max": 24451
          },
          "balanceOf(address)": {
            "calls": 18093,
            "min": 2157,
            "mean": 10929,
            "median": 17157,
            "max": 17371
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 359,
            "mean": 38429,
            "median": 32809,
            "max": 58909
          },
          "decimals()": {
            "calls": 8321,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7494,
            "mean": 7494,
            "median": 7494,
            "max": 7494
          },
          "getIncentivesController()": {
            "calls": 7529,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 659,
            "mean": 4398,
            "median": 4659,
            "max": 4659
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7507,
            "mean": 21497,
            "median": 24607,
            "max": 24607
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 43123,
            "min": 121626,
            "mean": 205119,
            "median": 206650,
            "max": 296726
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 375,
            "mean": 56941,
            "median": 60481,
            "max": 67750
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 296,
            "mean": 39781,
            "median": 43269,
            "max": 60369
          },
          "name()": {
            "calls": 7705,
            "min": 2659,
            "mean": 4894,
            "median": 2694,
            "max": 9215
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2496,
            "mean": 2496,
            "median": 2496,
            "max": 2496
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 388,
            "mean": 23370,
            "median": 8476,
            "max": 52635
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 10856,
            "mean": 23117,
            "median": 13000,
            "max": 45497
          },
          "scaledBalanceOf(address)": {
            "calls": 26206,
            "min": 569,
            "mean": 2318,
            "median": 2569,
            "max": 2569
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 339,
            "mean": 1546,
            "median": 2339,
            "max": 2339
          },
          "symbol()": {
            "calls": 7686,
            "min": 2600,
            "mean": 4864,
            "median": 2638,
            "max": 9170
          },
          "totalSupply()": {
            "calls": 9990,
            "min": 380,
            "mean": 5105,
            "median": 5934,
            "max": 17148
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 421,
            "mean": 95127,
            "median": 100154,
            "max": 165488
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2685,
            "mean": 86674,
            "median": 103342,
            "max": 135942
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 360,
            "mean": 26817,
            "median": 31433,
            "max": 38371
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 337,
            "mean": 27379,
            "median": 32966,
            "max": 32966
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 20423
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 2622,
            "mean": 24347,
            "median": 24422,
            "max": 24422
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 174090,
            "mean": 181021,
            "median": 179758,
            "max": 223030
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 179868,
            "mean": 179868,
            "median": 179868,
            "max": 179868
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 5644,
            "mean": 27362,
            "median": 48503,
            "max": 48503
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 23309,
            "mean": 23309,
            "median": 23309,
            "max": 23309
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 6201,
            "mean": 6201,
            "median": 6201,
            "max": 6201
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 5562,
            "mean": 5840,
            "median": 5562,
            "max": 77263
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 334,
            "mean": 334,
            "median": 334,
            "max": 334
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 518,
            "mean": 536,
            "median": 518,
            "max": 2518
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 2540,
            "mean": 2540,
            "median": 2540,
            "max": 2540
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 2518,
            "mean": 2518,
            "median": 2518,
            "max": 2518
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 314,
            "mean": 314,
            "median": 314,
            "max": 314
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 327,
            "mean": 327,
            "median": 327,
            "max": 327
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 551,
            "mean": 597,
            "median": 551,
            "max": 2551
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 4620,
            "mean": 19652,
            "median": 20620,
            "max": 23120
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 664,
            "mean": 694,
            "median": 664,
            "max": 4664
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 709,
            "mean": 3386,
            "median": 3886,
            "max": 5064
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "getReservesList()": {
            "calls": 2,
            "min": 10256,
            "mean": 10256,
            "median": 10256,
            "max": 10256
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 287,
            "mean": 287,
            "median": 287,
            "max": 287
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 75906,
            "mean": 75906,
            "median": 75906,
            "max": 75906
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 2526,
            "mean": 2526,
            "median": 2526,
            "max": 2526
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 5579,
            "mean": 37960,
            "median": 5579,
            "max": 142516
          },
          "initialize(address)": {
            "calls": 69,
            "min": 44849,
            "mean": 44849,
            "median": 44849,
            "max": 44849
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2607,
            "mean": 2607,
            "median": 2607,
            "max": 2607
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 326995,
            "mean": 326995,
            "median": 326995,
            "max": 326995
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 70136,
            "mean": 71364,
            "median": 71364,
            "max": 72592
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 207695,
            "mean": 207695,
            "median": 207695,
            "max": 207695
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7259,
            "mean": 7259,
            "median": 7259,
            "max": 7259
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 115539,
            "mean": 115539,
            "median": 115539,
            "max": 115539
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 108695,
            "mean": 108695,
            "median": 108695,
            "max": 108695
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 116486,
            "mean": 116486,
            "median": 116486,
            "max": 116486
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 152841,
            "mean": 159229,
            "median": 159033,
            "max": 161355
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46427,
            "mean": 46427,
            "median": 46427,
            "max": 46427
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 3525,
            "mean": 4799,
            "median": 5559,
            "max": 14525
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 1428,
            "mean": 3753,
            "median": 1428,
            "max": 23576
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 5576,
            "mean": 10505,
            "median": 9953,
            "max": 16141
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 17664,
            "mean": 37859,
            "median": 37110,
            "max": 78904
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2671,
            "mean": 2814,
            "median": 2671,
            "max": 39440
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 9143,
            "mean": 10540,
            "median": 9143,
            "max": 55515
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 24985,
            "mean": 24985,
            "median": 24985,
            "max": 24985
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 2676,
            "mean": 3394,
            "median": 2676,
            "max": 54494
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 143644,
            "mean": 194435,
            "median": 194944,
            "max": 194944
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 197103,
            "mean": 197103,
            "median": 197103,
            "max": 197103
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 245140,
            "mean": 245140,
            "median": 245140,
            "max": 245140
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 6667,
            "mean": 13300,
            "median": 6667,
            "max": 26567
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 11423,
            "mean": 11423,
            "median": 11423,
            "max": 11423
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 5537,
            "mean": 8846,
            "median": 5537,
            "max": 21127
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 110361,
            "mean": 112758,
            "median": 112758,
            "max": 115155
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3721121,
          "size": 16910
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4627,
            "min": 8930,
            "mean": 21236,
            "median": 9087,
            "max": 77423
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 15877,
            "mean": 26756,
            "median": 28152,
            "max": 37626
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 12971,
            "mean": 13784,
            "median": 12971,
            "max": 98720
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2484,
            "mean": 2484,
            "median": 2484,
            "max": 2484
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2824,
            "min": 15991,
            "mean": 21879936,
            "median": 1517024,
            "max": 197845734
          },
          "initialize(address)": {
            "calls": 805,
            "min": 71820,
            "mean": 89675,
            "median": 89720,
            "max": 89720
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1812,
            "min": 12825,
            "mean": 76626,
            "median": 76725,
            "max": 88466
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3897,
            "min": 12835,
            "mean": 62943,
            "median": 71369,
            "max": 71382
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2584,
            "min": 8385,
            "mean": 9304,
            "median": 8394,
            "max": 41342
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2335,
            "min": 8001,
            "mean": 8271,
            "median": 8010,
            "max": 40958
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2592,
            "min": 15870,
            "mean": 26339,
            "median": 24937,
            "max": 76993
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3383,
            "min": 16078,
            "mean": 73180,
            "median": 78060,
            "max": 78108
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2326,
            "min": 8381,
            "mean": 8525,
            "median": 8390,
            "max": 41338
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 15862,
            "mean": 16230,
            "median": 15862,
            "max": 79048
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 15921,
            "mean": 53934,
            "median": 47522,
            "max": 93813
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 12991,
            "mean": 15385,
            "median": 12991,
            "max": 73780
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3348,
            "min": 8098,
            "mean": 15841,
            "median": 8255,
            "max": 38907
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2576,
            "min": 15881,
            "mean": 33004,
            "median": 28195,
            "max": 97033
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2831,
            "min": 8099,
            "mean": 13729,
            "median": 8108,
            "max": 41056
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 16292,
            "mean": 45318,
            "median": 49716,
            "max": 69628
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 16013,
            "mean": 26411,
            "median": 16013,
            "max": 86909
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 15924,
            "mean": 27932,
            "median": 39894,
            "max": 39894
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 13154,
            "mean": 35941,
            "median": 43173,
            "max": 45469
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2323,
            "min": 8409,
            "mean": 8557,
            "median": 8418,
            "max": 66107
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2847,
            "min": 8395,
            "mean": 12812,
            "median": 8404,
            "max": 41352
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 13022,
            "mean": 27287,
            "median": 13022,
            "max": 101820
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1061,
            "min": 12954,
            "mean": 24738,
            "median": 28501,
            "max": 33401
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 13015,
            "mean": 13359,
            "median": 13015,
            "max": 101556
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 3925274,
          "size": 18236
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6427,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 751,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 296,
            "mean": 296,
            "median": 296,
            "max": 296
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 45267,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 2638,
            "mean": 24363,
            "median": 24438,
            "max": 24438
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 16247,
            "mean": 200203,
            "median": 208328,
            "max": 276145
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3114,
            "min": 5600,
            "mean": 44879,
            "median": 48455,
            "max": 48455
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1810,
            "min": 1409,
            "mean": 23272,
            "median": 23309,
            "max": 23309
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3115,
            "min": 1401,
            "mean": 6193,
            "median": 6201,
            "max": 6201
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 25091,
            "mean": 185497,
            "median": 194703,
            "max": 194703
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 5562,
            "mean": 6346,
            "median": 5562,
            "max": 77236
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 5579,
            "mean": 49946,
            "median": 87655,
            "max": 95993
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 5969,
            "mean": 45206,
            "median": 47906,
            "max": 102240
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 23075,
            "mean": 78988,
            "median": 55481,
            "max": 436869
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 21281,
            "mean": 269688,
            "median": 148031,
            "max": 632919
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "getConfiguration(address)": {
            "calls": 48250,
            "min": 551,
            "mean": 1649,
            "median": 2551,
            "max": 2551
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1848,
            "min": 529,
            "mean": 2524,
            "median": 2529,
            "max": 2529
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4706,
            "min": 518,
            "mean": 2515,
            "median": 2518,
            "max": 2518
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 143,
            "min": 908,
            "mean": 2880,
            "median": 2908,
            "max": 2908
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 3214,
            "mean": 4536,
            "median": 5180,
            "max": 5214
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 34,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 296,
            "mean": 296,
            "median": 296,
            "max": 296
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5622,
            "min": 556,
            "mean": 1265,
            "median": 556,
            "max": 2556
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getReserveAToken(address)": {
            "calls": 19526,
            "min": 547,
            "mean": 2111,
            "median": 2547,
            "max": 2547
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2544,
            "mean": 2544,
            "median": 2544,
            "max": 2544
          },
          "getReserveData(address)": {
            "calls": 14619,
            "min": 2633,
            "mean": 16315,
            "median": 20633,
            "max": 23133
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 546,
            "mean": 2394,
            "median": 2546,
            "max": 2546
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42016,
            "min": 680,
            "mean": 2181,
            "median": 680,
            "max": 4894
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4080,
            "min": 682,
            "mean": 2412,
            "median": 682,
            "max": 5039
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 12346,
            "min": 552,
            "mean": 2258,
            "median": 2552,
            "max": 2552
          },
          "getReservesList()": {
            "calls": 3689,
            "min": 2232,
            "mean": 15486,
            "median": 10232,
            "max": 329665
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 2568,
            "mean": 60558,
            "median": 75896,
            "max": 116573
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 547,
            "mean": 1625,
            "median": 2547,
            "max": 2547
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 544,
            "mean": 1335,
            "median": 544,
            "max": 2544
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1953,
            "min": 532,
            "mean": 2261,
            "median": 2532,
            "max": 2532
          },
          "initReserve(address,address,address)": {
            "calls": 43470,
            "min": 5579,
            "mean": 148480,
            "median": 149945,
            "max": 167025
          },
          "initialize(address)": {
            "calls": 742,
            "min": 26210,
            "mean": 44814,
            "median": 44865,
            "max": 44865
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6386,
            "min": 20483,
            "mean": 231020,
            "median": 267039,
            "max": 402924
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 1770,
            "mean": 45991,
            "median": 48631,
            "max": 127532
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 140467,
            "mean": 206219,
            "median": 207412,
            "max": 411056
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7259,
            "mean": 7259,
            "median": 7259,
            "max": 7259
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 11692,
            "mean": 82659,
            "median": 86659,
            "max": 117278
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 68778,
            "mean": 113703,
            "median": 114107,
            "max": 123789
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 105670,
            "mean": 130192,
            "median": 119329,
            "max": 160974
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46432,
            "mean": 46432,
            "median": 46432,
            "max": 46432
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2411,
            "min": 3510,
            "mean": 3736,
            "median": 3510,
            "max": 14510
          },
          "setConfiguration(address,(uint256))": {
            "calls": 70753,
            "min": 1404,
            "mean": 15129,
            "median": 23404,
            "max": 23552
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3498,
            "min": 4187,
            "mean": 11402,
            "median": 11635,
            "max": 16135
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 4375,
            "mean": 42441,
            "median": 37093,
            "max": 103116
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2704,
            "mean": 3553,
            "median": 2704,
            "max": 105485
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 5091,
            "mean": 11952,
            "median": 9091,
            "max": 86153
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 2691,
            "mean": 3684,
            "median": 2691,
            "max": 54499
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 27698,
            "mean": 176500,
            "median": 194713,
            "max": 201982
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 103640,
            "mean": 183353,
            "median": 203549,
            "max": 242872
          },
          "syncIndexesState(address)": {
            "calls": 2198,
            "min": 6634,
            "mean": 13605,
            "median": 6634,
            "max": 45274
          },
          "syncRatesState(address)": {
            "calls": 2198,
            "min": 11429,
            "mean": 11488,
            "median": 11429,
            "max": 15929
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 991,
            "min": 5555,
            "mean": 17102,
            "median": 21145,
            "max": 21145
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 29024,
            "mean": 119700,
            "median": 121911,
            "max": 180290
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1784230,
          "size": 9052
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 7526,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 26851,
            "mean": 26851,
            "median": 26851,
            "max": 26851
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 522,
            "mean": 9183,
            "median": 4056,
            "max": 17438
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2615,
            "mean": 2615,
            "median": 2615,
            "max": 2615
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 10568,
            "mean": 22358,
            "median": 22368,
            "max": 22380
          },
          "decimals()": {
            "calls": 8298,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 369,
            "mean": 27910,
            "median": 20887,
            "max": 55087
          },
          "getIncentivesController()": {
            "calls": 7526,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 43123,
            "min": 121451,
            "mean": 205589,
            "median": 206472,
            "max": 296548
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 22338,
            "mean": 58438,
            "median": 58538,
            "max": 68107
          },
          "name()": {
            "calls": 7627,
            "min": 2637,
            "mean": 4927,
            "median": 4841,
            "max": 9193
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "scaledBalanceOf(address)": {
            "calls": 18709,
            "min": 554,
            "mean": 1832,
            "median": 2554,
            "max": 2554
          },
          "scaledTotalSupply()": {
            "calls": 44934,
            "min": 356,
            "mean": 2247,
            "median": 2356,
            "max": 2356
          },
          "symbol()": {
            "calls": 7620,
            "min": 2601,
            "mean": 4869,
            "median": 2639,
            "max": 9171
          },
          "totalSupply()": {
            "calls": 190,
            "min": 1965,
            "mean": 5150,
            "median": 5965,
            "max": 17322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3898
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 195,
            "mean": 195,
            "median": 195,
            "max": 195
          },
          "getAssetPrice(address)": {
            "calls": 58348,
            "min": 0,
            "mean": 5394,
            "median": 7590,
            "max": 14811
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5087,
            "mean": 7017,
            "median": 7983,
            "max": 7983
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "getSourceOfAsset(address)": {
            "calls": 1156,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 35862,
            "mean": 55883,
            "median": 58380,
            "max": 60416
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 58412,
            "mean": 58412,
            "median": 58412,
            "max": 58412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 766029,
          "size": 3474
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 199,
            "mean": 199,
            "median": 199,
            "max": 199
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42581,
            "min": 0,
            "mean": 3183,
            "median": 3078,
            "max": 3952
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2921,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 2980,
            "mean": 2980,
            "median": 2980,
            "max": 2980
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 2601,
            "mean": 2601,
            "median": 2601,
            "max": 2601
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1375,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2149,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "getVariableRateSlope1(address)": {
            "calls": 2153,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          },
          "getVariableRateSlope2(address)": {
            "calls": 1381,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 27399,
            "mean": 28455,
            "median": 27833,
            "max": 35337
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 27790,
            "mean": 31820,
            "median": 28420,
            "max": 35775
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 390896,
          "size": 1626
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 158,
            "mean": 158,
            "median": 158,
            "max": 158
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2290,
            "mean": 2290,
            "median": 2290,
            "max": 2290
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 9635,
            "mean": 10488,
            "median": 9635,
            "max": 11769
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 9622,
            "mean": 10475,
            "median": 9622,
            "max": 11756
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 34892,
            "mean": 37895,
            "median": 37895,
            "max": 40899
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 31949,
            "mean": 32568,
            "median": 32568,
            "max": 33187
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 425706,
          "size": 1871
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21278,
            "mean": 21278,
            "median": 21278,
            "max": 21278
          },
          "fallback()": {
            "calls": 534201,
            "min": 0,
            "mean": 134292,
            "median": 7309,
            "max": 199588927
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26617,
            "mean": 28523,
            "median": 28523,
            "max": 30429
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28485,
            "mean": 151542,
            "median": 186163,
            "max": 186163
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 595974,
          "size": 2726
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43547,
            "mean": 43547,
            "median": 43547,
            "max": 43547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 333022,
          "size": 1507
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43536,
            "mean": 43536,
            "median": 43536,
            "max": 43536
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43547,
            "mean": 43547,
            "median": 43547,
            "max": 43547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 3980648,
          "size": 18404
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 27727,
            "mean": 27727,
            "median": 27727,
            "max": 27727
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 111234,
          "size": 300
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          },
          "decimals()": {
            "calls": 94,
            "min": 147,
            "mean": 147,
            "median": 147,
            "max": 147
          },
          "latestAnswer()": {
            "calls": 56512,
            "min": 263,
            "mean": 1731,
            "median": 2263,
            "max": 2263
          },
          "name()": {
            "calls": 94,
            "min": 136,
            "mean": 136,
            "median": 136,
            "max": 136
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 126739,
          "size": 369
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25593,
            "mean": 38887,
            "median": 45529,
            "max": 45541
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 251763,
          "size": 1269
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4440,
            "mean": 4440,
            "median": 4440,
            "max": 4440
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 25979,
            "mean": 27175,
            "median": 25979,
            "max": 45891
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 408904,
          "size": 1681
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133133,
            "mean": 133133,
            "median": 133133,
            "max": 133133
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133169,
            "mean": 133182,
            "median": 133193,
            "max": 133193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 96315,
          "size": 321
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1049361,
          "size": 6194
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 570,
            "mean": 1681,
            "median": 2570,
            "max": 2570
          },
          "approve(address,uint256)": {
            "calls": 23018,
            "min": 26102,
            "mean": 45593,
            "median": 46146,
            "max": 46386
          },
          "balanceOf(address)": {
            "calls": 89433,
            "min": 504,
            "mean": 2502,
            "median": 2504,
            "max": 2504
          },
          "decimals()": {
            "calls": 76093,
            "min": 310,
            "mean": 2304,
            "median": 2310,
            "max": 2310
          },
          "mint(address,uint256)": {
            "calls": 6464,
            "min": 36101,
            "mean": 62233,
            "median": 70313,
            "max": 70421
          },
          "name()": {
            "calls": 2080,
            "min": 2598,
            "mean": 2598,
            "median": 2598,
            "max": 2598
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 75643,
            "mean": 75703,
            "median": 75691,
            "max": 75847
          },
          "symbol()": {
            "calls": 96,
            "min": 2641,
            "mean": 2641,
            "median": 2641,
            "max": 2641
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46554,
            "mean": 50646,
            "median": 51330,
            "max": 51330
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28431,
            "mean": 28431,
            "median": 28431,
            "max": 28431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 107071,
          "size": 278
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 430,
            "min": 147,
            "mean": 147,
            "median": 147,
            "max": 147
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 669,
            "min": 153,
            "mean": 153,
            "median": 153,
            "max": 153
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 242,
            "mean": 293,
            "median": 297,
            "max": 297
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 212,
            "mean": 250,
            "median": 269,
            "max": 269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 203303,
          "size": 725
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "HALF_WAD()": {
            "calls": 431,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "RAY()": {
            "calls": 1,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          },
          "WAD()": {
            "calls": 647,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "WAD_RAY_RATIO()": {
            "calls": 1766,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 295,
            "mean": 343,
            "median": 351,
            "max": 351
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 263,
            "mean": 310,
            "median": 332,
            "max": 332
          },
          "wadToRay(uint256)": {
            "calls": 489,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2615488,
          "size": 13006
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 53799,
            "mean": 53799,
            "median": 53799,
            "max": 53799
          },
          "name()": {
            "calls": 1,
            "min": 2694,
            "mean": 2694,
            "median": 2694,
            "max": 2694
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67644,
            "mean": 67644,
            "median": 67644,
            "max": 67644
          },
          "symbol()": {
            "calls": 1,
            "min": 2619,
            "mean": 2619,
            "median": 2619,
            "max": 2619
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 60651,
            "mean": 60651,
            "median": 60651,
            "max": 60651
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1784230,
          "size": 9052
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 53610,
            "mean": 53610,
            "median": 53610,
            "max": 53610
          },
          "name()": {
            "calls": 1,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "symbol()": {
            "calls": 1,
            "min": 2639,
            "mean": 2639,
            "median": 2639,
            "max": 2639
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 462385,
          "size": 1829
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 156486,
            "mean": 156486,
            "median": 156486,
            "max": 156486
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5207,
            "mean": 5207,
            "median": 5207,
            "max": 5207
          },
          "text()": {
            "calls": 6,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "value()": {
            "calls": 7,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4480,
            "mean": 4480,
            "median": 4480,
            "max": 4480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 463255,
          "size": 1833
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51092,
            "mean": 51092,
            "median": 51092,
            "max": 51092
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5207,
            "mean": 5207,
            "median": 5207,
            "max": 5207
          },
          "text()": {
            "calls": 2,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "value()": {
            "calls": 4,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4480,
            "mean": 4480,
            "median": 4480,
            "max": 4480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132229,
          "size": 300
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 24617,
            "mean": 24617,
            "median": 24617,
            "max": 24617
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 133093,
          "size": 304
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 7526,
            "mean": 7526,
            "median": 7526,
            "max": 7526
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 924952,
          "size": 4306
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1626,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 803,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 50596,
            "mean": 50596,
            "median": 50596,
            "max": 50596
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 50613,
            "mean": 50613,
            "median": 50613,
            "max": 50613
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50603,
            "mean": 50603,
            "median": 50603,
            "max": 50603
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 39155,
            "mean": 47747,
            "median": 50612,
            "max": 50612
          },
          "addPoolAdmin(address)": {
            "calls": 793,
            "min": 50592,
            "mean": 50603,
            "median": 50604,
            "max": 50604
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 50619,
            "mean": 50619,
            "median": 50619,
            "max": 50619
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 39662,
            "mean": 49686,
            "median": 51119,
            "max": 51119
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "isAssetListingAdmin(address)": {
            "calls": 3888,
            "min": 614,
            "mean": 2215,
            "median": 2614,
            "max": 2614
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2607,
            "mean": 2607,
            "median": 2607,
            "max": 2607
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 2638,
            "mean": 2638,
            "median": 2638,
            "max": 2638
          },
          "isPoolAdmin(address)": {
            "calls": 56680,
            "min": 616,
            "mean": 1705,
            "median": 2616,
            "max": 2616
          },
          "isRiskAdmin(address)": {
            "calls": 41125,
            "min": 607,
            "mean": 1517,
            "median": 607,
            "max": 2607
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 28704,
            "mean": 28704,
            "median": 28704,
            "max": 28704
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 28711,
            "mean": 28711,
            "median": 28711,
            "max": 28711
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 28687,
            "mean": 28687,
            "median": 28687,
            "max": 28687
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 28710,
            "mean": 33936,
            "median": 33936,
            "max": 39162
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 28697,
            "mean": 28697,
            "median": 28697,
            "max": 28697
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28693,
            "mean": 28693,
            "median": 28693,
            "max": 28693
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 37578,
            "mean": 46861,
            "median": 48718,
            "max": 48718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1658616,
          "size": 8597
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1090,
            "min": 363,
            "mean": 889,
            "median": 363,
            "max": 2363
          },
          "getACLManager()": {
            "calls": 51857,
            "min": 341,
            "mean": 1345,
            "median": 2341,
            "max": 2341
          },
          "getAddress(bytes32)": {
            "calls": 18713,
            "min": 419,
            "mean": 1947,
            "median": 2419,
            "max": 2419
          },
          "getMarketId()": {
            "calls": 6,
            "min": 2640,
            "mean": 2640,
            "median": 2640,
            "max": 2640
          },
          "getPool()": {
            "calls": 2627,
            "min": 347,
            "mean": 1071,
            "median": 347,
            "max": 2347
          },
          "getPoolConfigurator()": {
            "calls": 192698,
            "min": 378,
            "mean": 703,
            "median": 378,
            "max": 2378
          },
          "getPoolDataProvider()": {
            "calls": 2640,
            "min": 352,
            "mean": 1183,
            "median": 352,
            "max": 2352
          },
          "getPriceOracle()": {
            "calls": 33085,
            "min": 369,
            "mean": 2224,
            "median": 2369,
            "max": 2369
          },
          "getPriceOracleSentinel()": {
            "calls": 15843,
            "min": 362,
            "mean": 2361,
            "median": 2362,
            "max": 2362
          },
          "owner()": {
            "calls": 806,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 23861,
            "mean": 46841,
            "median": 47485,
            "max": 47485
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 23898,
            "mean": 37336,
            "median": 38966,
            "max": 47516
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24396,
            "mean": 48028,
            "median": 48142,
            "max": 48418
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24154,
            "mean": 211513,
            "median": 49580,
            "max": 479725
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24214,
            "mean": 27760,
            "median": 27760,
            "max": 31307
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 23860,
            "mean": 272483,
            "median": 280200,
            "max": 505671
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 23900,
            "mean": 37330,
            "median": 38957,
            "max": 47507
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 23862,
            "mean": 259004,
            "median": 266720,
            "max": 478713
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 23894,
            "mean": 37332,
            "median": 38962,
            "max": 47512
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 23912,
            "mean": 40744,
            "median": 47531,
            "max": 47531
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2416
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2431,
            "mean": 4688,
            "median": 4685,
            "max": 6956
          },
          "owner()": {
            "calls": 803,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 23955,
            "mean": 103579,
            "median": 119504,
            "max": 119504
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 25977,
            "mean": 38504,
            "median": 39544,
            "max": 48951
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 792250,
          "size": 3776
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 205189,
            "mean": 278253,
            "median": 278224,
            "max": 283663
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "owner()": {
            "calls": 2,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 58112,
            "mean": 58112,
            "median": 58112,
            "max": 58112
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43644,
            "mean": 43644,
            "median": 43644,
            "max": 43644
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48294,
            "mean": 48301,
            "median": 48306,
            "max": 48306
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 57298,
            "mean": 57298,
            "median": 57298,
            "max": 57298
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46105,
            "mean": 46105,
            "median": 46105,
            "max": 46105
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28568,
            "mean": 28568,
            "median": 28568,
            "max": 28568
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 43727,
            "mean": 43727,
            "median": 43727,
            "max": 43727
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3301357,
          "size": 15125
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 806,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 86555,
            "mean": 86555,
            "median": 86555,
            "max": 86555
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 88795,
            "mean": 88795,
            "median": 88795,
            "max": 88795
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 86482,
            "mean": 86482,
            "median": 86482,
            "max": 86482
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 729,
            "min": 658,
            "mean": 72506,
            "median": 80391,
            "max": 114660
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 83561,
            "mean": 83561,
            "median": 83561,
            "max": 83561
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 81270,
            "mean": 81270,
            "median": 81270,
            "max": 81270
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 168652,
            "mean": 241728,
            "median": 241711,
            "max": 247126
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 26420,
            "mean": 26420,
            "median": 26420,
            "max": 26420
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2514,
            "mean": 2514,
            "median": 2514,
            "max": 2514
          },
          "getAssetIndex(address,address)": {
            "calls": 9783,
            "min": 2168,
            "mean": 9801,
            "median": 10223,
            "max": 15360
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2513,
            "mean": 2513,
            "median": 2513,
            "max": 2513
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 2648,
            "mean": 5015,
            "median": 5098,
            "max": 7543
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 3312,
            "mean": 3312,
            "median": 3312,
            "max": 3312
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 4731,
            "mean": 4731,
            "median": 4731,
            "max": 4731
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2505,
            "mean": 2505,
            "median": 2505,
            "max": 2505
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 6960,
            "mean": 6960,
            "median": 6960,
            "max": 6960
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 10834,
            "mean": 16270,
            "median": 16156,
            "max": 21184
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 534,
            "mean": 2160,
            "median": 2534,
            "max": 36406
          },
          "initialize(address)": {
            "calls": 803,
            "min": 24762,
            "mean": 24763,
            "median": 24762,
            "max": 25920
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24043,
            "mean": 24043,
            "median": 24043,
            "max": 24043
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 9330,
            "mean": 9330,
            "median": 9330,
            "max": 9330
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 21705,
            "mean": 21705,
            "median": 21705,
            "max": 21705
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12020,
            "mean": 12020,
            "median": 12020,
            "max": 12020
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 9612,
            "mean": 9612,
            "median": 9612,
            "max": 9612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 296988,
          "size": 1402
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 192,
            "mean": 192,
            "median": 192,
            "max": 192
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 449162,
          "size": 2466
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25536,
            "mean": 25536,
            "median": 25536,
            "max": 25536
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52121,
            "mean": 52121,
            "median": 52121,
            "max": 52121
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 26571,
            "mean": 26571,
            "median": 26571,
            "max": 26571
          },
          "renewApproval()": {
            "calls": 1,
            "min": 27322,
            "mean": 27322,
            "median": 27322,
            "max": 27322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1458076,
          "size": 6595
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2516,
            "mean": 16042,
            "median": 16042,
            "max": 29568
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19321,
            "mean": 19376,
            "median": 19376,
            "max": 19431
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7457,
            "mean": 41541,
            "median": 34469,
            "max": 89770
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2491,
            "mean": 121736,
            "median": 205165,
            "max": 205165
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2467,
            "mean": 7551,
            "median": 2467,
            "max": 17721
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7024,
            "mean": 18088,
            "median": 18088,
            "max": 29153
          },
          "initialize(uint256,address)": {
            "calls": 873,
            "min": 94786,
            "mean": 115792,
            "median": 116907,
            "max": 116907
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "receive()": {
            "calls": 4,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2536,
            "mean": 18757,
            "median": 18757,
            "max": 34978
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7479,
            "mean": 34839,
            "median": 19855,
            "max": 86515
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 489465,
          "size": 2249
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 154,
            "mean": 154,
            "median": 154,
            "max": 154
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 192,
            "mean": 192,
            "median": 192,
            "max": 192
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23567,
            "mean": 91399,
            "median": 92395,
            "max": 92395
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24072,
            "mean": 129642,
            "median": 132286,
            "max": 132286
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 3532811,
          "size": 25131
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 826,
            "min": 6540,
            "mean": 6540,
            "median": 6540,
            "max": 6540
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 2878038,
          "size": 21044
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 801,
            "min": 6540,
            "mean": 6540,
            "median": 6540,
            "max": 6540
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 6592501,
          "size": 32296
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 776,
            "min": 17255,
            "mean": 17255,
            "median": 17255,
            "max": 17255
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 8292216,
          "size": 36440
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 776,
            "min": 8681,
            "mean": 8681,
            "median": 8681,
            "max": 8681
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8222787,
          "size": 37871
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4399,
            "mean": 4399,
            "median": 4399,
            "max": 4399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 886383,
          "size": 5673
        },
        "functions": {
          "getMiscReport()": {
            "calls": 826,
            "min": 4399,
            "mean": 4399,
            "median": 4399,
            "max": 4399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5028692,
          "size": 25795
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6540,
            "mean": 6540,
            "median": 6540,
            "max": 6540
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 7600286,
          "size": 37769
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 826,
            "min": 17255,
            "mean": 17255,
            "median": 17255,
            "max": 17255
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 7749017,
          "size": 35684
        },
        "functions": {
          "getPoolReport()": {
            "calls": 745,
            "min": 4399,
            "mean": 4399,
            "median": 4399,
            "max": 4399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5603754,
          "size": 30521
        },
        "functions": {
          "getInitialReport()": {
            "calls": 826,
            "min": 6603,
            "mean": 6603,
            "median": 6603,
            "max": 6603
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 776,
            "min": 648360,
            "mean": 650617,
            "median": 648360,
            "max": 769164
          },
          "setProtocolDataProvider(address)": {
            "calls": 801,
            "min": 59020,
            "mean": 59031,
            "median": 59032,
            "max": 59032
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 803,
            "min": 2128843,
            "mean": 2593094,
            "median": 2593180,
            "max": 2618747
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 801,
            "min": 46407,
            "mean": 46411,
            "median": 46407,
            "max": 46479
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4425846,
          "size": 22210
        },
        "functions": {
          "getTokensReport()": {
            "calls": 801,
            "min": 4399,
            "mean": 4399,
            "median": 4399,
            "max": 4399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 2044038,
          "size": 9427
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 55297,
            "mean": 104756,
            "median": 55582,
            "max": 163340
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 33410,
            "mean": 81925,
            "median": 56007,
            "max": 167041
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 54871,
            "mean": 104710,
            "median": 55156,
            "max": 162914
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 45778,
            "mean": 90324,
            "median": 115715,
            "max": 125318
          },
          "getClaimableRewards(address,address)": {
            "calls": 3469,
            "min": 24845,
            "mean": 27604,
            "median": 27655,
            "max": 27669
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 26366,
            "mean": 31652,
            "median": 31688,
            "max": 31701
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1160,
            "min": 2578,
            "mean": 2578,
            "median": 2578,
            "max": 2578
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "mint(address,uint256)": {
            "calls": 2468,
            "min": 53170,
            "mean": 94795,
            "median": 95450,
            "max": 98442
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 78208,
            "mean": 78208,
            "median": 78208,
            "max": 78208
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 113790,
            "mean": 113790,
            "median": 113790,
            "max": 114075
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 4720,
            "mean": 4720,
            "median": 4720,
            "max": 4720
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 56997,
            "mean": 72555,
            "median": 68441,
            "max": 99700
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1062830,
          "size": 6256
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 980,
            "min": 2580,
            "mean": 3628,
            "median": 4580,
            "max": 4580
          },
          "mint(address,uint256)": {
            "calls": 2468,
            "min": 50890,
            "mean": 67135,
            "median": 68278,
            "max": 68278
          },
          "scaledTotalSupply()": {
            "calls": 12085,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "transfer(address,uint256)": {
            "calls": 2468,
            "min": 29438,
            "mean": 45475,
            "median": 46610,
            "max": 46610
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2667107,
          "size": 12368
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26166,
            "mean": 45519,
            "median": 46114,
            "max": 46210
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 15035,
            "mean": 15035,
            "median": 15035,
            "max": 15035
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 15072,
            "mean": 15072,
            "median": 15072,
            "max": 15072
          },
          "decimals()": {
            "calls": 256,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 56308,
            "mean": 183372,
            "median": 195721,
            "max": 200849
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 70967,
            "mean": 230917,
            "median": 250591,
            "max": 335427
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 20977,
            "mean": 20977,
            "median": 20977,
            "max": 20977
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 34337,
            "mean": 46198,
            "median": 46337,
            "max": 46337
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 34607,
            "mean": 34607,
            "median": 34607,
            "max": 34607
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 12854,
            "mean": 20398,
            "median": 24165,
            "max": 24177
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 63652,
            "mean": 177495,
            "median": 177459,
            "max": 291266
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 130815,
            "mean": 130815,
            "median": 130815,
            "max": 130815
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 15109,
            "mean": 15109,
            "median": 15109,
            "max": 15109
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 15063,
            "mean": 15063,
            "median": 15063,
            "max": 15063
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 15051,
            "mean": 15051,
            "median": 15051,
            "max": 15051
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 15144,
            "mean": 15144,
            "median": 15144,
            "max": 15144
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 154241,
            "mean": 154456,
            "median": 154505,
            "max": 154589
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 39553,
            "mean": 111633,
            "median": 147365,
            "max": 148036
          },
          "totalAssets()": {
            "calls": 258,
            "min": 17071,
            "mean": 17071,
            "median": 17071,
            "max": 17071
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 47728,
            "mean": 102104,
            "median": 102065,
            "max": 156402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 1556394,
          "size": 7239
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 183466,
            "mean": 183466,
            "median": 183466,
            "max": 183466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 1512137,
          "size": 6949
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 139383,
            "mean": 139383,
            "median": 139383,
            "max": 139383
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 1511489,
          "size": 6946
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 41030,
            "mean": 41030,
            "median": 41030,
            "max": 41030
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 1492102,
          "size": 6850
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 79050,
            "mean": 79050,
            "median": 79050,
            "max": 79050
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 1513637,
          "size": 6956
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80496,
            "mean": 80496,
            "median": 80496,
            "max": 80496
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 1512341,
          "size": 6950
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 30567,
            "mean": 30567,
            "median": 30567,
            "max": 30567
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 1513637,
          "size": 6956
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80496,
            "mean": 80496,
            "median": 80496,
            "max": 80496
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 1514508,
          "size": 6960
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 30523,
            "mean": 30523,
            "median": 30523,
            "max": 30523
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 1588881,
          "size": 7530
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 324347,
            "mean": 324347,
            "median": 324347,
            "max": 324347
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 1489956,
          "size": 6787
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 85720,
            "mean": 85720,
            "median": 85720,
            "max": 85720
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 1489584,
          "size": 6785
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 47405,
            "mean": 47405,
            "median": 47405,
            "max": 47405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 1488934,
          "size": 6782
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 42654,
            "mean": 42654,
            "median": 42654,
            "max": 42654
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 1581940,
          "size": 7351
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1583555,
            "mean": 1583555,
            "median": 1583555,
            "max": 1583555
          },
          "newListings()": {
            "calls": 4,
            "min": 2010,
            "mean": 2010,
            "median": 2010,
            "max": 2010
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 1654717,
          "size": 7860
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1583576,
            "mean": 1583576,
            "median": 1583576,
            "max": 1583576
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1756379,
          "size": 8350
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1700054,
            "mean": 1700054,
            "median": 1700054,
            "max": 1700054
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 1684234,
          "size": 7844
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1700032,
            "mean": 1700032,
            "median": 1700032,
            "max": 1700032
          },
          "newListings()": {
            "calls": 4,
            "min": 2010,
            "mean": 2010,
            "median": 2010,
            "max": 2010
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 1523278,
          "size": 7086
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 59357,
            "mean": 59357,
            "median": 59357,
            "max": 59357
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 1514532,
          "size": 6960
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 126270,
            "mean": 126270,
            "median": 126270,
            "max": 126270
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 885,
            "mean": 885,
            "median": 885,
            "max": 885
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1788763,
          "size": 9073
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "POOL()": {
            "calls": 2818,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21649,
            "mean": 21649,
            "median": 21649,
            "max": 21649
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 26851,
            "mean": 26851,
            "median": 26851,
            "max": 26851
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 26372,
            "mean": 26372,
            "median": 26372,
            "max": 26372
          },
          "decimals()": {
            "calls": 2818,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21648,
            "mean": 21648,
            "median": 21648,
            "max": 21648
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21652,
            "mean": 21652,
            "median": 21652,
            "max": 21652
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 45459,
            "mean": 179698,
            "median": 206466,
            "max": 296542
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 60555,
            "mean": 62947,
            "median": 60555,
            "max": 70124
          },
          "name()": {
            "calls": 2818,
            "min": 2637,
            "mean": 3672,
            "median": 2672,
            "max": 9193
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "symbol()": {
            "calls": 2818,
            "min": 2585,
            "mean": 3641,
            "median": 2623,
            "max": 9155
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21641,
            "mean": 21641,
            "median": 21641,
            "max": 21641
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 21829,
            "mean": 21829,
            "median": 21829,
            "max": 21829
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 82743624,
          "size": 411706
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 74517,
            "mean": 74712,
            "median": 74805,
            "max": 74815
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 76688,
            "mean": 76688,
            "median": 76688,
            "max": 76688
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 143159,
            "mean": 143159,
            "median": 143159,
            "max": 143159
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 382080,
            "mean": 689029,
            "median": 742842,
            "max": 744858
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 633583,
            "mean": 633583,
            "median": 633583,
            "max": 633583
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 58694,
            "mean": 74412,
            "median": 74412,
            "max": 90131
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 61256,
            "mean": 72939,
            "median": 74927,
            "max": 74936
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 418865,
            "mean": 630341,
            "median": 630341,
            "max": 841818
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 472180,
            "mean": 492806,
            "median": 492656,
            "max": 513583
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 413597,
            "mean": 517895,
            "median": 543519,
            "max": 607432
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 549695,
            "mean": 587541,
            "median": 587541,
            "max": 625388
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 151029,
            "mean": 151029,
            "median": 151029,
            "max": 151029
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 122221,
            "mean": 130051,
            "median": 133967,
            "max": 133967
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 500053,
            "mean": 532447,
            "median": 521151,
            "max": 569353
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 541334,
            "mean": 541334,
            "median": 541334,
            "max": 541334
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 514859,
            "mean": 526430,
            "median": 514859,
            "max": 561144
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 35765,
            "mean": 36000,
            "median": 36137,
            "max": 36149
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 503027,
            "mean": 503027,
            "median": 503027,
            "max": 503027
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 520400,
            "mean": 520400,
            "median": 520400,
            "max": 520400
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 525452,
            "mean": 581313,
            "median": 529590,
            "max": 688899
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 503104,
            "mean": 539036,
            "median": 531678,
            "max": 595741
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 500532,
            "mean": 550895,
            "median": 546801,
            "max": 605353
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 537166,
            "mean": 537166,
            "median": 537166,
            "max": 537166
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 414914,
            "mean": 551512,
            "median": 607462,
            "max": 607462
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 384292,
            "mean": 488775,
            "median": 531829,
            "max": 550206
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 591478,
            "mean": 1057830,
            "median": 1199374,
            "max": 1206514
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 447109,
            "mean": 447109,
            "median": 447109,
            "max": 447109
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 628525,
            "mean": 628525,
            "median": 628525,
            "max": 628525
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 646937,
            "mean": 646937,
            "median": 646937,
            "max": 646937
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 126355,
          "size": 370
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 247,
            "mean": 1045,
            "median": 247,
            "max": 2247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 4129095,
          "size": 17873
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 768,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "WBTC_ADDRESS()": {
            "calls": 768,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "execute()": {
            "calls": 771,
            "min": 4520522,
            "mean": 4520613,
            "median": 4520621,
            "max": 4520621
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 83719,
          "size": 170
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 118751,
          "size": 332
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 140,
            "mean": 140,
            "median": 140,
            "max": 140
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3464634,
          "size": 16954
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24451,
            "mean": 24451,
            "median": 24451,
            "max": 24451
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 17164,
            "mean": 17327,
            "median": 17378,
            "max": 17378
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 44840,
            "mean": 70850,
            "median": 66666,
            "max": 83766
          },
          "delegate(address)": {
            "calls": 26,
            "min": 6141,
            "mean": 64576,
            "median": 67392,
            "max": 87292
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 25127,
            "mean": 44376,
            "median": 47072,
            "max": 59160
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5249,
            "mean": 6405,
            "median": 7411,
            "max": 7423
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5439,
            "mean": 8147,
            "median": 9773,
            "max": 9773
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 5250,
            "mean": 5400,
            "median": 5403,
            "max": 5406
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 6038,
            "mean": 6276,
            "median": 6344,
            "max": 6344
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 53821,
            "mean": 53821,
            "median": 53821,
            "max": 53821
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 29344,
            "mean": 53754,
            "median": 46444,
            "max": 85316
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2575,
            "mean": 2575,
            "median": 2575,
            "max": 2575
          },
          "totalSupply()": {
            "calls": 5,
            "min": 5934,
            "mean": 5934,
            "median": 5934,
            "max": 5934
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 75962,
            "mean": 109713,
            "median": 111072,
            "max": 129732
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 83202,
            "mean": 125908,
            "median": 121803,
            "max": 180774
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 36111,
            "mean": 68510,
            "median": 66110,
            "max": 113910
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 32914,
            "mean": 32914,
            "median": 32914,
            "max": 32914
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 392044,
          "size": 2016
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1132,
            "mean": 1132,
            "median": 1132,
            "max": 1132
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 54519,
          "size": 330
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 425,
            "mean": 1734,
            "median": 2925,
            "max": 2925
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "art-gobblers": {
    "solc": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 11014365,
          "size": 51684
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 3,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "governorWallet()": {
            "calls": 1,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "pages()": {
            "calls": 4,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 1,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "run()": {
            "calls": 7,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 11024851,
          "size": 51751
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 3,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "mintStart()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "pages()": {
            "calls": 4,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 1,
            "min": 494,
            "mean": 494,
            "median": 494,
            "max": 494
          },
          "run()": {
            "calls": 5,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4611156,
          "size": 23380
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 8275,
            "mean": 8275,
            "median": 8275,
            "max": 8275
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 1455,
            "mean": 1455,
            "median": 1455,
            "max": 1455
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 1125,
            "mean": 1125,
            "median": 1125,
            "max": 1125
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7717,
            "mean": 7717,
            "median": 7717,
            "max": 7717
          },
          "balanceOf(address)": {
            "calls": 2,
            "min": 3166,
            "mean": 3166,
            "median": 3166,
            "max": 3166
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 22611,
            "mean": 51621,
            "median": 25166,
            "max": 115686
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 984,
            "mean": 1433,
            "median": 1658,
            "max": 1658
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 1628,
            "mean": 2702,
            "median": 2908,
            "max": 2908
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3484,
            "mean": 3921,
            "median": 3938,
            "max": 3938
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2603,
            "mean": 2603,
            "median": 2603,
            "max": 2603
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 29625,
            "mean": 29758,
            "median": 29758,
            "max": 29891
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26550,
            "mean": 26550,
            "median": 26550,
            "max": 26550
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 46214,
            "mean": 46214,
            "median": 46214,
            "max": 46214
          },
          "mintStart()": {
            "calls": 1,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "owner()": {
            "calls": 1,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 29974,
            "mean": 29974,
            "median": 29974,
            "max": 29974
          },
          "targetPrice()": {
            "calls": 1,
            "min": 1320,
            "mean": 1320,
            "median": 1320,
            "max": 1320
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 5592,
            "mean": 7076,
            "median": 7819,
            "max": 7819
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 1038342,
          "size": 5575
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2569,
            "mean": 2569,
            "median": 2569,
            "max": 2569
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24227,
            "mean": 29060,
            "median": 29060,
            "max": 33893
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 34015,
            "mean": 34015,
            "median": 34015,
            "max": 34015
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13041,
            "min": 22010,
            "mean": 42060,
            "median": 28299,
            "max": 68195
          },
          "pages()": {
            "calls": 2,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 2046045,
          "size": 11172
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7602,
            "mean": 7602,
            "median": 7602,
            "max": 7602
          },
          "artGobblers()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "currentId()": {
            "calls": 2,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 468,
            "mean": 778,
            "median": 1012,
            "max": 1012
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 997,
            "mean": 1827,
            "median": 1842,
            "max": 1842
          },
          "goo()": {
            "calls": 2,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26880,
            "mean": 70865,
            "median": 58057,
            "max": 292408
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 12983,
            "min": 0,
            "mean": 67531,
            "median": 68821,
            "max": 103021
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "pagePrice()": {
            "calls": 12983,
            "min": 2909,
            "mean": 3521,
            "median": 3453,
            "max": 3754
          },
          "targetPrice()": {
            "calls": 3,
            "min": 642,
            "mean": 642,
            "median": 642,
            "max": 642
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 294021,
          "size": 1277
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 378808,
          "size": 1929
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21280,
            "mean": 21280,
            "median": 21280,
            "max": 21280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 825912,
          "size": 3578
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 36965,
            "mean": 36965,
            "median": 36965,
            "max": 36965
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 25131,
            "mean": 25131,
            "median": 25131,
            "max": 25131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 10349425,
          "size": 48142
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "coldWallet()": {
            "calls": 1,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 477,
            "mean": 477,
            "median": 477,
            "max": 477
          },
          "goo()": {
            "calls": 3,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "governorWallet()": {
            "calls": 1,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "pages()": {
            "calls": 4,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "root()": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "run()": {
            "calls": 7,
            "min": 8037032,
            "mean": 8037032,
            "median": 8037032,
            "max": 8037032
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 10347863,
          "size": 48174
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "coldWallet()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 477,
            "mean": 477,
            "median": 477,
            "max": 477
          },
          "goo()": {
            "calls": 3,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mintStart()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "pages()": {
            "calls": 4,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "root()": {
            "calls": 1,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "run()": {
            "calls": 5,
            "min": 8037032,
            "mean": 8037032,
            "median": 8037032,
            "max": 8037032
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4362762,
          "size": 22029
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7427,
            "mean": 7427,
            "median": 7427,
            "max": 7427
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 847,
            "mean": 847,
            "median": 847,
            "max": 847
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 758,
            "mean": 758,
            "median": 758,
            "max": 758
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7361,
            "mean": 7361,
            "median": 7361,
            "max": 7361
          },
          "balanceOf(address)": {
            "calls": 3,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21923,
            "mean": 76553,
            "median": 114627,
            "max": 121612
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 520,
            "mean": 902,
            "median": 1094,
            "max": 1094
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 569,
            "mean": 1520,
            "median": 1691,
            "max": 1691
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3498,
            "mean": 3828,
            "median": 3841,
            "max": 3841
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2616,
            "mean": 2616,
            "median": 2616,
            "max": 2616
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 29020,
            "mean": 29051,
            "median": 29051,
            "max": 29083
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26664,
            "mean": 26664,
            "median": 26664,
            "max": 26664
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45856,
            "mean": 45856,
            "median": 45856,
            "max": 45856
          },
          "mintStart()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "owner()": {
            "calls": 1,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "ownerOf(uint256)": {
            "calls": 2,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28847,
            "mean": 28847,
            "median": 28847,
            "max": 28847
          },
          "targetPrice()": {
            "calls": 1,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4868,
            "mean": 6447,
            "median": 7237,
            "max": 7237
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 24042,
            "mean": 24042,
            "median": 24042,
            "max": 24042
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 964891,
          "size": 4967
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24320,
            "mean": 29196,
            "median": 29196,
            "max": 34072
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 34040,
            "mean": 34040,
            "median": 34040,
            "max": 34040
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13037,
            "min": 0,
            "mean": 42151,
            "median": 28404,
            "max": 68300
          },
          "pages()": {
            "calls": 2,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1931435,
          "size": 10549
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7360,
            "mean": 7360,
            "median": 7360,
            "max": 7360
          },
          "artGobblers()": {
            "calls": 2,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "currentId()": {
            "calls": 2,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 410,
            "mean": 799,
            "median": 1092,
            "max": 1092
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 729,
            "mean": 1737,
            "median": 1754,
            "max": 1754
          },
          "goo()": {
            "calls": 2,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26637,
            "mean": 70754,
            "median": 57954,
            "max": 292611
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 12978,
            "min": 22197,
            "mean": 67702,
            "median": 68981,
            "max": 103181
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "pagePrice()": {
            "calls": 12979,
            "min": 2916,
            "mean": 3672,
            "median": 3598,
            "max": 3941
          },
          "targetPrice()": {
            "calls": 3,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 318671,
          "size": 1419
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 374024,
          "size": 1918
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21294,
            "mean": 21294,
            "median": 21294,
            "max": 21294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 805130,
          "size": 3473
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 36851,
            "mean": 36851,
            "median": 36851,
            "max": 36851
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 25264,
            "mean": 25264,
            "median": 25264,
            "max": 25264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 9396645,
          "size": 43852
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "coldWallet()": {
            "calls": 1,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 377,
            "mean": 377,
            "median": 377,
            "max": 377
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "goo()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "governorWallet()": {
            "calls": 1,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "pages()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "root()": {
            "calls": 1,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "run()": {
            "calls": 7,
            "min": 6905394,
            "mean": 6905394,
            "median": 6905394,
            "max": 6905394
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 9400770,
          "size": 43812
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "coldWallet()": {
            "calls": 1,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "goo()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "mintStart()": {
            "calls": 1,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "pages()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "root()": {
            "calls": 1,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "run()": {
            "calls": 5,
            "min": 6905394,
            "mean": 6905394,
            "median": 6905394,
            "max": 6905394
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 3713891,
          "size": 19683
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7130,
            "mean": 7130,
            "median": 7130,
            "max": 7130
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7128,
            "mean": 7128,
            "median": 7128,
            "max": 7128
          },
          "balanceOf(address)": {
            "calls": 2,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21810,
            "mean": 50581,
            "median": 24192,
            "max": 114338
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 480,
            "mean": 812,
            "median": 979,
            "max": 979
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 505,
            "mean": 1431,
            "median": 1613,
            "max": 1613
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3368,
            "mean": 3766,
            "median": 3782,
            "max": 3782
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 28693,
            "mean": 28834,
            "median": 28834,
            "max": 28976
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26201,
            "mean": 26201,
            "median": 26201,
            "max": 26201
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45741,
            "mean": 45741,
            "median": 45741,
            "max": 45741
          },
          "mintStart()": {
            "calls": 1,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "owner()": {
            "calls": 1,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28588,
            "mean": 28588,
            "median": 28588,
            "max": 28588
          },
          "targetPrice()": {
            "calls": 1,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4655,
            "mean": 6081,
            "median": 6795,
            "max": 6795
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 23867,
            "mean": 23867,
            "median": 23867,
            "max": 23867
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 891691,
          "size": 5318
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24090,
            "mean": 28925,
            "median": 28925,
            "max": 33760
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 33767,
            "mean": 33767,
            "median": 33767,
            "max": 33767
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13126,
            "min": 21816,
            "mean": 42045,
            "median": 28115,
            "max": 68011
          },
          "pages()": {
            "calls": 2,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1744026,
          "size": 9956
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7098,
            "mean": 7098,
            "median": 7098,
            "max": 7098
          },
          "artGobblers()": {
            "calls": 2,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "currentId()": {
            "calls": 2,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 431,
            "mean": 754,
            "median": 997,
            "max": 997
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 670,
            "mean": 1634,
            "median": 1650,
            "max": 1650
          },
          "goo()": {
            "calls": 2,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26517,
            "mean": 70490,
            "median": 57683,
            "max": 291998
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 13068,
            "min": 22031,
            "mean": 66954,
            "median": 68220,
            "max": 102420
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "pagePrice()": {
            "calls": 13069,
            "min": 2850,
            "mean": 3521,
            "median": 3416,
            "max": 3830
          },
          "targetPrice()": {
            "calls": 3,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 270791,
          "size": 1214
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 304889,
          "size": 1607
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21265,
            "mean": 21265,
            "median": 21265,
            "max": 21265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 522218,
          "size": 2096
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 35285,
            "mean": 35285,
            "median": 35285,
            "max": 35285
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 24828,
            "mean": 24828,
            "median": 24828,
            "max": 24828
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 8576566,
          "size": 40266
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "coldWallet()": {
            "calls": 1,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "goo()": {
            "calls": 3,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "governorWallet()": {
            "calls": 1,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "pages()": {
            "calls": 4,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "root()": {
            "calls": 1,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "run()": {
            "calls": 7,
            "min": 6439149,
            "mean": 6439149,
            "median": 6439149,
            "max": 6439149
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 8579210,
          "size": 40153
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "coldWallet()": {
            "calls": 1,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "goo()": {
            "calls": 3,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "mintStart()": {
            "calls": 1,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "pages()": {
            "calls": 4,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "root()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "run()": {
            "calls": 5,
            "min": 6439149,
            "mean": 6439149,
            "median": 6439149,
            "max": 6439149
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 3439023,
          "size": 18218
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7017,
            "mean": 7017,
            "median": 7017,
            "max": 7017
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7008,
            "mean": 7008,
            "median": 7008,
            "max": 7008
          },
          "balanceOf(address)": {
            "calls": 3,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21825,
            "mean": 76329,
            "median": 114325,
            "max": 121321
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 543,
            "mean": 885,
            "median": 1056,
            "max": 1056
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 559,
            "mean": 1492,
            "median": 1675,
            "max": 1675
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3410,
            "mean": 3806,
            "median": 3821,
            "max": 3821
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 28789,
            "mean": 28898,
            "median": 28898,
            "max": 29008
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26254,
            "mean": 26254,
            "median": 26254,
            "max": 26254
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45794,
            "mean": 45794,
            "median": 45794,
            "max": 45794
          },
          "mintStart()": {
            "calls": 1,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "owner()": {
            "calls": 1,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "ownerOf(uint256)": {
            "calls": 2,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28607,
            "mean": 28607,
            "median": 28607,
            "max": 28607
          },
          "targetPrice()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4655,
            "mean": 6081,
            "median": 6795,
            "max": 6795
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 23926,
            "mean": 23926,
            "median": 23926,
            "max": 23926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 809611,
          "size": 4751
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24150,
            "mean": 28995,
            "median": 28995,
            "max": 33841
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 33829,
            "mean": 33829,
            "median": 33829,
            "max": 33829
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13118,
            "min": 21853,
            "mean": 42040,
            "median": 28126,
            "max": 68022
          },
          "pages()": {
            "calls": 2,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1598341,
          "size": 9148
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 6968,
            "mean": 6968,
            "median": 6968,
            "max": 6968
          },
          "artGobblers()": {
            "calls": 2,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "currentId()": {
            "calls": 2,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 477,
            "mean": 801,
            "median": 1045,
            "max": 1045
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 710,
            "mean": 1672,
            "median": 1689,
            "max": 1689
          },
          "goo()": {
            "calls": 2,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26554,
            "mean": 70561,
            "median": 57760,
            "max": 292102
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 13059,
            "min": 22056,
            "mean": 67093,
            "median": 68358,
            "max": 102558
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2443,
            "mean": 2443,
            "median": 2443,
            "max": 2443
          },
          "pagePrice()": {
            "calls": 13060,
            "min": 2864,
            "mean": 3536,
            "median": 3432,
            "max": 3843
          },
          "targetPrice()": {
            "calls": 3,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 239843,
          "size": 1030
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2253,
            "mean": 2253,
            "median": 2253,
            "max": 2253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 289548,
          "size": 1473
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21250,
            "mean": 21250,
            "median": 21250,
            "max": 21250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 478786,
          "size": 1909
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 35028,
            "mean": 35028,
            "median": 35028,
            "max": 35028
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 24856,
            "mean": 24856,
            "median": 24856,
            "max": 24856
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "balance-snapshot": {
    "solc": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 818597,
          "size": 3787
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 3230,
            "mean": 3230,
            "median": 3230,
            "max": 3230
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 850988,
          "size": 4294
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2824,
            "mean": 2824,
            "median": 2824,
            "max": 2824
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 508516,
          "size": 2201
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 463794,
          "size": 2021
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "beefy": {
    "solc": [
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 629444,
          "size": 3252
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 794797,
          "size": 3455
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "initialize()": {
            "calls": 10,
            "min": 68917,
            "mean": 68917,
            "median": 68917,
            "max": 68917
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28688,
            "mean": 31519,
            "median": 31428,
            "max": 34992
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 34373,
            "mean": 34373,
            "median": 34373,
            "max": 34373
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 239129,
          "size": 890
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 806,
            "mean": 3028,
            "median": 3306,
            "max": 3306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1065587,
          "size": 4709
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 6426090,
          "size": 29492
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 827610,
            "mean": 827610,
            "median": 827610,
            "max": 827610
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4004861,
          "size": 18301
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24387,
            "mean": 24387,
            "median": 24387,
            "max": 24387
          },
          "vault()": {
            "calls": 1,
            "min": 3846,
            "mean": 3846,
            "median": 3846,
            "max": 3846
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 3977628,
          "size": 18174
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24387,
            "mean": 24387,
            "median": 24387,
            "max": 24387
          },
          "vault()": {
            "calls": 1,
            "min": 3802,
            "mean": 3802,
            "median": 3802,
            "max": 3802
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 3379070,
          "size": 15405
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24525,
            "mean": 24525,
            "median": 24525,
            "max": 24525
          },
          "vault()": {
            "calls": 1,
            "min": 3867,
            "mean": 3867,
            "median": 3867,
            "max": 3867
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 3485847,
          "size": 15900
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          },
          "vault()": {
            "calls": 1,
            "min": 3707,
            "mean": 3707,
            "median": 3707,
            "max": 3707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 3346561,
          "size": 15254
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24503,
            "mean": 24503,
            "median": 24503,
            "max": 24503
          },
          "vault()": {
            "calls": 1,
            "min": 3801,
            "mean": 3801,
            "median": 3801,
            "max": 3801
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 3446237,
          "size": 15716
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24452,
            "mean": 24452,
            "median": 24452,
            "max": 24452
          },
          "vault()": {
            "calls": 1,
            "min": 3663,
            "mean": 3663,
            "median": 3663,
            "max": 3663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 3251882,
          "size": 14816
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24459,
            "mean": 24459,
            "median": 24459,
            "max": 24459
          },
          "vault()": {
            "calls": 1,
            "min": 3823,
            "mean": 3823,
            "median": 3823,
            "max": 3823
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 3893113,
          "size": 17782
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24563,
            "mean": 24563,
            "median": 24563,
            "max": 24563
          },
          "vault()": {
            "calls": 1,
            "min": 3802,
            "mean": 3802,
            "median": 3802,
            "max": 3802
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 2796289,
          "size": 12711
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24386,
            "mean": 24386,
            "median": 24386,
            "max": 24386
          },
          "vault()": {
            "calls": 1,
            "min": 3443,
            "mean": 3443,
            "median": 3443,
            "max": 3443
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 4307554,
          "size": 19633
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24409,
            "mean": 24409,
            "median": 24409,
            "max": 24409
          },
          "vault()": {
            "calls": 1,
            "min": 3648,
            "mean": 3648,
            "median": 3648,
            "max": 3648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2827107,
          "size": 12854
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24408,
            "mean": 24408,
            "median": 24408,
            "max": 24408
          },
          "vault()": {
            "calls": 1,
            "min": 3443,
            "mean": 3443,
            "median": 3443,
            "max": 3443
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3553343,
          "size": 16212
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24452,
            "mean": 24452,
            "median": 24452,
            "max": 24452
          },
          "vault()": {
            "calls": 1,
            "min": 3688,
            "mean": 3688,
            "median": 3688,
            "max": 3688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 3220455,
          "size": 14672
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24540,
            "mean": 24540,
            "median": 24540,
            "max": 24540
          },
          "vault()": {
            "calls": 1,
            "min": 3619,
            "mean": 3619,
            "median": 3619,
            "max": 3619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 4890893,
          "size": 22397
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24404,
            "mean": 24404,
            "median": 24404,
            "max": 24404
          },
          "vault()": {
            "calls": 1,
            "min": 3509,
            "mean": 3509,
            "median": 3509,
            "max": 3509
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 4530210,
          "size": 20729
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24437,
            "mean": 24437,
            "median": 24437,
            "max": 24437
          },
          "vault()": {
            "calls": 1,
            "min": 3603,
            "mean": 3603,
            "median": 3603,
            "max": 3603
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 2385190,
          "size": 10809
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24316,
            "mean": 24316,
            "median": 24316,
            "max": 24316
          },
          "vault()": {
            "calls": 1,
            "min": 3328,
            "mean": 3328,
            "median": 3328,
            "max": 3328
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 3754058,
          "size": 17139
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24453,
            "mean": 24453,
            "median": 24453,
            "max": 24453
          },
          "vault()": {
            "calls": 1,
            "min": 3692,
            "mean": 3692,
            "median": 3692,
            "max": 3692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 1835837,
          "size": 8269
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 162802,
            "mean": 162847,
            "median": 162850,
            "max": 162850
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2008827,
          "size": 9031
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65629,
            "mean": 65629,
            "median": 65629,
            "max": 65629
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 238497,
          "size": 1221
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 6679,
            "mean": 6679,
            "median": 6679,
            "max": 6679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 428247,
          "size": 1760
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 29552,
            "mean": 29582,
            "median": 29582,
            "max": 29612
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 615505,
          "size": 2977
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 852921,
          "size": 3726
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2546,
            "mean": 2546,
            "median": 2546,
            "max": 2546
          },
          "initialize()": {
            "calls": 10,
            "min": 69267,
            "mean": 69267,
            "median": 69267,
            "max": 69267
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28955,
            "mean": 31849,
            "median": 31695,
            "max": 35825
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 34907,
            "mean": 34907,
            "median": 34907,
            "max": 34907
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 327245,
          "size": 1318
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 821,
            "mean": 3043,
            "median": 3321,
            "max": 3321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1329397,
          "size": 5931
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 4720708,
          "size": 21610
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 829167,
            "mean": 829167,
            "median": 829167,
            "max": 829167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4167834,
          "size": 19055
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24081,
            "mean": 24081,
            "median": 24081,
            "max": 24081
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 4103421,
          "size": 18756
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 2864538,
          "size": 13029
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 2951233,
          "size": 13429
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24058,
            "mean": 24058,
            "median": 24058,
            "max": 24058
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 2835830,
          "size": 12896
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 2896760,
          "size": 13177
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 2866914,
          "size": 13039
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24059,
            "mean": 24059,
            "median": 24059,
            "max": 24059
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 3819635,
          "size": 17444
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24086,
            "mean": 24086,
            "median": 24086,
            "max": 24086
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 2505329,
          "size": 11367
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24058,
            "mean": 24058,
            "median": 24058,
            "max": 24058
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 4034230,
          "size": 18371
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24059,
            "mean": 24059,
            "median": 24059,
            "max": 24059
          },
          "vault()": {
            "calls": 1,
            "min": 2446,
            "mean": 2446,
            "median": 2446,
            "max": 2446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2526585,
          "size": 11465
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24080,
            "mean": 24080,
            "median": 24080,
            "max": 24080
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3213046,
          "size": 14639
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 2913085,
          "size": 13252
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24124,
            "mean": 24124,
            "median": 24124,
            "max": 24124
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 3527383,
          "size": 16094
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24125,
            "mean": 24125,
            "median": 24125,
            "max": 24125
          },
          "vault()": {
            "calls": 1,
            "min": 2446,
            "mean": 2446,
            "median": 2446,
            "max": 2446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 3634587,
          "size": 16589
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24125,
            "mean": 24125,
            "median": 24125,
            "max": 24125
          },
          "vault()": {
            "calls": 1,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 2160608,
          "size": 9773
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24086,
            "mean": 24086,
            "median": 24086,
            "max": 24086
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 3790408,
          "size": 17309
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 1870786,
          "size": 8433
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 163762,
            "mean": 163807,
            "median": 163810,
            "max": 163810
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2157534,
          "size": 9704
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65732,
            "mean": 65732,
            "median": 65732,
            "max": 65732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 332994,
          "size": 1715
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 7145,
            "mean": 7145,
            "median": 7145,
            "max": 7145
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 489893,
          "size": 2047
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 29103,
            "mean": 29133,
            "median": 29133,
            "max": 29163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 690027,
          "size": 3918
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2417,
            "mean": 2417,
            "median": 2417,
            "max": 2417
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 948280,
          "size": 4180
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "initialize()": {
            "calls": 10,
            "min": 68459,
            "mean": 68459,
            "median": 68459,
            "max": 68459
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28292,
            "mean": 31086,
            "median": 31032,
            "max": 34266
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 33786,
            "mean": 33786,
            "median": 33786,
            "max": 33786
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 240775,
          "size": 900
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 572,
            "mean": 2794,
            "median": 3072,
            "max": 3072
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1086199,
          "size": 4812
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 4506,
            "mean": 4506,
            "median": 4506,
            "max": 4506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 8903526,
          "size": 40994
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 823092,
            "mean": 823092,
            "median": 823092,
            "max": 823092
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 5250144,
          "size": 24103
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23929,
            "mean": 23929,
            "median": 23929,
            "max": 23929
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 5170177,
          "size": 23734
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 4712337,
          "size": 21619
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 5241601,
          "size": 24068
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 4647729,
          "size": 21320
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 5261339,
          "size": 24157
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 4327915,
          "size": 19836
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23913,
            "mean": 23913,
            "median": 23913,
            "max": 23913
          },
          "vault()": {
            "calls": 1,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 6820868,
          "size": 31376
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 4228097,
          "size": 19371
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 6041842,
          "size": 27726
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23913,
            "mean": 23913,
            "median": 23913,
            "max": 23913
          },
          "vault()": {
            "calls": 1,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 4172766,
          "size": 19110
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 5125351,
          "size": 23526
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 4624155,
          "size": 21196
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23931,
            "mean": 23931,
            "median": 23931,
            "max": 23931
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 6560572,
          "size": 30169
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 6770061,
          "size": 31147
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2398,
            "mean": 2398,
            "median": 2398,
            "max": 2398
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 3121106,
          "size": 14248
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23929,
            "mean": 23929,
            "median": 23929,
            "max": 23929
          },
          "vault()": {
            "calls": 1,
            "min": 2398,
            "mean": 2398,
            "median": 2398,
            "max": 2398
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 5586541,
          "size": 25666
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 2456411,
          "size": 11161
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 162029,
            "mean": 162074,
            "median": 162077,
            "max": 162077
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2676458,
          "size": 12147
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65548,
            "mean": 65548,
            "median": 65548,
            "max": 65548
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 289539,
          "size": 1479
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 4470,
            "mean": 4470,
            "median": 4470,
            "max": 4470
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 489950,
          "size": 2054
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 28457,
            "mean": 28487,
            "median": 28487,
            "max": 28517
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 645250,
          "size": 3648
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2286,
            "mean": 2286,
            "median": 2286,
            "max": 2286
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 862334,
          "size": 3780
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "initialize()": {
            "calls": 10,
            "min": 68391,
            "mean": 68391,
            "median": 68391,
            "max": 68391
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28321,
            "mean": 31106,
            "median": 31061,
            "max": 34210
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 33797,
            "mean": 33797,
            "median": 33797,
            "max": 33797
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 265762,
          "size": 1041
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 555,
            "mean": 2777,
            "median": 3055,
            "max": 3055
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1145584,
          "size": 5093
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 4404,
            "mean": 4404,
            "median": 4404,
            "max": 4404
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 5804442,
          "size": 26679
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 823001,
            "mean": 823001,
            "median": 823001,
            "max": 823001
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4366553,
          "size": 20008
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24000,
            "mean": 24000,
            "median": 24000,
            "max": 24000
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 4293143,
          "size": 19670
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23985,
            "mean": 23985,
            "median": 23985,
            "max": 23985
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 3531655,
          "size": 16154
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23989,
            "mean": 23989,
            "median": 23989,
            "max": 23989
          },
          "vault()": {
            "calls": 1,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 3496565,
          "size": 15984
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23974,
            "mean": 23974,
            "median": 23974,
            "max": 23974
          },
          "vault()": {
            "calls": 1,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 3529699,
          "size": 16145
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23989,
            "mean": 23989,
            "median": 23989,
            "max": 23989
          },
          "vault()": {
            "calls": 1,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 3499613,
          "size": 15997
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23982,
            "mean": 23982,
            "median": 23982,
            "max": 23982
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 3511873,
          "size": 16061
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23988,
            "mean": 23988,
            "median": 23988,
            "max": 23988
          },
          "vault()": {
            "calls": 1,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 4489034,
          "size": 20582
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23997,
            "mean": 23997,
            "median": 23997,
            "max": 23997
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 3018612,
          "size": 13768
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23974,
            "mean": 23974,
            "median": 23974,
            "max": 23974
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 4678893,
          "size": 21415
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23988,
            "mean": 23988,
            "median": 23988,
            "max": 23988
          },
          "vault()": {
            "calls": 1,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2993145,
          "size": 13650
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23990,
            "mean": 23990,
            "median": 23990,
            "max": 23990
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3712647,
          "size": 16983
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23982,
            "mean": 23982,
            "median": 23982,
            "max": 23982
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 3369894,
          "size": 15393
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24000,
            "mean": 24000,
            "median": 24000,
            "max": 24000
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 4554659,
          "size": 20900
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24004,
            "mean": 24004,
            "median": 24004,
            "max": 24004
          },
          "vault()": {
            "calls": 1,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 4922544,
          "size": 22611
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24007,
            "mean": 24007,
            "median": 24007,
            "max": 24007
          },
          "vault()": {
            "calls": 1,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 2402094,
          "size": 10920
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23989,
            "mean": 23989,
            "median": 23989,
            "max": 23989
          },
          "vault()": {
            "calls": 1,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 4503213,
          "size": 20639
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23982,
            "mean": 23982,
            "median": 23982,
            "max": 23982
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 2174854,
          "size": 9855
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 161717,
            "mean": 161762,
            "median": 161765,
            "max": 161765
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2457946,
          "size": 11104
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65506,
            "mean": 65506,
            "median": 65506,
            "max": 65506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 274729,
          "size": 1430
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 4569,
            "mean": 4569,
            "median": 4569,
            "max": 4569
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 474234,
          "size": 1980
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 28359,
            "mean": 28389,
            "median": 28389,
            "max": 28419
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "diamond-foundry": {
    "solc": [],
    "solx": []
  },
  "forge-std": {
    "solc": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1288751,
          "size": 6463
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 46528,
            "mean": 53299,
            "median": 51669,
            "max": 63744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 205128,
          "size": 1047
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25578,
            "mean": 29250,
            "median": 27908,
            "max": 35846
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3753777,
          "size": 16965
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22643,
            "mean": 3559645,
            "median": 5905860,
            "max": 5907443
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 22121,
            "mean": 4436985,
            "median": 5907889,
            "max": 5910040
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 24003,
            "mean": 2995052,
            "median": 2967194,
            "max": 6014073
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21767,
            "mean": 21767,
            "median": 21767,
            "max": 21767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 195803,
          "size": 508
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2471,
            "mean": 2471,
            "median": 2471,
            "max": 2471
          },
          "bar(address)": {
            "calls": 8,
            "min": 21511,
            "mean": 21565,
            "median": 21511,
            "max": 21727
          },
          "origin(address)": {
            "calls": 3,
            "min": 21537,
            "mean": 21537,
            "median": 21537,
            "max": 21537
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21807,
            "mean": 21807,
            "median": 21807,
            "max": 21807
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 144252,
          "size": 320
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 212270,
          "size": 419
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 415237,
          "size": 1701
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 3025,
            "mean": 7268,
            "median": 8907,
            "max": 9872
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 33533,
            "mean": 208023094,
            "median": 60741,
            "max": 1039924527
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 33490,
            "mean": 208022411,
            "median": 60882,
            "max": 1039920900
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10576867,
          "size": 52639
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 27286,
            "mean": 27286,
            "median": 27286,
            "max": 27286
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 58554,
            "mean": 58554,
            "median": 58554,
            "max": 58554
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 213952,
          "size": 770
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "assertionError()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43395,
            "mean": 43395,
            "median": 43395,
            "max": 43395
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 390,
            "mean": 390,
            "median": 390,
            "max": 390
          },
          "intern()": {
            "calls": 1,
            "min": 21235,
            "mean": 21235,
            "median": 21235,
            "max": 21235
          },
          "mem()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 349,
            "mean": 349,
            "median": 349,
            "max": 349
          },
          "pop()": {
            "calls": 1,
            "min": 23445,
            "mean": 23445,
            "median": 23445,
            "max": 23445
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 942916,
          "size": 3961
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 934,
            "mean": 934,
            "median": 934,
            "max": 934
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 7090279,
          "size": 35237
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 179351,
            "mean": 179351,
            "median": 179351,
            "max": 179351
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 931527,
          "size": 2923
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4434,
            "mean": 4434,
            "median": 4434,
            "max": 4434
          },
          "const()": {
            "calls": 1,
            "min": 298,
            "mean": 298,
            "median": 298,
            "max": 298
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2963,
            "mean": 2963,
            "median": 2963,
            "max": 2963
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4738,
            "mean": 4738,
            "median": 4738,
            "max": 4738
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4956,
            "mean": 4956,
            "median": 4956,
            "max": 4956
          },
          "exists()": {
            "calls": 11,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4874,
            "mean": 4874,
            "median": 4874,
            "max": 4874
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 642929,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3816,
            "mean": 4500,
            "median": 4500,
            "max": 5184
          },
          "hidden()": {
            "calls": 13,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2722
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2828,
            "mean": 2828,
            "median": 2828,
            "max": 2828
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2674,
            "mean": 2674,
            "median": 2674,
            "max": 2674
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4808,
            "mean": 4808,
            "median": 4808,
            "max": 4808
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2570,
            "mean": 2570,
            "median": 2570,
            "max": 2570
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23975,
            "mean": 28877,
            "median": 24131,
            "max": 44259
          },
          "tA()": {
            "calls": 3840,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "tB()": {
            "calls": 65283,
            "min": 2514,
            "mean": 2514,
            "median": 2514,
            "max": 2514
          },
          "tC()": {
            "calls": 65280,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "tD()": {
            "calls": 3840,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "tE()": {
            "calls": 6,
            "min": 744,
            "mean": 2077,
            "median": 2744,
            "max": 2744
          },
          "tF()": {
            "calls": 3,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "tG()": {
            "calls": 8,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "tH()": {
            "calls": 3,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 974022,
          "size": 4316
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 94144,
            "mean": 94144,
            "median": 94144,
            "max": 94144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 728643,
          "size": 3149
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25496,
            "mean": 28451,
            "median": 28451,
            "max": 31406
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1216259,
          "size": 6103
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 47660,
            "mean": 53983,
            "median": 51481,
            "max": 65418
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 167988,
          "size": 1046
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25903,
            "mean": 29447,
            "median": 28128,
            "max": 35843
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3608692,
          "size": 16297
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22452,
            "mean": 3548168,
            "median": 5886797,
            "max": 5888124
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21838,
            "mean": 4422454,
            "median": 5888672,
            "max": 5890636
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 24123,
            "mean": 2985506,
            "median": 2957610,
            "max": 5994894
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21688,
            "mean": 21688,
            "median": 21688,
            "max": 21688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 233643,
          "size": 678
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "bar(address)": {
            "calls": 8,
            "min": 21556,
            "mean": 21610,
            "median": 21556,
            "max": 21772
          },
          "origin(address)": {
            "calls": 3,
            "min": 21574,
            "mean": 21574,
            "median": 21574,
            "max": 21574
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21895,
            "mean": 21895,
            "median": 21895,
            "max": 21895
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 157662,
          "size": 383
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 229155,
          "size": 499
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 457357,
          "size": 1897
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 3180,
            "mean": 7478,
            "median": 9149,
            "max": 10106
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 33037,
            "mean": 208014852,
            "median": 60423,
            "max": 1039884927
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 33065,
            "mean": 208014172,
            "median": 60457,
            "max": 1039881356
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10117770,
          "size": 50353
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 26363,
            "mean": 26363,
            "median": 26363,
            "max": 26363
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 58482,
            "mean": 58482,
            "median": 58482,
            "max": 58482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 286297,
          "size": 1106
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "assertionError()": {
            "calls": 1,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 380,
            "mean": 380,
            "median": 380,
            "max": 380
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43616,
            "mean": 43616,
            "median": 43616,
            "max": 43616
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 319,
            "mean": 319,
            "median": 319,
            "max": 319
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 353
          },
          "intern()": {
            "calls": 1,
            "min": 21293,
            "mean": 21293,
            "median": 21293,
            "max": 21293
          },
          "mem()": {
            "calls": 1,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "pop()": {
            "calls": 1,
            "min": 23362,
            "mean": 23362,
            "median": 23362,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 934124,
          "size": 3924
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 1109,
            "mean": 1109,
            "median": 1109,
            "max": 1109
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 637,
            "mean": 637,
            "median": 637,
            "max": 637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 5941894,
          "size": 29509
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 181163,
            "mean": 181163,
            "median": 181163,
            "max": 181163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 864361,
          "size": 2534
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4484,
            "mean": 4484,
            "median": 4484,
            "max": 4484
          },
          "const()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2756,
            "mean": 2756,
            "median": 2756,
            "max": 2756
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4841,
            "mean": 4841,
            "median": 4841,
            "max": 4841
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "exists()": {
            "calls": 11,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4614,
            "mean": 4614,
            "median": 4614,
            "max": 4614
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 649008,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3698,
            "mean": 4271,
            "median": 4271,
            "max": 4844
          },
          "hidden()": {
            "calls": 13,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4711,
            "mean": 4711,
            "median": 4711,
            "max": 4711
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23647,
            "mean": 28726,
            "median": 23851,
            "max": 43931
          },
          "tA()": {
            "calls": 3840,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "tB()": {
            "calls": 65283,
            "min": 2415,
            "mean": 2415,
            "median": 2415,
            "max": 2415
          },
          "tC()": {
            "calls": 65280,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "tD()": {
            "calls": 3840,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "tE()": {
            "calls": 6,
            "min": 383,
            "mean": 1716,
            "median": 2383,
            "max": 2383
          },
          "tF()": {
            "calls": 3,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "tG()": {
            "calls": 8,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "tH()": {
            "calls": 3,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1088965,
          "size": 4844
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 96208,
            "mean": 96208,
            "median": 96208,
            "max": 96208
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 884029,
          "size": 3871
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 446,
            "mean": 446,
            "median": 446,
            "max": 446
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 821,
            "mean": 821,
            "median": 821,
            "max": 821
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25745,
            "mean": 28534,
            "median": 28534,
            "max": 31324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1992118,
          "size": 9983
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 45444,
            "mean": 52782,
            "median": 50867,
            "max": 64107
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 209839,
          "size": 1281
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25484,
            "mean": 29218,
            "median": 27816,
            "max": 35761
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 5001784,
          "size": 22797
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22268,
            "mean": 3501477,
            "median": 5809868,
            "max": 5813432
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21780,
            "mean": 4365779,
            "median": 5812801,
            "max": 5815737
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 23676,
            "mean": 2947328,
            "median": 2919449,
            "max": 5918992
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21630,
            "mean": 21630,
            "median": 21630,
            "max": 21630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 211569,
          "size": 576
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "bar(address)": {
            "calls": 8,
            "min": 21422,
            "mean": 21476,
            "median": 21422,
            "max": 21638
          },
          "origin(address)": {
            "calls": 3,
            "min": 21497,
            "mean": 21497,
            "median": 21497,
            "max": 21497
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21698,
            "mean": 21698,
            "median": 21698,
            "max": 21698
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 147914,
          "size": 340
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 221503,
          "size": 504
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 114057,
          "size": 313
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 98,
            "mean": 98,
            "median": 98,
            "max": 98
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 98,
            "mean": 98,
            "median": 98,
            "max": 98
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 480993,
          "size": 2012
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 2898,
            "mean": 6846,
            "median": 8462,
            "max": 9180
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 32642,
            "mean": 208010081,
            "median": 59909,
            "max": 1039862911
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 32606,
            "mean": 208009467,
            "median": 59998,
            "max": 1039859650
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 13866760,
          "size": 69058
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 25434,
            "mean": 25434,
            "median": 25434,
            "max": 25434
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 57814,
            "mean": 57814,
            "median": 57814,
            "max": 57814
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 214618,
          "size": 778
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "assertionError()": {
            "calls": 1,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43396,
            "mean": 43396,
            "median": 43396,
            "max": 43396
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "intern()": {
            "calls": 1,
            "min": 21270,
            "mean": 21270,
            "median": 21270,
            "max": 21270
          },
          "mem()": {
            "calls": 1,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "pop()": {
            "calls": 1,
            "min": 23386,
            "mean": 23386,
            "median": 23386,
            "max": 23386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1247641,
          "size": 5373
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 526,
            "mean": 526,
            "median": 526,
            "max": 526
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 10960619,
          "size": 54558
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 165416,
            "mean": 165416,
            "median": 165416,
            "max": 165416
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 923837,
          "size": 3012
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4453,
            "mean": 4453,
            "median": 4453,
            "max": 4453
          },
          "const()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4623,
            "mean": 4623,
            "median": 4623,
            "max": 4623
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4498,
            "mean": 4498,
            "median": 4498,
            "max": 4498
          },
          "exists()": {
            "calls": 11,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4560,
            "mean": 4560,
            "median": 4560,
            "max": 4560
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 669935,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3139,
            "mean": 3502,
            "median": 3502,
            "max": 3865
          },
          "hidden()": {
            "calls": 13,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2455,
            "mean": 2455,
            "median": 2455,
            "max": 2455
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4563,
            "mean": 4563,
            "median": 4563,
            "max": 4563
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2445,
            "mean": 2445,
            "median": 2445,
            "max": 2445
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23602,
            "mean": 28663,
            "median": 23818,
            "max": 43886
          },
          "tA()": {
            "calls": 3840,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "tB()": {
            "calls": 65283,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "tC()": {
            "calls": 65280,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          },
          "tD()": {
            "calls": 3840,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "tE()": {
            "calls": 6,
            "min": 366,
            "mean": 1699,
            "median": 2366,
            "max": 2366
          },
          "tF()": {
            "calls": 3,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "tG()": {
            "calls": 8,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "tH()": {
            "calls": 3,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1229354,
          "size": 5542
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 90935,
            "mean": 90935,
            "median": 90935,
            "max": 90935
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 854345,
          "size": 3741
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 546,
            "mean": 546,
            "median": 546,
            "max": 546
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25332,
            "mean": 28040,
            "median": 28040,
            "max": 30748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1828516,
          "size": 9163
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 44850,
            "mean": 51988,
            "median": 49596,
            "max": 62951
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 239607,
          "size": 1198
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25445,
            "mean": 29033,
            "median": 27775,
            "max": 35710
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 4341649,
          "size": 19750
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22122,
            "mean": 3494168,
            "median": 5797986,
            "max": 5801520
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21613,
            "mean": 4356760,
            "median": 5800835,
            "max": 5803758
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 23565,
            "mean": 2941509,
            "median": 2913538,
            "max": 5907521
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21646,
            "mean": 21646,
            "median": 21646,
            "max": 21646
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 207761,
          "size": 577
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "bar(address)": {
            "calls": 8,
            "min": 21422,
            "mean": 21476,
            "median": 21422,
            "max": 21638
          },
          "origin(address)": {
            "calls": 3,
            "min": 21452,
            "mean": 21452,
            "median": 21452,
            "max": 21452
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21666,
            "mean": 21666,
            "median": 21666,
            "max": 21666
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 147358,
          "size": 356
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 220594,
          "size": 498
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 106411,
          "size": 275
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 114,
            "mean": 114,
            "median": 114,
            "max": 114
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43946,
            "mean": 43946,
            "median": 43946,
            "max": 43946
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 106411,
          "size": 275
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 114,
            "mean": 114,
            "median": 114,
            "max": 114
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43946,
            "mean": 43946,
            "median": 43946,
            "max": 43946
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 411352,
          "size": 1686
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 2911,
            "mean": 6835,
            "median": 8412,
            "max": 9184
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 32478,
            "mean": 208023577,
            "median": 59870,
            "max": 1039930672
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 32540,
            "mean": 208022932,
            "median": 59932,
            "max": 1039927275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 13162146,
          "size": 65540
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 25440,
            "mean": 25440,
            "median": 25440,
            "max": 25440
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 57879,
            "mean": 57879,
            "median": 57879,
            "max": 57879
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 189655,
          "size": 660
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          },
          "assertionError()": {
            "calls": 1,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43382,
            "mean": 43382,
            "median": 43382,
            "max": 43382
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "intern()": {
            "calls": 1,
            "min": 21256,
            "mean": 21256,
            "median": 21256,
            "max": 21256
          },
          "mem()": {
            "calls": 1,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "pop()": {
            "calls": 1,
            "min": 23374,
            "mean": 23374,
            "median": 23374,
            "max": 23374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1153661,
          "size": 4935
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 434,
            "mean": 434,
            "median": 434,
            "max": 434
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 366,
            "mean": 366,
            "median": 366,
            "max": 366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 7143925,
          "size": 35506
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 159380,
            "mean": 159380,
            "median": 159380,
            "max": 159380
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 849230,
          "size": 2660
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4454,
            "mean": 4454,
            "median": 4454,
            "max": 4454
          },
          "const()": {
            "calls": 1,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4525,
            "mean": 4525,
            "median": 4525,
            "max": 4525
          },
          "exists()": {
            "calls": 11,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4581,
            "mean": 4581,
            "median": 4581,
            "max": 4581
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 660993,
            "min": 2453,
            "mean": 2453,
            "median": 2453,
            "max": 2453
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3203,
            "mean": 3590,
            "median": 3590,
            "max": 3977
          },
          "hidden()": {
            "calls": 13,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2506,
            "mean": 2506,
            "median": 2506,
            "max": 2506
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4610,
            "mean": 4610,
            "median": 4610,
            "max": 4610
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2511,
            "mean": 2511,
            "median": 2511,
            "max": 2511
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2494,
            "mean": 2494,
            "median": 2494,
            "max": 2494
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23627,
            "mean": 28728,
            "median": 23819,
            "max": 43899
          },
          "tA()": {
            "calls": 3840,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "tB()": {
            "calls": 65283,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "tC()": {
            "calls": 65280,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "tD()": {
            "calls": 3840,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "tE()": {
            "calls": 6,
            "min": 355,
            "mean": 1688,
            "median": 2355,
            "max": 2355
          },
          "tF()": {
            "calls": 3,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "tG()": {
            "calls": 8,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "tH()": {
            "calls": 3,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1085963,
          "size": 4832
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 88750,
            "mean": 88750,
            "median": 88750,
            "max": 88750
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 804274,
          "size": 3511
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 340,
            "mean": 340,
            "median": 340,
            "max": 340
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 563,
            "mean": 563,
            "median": 563,
            "max": 563
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25372,
            "mean": 28005,
            "median": 28005,
            "max": 30639
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "foundry-upgrades": {
    "solc": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1244
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3296649,
          "size": 15067
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "deploy(address)": {
            "calls": 2,
            "min": 330469,
            "mean": 384199,
            "median": 384199,
            "max": 437930
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 609017,
            "mean": 609017,
            "median": 609017,
            "max": 609017
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "setType(string)": {
            "calls": 4,
            "min": 26943,
            "mean": 37102,
            "median": 37027,
            "max": 47411
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 48550,
            "mean": 48550,
            "median": 48550,
            "max": 48550
          },
          "uups()": {
            "calls": 2,
            "min": 2623,
            "mean": 2623,
            "median": 2623,
            "max": 2623
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1456
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3578813,
          "size": 16370
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "deploy(address)": {
            "calls": 2,
            "min": 364111,
            "mean": 418573,
            "median": 418573,
            "max": 473035
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 579538,
            "mean": 579538,
            "median": 579538,
            "max": 579538
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "setType(string)": {
            "calls": 4,
            "min": 26640,
            "mean": 36722,
            "median": 36674,
            "max": 46900
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 48228,
            "mean": 48228,
            "median": 48228,
            "max": 48228
          },
          "uups()": {
            "calls": 2,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1479
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3652869,
          "size": 16731
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "deploy(address)": {
            "calls": 2,
            "min": 361969,
            "mean": 413034,
            "median": 413034,
            "max": 464099
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 664457,
            "mean": 664457,
            "median": 664457,
            "max": 664457
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setType(string)": {
            "calls": 4,
            "min": 26595,
            "mean": 36714,
            "median": 36655,
            "max": 46954
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 47316,
            "mean": 47316,
            "median": 47316,
            "max": 47316
          },
          "uups()": {
            "calls": 2,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1206
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3111700,
          "size": 14220
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "deploy(address)": {
            "calls": 2,
            "min": 317429,
            "mean": 350795,
            "median": 350795,
            "max": 384162
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 583917,
            "mean": 583917,
            "median": 583917,
            "max": 583917
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "setType(string)": {
            "calls": 4,
            "min": 26475,
            "mean": 36582,
            "median": 36526,
            "max": 46802
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 47399,
            "mean": 47399,
            "median": 47399,
            "max": 47399
          },
          "uups()": {
            "calls": 2,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "gov-of-venice": {
    "solc": [
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4081141,
          "size": 18919
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 3007,
            "mean": 3007,
            "median": 3007,
            "max": 3007
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 7703,
            "mean": 7709,
            "median": 7703,
            "max": 7721
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2944,
            "mean": 2944,
            "median": 2944,
            "max": 2944
          },
          "guildMasterRewardMultiplier()": {
            "calls": 1,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "guildMemberSlash()": {
            "calls": 2,
            "min": 2634,
            "mean": 2634,
            "median": 2634,
            "max": 2634
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 3550,
            "mean": 3551,
            "median": 3552,
            "max": 3552
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 5717,
            "mean": 5717,
            "median": 5717,
            "max": 5717
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 3915186,
          "size": 18001
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2986,
            "mean": 2986,
            "median": 2986,
            "max": 2986
          },
          "state(uint48)": {
            "calls": 30,
            "min": 7120,
            "mean": 11759,
            "median": 10329,
            "max": 17841
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2506,
            "mean": 2506,
            "median": 2506,
            "max": 2506
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1583771,
          "size": 8755
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2682,
            "mean": 2682,
            "median": 2682,
            "max": 2682
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5157,
            "mean": 5157,
            "median": 5157,
            "max": 5157
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 100129,
            "mean": 101475,
            "median": 100141,
            "max": 117229
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1831138,
          "size": 8219
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 68211,
            "mean": 68921,
            "median": 68233,
            "max": 79557
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 34674,
            "mean": 68378,
            "median": 68789,
            "max": 79946
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29635,
            "mean": 41470,
            "median": 41470,
            "max": 53305
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 30702,
            "mean": 50734,
            "median": 35037,
            "max": 76447
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 1,
            "min": 29459,
            "mean": 29459,
            "median": 29459,
            "max": 29459
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 1,
            "min": 30361,
            "mean": 30361,
            "median": 30361,
            "max": 30361
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29591,
            "mean": 48587,
            "median": 40844,
            "max": 75327
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 1,
            "min": 29547,
            "mean": 29547,
            "median": 29547,
            "max": 29547
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 85720,
            "mean": 94480,
            "median": 85720,
            "max": 107623
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 29735,
            "mean": 29735,
            "median": 29735,
            "max": 29735
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 35761,
            "mean": 35761,
            "median": 35761,
            "max": 35761
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 35606,
            "mean": 35606,
            "median": 35606,
            "max": 35606
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 35671,
            "mean": 35671,
            "median": 35671,
            "max": 35671
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 92703,
            "mean": 92703,
            "median": 92703,
            "max": 92703
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 79126,
            "mean": 79696,
            "median": 79126,
            "max": 96226
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 438776,
            "mean": 454101,
            "median": 455804,
            "max": 455804
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 53378,
            "mean": 53378,
            "median": 53378,
            "max": 53378
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35469,
            "mean": 35469,
            "median": 35469,
            "max": 35469
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35363,
            "mean": 35363,
            "median": 35363,
            "max": 35363
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35512,
            "mean": 35512,
            "median": 35512,
            "max": 35512
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 34970,
            "mean": 94870,
            "median": 78478,
            "max": 183544
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 35776,
            "mean": 35776,
            "median": 35776,
            "max": 35776
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111429,
            "mean": 111430,
            "median": 111429,
            "max": 111441
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 210176,
            "mean": 210182,
            "median": 210182,
            "max": 210188
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 30229,
            "mean": 30238,
            "median": 30241,
            "max": 30241
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 35282,
            "mean": 35282,
            "median": 35282,
            "max": 35282
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 123177,
            "mean": 123177,
            "median": 123177,
            "max": 123177
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 107951,
            "mean": 110282,
            "median": 107951,
            "max": 125051
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44809,
            "mean": 44814,
            "median": 44809,
            "max": 44821
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 54521,
            "mean": 65619,
            "median": 74421,
            "max": 74433
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 54533,
            "mean": 54533,
            "median": 54533,
            "max": 54533
          },
          "silverBalance()": {
            "calls": 2,
            "min": 29807,
            "mean": 29807,
            "median": 29807,
            "max": 29807
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 54202,
            "mean": 54202,
            "median": 54202,
            "max": 54202
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 75396,
            "mean": 75396,
            "median": 75396,
            "max": 75396
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 74689,
            "mean": 74689,
            "median": 74689,
            "max": 74689
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1361874,
          "size": 6051
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 447,
            "mean": 447,
            "median": 447,
            "max": 447
          },
          "delay()": {
            "calls": 8,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34712,
            "mean": 34712,
            "median": 34712,
            "max": 34712
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 83557,
            "mean": 94649,
            "median": 103445,
            "max": 103457
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66637,
            "mean": 66637,
            "median": 66637,
            "max": 66637
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71179,
            "mean": 71179,
            "median": 71179,
            "max": 71179
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1732511,
          "size": 7621
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 5380,
            "mean": 8761,
            "median": 10136,
            "max": 12514
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 33335,
            "mean": 33335,
            "median": 33335,
            "max": 33335
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94696,
            "mean": 94696,
            "median": 94696,
            "max": 94696
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2668,
            "mean": 2668,
            "median": 2668,
            "max": 2668
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 171560,
          "size": 481
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "flag()": {
            "calls": 10,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4387491,
          "size": 20580
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 7629,
            "mean": 7638,
            "median": 7629,
            "max": 7658
          },
          "gravitasThreshold()": {
            "calls": 1,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "guildMasterRewardMultiplier()": {
            "calls": 2,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "guildMemberSlash()": {
            "calls": 3,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 2732,
            "mean": 2733,
            "median": 2734,
            "max": 2734
          },
          "memberRewardPerSecond()": {
            "calls": 1,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 4964,
            "mean": 4964,
            "median": 4964,
            "max": 4964
          },
          "slashForCashReward()": {
            "calls": 1,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4592402,
          "size": 21124
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "state(uint48)": {
            "calls": 30,
            "min": 7162,
            "mean": 11956,
            "median": 10525,
            "max": 18236
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1724042,
          "size": 9685
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5321,
            "mean": 5321,
            "median": 5321,
            "max": 5321
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 100205,
            "mean": 101551,
            "median": 100217,
            "max": 117305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 2075637,
          "size": 9346
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 68145,
            "mean": 68832,
            "median": 68148,
            "max": 79043
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 33870,
            "mean": 67737,
            "median": 68184,
            "max": 79323
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29295,
            "mean": 41086,
            "median": 41086,
            "max": 52878
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 29481,
            "mean": 50888,
            "median": 40803,
            "max": 75103
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 2,
            "min": 29317,
            "mean": 41108,
            "median": 41108,
            "max": 52900
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 2,
            "min": 29294,
            "mean": 41085,
            "median": 41085,
            "max": 52877
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29414,
            "mean": 48380,
            "median": 40693,
            "max": 75033
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 3,
            "min": 29284,
            "mean": 49840,
            "median": 57776,
            "max": 62460
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 85777,
            "mean": 94538,
            "median": 85777,
            "max": 107684
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 29311,
            "mean": 29311,
            "median": 29311,
            "max": 29311
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 35193,
            "mean": 35193,
            "median": 35193,
            "max": 35193
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 35182,
            "mean": 35182,
            "median": 35182,
            "max": 35182
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 34717,
            "mean": 34717,
            "median": 34717,
            "max": 34717
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 92286,
            "mean": 92286,
            "median": 92286,
            "max": 92286
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 79310,
            "mean": 79880,
            "median": 79310,
            "max": 96410
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 439516,
            "mean": 454841,
            "median": 456544,
            "max": 456544
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 52803,
            "mean": 52803,
            "median": 52803,
            "max": 52803
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35401,
            "mean": 35401,
            "median": 35401,
            "max": 35401
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35311,
            "mean": 35311,
            "median": 35311,
            "max": 35311
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35280,
            "mean": 35280,
            "median": 35280,
            "max": 35280
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 34230,
            "mean": 93911,
            "median": 77453,
            "max": 182412
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 34225,
            "mean": 34225,
            "median": 34225,
            "max": 34225
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111660,
            "mean": 111661,
            "median": 111660,
            "max": 111672
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 209625,
            "mean": 209631,
            "median": 209631,
            "max": 209637
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 29466,
            "mean": 29475,
            "median": 29478,
            "max": 29478
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 34043,
            "mean": 34043,
            "median": 34043,
            "max": 34043
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 123120,
            "mean": 123120,
            "median": 123120,
            "max": 123120
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 108118,
            "mean": 110449,
            "median": 108118,
            "max": 125218
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44198,
            "mean": 44203,
            "median": 44198,
            "max": 44210
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 54026,
            "mean": 65124,
            "median": 73926,
            "max": 73938
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 54208,
            "mean": 54208,
            "median": 54208,
            "max": 54208
          },
          "silverBalance()": {
            "calls": 2,
            "min": 28733,
            "mean": 28733,
            "median": 28733,
            "max": 28733
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 53395,
            "mean": 53395,
            "median": 53395,
            "max": 53395
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 74152,
            "mean": 74152,
            "median": 74152,
            "max": 74152
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 74143,
            "mean": 74143,
            "median": 74143,
            "max": 74143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1504242,
          "size": 6705
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "delay()": {
            "calls": 8,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34718,
            "mean": 34718,
            "median": 34718,
            "max": 34718
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 83838,
            "mean": 94930,
            "median": 103726,
            "max": 103738
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66479,
            "mean": 66479,
            "median": 66479,
            "max": 66479
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71408,
            "mean": 71408,
            "median": 71408,
            "max": 71408
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 2109044,
          "size": 9360
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 5319,
            "mean": 8910,
            "median": 10371,
            "max": 12897
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 32488,
            "mean": 32488,
            "median": 32488,
            "max": 32488
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94109,
            "mean": 94109,
            "median": 94109,
            "max": 94109
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2571,
            "mean": 2571,
            "median": 2571,
            "max": 2571
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 134758,
          "size": 313
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "flag()": {
            "calls": 10,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 3659938,
          "size": 17188
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 2485,
            "mean": 2485,
            "median": 2485,
            "max": 2485
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 6887,
            "mean": 6888,
            "median": 6887,
            "max": 6892
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "guildMasterRewardMultiplier()": {
            "calls": 1,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "guildMemberSlash()": {
            "calls": 2,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 2485,
            "mean": 2485,
            "median": 2485,
            "max": 2485
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 4908,
            "mean": 4908,
            "median": 4908,
            "max": 4908
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4253073,
          "size": 19551
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "state(uint48)": {
            "calls": 30,
            "min": 6852,
            "mean": 11493,
            "median": 10085,
            "max": 17552
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1493229,
          "size": 8987
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5019,
            "mean": 5019,
            "median": 5019,
            "max": 5019
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 99520,
            "mean": 100866,
            "median": 99532,
            "max": 116620
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1651867,
          "size": 7337
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 66862,
            "mean": 67522,
            "median": 66865,
            "max": 77264
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 33424,
            "mean": 66488,
            "median": 66901,
            "max": 77705
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29074,
            "mean": 40914,
            "median": 40914,
            "max": 52754
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 29164,
            "mean": 49133,
            "median": 33483,
            "max": 74768
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 1,
            "min": 29090,
            "mean": 29090,
            "median": 29090,
            "max": 29090
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 1,
            "min": 29075,
            "mean": 29075,
            "median": 29075,
            "max": 29075
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29136,
            "mean": 48066,
            "median": 40330,
            "max": 74734
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 1,
            "min": 29063,
            "mean": 29063,
            "median": 29063,
            "max": 29063
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 83239,
            "mean": 91997,
            "median": 83239,
            "max": 105139
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 28890,
            "mean": 28890,
            "median": 28890,
            "max": 28890
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 34002,
            "mean": 34002,
            "median": 34002,
            "max": 34002
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 33982,
            "mean": 33982,
            "median": 33982,
            "max": 33982
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 34335,
            "mean": 34335,
            "median": 34335,
            "max": 34335
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 90887,
            "mean": 90887,
            "median": 90887,
            "max": 90887
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 78157,
            "mean": 78727,
            "median": 78157,
            "max": 95257
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 432035,
            "mean": 447360,
            "median": 449063,
            "max": 449063
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 52522,
            "mean": 52522,
            "median": 52522,
            "max": 52522
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35159,
            "mean": 35159,
            "median": 35159,
            "max": 35159
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35070,
            "mean": 35070,
            "median": 35070,
            "max": 35070
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35041,
            "mean": 35041,
            "median": 35041,
            "max": 35041
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 33662,
            "mean": 92412,
            "median": 76143,
            "max": 180175
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 33858,
            "mean": 33858,
            "median": 33858,
            "max": 33858
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111344,
            "mean": 111345,
            "median": 111344,
            "max": 111356
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 208496,
            "mean": 208502,
            "median": 208502,
            "max": 208508
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 28893,
            "mean": 28902,
            "median": 28905,
            "max": 28905
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 33473,
            "mean": 33473,
            "median": 33473,
            "max": 33473
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 120722,
            "mean": 120722,
            "median": 120722,
            "max": 120722
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 106045,
            "mean": 108376,
            "median": 106045,
            "max": 123145
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44023,
            "mean": 44028,
            "median": 44023,
            "max": 44035
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 53566,
            "mean": 64664,
            "median": 73466,
            "max": 73478
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 53863,
            "mean": 53863,
            "median": 53863,
            "max": 53863
          },
          "silverBalance()": {
            "calls": 2,
            "min": 28585,
            "mean": 28585,
            "median": 28585,
            "max": 28585
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 53306,
            "mean": 53306,
            "median": 53306,
            "max": 53306
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 73549,
            "mean": 73549,
            "median": 73549,
            "max": 73549
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 73547,
            "mean": 73547,
            "median": 73547,
            "max": 73547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1251811,
          "size": 5561
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "delay()": {
            "calls": 8,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34473,
            "mean": 34473,
            "median": 34473,
            "max": 34473
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 82647,
            "mean": 93739,
            "median": 102535,
            "max": 102547
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66308,
            "mean": 66308,
            "median": 66308,
            "max": 66308
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71184,
            "mean": 71184,
            "median": 71184,
            "max": 71184
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1603976,
          "size": 7053
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 4850,
            "mean": 8197,
            "median": 9558,
            "max": 11912
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 32079,
            "mean": 32079,
            "median": 32079,
            "max": 32079
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94099,
            "mean": 94099,
            "median": 94099,
            "max": 94099
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 134600,
          "size": 316
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          },
          "flag()": {
            "calls": 10,
            "min": 2274,
            "mean": 2274,
            "median": 2274,
            "max": 2274
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 3228266,
          "size": 15089
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 6927,
            "mean": 6945,
            "median": 6954,
            "max": 6954
          },
          "gravitasThreshold()": {
            "calls": 1,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          },
          "guildMasterRewardMultiplier()": {
            "calls": 2,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "guildMemberSlash()": {
            "calls": 3,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 2527,
            "mean": 2527,
            "median": 2527,
            "max": 2527
          },
          "memberRewardPerSecond()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 4673,
            "mean": 4673,
            "median": 4673,
            "max": 4673
          },
          "slashForCashReward()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 3969729,
          "size": 18210
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2416,
            "mean": 2416,
            "median": 2416,
            "max": 2416
          },
          "state(uint48)": {
            "calls": 30,
            "min": 6916,
            "mean": 11546,
            "median": 10133,
            "max": 17599
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1317528,
          "size": 8016
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5098,
            "mean": 5098,
            "median": 5098,
            "max": 5098
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 99683,
            "mean": 101029,
            "median": 99695,
            "max": 116783
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1439874,
          "size": 6362
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 66851,
            "mean": 67526,
            "median": 66876,
            "max": 77333
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 33414,
            "mean": 66508,
            "median": 66929,
            "max": 77736
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29086,
            "mean": 40862,
            "median": 40862,
            "max": 52639
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 29164,
            "mean": 50434,
            "median": 40278,
            "max": 74636
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 2,
            "min": 29104,
            "mean": 40880,
            "median": 40880,
            "max": 52657
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 2,
            "min": 29073,
            "mean": 40849,
            "median": 40849,
            "max": 52626
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29153,
            "mean": 47999,
            "median": 40231,
            "max": 74613
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 3,
            "min": 29092,
            "mean": 49537,
            "median": 57439,
            "max": 62081
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 83012,
            "mean": 91770,
            "median": 83012,
            "max": 104912
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 28992,
            "mean": 28992,
            "median": 28992,
            "max": 28992
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 33783,
            "mean": 33783,
            "median": 33783,
            "max": 33783
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 33809,
            "mean": 33809,
            "median": 33809,
            "max": 33809
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 34396,
            "mean": 34396,
            "median": 34396,
            "max": 34396
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 90726,
            "mean": 90726,
            "median": 90726,
            "max": 90726
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 78058,
            "mean": 78628,
            "median": 78058,
            "max": 95158
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 431717,
            "mean": 447042,
            "median": 448745,
            "max": 448745
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 52469,
            "mean": 52469,
            "median": 52469,
            "max": 52469
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35182,
            "mean": 35182,
            "median": 35182,
            "max": 35182
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35093,
            "mean": 35093,
            "median": 35093,
            "max": 35093
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35060,
            "mean": 35060,
            "median": 35060,
            "max": 35060
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 33697,
            "mean": 92419,
            "median": 76147,
            "max": 180166
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 33903,
            "mean": 33903,
            "median": 33903,
            "max": 33903
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111354,
            "mean": 111355,
            "median": 111354,
            "max": 111366
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 208483,
            "mean": 208489,
            "median": 208489,
            "max": 208495
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 28981,
            "mean": 28990,
            "median": 28993,
            "max": 28993
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 33495,
            "mean": 33495,
            "median": 33495,
            "max": 33495
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 120248,
            "mean": 120248,
            "median": 120248,
            "max": 120248
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 106028,
            "mean": 108359,
            "median": 106028,
            "max": 123128
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44032,
            "mean": 44037,
            "median": 44032,
            "max": 44044
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 53458,
            "mean": 64556,
            "median": 73358,
            "max": 73370
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 53894,
            "mean": 53894,
            "median": 53894,
            "max": 53894
          },
          "silverBalance()": {
            "calls": 2,
            "min": 28582,
            "mean": 28582,
            "median": 28582,
            "max": 28582
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 53178,
            "mean": 53178,
            "median": 53178,
            "max": 53178
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 73600,
            "mean": 73600,
            "median": 73600,
            "max": 73600
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 73633,
            "mean": 73633,
            "median": 73633,
            "max": 73633
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1333105,
          "size": 5915
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "delay()": {
            "calls": 8,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34389,
            "mean": 34389,
            "median": 34389,
            "max": 34389
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 82820,
            "mean": 93912,
            "median": 102708,
            "max": 102720
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66299,
            "mean": 66299,
            "median": 66299,
            "max": 66299
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71180,
            "mean": 71180,
            "median": 71180,
            "max": 71180
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1466338,
          "size": 6368
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 4822,
            "mean": 8163,
            "median": 9522,
            "max": 11872
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 31685,
            "mean": 31685,
            "median": 31685,
            "max": 31685
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94135,
            "mean": 94135,
            "median": 94135,
            "max": 94135
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 122832,
          "size": 259
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2267,
            "mean": 2267,
            "median": 2267,
            "max": 2267
          },
          "flag()": {
            "calls": 10,
            "min": 2262,
            "mean": 2262,
            "median": 2262,
            "max": 2262
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "lil-web3": {
    "solc": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 214636,
          "size": 777
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "register(string)": {
            "calls": 5,
            "min": 24231,
            "mean": 40403,
            "median": 44447,
            "max": 44447
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24628,
            "mean": 26195,
            "median": 26195,
            "max": 27762
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 414609,
          "size": 1723
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30853,
            "mean": 60965,
            "median": 65265,
            "max": 72679
          },
          "fees(address)": {
            "calls": 6,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2494,
            "mean": 2567,
            "median": 2494,
            "max": 2714
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21889,
            "mean": 36049,
            "median": 45485,
            "max": 45485
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21985,
            "mean": 36564,
            "median": 36564,
            "max": 51143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1313690,
          "size": 5771
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8794,
            "mean": 8794,
            "median": 8794,
            "max": 8794
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30048,
            "mean": 52191,
            "median": 49512,
            "max": 79695
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 801444,
            "mean": 829614,
            "median": 836657,
            "max": 836657
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4374
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2530,
            "mean": 2530,
            "median": 2530,
            "max": 2530
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51225,
            "mean": 51225,
            "median": 51225,
            "max": 51225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 810087,
          "size": 3507
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44596,
            "mean": 76878,
            "median": 85813,
            "max": 98272
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "nonce()": {
            "calls": 1914,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "quorum()": {
            "calls": 256,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43555,
            "mean": 82607,
            "median": 82952,
            "max": 83264
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 44049,
            "mean": 68446,
            "median": 67593,
            "max": 103060
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1186062,
          "size": 6547
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23535,
            "mean": 64326,
            "median": 74524,
            "max": 74524
          },
          "getState()": {
            "calls": 4,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "manager()": {
            "calls": 4,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23649,
            "mean": 30771,
            "median": 30706,
            "max": 37960
          },
          "renounce()": {
            "calls": 2,
            "min": 23447,
            "mean": 25274,
            "median": 25274,
            "max": 27102
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23585,
            "mean": 26811,
            "median": 27612,
            "max": 27624
          },
          "token()": {
            "calls": 11,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "withdraw()": {
            "calls": 2,
            "min": 23378,
            "mean": 27354,
            "median": 27354,
            "max": 31330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4462
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 459643,
          "size": 1814
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30162,
            "mean": 45206,
            "median": 30198,
            "max": 75259
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30139,
            "mean": 48753,
            "median": 48753,
            "max": 67367
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8706,
            "mean": 8706,
            "median": 8706,
            "max": 8706
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120702,
            "mean": 146576,
            "median": 156001,
            "max": 156001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 787688,
          "size": 3473
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17971,
            "mean": 18049,
            "median": 18065,
            "max": 18092
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17544,
            "mean": 17544,
            "median": 17544,
            "max": 17544
          },
          "nonce()": {
            "calls": 2,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23739,
            "mean": 32557,
            "median": 23799,
            "max": 50135
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23561,
            "mean": 25019,
            "median": 25749,
            "max": 25749
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 218530,
            "mean": 220660,
            "median": 218530,
            "max": 223330
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49906,
            "mean": 53850,
            "median": 53850,
            "max": 57795
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23589,
            "mean": 70324,
            "median": 93692,
            "max": 93692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 509813,
          "size": 1971
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26465,
            "mean": 26465,
            "median": 26465,
            "max": 26465
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44128,
            "mean": 44128,
            "median": 44128,
            "max": 44128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 695451,
          "size": 3800
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 552,
            "mean": 2097,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68080,
            "mean": 68087,
            "median": 68092,
            "max": 68092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 865233,
          "size": 4192
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72961,
            "mean": 72961,
            "median": 72961,
            "max": 72961
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 46126,
            "mean": 46126,
            "median": 46126,
            "max": 46126
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 554804,
          "size": 2262
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44179,
            "mean": 44179,
            "median": 44179,
            "max": 44179
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43480,
            "mean": 43480,
            "median": 43480,
            "max": 43480
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43564,
            "mean": 43564,
            "median": 43564,
            "max": 43564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 864153,
          "size": 4187
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72946,
            "mean": 72946,
            "median": 72946,
            "max": 72946
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24214,
            "mean": 44837,
            "median": 46126,
            "max": 46126
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54441,
            "mean": 54441,
            "median": 54441,
            "max": 54441
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 695399,
          "size": 3799
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33880,
            "mean": 62380,
            "median": 68080,
            "max": 68080
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 259012,
          "size": 984
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2865,
            "mean": 2865,
            "median": 2865,
            "max": 2865
          },
          "register(string)": {
            "calls": 5,
            "min": 24425,
            "mean": 40673,
            "median": 44735,
            "max": 44735
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24830,
            "mean": 26436,
            "median": 26436,
            "max": 28043
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 489958,
          "size": 2073
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 31025,
            "mean": 61491,
            "median": 65920,
            "max": 73328
          },
          "fees(address)": {
            "calls": 6,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2631,
            "mean": 2744,
            "median": 2631,
            "max": 2970
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 22000,
            "mean": 36192,
            "median": 45648,
            "max": 45648
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 22025,
            "mean": 36623,
            "median": 36623,
            "max": 51222
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1399400,
          "size": 6170
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8931,
            "mean": 8931,
            "median": 8931,
            "max": 8931
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30065,
            "mean": 52412,
            "median": 49819,
            "max": 79945
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 862854,
            "mean": 891008,
            "median": 898047,
            "max": 898047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4495
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51315,
            "mean": 51315,
            "median": 51315,
            "max": 51315
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 989853,
          "size": 4531
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44791,
            "mean": 78028,
            "median": 87278,
            "max": 99922
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "nonce()": {
            "calls": 1914,
            "min": 2304,
            "mean": 2304,
            "median": 2304,
            "max": 2304
          },
          "quorum()": {
            "calls": 256,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43672,
            "mean": 83778,
            "median": 84188,
            "max": 84536
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 44197,
            "mean": 69222,
            "median": 68421,
            "max": 104413
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1287947,
          "size": 6881
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23433,
            "mean": 64286,
            "median": 74500,
            "max": 74500
          },
          "getState()": {
            "calls": 4,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "manager()": {
            "calls": 4,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23712,
            "mean": 30766,
            "median": 30676,
            "max": 37911
          },
          "renounce()": {
            "calls": 2,
            "min": 23408,
            "mean": 25278,
            "median": 25278,
            "max": 27148
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23618,
            "mean": 26941,
            "median": 27766,
            "max": 27778
          },
          "token()": {
            "calls": 11,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "withdraw()": {
            "calls": 2,
            "min": 23408,
            "mean": 27386,
            "median": 27386,
            "max": 31364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4570
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 462002,
          "size": 1828
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30109,
            "mean": 45193,
            "median": 30140,
            "max": 75332
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30092,
            "mean": 48764,
            "median": 48764,
            "max": 67437
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8908,
            "mean": 8908,
            "median": 8908,
            "max": 8908
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120600,
            "mean": 146386,
            "median": 155787,
            "max": 155787
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 920742,
          "size": 4025
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "balanceOf(uint256,address)": {
            "calls": 22,
            "min": 18009,
            "mean": 18130,
            "median": 18135,
            "max": 18205
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17659,
            "mean": 17659,
            "median": 17659,
            "max": 17659
          },
          "nonce()": {
            "calls": 2,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23840,
            "mean": 32742,
            "median": 23900,
            "max": 50486
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23691,
            "mean": 34897,
            "median": 25881,
            "max": 55121
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 219146,
            "mean": 221276,
            "median": 219146,
            "max": 223946
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49934,
            "mean": 53924,
            "median": 53924,
            "max": 57915
          },
          "withdraw(uint256)": {
            "calls": 4,
            "min": 23674,
            "mean": 66489,
            "median": 74259,
            "max": 93766
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 578775,
          "size": 2291
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26522,
            "mean": 26522,
            "median": 26522,
            "max": 26522
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26513,
            "mean": 26513,
            "median": 26513,
            "max": 26513
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44280,
            "mean": 44280,
            "median": 44280,
            "max": 44280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 755165,
          "size": 3772
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 561,
            "mean": 2106,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68199,
            "mean": 68206,
            "median": 68211,
            "max": 68211
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 922041,
          "size": 4159
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 73074,
            "mean": 73074,
            "median": 73074,
            "max": 73074
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 46075,
            "mean": 46075,
            "median": 46075,
            "max": 46075
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 590096,
          "size": 2429
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44359,
            "mean": 44359,
            "median": 44359,
            "max": 44359
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43633,
            "mean": 43633,
            "median": 43633,
            "max": 43633
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 955767,
          "size": 4315
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 73050,
            "mean": 73050,
            "median": 73050,
            "max": 73050
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24163,
            "mean": 44786,
            "median": 46075,
            "max": 46075
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54549,
            "mean": 54549,
            "median": 54549,
            "max": 54549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 755149,
          "size": 3771
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 14,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33999,
            "mean": 62499,
            "median": 68199,
            "max": 68199
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 266419,
          "size": 1020
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "register(string)": {
            "calls": 5,
            "min": 24145,
            "mean": 40309,
            "median": 44350,
            "max": 44350
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24502,
            "mean": 26053,
            "median": 26053,
            "max": 27605
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 445312,
          "size": 1862
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30298,
            "mean": 59680,
            "median": 63745,
            "max": 71208
          },
          "fees(address)": {
            "calls": 6,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2449,
            "mean": 2516,
            "median": 2449,
            "max": 2650
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21831,
            "mean": 35987,
            "median": 45420,
            "max": 45420
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21869,
            "mean": 36295,
            "median": 36295,
            "max": 50721
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1534549,
          "size": 6795
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8690,
            "mean": 8690,
            "median": 8690,
            "max": 8690
          },
          "join(uint256)": {
            "calls": 4,
            "min": 29935,
            "mean": 51829,
            "median": 49153,
            "max": 79076
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 871026,
            "mean": 899005,
            "median": 906000,
            "max": 906000
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 5285
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46206,
            "mean": 46206,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 50997,
            "mean": 50997,
            "median": 50997,
            "max": 50997
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 857730,
          "size": 3933
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 43904,
            "mean": 74572,
            "median": 82950,
            "max": 95294
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "nonce()": {
            "calls": 1914,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "quorum()": {
            "calls": 256,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 42947,
            "mean": 79996,
            "median": 80281,
            "max": 80641
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 43383,
            "mean": 66622,
            "median": 65611,
            "max": 100361
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1256197,
          "size": 7600
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23425,
            "mean": 63965,
            "median": 74100,
            "max": 74100
          },
          "getState()": {
            "calls": 4,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "manager()": {
            "calls": 4,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23627,
            "mean": 30522,
            "median": 30358,
            "max": 37581
          },
          "renounce()": {
            "calls": 2,
            "min": 23401,
            "mean": 25222,
            "median": 25222,
            "max": 27043
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23539,
            "mean": 26740,
            "median": 27535,
            "max": 27547
          },
          "token()": {
            "calls": 11,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "withdraw()": {
            "calls": 2,
            "min": 23369,
            "mean": 27339,
            "median": 27339,
            "max": 31309
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 5378
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 406377,
          "size": 1569
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 29943,
            "mean": 44842,
            "median": 29948,
            "max": 74635
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 29979,
            "mean": 48371,
            "median": 48371,
            "max": 66764
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120017,
            "mean": 145643,
            "median": 154994,
            "max": 154994
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 816443,
          "size": 3577
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17678,
            "mean": 17748,
            "median": 17765,
            "max": 17784
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17385,
            "mean": 17385,
            "median": 17385,
            "max": 17385
          },
          "nonce()": {
            "calls": 2,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23725,
            "mean": 32468,
            "median": 23785,
            "max": 49894
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23590,
            "mean": 25032,
            "median": 25753,
            "max": 25753
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 217807,
            "mean": 219937,
            "median": 217807,
            "max": 222607
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49089,
            "mean": 53097,
            "median": 53097,
            "max": 57105
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23581,
            "mean": 69927,
            "median": 93101,
            "max": 93101
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 495906,
          "size": 1902
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26423,
            "mean": 26423,
            "median": 26423,
            "max": 26423
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26433,
            "mean": 26433,
            "median": 26433,
            "max": 26433
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44198,
            "mean": 44198,
            "median": 44198,
            "max": 44198
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 760604,
          "size": 3908
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 419,
            "mean": 1964,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 67924,
            "mean": 67931,
            "median": 67936,
            "max": 67936
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 940672,
          "size": 4214
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72873,
            "mean": 72873,
            "median": 72873,
            "max": 72873
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 45865,
            "mean": 45865,
            "median": 45865,
            "max": 45865
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 563844,
          "size": 2308
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44070,
            "mean": 44070,
            "median": 44070,
            "max": 44070
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43518,
            "mean": 43518,
            "median": 43518,
            "max": 43518
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43535,
            "mean": 43535,
            "median": 43535,
            "max": 43535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 939598,
          "size": 4209
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72860,
            "mean": 72860,
            "median": 72860,
            "max": 72860
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 23953,
            "mean": 44576,
            "median": 45865,
            "max": 45865
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54244,
            "mean": 54244,
            "median": 54244,
            "max": 54244
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 760576,
          "size": 3907
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46206,
            "mean": 46206,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33724,
            "mean": 62224,
            "median": 67924,
            "max": 67924
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 256540,
          "size": 973
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2634,
            "mean": 2634,
            "median": 2634,
            "max": 2634
          },
          "register(string)": {
            "calls": 5,
            "min": 24165,
            "mean": 40311,
            "median": 44348,
            "max": 44348
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24559,
            "mean": 26098,
            "median": 26098,
            "max": 27638
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 393326,
          "size": 1637
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30333,
            "mean": 59709,
            "median": 63774,
            "max": 71234
          },
          "fees(address)": {
            "calls": 6,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2478,
            "mean": 2545,
            "median": 2478,
            "max": 2679
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21841,
            "mean": 35997,
            "median": 45424,
            "max": 45424
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21877,
            "mean": 36265,
            "median": 36265,
            "max": 50654
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1413373,
          "size": 6237
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "join(uint256)": {
            "calls": 4,
            "min": 29947,
            "mean": 51997,
            "median": 49407,
            "max": 79228
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 796195,
            "mean": 824156,
            "median": 831147,
            "max": 831147
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4764
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46260,
            "mean": 46260,
            "median": 46260,
            "max": 46260
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51048,
            "mean": 51048,
            "median": 51048,
            "max": 51048
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 795883,
          "size": 3542
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 43945,
            "mean": 75432,
            "median": 84114,
            "max": 96496
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "nonce()": {
            "calls": 1914,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "quorum()": {
            "calls": 256,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43033,
            "mean": 81153,
            "median": 81523,
            "max": 81859
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 43453,
            "mean": 67284,
            "median": 66341,
            "max": 101499
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1126224,
          "size": 6806
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23400,
            "mean": 63943,
            "median": 74079,
            "max": 74079
          },
          "getState()": {
            "calls": 4,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "manager()": {
            "calls": 4,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23664,
            "mean": 30558,
            "median": 30417,
            "max": 37595
          },
          "renounce()": {
            "calls": 2,
            "min": 23376,
            "mean": 25240,
            "median": 25240,
            "max": 27104
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23550,
            "mean": 26689,
            "median": 27468,
            "max": 27480
          },
          "token()": {
            "calls": 11,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "withdraw()": {
            "calls": 2,
            "min": 23367,
            "mean": 27324,
            "median": 27324,
            "max": 31282
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4845
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 381251,
          "size": 1452
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 29973,
            "mean": 44899,
            "median": 29994,
            "max": 74732
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 29991,
            "mean": 48465,
            "median": 48465,
            "max": 66940
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8688,
            "mean": 8688,
            "median": 8688,
            "max": 8688
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120030,
            "mean": 145638,
            "median": 154981,
            "max": 154981
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 756430,
          "size": 3240
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "balanceOf(uint256,address)": {
            "calls": 22,
            "min": 17665,
            "mean": 17739,
            "median": 17756,
            "max": 17782
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17260,
            "mean": 17260,
            "median": 17260,
            "max": 17260
          },
          "nonce()": {
            "calls": 2,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23741,
            "mean": 32450,
            "median": 23801,
            "max": 49809
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23606,
            "mean": 34550,
            "median": 25791,
            "max": 54255
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 217751,
            "mean": 219881,
            "median": 217751,
            "max": 222551
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 48870,
            "mean": 52870,
            "median": 52870,
            "max": 56870
          },
          "withdraw(uint256)": {
            "calls": 4,
            "min": 23597,
            "mean": 65919,
            "median": 73523,
            "max": 93036
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 448034,
          "size": 1679
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26422,
            "mean": 26422,
            "median": 26422,
            "max": 26422
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44103,
            "mean": 44103,
            "median": 44103,
            "max": 44103
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 679795,
          "size": 3464
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 442,
            "mean": 1987,
            "median": 2442,
            "max": 2442
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 67945,
            "mean": 67952,
            "median": 67957,
            "max": 67957
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 819347,
          "size": 3650
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72906,
            "mean": 72906,
            "median": 72906,
            "max": 72906
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 45890,
            "mean": 45890,
            "median": 45890,
            "max": 45890
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 556027,
          "size": 2269
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44072,
            "mean": 44072,
            "median": 44072,
            "max": 44072
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43503,
            "mean": 43503,
            "median": 43503,
            "max": 43503
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43525,
            "mean": 43525,
            "median": 43525,
            "max": 43525
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 828428,
          "size": 3692
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72891,
            "mean": 72891,
            "median": 72891,
            "max": 72891
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2422,
            "mean": 2422,
            "median": 2422,
            "max": 2422
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 23971,
            "mean": 44594,
            "median": 45883,
            "max": 45883
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54225,
            "mean": 54225,
            "median": 54225,
            "max": 54225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 679767,
          "size": 3463
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46260,
            "mean": 46260,
            "median": 46260,
            "max": 46260
          },
          "balanceOf(address)": {
            "calls": 14,
            "min": 2442,
            "mean": 2442,
            "median": 2442,
            "max": 2442
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33745,
            "mean": 62245,
            "median": 67945,
            "max": 67945
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "maple-erc20": {
    "solc": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 693522,
          "size": 3836
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 3220,
            "mean": 3220,
            "median": 3220,
            "max": 3220
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2870,
            "mean": 2870,
            "median": 2870,
            "max": 2870
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1040396,
          "size": 5145
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25608,
            "min": 29286,
            "mean": 50846,
            "median": 51294,
            "max": 51570
          },
          "burn(address,uint256)": {
            "calls": 449,
            "min": 35830,
            "mean": 39178,
            "median": 36058,
            "max": 44782
          },
          "mint(address,uint256)": {
            "calls": 23538,
            "min": 35687,
            "mean": 61377,
            "median": 61511,
            "max": 95999
          },
          "sum()": {
            "calls": 1,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "token()": {
            "calls": 1,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "transfer(address,uint256)": {
            "calls": 303,
            "min": 33790,
            "mean": 34600,
            "median": 34006,
            "max": 56730
          },
          "transferFrom(address,address,uint256)": {
            "calls": 267,
            "min": 38241,
            "mean": 38665,
            "median": 38673,
            "max": 38673
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 259901,
          "size": 982
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29695,
            "mean": 46258,
            "median": 49655,
            "max": 49979
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27800,
            "mean": 51234,
            "median": 47155,
            "max": 81367
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27649,
            "mean": 39082,
            "median": 39122,
            "max": 50596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 750735,
          "size": 4101
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2914,
            "mean": 2914,
            "median": 2914,
            "max": 2914
          },
          "approve(address,uint256)": {
            "calls": 42591,
            "min": 4450,
            "mean": 37542,
            "median": 45742,
            "max": 46294
          },
          "balanceOf(address)": {
            "calls": 2941,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          },
          "burn(address,uint256)": {
            "calls": 822,
            "min": 6819,
            "mean": 24101,
            "median": 28379,
            "max": 34351
          },
          "decimals()": {
            "calls": 257,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 724,
            "min": 5035,
            "mean": 20468,
            "median": 24557,
            "max": 29767
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16330,
            "min": 4785,
            "mean": 24533,
            "median": 24685,
            "max": 46461
          },
          "mint(address,uint256)": {
            "calls": 41000,
            "min": 6731,
            "mean": 43514,
            "median": 50823,
            "max": 68475
          },
          "name()": {
            "calls": 257,
            "min": 2756,
            "mean": 4870,
            "median": 2765,
            "max": 9344
          },
          "symbol()": {
            "calls": 257,
            "min": 2999,
            "mean": 5285,
            "median": 5194,
            "max": 9590
          },
          "totalSupply()": {
            "calls": 1406,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 824,
            "min": 6998,
            "mean": 28863,
            "median": 28558,
            "max": 51282
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1996,
            "min": 11354,
            "mean": 38436,
            "median": 48790,
            "max": 54354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 700698,
          "size": 3661
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2973,
            "mean": 2973,
            "median": 2973,
            "max": 2973
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2777,
            "mean": 2777,
            "median": 2777,
            "max": 2777
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2583,
            "mean": 2583,
            "median": 2583,
            "max": 2583
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1064513,
          "size": 5040
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25507,
            "min": 31364,
            "mean": 51172,
            "median": 51600,
            "max": 51876
          },
          "burn(address,uint256)": {
            "calls": 470,
            "min": 35823,
            "mean": 38522,
            "median": 36039,
            "max": 44739
          },
          "mint(address,uint256)": {
            "calls": 23553,
            "min": 35791,
            "mean": 61530,
            "median": 61615,
            "max": 96103
          },
          "sum()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "token()": {
            "calls": 1,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "transfer(address,uint256)": {
            "calls": 411,
            "min": 33796,
            "mean": 37979,
            "median": 34012,
            "max": 56952
          },
          "transferFrom(address,address,uint256)": {
            "calls": 296,
            "min": 38689,
            "mean": 39123,
            "median": 39133,
            "max": 39133
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 283357,
          "size": 1092
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29959,
            "mean": 46542,
            "median": 49931,
            "max": 50243
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 28026,
            "mean": 51252,
            "median": 47159,
            "max": 81371
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27638,
            "mean": 39135,
            "median": 39164,
            "max": 50690
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 766526,
          "size": 3971
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 42822,
            "min": 4669,
            "mean": 37631,
            "median": 45973,
            "max": 46513
          },
          "balanceOf(address)": {
            "calls": 2929,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "burn(address,uint256)": {
            "calls": 801,
            "min": 6835,
            "mean": 24478,
            "median": 28395,
            "max": 34343
          },
          "decimals()": {
            "calls": 257,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 702,
            "min": 4971,
            "mean": 20848,
            "median": 24493,
            "max": 29715
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16349,
            "min": 4955,
            "mean": 24693,
            "median": 24855,
            "max": 46727
          },
          "mint(address,uint256)": {
            "calls": 41185,
            "min": 6792,
            "mean": 43556,
            "median": 50908,
            "max": 68536
          },
          "name()": {
            "calls": 257,
            "min": 2921,
            "mean": 5303,
            "median": 7319,
            "max": 9478
          },
          "symbol()": {
            "calls": 257,
            "min": 2987,
            "mean": 5363,
            "median": 5226,
            "max": 9544
          },
          "totalSupply()": {
            "calls": 1394,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 936,
            "min": 7035,
            "mean": 30692,
            "median": 28595,
            "max": 51535
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2008,
            "min": 11691,
            "mean": 39008,
            "median": 49121,
            "max": 54667
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 823826,
          "size": 4913
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2986,
            "mean": 2986,
            "median": 2986,
            "max": 2986
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2431,
            "mean": 2431,
            "median": 2431,
            "max": 2431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1187138,
          "size": 6330
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25756,
            "min": 30907,
            "mean": 50702,
            "median": 51119,
            "max": 51407
          },
          "burn(address,uint256)": {
            "calls": 454,
            "min": 32979,
            "mean": 38127,
            "median": 35479,
            "max": 44119
          },
          "mint(address,uint256)": {
            "calls": 23292,
            "min": 35265,
            "mean": 60912,
            "median": 61065,
            "max": 95565
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "token()": {
            "calls": 1,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 328,
            "min": 31475,
            "mean": 35589,
            "median": 33463,
            "max": 56187
          },
          "transferFrom(address,address,uint256)": {
            "calls": 318,
            "min": 37818,
            "mean": 38245,
            "median": 38250,
            "max": 38250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 255911,
          "size": 969
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29496,
            "mean": 46011,
            "median": 49468,
            "max": 49780
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27174,
            "mean": 50158,
            "median": 46034,
            "max": 80234
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27112,
            "mean": 38526,
            "median": 38562,
            "max": 50013
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 885618,
          "size": 5199
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "approve(address,uint256)": {
            "calls": 42951,
            "min": 4427,
            "mean": 37480,
            "median": 45719,
            "max": 46271
          },
          "balanceOf(address)": {
            "calls": 2942,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(address,uint256)": {
            "calls": 835,
            "min": 6536,
            "mean": 23622,
            "median": 28096,
            "max": 34068
          },
          "decimals()": {
            "calls": 257,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 686,
            "min": 4611,
            "mean": 20952,
            "median": 24345,
            "max": 29319
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16278,
            "min": 4580,
            "mean": 24283,
            "median": 24480,
            "max": 46400
          },
          "mint(address,uint256)": {
            "calls": 40190,
            "min": 6539,
            "mean": 43455,
            "median": 50631,
            "max": 68283
          },
          "name()": {
            "calls": 257,
            "min": 2692,
            "mean": 5057,
            "median": 7054,
            "max": 9247
          },
          "symbol()": {
            "calls": 257,
            "min": 2721,
            "mean": 4933,
            "median": 4890,
            "max": 9276
          },
          "totalSupply()": {
            "calls": 1407,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 841,
            "min": 6667,
            "mean": 29573,
            "median": 28227,
            "max": 50951
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2074,
            "min": 11059,
            "mean": 37764,
            "median": 32987,
            "max": 54059
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 721495,
          "size": 4347
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2885,
            "mean": 2885,
            "median": 2885,
            "max": 2885
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2563,
            "mean": 2563,
            "median": 2563,
            "max": 2563
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1028952,
          "size": 5477
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25667,
            "min": 29125,
            "mean": 50691,
            "median": 51145,
            "max": 51421
          },
          "burn(address,uint256)": {
            "calls": 449,
            "min": 35278,
            "mean": 38576,
            "median": 35494,
            "max": 44194
          },
          "mint(address,uint256)": {
            "calls": 23509,
            "min": 35274,
            "mean": 60928,
            "median": 61098,
            "max": 95586
          },
          "sum()": {
            "calls": 1,
            "min": 2266,
            "mean": 2266,
            "median": 2266,
            "max": 2266
          },
          "token()": {
            "calls": 1,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "transfer(address,uint256)": {
            "calls": 371,
            "min": 33172,
            "mean": 36262,
            "median": 33388,
            "max": 56136
          },
          "transferFrom(address,address,uint256)": {
            "calls": 322,
            "min": 37790,
            "mean": 38227,
            "median": 38234,
            "max": 38234
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 218200,
          "size": 792
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29435,
            "mean": 46042,
            "median": 49407,
            "max": 49719
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27206,
            "mean": 50115,
            "median": 45978,
            "max": 80178
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27139,
            "mean": 38519,
            "median": 38549,
            "max": 49959
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 772031,
          "size": 4582
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "approve(address,uint256)": {
            "calls": 42666,
            "min": 4508,
            "mean": 37591,
            "median": 45800,
            "max": 46352
          },
          "balanceOf(address)": {
            "calls": 2964,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "burn(address,uint256)": {
            "calls": 848,
            "min": 6557,
            "mean": 24175,
            "median": 28117,
            "max": 34077
          },
          "decimals()": {
            "calls": 257,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 708,
            "min": 4697,
            "mean": 20503,
            "median": 24351,
            "max": 29441
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16239,
            "min": 4659,
            "mean": 24374,
            "median": 24559,
            "max": 46347
          },
          "mint(address,uint256)": {
            "calls": 41058,
            "min": 6562,
            "mean": 43318,
            "median": 50654,
            "max": 68306
          },
          "name()": {
            "calls": 257,
            "min": 2560,
            "mean": 4701,
            "median": 2605,
            "max": 9113
          },
          "symbol()": {
            "calls": 257,
            "min": 2577,
            "mean": 4737,
            "median": 2624,
            "max": 9131
          },
          "totalSupply()": {
            "calls": 1429,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transfer(address,uint256)": {
            "calls": 904,
            "min": 6737,
            "mean": 30030,
            "median": 28297,
            "max": 51045
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2041,
            "min": 11175,
            "mean": 38366,
            "median": 33103,
            "max": 54151
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "openzeppelin": {
    "solc": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 298147,
          "size": 1190
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3252,
            "min": 487,
            "mean": 1374,
            "median": 487,
            "max": 2487
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 513368,
          "size": 2656
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 25985,
            "mean": 35925,
            "median": 25985,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 39408,
            "min": 537,
            "mean": 2452,
            "median": 2537,
            "max": 2537
          },
          "burn(address,uint256)": {
            "calls": 1251,
            "min": 33957,
            "mean": 34101,
            "median": 34089,
            "max": 34329
          },
          "decimals()": {
            "calls": 283,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "mint(address,uint256)": {
            "calls": 58653,
            "min": 28009,
            "mean": 51095,
            "median": 50781,
            "max": 68409
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 961671,
          "size": 5032
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 3115,
            "mean": 3115,
            "median": 3115,
            "max": 3115
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25793,
            "mean": 32624,
            "median": 26021,
            "max": 46305
          },
          "asset()": {
            "calls": 256,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29378,
            "mean": 29581,
            "median": 29426,
            "max": 30011
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29818,
            "mean": 30042,
            "median": 29866,
            "max": 30451
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 44203,
            "mean": 73422,
            "median": 66142,
            "max": 100630
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2951,
            "mean": 2951,
            "median": 2951,
            "max": 2951
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10908,
            "mean": 10999,
            "median": 10908,
            "max": 11157
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 44312,
            "mean": 55926,
            "median": 55569,
            "max": 76064
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29903,
            "mean": 30059,
            "median": 29927,
            "max": 30524
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29783,
            "mean": 29954,
            "median": 29807,
            "max": 30368
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29576,
            "mean": 29724,
            "median": 29600,
            "max": 30197
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29475,
            "mean": 29624,
            "median": 29499,
            "max": 30072
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24490,
            "mean": 51576,
            "median": 54472,
            "max": 77576
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5587,
            "mean": 5587,
            "median": 5587,
            "max": 5587
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 32461,
            "mean": 53954,
            "median": 56089,
            "max": 79322
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4416101,
          "size": 22241
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 572,
            "mean": 747,
            "median": 826,
            "max": 826
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 1042,
            "mean": 1049,
            "median": 1049,
            "max": 1056
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 1178,
            "mean": 1298,
            "median": 1298,
            "max": 1419
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 6514,
            "mean": 6536,
            "median": 6514,
            "max": 6580
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3368759,
          "size": 17991
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2563,
            "min": 19278,
            "mean": 21500,
            "median": 22078,
            "max": 22078
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2489,
            "min": 19374,
            "mean": 21864,
            "median": 22174,
            "max": 22174
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 5176,
            "mean": 5176,
            "median": 5176,
            "max": 5176
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4736,
            "mean": 4736,
            "median": 4736,
            "max": 4736
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1725428,
          "size": 9209
        },
        "functions": {
          "clock()": {
            "calls": 5054,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 892868,
          "size": 5067
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 34835,
            "mean": 52882,
            "median": 50356,
            "max": 68817
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 69693,
            "mean": 120630,
            "median": 86661,
            "max": 294434
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4109,
            "min": 1802,
            "mean": 1802,
            "median": 1802,
            "max": 1802
          },
          "nonces(address)": {
            "calls": 1176,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 10370,
            "mean": 13060,
            "median": 13754,
            "max": 13754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1344400,
          "size": 6546
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 524,
            "mean": 524,
            "median": 524,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 970520,
          "size": 5180
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1104619,
          "size": 7105
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2605,
            "mean": 2605,
            "median": 2605,
            "max": 2605
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 61467,
            "mean": 76272,
            "median": 77240,
            "max": 79655
          },
          "ownerOf(uint256)": {
            "calls": 2814,
            "min": 2692,
            "mean": 10589,
            "median": 11888,
            "max": 25833
          },
          "totalMinted()": {
            "calls": 1534,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 68387,
            "mean": 68664,
            "median": 68831,
            "max": 68886
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1597876,
          "size": 7812
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 955,
            "mean": 964,
            "median": 964,
            "max": 976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1853957,
          "size": 9091
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 27130,
            "mean": 27383,
            "median": 27514,
            "max": 27526
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 1637918,
          "size": 8012
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1644,
            "mean": 1686,
            "median": 1688,
            "max": 1688
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1245,
            "mean": 1251,
            "median": 1245,
            "max": 1275
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1650,
            "mean": 1692,
            "median": 1694,
            "max": 1694
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1324,
            "mean": 1330,
            "median": 1324,
            "max": 1354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1678567,
          "size": 8215
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 26329,
            "mean": 26434,
            "median": 26389,
            "max": 26581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1669553,
          "size": 8170
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26271,
            "mean": 26384,
            "median": 26331,
            "max": 26595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1643525,
          "size": 8040
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26239,
            "mean": 26355,
            "median": 26299,
            "max": 26575
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1537006,
          "size": 7508
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 28262,
            "mean": 28398,
            "median": 28334,
            "max": 28658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 319731,
          "size": 1287
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3241,
            "min": 477,
            "mean": 1360,
            "median": 477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 527833,
          "size": 2420
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2832,
            "mean": 2832,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 26394,
            "mean": 36332,
            "median": 26394,
            "max": 46678
          },
          "balanceOf(address)": {
            "calls": 39423,
            "min": 559,
            "mean": 2474,
            "median": 2559,
            "max": 2559
          },
          "burn(address,uint256)": {
            "calls": 1307,
            "min": 34258,
            "mean": 34400,
            "median": 34390,
            "max": 34630
          },
          "decimals()": {
            "calls": 283,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "mint(address,uint256)": {
            "calls": 58597,
            "min": 28315,
            "mean": 51434,
            "median": 51075,
            "max": 68727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1093288,
          "size": 5459
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 26229,
            "mean": 33058,
            "median": 26457,
            "max": 46741
          },
          "asset()": {
            "calls": 256,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2572,
            "mean": 2572,
            "median": 2572,
            "max": 2572
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 30009,
            "mean": 30193,
            "median": 30033,
            "max": 30687
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 30031,
            "mean": 30233,
            "median": 30055,
            "max": 30709
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 45683,
            "mean": 75000,
            "median": 67722,
            "max": 102204
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 11064,
            "mean": 11179,
            "median": 11064,
            "max": 11358
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 45657,
            "mean": 57362,
            "median": 56905,
            "max": 77278
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 30052,
            "mean": 30207,
            "median": 30076,
            "max": 30718
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 30072,
            "mean": 30253,
            "median": 30096,
            "max": 30714
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 30030,
            "mean": 30204,
            "median": 30054,
            "max": 30672
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 30096,
            "mean": 30243,
            "median": 30120,
            "max": 30702
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24419,
            "mean": 52823,
            "median": 55625,
            "max": 78273
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 32933,
            "mean": 55541,
            "median": 57976,
            "max": 80744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4210346,
          "size": 21186
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 588,
            "mean": 963,
            "median": 1113,
            "max": 1113
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 1234,
            "mean": 1255,
            "median": 1255,
            "max": 1277
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 1301,
            "mean": 1496,
            "median": 1496,
            "max": 1692
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 6871,
            "mean": 6893,
            "median": 6871,
            "max": 6937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3818183,
          "size": 19684
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2516,
            "min": 19343,
            "mean": 21554,
            "median": 22143,
            "max": 22143
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2454,
            "min": 19096,
            "mean": 21596,
            "median": 21896,
            "max": 21896
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4761,
            "mean": 4761,
            "median": 4761,
            "max": 4761
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4827,
            "mean": 4827,
            "median": 4827,
            "max": 4827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1796988,
          "size": 8772
        },
        "functions": {
          "clock()": {
            "calls": 4972,
            "min": 367,
            "mean": 367,
            "median": 367,
            "max": 367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 958069,
          "size": 5266
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 35349,
            "mean": 53690,
            "median": 50579,
            "max": 69667
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 70673,
            "mean": 122440,
            "median": 88806,
            "max": 303133
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4111,
            "min": 1914,
            "mean": 1914,
            "median": 1914,
            "max": 1914
          },
          "nonces(address)": {
            "calls": 1172,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 10760,
            "mean": 13495,
            "median": 14305,
            "max": 14305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1396871,
          "size": 6813
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1089992,
          "size": 5538
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1274561,
          "size": 7877
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 62367,
            "mean": 78294,
            "median": 79357,
            "max": 82248
          },
          "ownerOf(uint256)": {
            "calls": 2816,
            "min": 2695,
            "mean": 11073,
            "median": 12380,
            "max": 27768
          },
          "totalMinted()": {
            "calls": 1536,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 69428,
            "mean": 69743,
            "median": 69872,
            "max": 69954
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1487967,
          "size": 7268
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 1017,
            "mean": 1026,
            "median": 1026,
            "max": 1038
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1821730,
          "size": 8935
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 27299,
            "mean": 27584,
            "median": 27695,
            "max": 27707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 1938859,
          "size": 9520
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 2049,
            "mean": 2075,
            "median": 2077,
            "max": 2077
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1857,
            "mean": 1871,
            "median": 1869,
            "max": 1893
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 2030,
            "mean": 2056,
            "median": 2058,
            "max": 2058
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1811,
            "mean": 1825,
            "median": 1823,
            "max": 1847
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1665155,
          "size": 8153
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 26385,
            "mean": 26486,
            "median": 26445,
            "max": 26637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1658348,
          "size": 8119
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26351,
            "mean": 26456,
            "median": 26399,
            "max": 26663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1644134,
          "size": 8048
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26384,
            "mean": 26495,
            "median": 26432,
            "max": 26732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1504781,
          "size": 7352
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 28239,
            "mean": 28384,
            "median": 28311,
            "max": 28635
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 322322,
          "size": 1342
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3188,
            "min": 344,
            "mean": 1246,
            "median": 344,
            "max": 2344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 556909,
          "size": 2558
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 25955,
            "mean": 35889,
            "median": 25955,
            "max": 46239
          },
          "balanceOf(address)": {
            "calls": 39431,
            "min": 417,
            "mean": 2331,
            "median": 2417,
            "max": 2417
          },
          "burn(address,uint256)": {
            "calls": 1336,
            "min": 33747,
            "mean": 33888,
            "median": 33879,
            "max": 34119
          },
          "decimals()": {
            "calls": 283,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "mint(address,uint256)": {
            "calls": 58568,
            "min": 27885,
            "mean": 51000,
            "median": 50657,
            "max": 68285
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1508747,
          "size": 8013
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25744,
            "mean": 32574,
            "median": 25972,
            "max": 46256
          },
          "asset()": {
            "calls": 256,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29115,
            "mean": 29339,
            "median": 29139,
            "max": 29801
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29117,
            "mean": 29318,
            "median": 29141,
            "max": 29803
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 43341,
            "mean": 72515,
            "median": 65247,
            "max": 99721
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10111,
            "mean": 10233,
            "median": 10111,
            "max": 10413
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 43142,
            "mean": 54816,
            "median": 54594,
            "max": 75164
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29130,
            "mean": 29304,
            "median": 29154,
            "max": 29756
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29124,
            "mean": 29302,
            "median": 29148,
            "max": 29810
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29124,
            "mean": 29286,
            "median": 29136,
            "max": 29774
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29122,
            "mean": 29310,
            "median": 29146,
            "max": 29796
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24000,
            "mean": 50525,
            "median": 53220,
            "max": 76046
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5463,
            "mean": 5463,
            "median": 5463,
            "max": 5463
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 31705,
            "mean": 52537,
            "median": 54633,
            "max": 77281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 6246339,
          "size": 31776
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 446,
            "mean": 550,
            "median": 593,
            "max": 593
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 681,
            "mean": 690,
            "median": 690,
            "max": 699
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 687,
            "mean": 794,
            "median": 794,
            "max": 902
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 5802,
            "mean": 5824,
            "median": 5802,
            "max": 5868
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 4039609,
          "size": 21179
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2524,
            "min": 17715,
            "mean": 19938,
            "median": 20515,
            "max": 20515
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2392,
            "min": 17712,
            "mean": 20205,
            "median": 20512,
            "max": 20512
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4535,
            "mean": 4535,
            "median": 4535,
            "max": 4535
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4574,
            "mean": 4574,
            "median": 4574,
            "max": 4574
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1776006,
          "size": 8553
        },
        "functions": {
          "clock()": {
            "calls": 4918,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 1195843,
          "size": 6666
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 33403,
            "mean": 51256,
            "median": 48723,
            "max": 67057
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 67839,
            "mean": 112468,
            "median": 81442,
            "max": 277203
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4049,
            "min": 1503,
            "mean": 1503,
            "median": 1503,
            "max": 1503
          },
          "nonces(address)": {
            "calls": 1154,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 9037,
            "mean": 11814,
            "median": 12348,
            "max": 12348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1838135,
          "size": 9016
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1402509,
          "size": 7610
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1338061,
          "size": 8061
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 62932,
            "mean": 75444,
            "median": 76257,
            "max": 78564
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2470,
            "mean": 10176,
            "median": 11442,
            "max": 25051
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 63315,
            "mean": 68024,
            "median": 68127,
            "max": 85252
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2242598,
          "size": 11036
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 786,
            "mean": 796,
            "median": 795,
            "max": 807
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2995486,
          "size": 14796
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 26705,
            "mean": 26978,
            "median": 27101,
            "max": 27113
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 2213961,
          "size": 10893
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1100,
            "mean": 1129,
            "median": 1132,
            "max": 1132
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1214,
            "mean": 1227,
            "median": 1226,
            "max": 1250
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1065,
            "mean": 1094,
            "median": 1097,
            "max": 1097
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1204,
            "mean": 1217,
            "median": 1216,
            "max": 1240
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 2297657,
          "size": 11311
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 25918,
            "mean": 26014,
            "median": 25972,
            "max": 26170
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 2279635,
          "size": 11221
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 25942,
            "mean": 26049,
            "median": 26002,
            "max": 26254
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 2272028,
          "size": 11183
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 25930,
            "mean": 26066,
            "median": 26026,
            "max": 26278
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 2203347,
          "size": 10840
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 25846,
            "mean": 25988,
            "median": 25918,
            "max": 26242
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 271663,
          "size": 1060
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3218,
            "min": 350,
            "mean": 1237,
            "median": 350,
            "max": 2350
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 529265,
          "size": 2423
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2600,
            "mean": 2600,
            "median": 2600,
            "max": 2600
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 26110,
            "mean": 36049,
            "median": 26110,
            "max": 46394
          },
          "balanceOf(address)": {
            "calls": 39444,
            "min": 438,
            "mean": 2352,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256)": {
            "calls": 1327,
            "min": 33890,
            "mean": 34032,
            "median": 34022,
            "max": 34262
          },
          "decimals()": {
            "calls": 283,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "mint(address,uint256)": {
            "calls": 58577,
            "min": 28002,
            "mean": 51123,
            "median": 50774,
            "max": 68402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1521017,
          "size": 7941
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2623,
            "mean": 2623,
            "median": 2623,
            "max": 2623
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25909,
            "mean": 32741,
            "median": 26137,
            "max": 46421
          },
          "asset()": {
            "calls": 256,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29146,
            "mean": 29385,
            "median": 29194,
            "max": 29822
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29144,
            "mean": 29337,
            "median": 29168,
            "max": 29820
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 43594,
            "mean": 72868,
            "median": 65592,
            "max": 100068
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10150,
            "mean": 10250,
            "median": 10150,
            "max": 10442
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 43628,
            "mean": 55231,
            "median": 54888,
            "max": 75542
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29138,
            "mean": 29298,
            "median": 29162,
            "max": 29814
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29182,
            "mean": 29348,
            "median": 29206,
            "max": 29834
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29141,
            "mean": 29307,
            "median": 29165,
            "max": 29805
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29172,
            "mean": 29320,
            "median": 29196,
            "max": 29824
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24036,
            "mean": 50796,
            "median": 53471,
            "max": 76400
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5461,
            "mean": 5461,
            "median": 5461,
            "max": 5461
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 31778,
            "mean": 52806,
            "median": 54989,
            "max": 77810
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4722288,
          "size": 23911
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 457,
            "mean": 537,
            "median": 561,
            "max": 596
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 628,
            "mean": 631,
            "median": 631,
            "max": 634
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 667,
            "mean": 761,
            "median": 761,
            "max": 855
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 5683,
            "mean": 5705,
            "median": 5683,
            "max": 5749
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 4365655,
          "size": 22315
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2661,
            "min": 15257,
            "mean": 20000,
            "median": 20557,
            "max": 20557
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2526,
            "min": 17752,
            "mean": 20278,
            "median": 20552,
            "max": 20552
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4544,
            "mean": 4544,
            "median": 4544,
            "max": 4544
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4589,
            "mean": 4589,
            "median": 4589,
            "max": 4589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1517378,
          "size": 7586
        },
        "functions": {
          "clock()": {
            "calls": 5189,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 976997,
          "size": 5159
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 33333,
            "mean": 51249,
            "median": 48206,
            "max": 66930
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 67610,
            "mean": 112722,
            "median": 80975,
            "max": 275008
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4103,
            "min": 1148,
            "mean": 1148,
            "median": 1148,
            "max": 1148
          },
          "nonces(address)": {
            "calls": 1176,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 8863,
            "mean": 11442,
            "median": 12253,
            "max": 12253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1665530,
          "size": 8151
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1297224,
          "size": 6943
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1177708,
          "size": 7252
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 65336,
            "mean": 75552,
            "median": 76298,
            "max": 78558
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2513,
            "mean": 10184,
            "median": 11523,
            "max": 25029
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 67811,
            "mean": 68097,
            "median": 68261,
            "max": 68273
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2509479,
          "size": 12366
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 697,
            "mean": 707,
            "median": 706,
            "max": 718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2847082,
          "size": 14052
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 26766,
            "mean": 27008,
            "median": 27150,
            "max": 27162
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 2185509,
          "size": 10748
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1162,
            "mean": 1162,
            "median": 1162,
            "max": 1175
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1108,
            "mean": 1121,
            "median": 1120,
            "max": 1144
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1172,
            "mean": 1172,
            "median": 1172,
            "max": 1185
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1144,
            "mean": 1157,
            "median": 1156,
            "max": 1180
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1976670,
          "size": 9705
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 25984,
            "mean": 26079,
            "median": 26044,
            "max": 26236
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1957648,
          "size": 9610
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 25994,
            "mean": 26107,
            "median": 26054,
            "max": 26318
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1945034,
          "size": 9547
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 25998,
            "mean": 26123,
            "median": 26070,
            "max": 26346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1885370,
          "size": 9249
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 25915,
            "mean": 26050,
            "median": 25975,
            "max": 26299
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "playpen": {
    "solc": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 618942,
          "size": 2941
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104805,
            "mean": 104848,
            "median": 104829,
            "max": 104901
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104914,
            "mean": 104957,
            "median": 104938,
            "max": 105010
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 114132,
            "mean": 114604,
            "median": 114852,
            "max": 114948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 564282,
          "size": 2701
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104587,
            "mean": 104631,
            "median": 104611,
            "max": 104683
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104569,
            "mean": 104612,
            "median": 104593,
            "max": 104665
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113833,
            "mean": 114326,
            "median": 114565,
            "max": 114649
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 420809,
          "size": 2045
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103957,
            "mean": 103999,
            "median": 103981,
            "max": 104053
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103948,
            "mean": 103988,
            "median": 103972,
            "max": 104044
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113175,
            "mean": 113655,
            "median": 113907,
            "max": 113991
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 387094,
          "size": 1835
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104027,
            "mean": 104069,
            "median": 104051,
            "max": 104123
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104023,
            "mean": 104065,
            "median": 104059,
            "max": 104119
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113245,
            "mean": 113753,
            "median": 113977,
            "max": 114061
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "prb-math": {
    "solc": [],
    "solx": []
  },
  "rollcall": {
    "solc": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 278911,
          "size": 1087
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 26981,
            "mean": 26981,
            "median": 26981,
            "max": 26981
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1083612,
          "size": 5277
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 47021,
            "mean": 47021,
            "median": 47021,
            "max": 47021
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2618696,
          "size": 14432
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 3345,
            "mean": 3345,
            "median": 3345,
            "max": 3345
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 980,
            "mean": 980,
            "median": 980,
            "max": 980
          },
          "slots()": {
            "calls": 1,
            "min": 5885,
            "mean": 5885,
            "median": 5885,
            "max": 5885
          },
          "sources()": {
            "calls": 1,
            "min": 6131,
            "mean": 6131,
            "median": 6131,
            "max": 6131
          },
          "version()": {
            "calls": 1,
            "min": 1178,
            "mean": 1178,
            "median": 1178,
            "max": 1178
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 548,
            "mean": 548,
            "median": 548,
            "max": 548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 1034265,
          "size": 4867
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 3505,
            "mean": 3505,
            "median": 3505,
            "max": 3505
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 222295,
            "mean": 259130,
            "median": 262479,
            "max": 262479
          },
          "queueId()": {
            "calls": 1,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2940,
            "mean": 2940,
            "median": 2940,
            "max": 2940
          },
          "slots()": {
            "calls": 12,
            "min": 1891,
            "mean": 1891,
            "median": 1891,
            "max": 1891
          },
          "sources()": {
            "calls": 12,
            "min": 1827,
            "mean": 1827,
            "median": 1827,
            "max": 1827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4581002,
          "size": 21994
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 1430854,
            "mean": 1430854,
            "median": 1430854,
            "max": 1430854
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 81855,
            "mean": 592987,
            "median": 631944,
            "max": 1023600
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 1032884,
            "mean": 1032884,
            "median": 1032884,
            "max": 1032884
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 1024531,
            "mean": 1024531,
            "median": 1024531,
            "max": 1024531
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 10008,
            "mean": 10008,
            "median": 10008,
            "max": 10008
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 26185,
            "mean": 117111,
            "median": 152624,
            "max": 172524
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 3816,
            "mean": 7694,
            "median": 8108,
            "max": 11248
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 28489,
            "mean": 28489,
            "median": 28489,
            "max": 28489
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 227684,
          "size": 835
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 25644,
            "mean": 25644,
            "median": 25644,
            "max": 25644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1121516,
          "size": 5362
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 46330,
            "mean": 46330,
            "median": 46330,
            "max": 46330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2548816,
          "size": 13947
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 3396,
            "mean": 3396,
            "median": 3396,
            "max": 3396
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "slots()": {
            "calls": 1,
            "min": 5376,
            "mean": 5376,
            "median": 5376,
            "max": 5376
          },
          "sources()": {
            "calls": 1,
            "min": 5509,
            "mean": 5509,
            "median": 5509,
            "max": 5509
          },
          "version()": {
            "calls": 1,
            "min": 704,
            "mean": 704,
            "median": 704,
            "max": 704
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 378,
            "mean": 378,
            "median": 378,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 735155,
          "size": 3335
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 205598,
            "mean": 242433,
            "median": 245782,
            "max": 245782
          },
          "queueId()": {
            "calls": 1,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2723,
            "mean": 2723,
            "median": 2723,
            "max": 2723
          },
          "slots()": {
            "calls": 12,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "sources()": {
            "calls": 12,
            "min": 1122,
            "mean": 1122,
            "median": 1122,
            "max": 1122
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4216128,
          "size": 20098
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 746851,
            "mean": 746851,
            "median": 746851,
            "max": 746851
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 76038,
            "mean": 316262,
            "median": 312415,
            "max": 527281
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 535266,
            "mean": 535266,
            "median": 535266,
            "max": 535266
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 528463,
            "mean": 528463,
            "median": 528463,
            "max": 528463
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 2071,
            "mean": 2071,
            "median": 2071,
            "max": 2071
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 8612,
            "mean": 8612,
            "median": 8612,
            "max": 8612
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 25563,
            "mean": 108374,
            "median": 139830,
            "max": 159730
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 3307,
            "mean": 5973,
            "median": 6714,
            "max": 8168
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 25561,
            "mean": 25561,
            "median": 25561,
            "max": 25561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 140621,
          "size": 437
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 24386,
            "mean": 24386,
            "median": 24386,
            "max": 24386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 645074,
          "size": 2910
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 45906,
            "mean": 45906,
            "median": 45906,
            "max": 45906
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 1732140,
          "size": 9140
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 2716,
            "mean": 2716,
            "median": 2716,
            "max": 2716
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "slots()": {
            "calls": 1,
            "min": 4816,
            "mean": 4816,
            "median": 4816,
            "max": 4816
          },
          "sources()": {
            "calls": 1,
            "min": 4876,
            "mean": 4876,
            "median": 4876,
            "max": 4876
          },
          "version()": {
            "calls": 1,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 310691,
          "size": 1289
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 817,
            "mean": 817,
            "median": 817,
            "max": 817
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 189970,
            "mean": 226805,
            "median": 230154,
            "max": 230154
          },
          "queueId()": {
            "calls": 1,
            "min": 2309,
            "mean": 2309,
            "median": 2309,
            "max": 2309
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "slots()": {
            "calls": 12,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "sources()": {
            "calls": 12,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 2723728,
          "size": 12815
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 362960,
            "mean": 362960,
            "median": 362960,
            "max": 362960
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 73059,
            "mean": 151447,
            "median": 139224,
            "max": 226762
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 232670,
            "mean": 232670,
            "median": 232670,
            "max": 232670
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 227832,
            "mean": 227832,
            "median": 227832,
            "max": 227832
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 693,
            "mean": 693,
            "median": 693,
            "max": 693
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 7156,
            "mean": 7156,
            "median": 7156,
            "max": 7156
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 24413,
            "mean": 100685,
            "median": 128871,
            "max": 148771
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 2586,
            "mean": 4527,
            "median": 5416,
            "max": 6003
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 23102,
            "mean": 23102,
            "median": 23102,
            "max": 23102
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 131511,
          "size": 392
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 24290,
            "mean": 24290,
            "median": 24290,
            "max": 24290
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 577804,
          "size": 2538
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 45912,
            "mean": 45912,
            "median": 45912,
            "max": 45912
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 1691291,
          "size": 8803
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 2609,
            "mean": 2609,
            "median": 2609,
            "max": 2609
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "slots()": {
            "calls": 1,
            "min": 4713,
            "mean": 4713,
            "median": 4713,
            "max": 4713
          },
          "sources()": {
            "calls": 1,
            "min": 4717,
            "mean": 4717,
            "median": 4717,
            "max": 4717
          },
          "version()": {
            "calls": 1,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 257559,
          "size": 996
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 696,
            "mean": 696,
            "median": 696,
            "max": 696
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 189552,
            "mean": 226387,
            "median": 229736,
            "max": 229736
          },
          "queueId()": {
            "calls": 1,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "slots()": {
            "calls": 12,
            "min": 240,
            "mean": 240,
            "median": 240,
            "max": 240
          },
          "sources()": {
            "calls": 12,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 2356152,
          "size": 11022
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 367860,
            "mean": 367860,
            "median": 367860,
            "max": 367860
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 73091,
            "mean": 154241,
            "median": 142083,
            "max": 231793
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 237733,
            "mean": 237733,
            "median": 237733,
            "max": 237733
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 232803,
            "mean": 232803,
            "median": 232803,
            "max": 232803
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 648,
            "mean": 648,
            "median": 648,
            "max": 648
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 6933,
            "mean": 6933,
            "median": 6933,
            "max": 6933
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 24478,
            "mean": 100657,
            "median": 128797,
            "max": 148697
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 2660,
            "mean": 4676,
            "median": 5529,
            "max": 6262
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 23013,
            "mean": 23013,
            "median": 23013,
            "max": 23013
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "solady": {
    "solc": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 262102,
          "size": 1139
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24343,
            "mean": 74249,
            "median": 36338,
            "max": 118296
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 393,
            "mean": 393,
            "median": 393,
            "max": 393
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 97994,
          "size": 226
        },
        "functions": {
          "fallback()": {
            "calls": 6338,
            "min": 3029,
            "mean": 15885,
            "median": 10271,
            "max": 357000
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 927963,
          "size": 4117
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 517,
            "mean": 517,
            "median": 517,
            "max": 517
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "cancel(bytes32)": {
            "calls": 20,
            "min": 25622,
            "mean": 25701,
            "median": 25622,
            "max": 26416
          },
          "execute(bytes32,bytes)": {
            "calls": 256,
            "min": 28670,
            "mean": 44144,
            "median": 45185,
            "max": 95946
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2494,
            "mean": 2494,
            "median": 2494,
            "max": 2494
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23369,
            "mean": 308894,
            "median": 379965,
            "max": 379965
          },
          "minDelay()": {
            "calls": 234,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "operationState(bytes32)": {
            "calls": 938,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 28732,
            "mean": 54177,
            "median": 55520,
            "max": 57994
          },
          "readyTimestamp(bytes32)": {
            "calls": 702,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23980,
            "mean": 33725,
            "median": 23992,
            "max": 76202
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 553930,
          "size": 2347
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "decimals()": {
            "calls": 1,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "deposit()": {
            "calls": 552,
            "min": 27728,
            "mean": 64938,
            "median": 67528,
            "max": 67528
          },
          "name()": {
            "calls": 1,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "receive()": {
            "calls": 286,
            "min": 27378,
            "mean": 63890,
            "median": 67178,
            "max": 67178
          },
          "symbol()": {
            "calls": 1,
            "min": 583,
            "mean": 583,
            "median": 583,
            "max": 583
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "withdraw(uint256)": {
            "calls": 278,
            "min": 27900,
            "mean": 39441,
            "median": 40224,
            "max": 40344
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 480651,
          "size": 2003
        },
        "functions": {
          "adminOf(address)": {
            "calls": 482,
            "min": 2377,
            "mean": 2377,
            "median": 2377,
            "max": 2377
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24204,
            "mean": 26403,
            "median": 26403,
            "max": 28603
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22363,
            "mean": 54656,
            "median": 22387,
            "max": 126198
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105650,
            "mean": 158967,
            "median": 159392,
            "max": 159500
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 24077,
            "mean": 142839,
            "median": 159836,
            "max": 160016
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 586,
            "mean": 586,
            "median": 586,
            "max": 586
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24352,
            "mean": 28052,
            "median": 24364,
            "max": 33596
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35605,
            "mean": 51268,
            "median": 51268,
            "max": 66932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 244324,
          "size": 989
        },
        "functions": {
          "implementation()": {
            "calls": 5017,
            "min": 149,
            "mean": 2267,
            "median": 2276,
            "max": 2276
          },
          "owner()": {
            "calls": 506,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "renounceOwnership()": {
            "calls": 43,
            "min": 23094,
            "mean": 23346,
            "median": 23380,
            "max": 23380
          },
          "transferOwnership(address)": {
            "calls": 159,
            "min": 23602,
            "mean": 26984,
            "median": 28363,
            "max": 28363
          },
          "upgradeTo(address)": {
            "calls": 105,
            "min": 23630,
            "mean": 26624,
            "median": 23742,
            "max": 32494
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3512434,
          "size": 17469
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 22944,
            "mean": 79606,
            "median": 43889,
            "max": 213921
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21957,
            "mean": 22695,
            "median": 21969,
            "max": 25763
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 8020,
            "mean": 8133,
            "median": 8051,
            "max": 8410
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2569279,
          "size": 12759
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 89103,
            "mean": 38935831,
            "median": 889401,
            "max": 96808678
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4610293,
          "size": 22951
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 785,
            "mean": 785,
            "median": 785,
            "max": 785
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 609,
            "mean": 609,
            "median": 609,
            "max": 609
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 987,
            "mean": 987,
            "median": 987,
            "max": 987
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1284,
            "mean": 1284,
            "median": 1284,
            "max": 1284
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 1025,
            "mean": 1025,
            "median": 1025,
            "max": 1025
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1191,
            "mean": 1191,
            "median": 1191,
            "max": 1191
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 1344,
            "mean": 1344,
            "median": 1344,
            "max": 1344
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 891,
            "mean": 891,
            "median": 891,
            "max": 891
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 712,
            "mean": 712,
            "median": 712,
            "max": 712
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 1650,
            "mean": 1650,
            "median": 1650,
            "max": 1650
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 1317,
            "mean": 1317,
            "median": 1317,
            "max": 1317
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 1119,
            "mean": 1119,
            "median": 1119,
            "max": 1119
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1452,
            "mean": 1452,
            "median": 1452,
            "max": 1452
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 1509,
            "mean": 1509,
            "median": 1509,
            "max": 1509
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 868,
            "mean": 868,
            "median": 868,
            "max": 868
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 314016,
          "size": 1103
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 133,
            "min": 67346,
            "mean": 67570,
            "median": 67718,
            "max": 67718
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 153552,
          "size": 492
        },
        "functions": {
          "generate(bytes)": {
            "calls": 153,
            "min": 0,
            "mean": 3728,
            "median": 1402,
            "max": 71227
          },
          "next(uint256)": {
            "calls": 283,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 3764163,
          "size": 18726
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1837,
            "mean": 1837,
            "median": 1837,
            "max": 1837
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 518,
            "mean": 518,
            "median": 518,
            "max": 518
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3869496,
          "size": 19252
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 32,
            "min": 1916,
            "mean": 1997,
            "median": 2002,
            "max": 2047
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 28,
            "min": 618002,
            "mean": 618766,
            "median": 618738,
            "max": 619695
          },
          "recover(bytes32,bytes)": {
            "calls": 161,
            "min": 22567,
            "mean": 27327,
            "median": 26788,
            "max": 30507
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 54,
            "min": 4401,
            "mean": 26025,
            "median": 26989,
            "max": 27001
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 301,
            "min": 26794,
            "mean": 27035,
            "median": 27154,
            "max": 27210
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 148,
            "min": 643540,
            "mean": 824392,
            "median": 645026,
            "max": 4224456
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 52,
            "min": 643079,
            "mean": 688692,
            "median": 644385,
            "max": 2506598
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 301,
            "min": 643527,
            "mean": 785595,
            "median": 644728,
            "max": 4823515
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 161,
            "min": 24032,
            "mean": 31246,
            "median": 31451,
            "max": 31463
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 54,
            "min": 3909,
            "mean": 25534,
            "median": 26497,
            "max": 26509
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 301,
            "min": 26202,
            "mean": 26447,
            "median": 26574,
            "max": 26586
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 148,
            "min": 647124,
            "mean": 812380,
            "median": 648414,
            "max": 4564255
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 52,
            "min": 643886,
            "mean": 646380,
            "median": 644839,
            "max": 724410
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 301,
            "min": 644037,
            "mean": 811037,
            "median": 645276,
            "max": 4796875
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 699053,
          "size": 3016
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2544,
            "mean": 6151,
            "median": 7070,
            "max": 9333
          },
          "batchData()": {
            "calls": 520,
            "min": 2831,
            "mean": 200159,
            "median": 2840,
            "max": 8999207
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "batchIds()": {
            "calls": 520,
            "min": 2775,
            "mean": 6382,
            "median": 7301,
            "max": 9564
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "from()": {
            "calls": 512,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "id()": {
            "calls": 512,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "mintData()": {
            "calls": 512,
            "min": 2787,
            "mean": 225019,
            "median": 2796,
            "max": 8346355
          },
          "operator()": {
            "calls": 512,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1529695,
          "size": 6856
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 622,
            "mean": 622,
            "median": 622,
            "max": 622
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62455,
            "mean": 62592,
            "median": 62683,
            "max": 62715
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 59102,
            "mean": 59239,
            "median": 59330,
            "max": 59362
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 50486,
            "mean": 52711,
            "median": 50486,
            "max": 121686
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62929,
            "mean": 63064,
            "median": 63157,
            "max": 63173
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49922,
            "mean": 63642,
            "median": 59647,
            "max": 76503
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:RevertingERC1155Recipient",
        "deployment": {
          "gas": 218302,
          "size": 796
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3070,
            "mean": 3073,
            "median": 3073,
            "max": 3077
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3620,
            "mean": 3622,
            "median": 3620,
            "max": 3626
          },
          "getArgUint256(uint256)": {
            "calls": 10,
            "min": 5497,
            "mean": 5499,
            "median": 5497,
            "max": 5504
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 8333,
            "mean": 8683,
            "median": 8475,
            "max": 9451
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3422,
            "mean": 3425,
            "median": 3425,
            "max": 3429
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3312,
            "mean": 3315,
            "median": 3315,
            "max": 3319
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3652,
            "mean": 3658,
            "median": 3652,
            "max": 3670
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5276,
            "mean": 5279,
            "median": 5279,
            "max": 5282
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 43948,
            "mean": 44097,
            "median": 44061,
            "max": 44320
          },
          "value()": {
            "calls": 4,
            "min": 5185,
            "mean": 5188,
            "median": 5188,
            "max": 5191
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 324815,
          "size": 1318
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 50,
            "min": 31191,
            "mean": 50701,
            "median": 51109,
            "max": 51451
          },
          "mint(address,uint256)": {
            "calls": 33,
            "min": 61388,
            "mean": 73043,
            "median": 61844,
            "max": 96176
          },
          "sum()": {
            "calls": 1,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 36997,
            "mean": 36997,
            "median": 36997,
            "max": 36997
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 5198111,
          "size": 25886
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24828,
            "mean": 51153,
            "median": 50080,
            "max": 74293
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 308966,
          "size": 1210
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 198,
            "mean": 1168,
            "median": 198,
            "max": 3108
          },
          "data()": {
            "calls": 257,
            "min": 2823,
            "mean": 3182,
            "median": 2823,
            "max": 11611
          },
          "datahash()": {
            "calls": 671,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25322,
            "mean": 30966,
            "median": 25322,
            "max": 134049
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 8394174,
          "size": 41841
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22277,
            "mean": 22629,
            "median": 22531,
            "max": 23401
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22465,
            "mean": 22790,
            "median": 22663,
            "max": 23527
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 297294,
          "size": 1156
        },
        "functions": {
          "datahash()": {
            "calls": 375,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 315940,
          "size": 1243
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2707,
            "mean": 4361,
            "median": 2707,
            "max": 11465
          },
          "from()": {
            "calls": 1024,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "id()": {
            "calls": 1024,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "operator()": {
            "calls": 1024,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1310913,
          "size": 5852
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 894,
            "mean": 894,
            "median": 894,
            "max": 894
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 541,
            "mean": 541,
            "median": 541,
            "max": 541
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61992,
            "mean": 63607,
            "median": 62004,
            "max": 113304
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 58445,
            "mean": 59105,
            "median": 58661,
            "max": 75773
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 65141,
            "mean": 69681,
            "median": 69827,
            "max": 69941
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 152067,
          "size": 487
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3016,
            "mean": 3016,
            "median": 3016,
            "max": 3016
          },
          "getArgUint256(uint256)": {
            "calls": 2,
            "min": 5443,
            "mean": 5443,
            "median": 5443,
            "max": 5443
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 6613,
            "mean": 6613,
            "median": 6613,
            "max": 6613
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3368,
            "mean": 3368,
            "median": 3368,
            "max": 3368
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3258,
            "mean": 3258,
            "median": 3258,
            "max": 3258
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5222,
            "mean": 5222,
            "median": 5222,
            "max": 5222
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43899,
            "mean": 43899,
            "median": 43899,
            "max": 43899
          },
          "value()": {
            "calls": 2,
            "min": 5131,
            "mean": 5131,
            "median": 5131,
            "max": 5131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2138981,
          "size": 10610
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 437,
            "min": 751,
            "mean": 767,
            "median": 763,
            "max": 946
          },
          "returnsHash(bytes)": {
            "calls": 440,
            "min": 694,
            "mean": 712,
            "median": 706,
            "max": 886
          },
          "revertsWithCustomError()": {
            "calls": 7,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1216569,
          "size": 6003
        },
        "functions": {
          "get(address)": {
            "calls": 506,
            "min": 2555,
            "mean": 5842,
            "median": 5842,
            "max": 9129
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26647,
            "mean": 49982,
            "median": 37240,
            "max": 165310
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 4985411,
          "size": 24824
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 161,
            "min": 21729,
            "mean": 46135,
            "median": 44125,
            "max": 142233
          },
          "addToBytes32Set(bytes32)": {
            "calls": 172,
            "min": 22259,
            "mean": 46561,
            "median": 46860,
            "max": 162017
          },
          "addressSetAt(uint256)": {
            "calls": 17,
            "min": 9154,
            "mean": 9170,
            "median": 9154,
            "max": 9226
          },
          "addressSetContains(address)": {
            "calls": 158,
            "min": 734,
            "mean": 7167,
            "median": 7222,
            "max": 7222
          },
          "bytes32SetAt(uint256)": {
            "calls": 17,
            "min": 11349,
            "mean": 11367,
            "median": 11349,
            "max": 11451
          },
          "bytes32SetContains(bytes32)": {
            "calls": 167,
            "min": 313,
            "mean": 8762,
            "median": 8865,
            "max": 8865
          },
          "removeFromAddressSet(address)": {
            "calls": 183,
            "min": 22171,
            "mean": 28541,
            "median": 28862,
            "max": 28862
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 183,
            "min": 22042,
            "mean": 30481,
            "median": 30937,
            "max": 30949
          },
          "uint8SetAt(uint256)": {
            "calls": 15,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 27070,
            "mean": 50590,
            "median": 49274,
            "max": 143297
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28539,
            "mean": 53995,
            "median": 50814,
            "max": 161899
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24590,
            "mean": 28533,
            "median": 27674,
            "max": 44700
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 23655885,
          "size": 117964
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 1971,
            "mean": 1971,
            "median": 1972,
            "max": 1972
          },
          "divWad(uint256,uint256)": {
            "calls": 86,
            "min": 2154,
            "mean": 2154,
            "median": 2154,
            "max": 2154
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 1273,
            "mean": 1308,
            "median": 1323,
            "max": 1323
          },
          "divWadUp(uint256,uint256)": {
            "calls": 88,
            "min": 2990,
            "mean": 2990,
            "median": 2990,
            "max": 2990
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 2157,
            "mean": 2157,
            "median": 2157,
            "max": 2157
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 323,
            "min": 2711,
            "mean": 2756,
            "median": 2711,
            "max": 3029
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 4077,
            "mean": 4096,
            "median": 4077,
            "max": 4179
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 2443,
            "mean": 2445,
            "median": 2443,
            "max": 2738
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 952,
            "mean": 952,
            "median": 952,
            "max": 952
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 1808,
            "mean": 1808,
            "median": 1808,
            "max": 1808
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 3137,
            "mean": 3137,
            "median": 3138,
            "max": 3138
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 2680,
            "mean": 2690,
            "median": 2698,
            "max": 2698
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 290,
            "mean": 316,
            "median": 339,
            "max": 339
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 571,
            "mean": 592,
            "median": 612,
            "max": 612
          },
          "mulWad(uint256,uint256)": {
            "calls": 104,
            "min": 4002,
            "mean": 4002,
            "median": 4002,
            "max": 4002
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 1424,
            "mean": 1427,
            "median": 1430,
            "max": 1430
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 110,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 3984,
            "mean": 3984,
            "median": 3984,
            "max": 3984
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 2072,
            "mean": 2803,
            "median": 2803,
            "max": 3535
          },
          "sDivWad(int256,int256)": {
            "calls": 74,
            "min": 4043,
            "mean": 4043,
            "median": 4043,
            "max": 4043
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 3080,
            "mean": 3145,
            "median": 3171,
            "max": 3171
          },
          "sMulWad(int256,int256)": {
            "calls": 86,
            "min": 3637,
            "mean": 3637,
            "median": 3637,
            "max": 3637
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 2373,
            "mean": 2418,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 12221510,
          "size": 60941
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 19432,
            "mean": 22558,
            "median": 22339,
            "max": 31887
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 19767,
            "mean": 29453,
            "median": 32221,
            "max": 32430
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 20165,
            "mean": 25008,
            "median": 23086,
            "max": 32612
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 1227,
            "mean": 3604,
            "median": 1530,
            "max": 10886
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 19746,
            "mean": 22938,
            "median": 22463,
            "max": 32670
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1774770,
          "size": 8791
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 2729470,
          "size": 13559
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23776,
            "mean": 33870,
            "median": 33870,
            "max": 43965
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26719,
            "mean": 35259,
            "median": 35259,
            "max": 43799
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 3244096,
          "size": 16129
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 529,
            "min": 23788,
            "mean": 24705,
            "median": 24404,
            "max": 27496
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 25194,
            "mean": 27122,
            "median": 26734,
            "max": 30162
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28474,
            "mean": 29002,
            "median": 28839,
            "max": 30053
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24790,
            "mean": 26201,
            "median": 26426,
            "max": 27162
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 279,
            "min": 3138,
            "mean": 762781,
            "median": 636652,
            "max": 4341176
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2382261,
          "size": 11825
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 107780,
            "mean": 1322628,
            "median": 979827,
            "max": 83523290
          },
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 783,
            "mean": 807,
            "median": 813,
            "max": 819
          },
          "getArgUint256(uint256)": {
            "calls": 12,
            "min": 2676,
            "mean": 2676,
            "median": 2676,
            "max": 2676
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 33135,
            "mean": 55799,
            "median": 61343,
            "max": 67374
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 601,
            "mean": 601,
            "median": 601,
            "max": 601
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 491,
            "mean": 491,
            "median": 491,
            "max": 491
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 2041,
            "mean": 3059,
            "median": 3308,
            "max": 3579
          },
          "revertWithError()": {
            "calls": 4,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 22419,
            "mean": 22419,
            "median": 22419,
            "max": 22419
          },
          "value()": {
            "calls": 1034,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 149935,
          "size": 474
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44575,
            "mean": 45231,
            "median": 45057,
            "max": 46660
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 860397,
          "size": 4224
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 391,
            "min": 597,
            "mean": 735,
            "median": 806,
            "max": 830
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 9442039,
          "size": 47071
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 16,
            "min": 2930,
            "mean": 2930,
            "median": 2930,
            "max": 2930
          },
          "argsOnClone(address,uint256)": {
            "calls": 18,
            "min": 4159,
            "mean": 4159,
            "median": 4159,
            "max": 4159
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 10,
            "min": 3346,
            "mean": 5388,
            "median": 3346,
            "max": 23768
          },
          "argsOnERC1967(address)": {
            "calls": 11,
            "min": 4932,
            "mean": 4932,
            "median": 4932,
            "max": 4932
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 7,
            "min": 3917,
            "mean": 3917,
            "median": 3917,
            "max": 3917
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 2,
            "min": 3632,
            "mean": 3632,
            "median": 3632,
            "max": 3632
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 11,
            "min": 4162,
            "mean": 4162,
            "median": 4162,
            "max": 4162
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 2,
            "min": 2993,
            "mean": 2993,
            "median": 2993,
            "max": 2993
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 4,
            "min": 5468,
            "mean": 5468,
            "median": 5468,
            "max": 5468
          },
          "argsOnERC1967I(address)": {
            "calls": 10,
            "min": 4272,
            "mean": 4272,
            "median": 4272,
            "max": 4272
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 10,
            "min": 3282,
            "mean": 3282,
            "median": 3282,
            "max": 3282
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 5,
            "min": 5446,
            "mean": 5446,
            "median": 5446,
            "max": 5446
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 7,
            "min": 4294,
            "mean": 4294,
            "median": 4294,
            "max": 4294
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 5,
            "min": 3873,
            "mean": 3873,
            "median": 3873,
            "max": 3873
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 3,
            "min": 4886,
            "mean": 4886,
            "median": 4886,
            "max": 4886
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 53,
            "min": 38704,
            "mean": 49069,
            "median": 58748,
            "max": 59128
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 890,
            "mean": 896,
            "median": 890,
            "max": 919
          },
          "clone(address)": {
            "calls": 257,
            "min": 86724,
            "mean": 86724,
            "median": 86724,
            "max": 86724
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69737,
            "mean": 4004194,
            "median": 72656,
            "max": 96834010
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 262,
            "min": 70849,
            "mean": 5928623,
            "median": 74676,
            "max": 96817187
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 87896,
            "mean": 127754,
            "median": 88268,
            "max": 1100072
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 265,
            "min": 0,
            "mean": 579162,
            "median": 76520,
            "max": 13917479
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 258,
            "min": 0,
            "mean": 289143,
            "median": 101969,
            "max": 13588921
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 116400,
            "mean": 152497,
            "median": 116772,
            "max": 728126
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 376,
            "min": 0,
            "mean": 371896,
            "median": 106649,
            "max": 13547342
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102218,
            "mean": 159126,
            "median": 102590,
            "max": 3083507
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 262,
            "min": 0,
            "mean": 368748,
            "median": 106766,
            "max": 13023594
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 119448,
            "mean": 150768,
            "median": 119820,
            "max": 730975
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 367,
            "min": 0,
            "mean": 341987,
            "median": 106983,
            "max": 13783068
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102990,
            "mean": 138292,
            "median": 103362,
            "max": 1127622
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 266,
            "min": 95955,
            "mean": 5287747,
            "median": 100034,
            "max": 96817013
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 388,
            "min": 96814,
            "mean": 133648,
            "median": 114062,
            "max": 725688
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 446,
            "min": 101828,
            "mean": 15559016,
            "median": 106966,
            "max": 96825490
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99426,
            "mean": 137896,
            "median": 99798,
            "max": 711086
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 259,
            "min": 102154,
            "mean": 3341398,
            "median": 106128,
            "max": 96831856
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 639,
            "min": 100582,
            "mean": 145308,
            "median": 101063,
            "max": 1475118
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 426,
            "min": 102171,
            "mean": 15427912,
            "median": 105862,
            "max": 96827861
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 100946,
            "mean": 122718,
            "median": 101318,
            "max": 712738
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 95068,
            "mean": 2472139,
            "median": 97993,
            "max": 96821644
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98715,
            "mean": 151580,
            "median": 98824,
            "max": 2946079
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 122,
            "min": 99200,
            "mean": 3517726,
            "median": 103932,
            "max": 96767324
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 116179,
            "mean": 116179,
            "median": 116179,
            "max": 116179
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 100711,
            "mean": 5715543,
            "median": 104057,
            "max": 96826856
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99590,
            "mean": 132403,
            "median": 99699,
            "max": 1022953
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 129,
            "min": 101009,
            "mean": 2589040,
            "median": 103523,
            "max": 96808383
          },
          "revertWithError()": {
            "calls": 7117,
            "min": 6,
            "mean": 3032,
            "median": 3048,
            "max": 3048
          },
          "setValue(uint256)": {
            "calls": 7476,
            "min": 1008,
            "mean": 22876,
            "median": 23008,
            "max": 23008
          },
          "value()": {
            "calls": 20992,
            "min": 6,
            "mean": 2883,
            "median": 2891,
            "max": 2891
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2409691,
          "size": 11962
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 721,
            "mean": 721,
            "median": 721,
            "max": 721
          },
          "decodeBatch(bytes)": {
            "calls": 73,
            "min": 1276,
            "mean": 2866,
            "median": 2528,
            "max": 5217
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 21,
            "min": 1291,
            "mean": 1495,
            "median": 1467,
            "max": 1655
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 653,
            "min": 765,
            "mean": 1969,
            "median": 1131,
            "max": 5969
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 1239,
            "mean": 1258,
            "median": 1251,
            "max": 1287
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 983,
            "mean": 1002,
            "median": 995,
            "max": 1031
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23549,
            "mean": 23549,
            "median": 23549,
            "max": 23549
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 130,
            "min": 30436,
            "mean": 38790,
            "median": 38180,
            "max": 57227
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 642298,
            "mean": 789852,
            "median": 669946,
            "max": 4498301
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 3656823,
          "size": 18190
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 3154,
            "mean": 3154,
            "median": 3154,
            "max": 3154
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 3104,
            "mean": 3104,
            "median": 3104,
            "max": 3104
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 44351,
            "mean": 44351,
            "median": 44351,
            "max": 44351
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 44677,
            "mean": 44677,
            "median": 44677,
            "max": 44677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 3023626,
          "size": 15028
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2390,
            "mean": 3478,
            "median": 2390,
            "max": 4655
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23651,
            "mean": 23674,
            "median": 23687,
            "max": 23687
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21717,
            "mean": 43477,
            "median": 43916,
            "max": 43916
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23560,
            "mean": 23856,
            "median": 23932,
            "max": 23932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 4642537,
          "size": 23112
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24534,
            "mean": 40179,
            "median": 28196,
            "max": 102542
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 25873,
            "mean": 51219,
            "median": 31696,
            "max": 153899
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 15780778,
          "size": 78699
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 1973,
            "mean": 1981,
            "median": 1979,
            "max": 1991
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 1595,
            "mean": 1595,
            "median": 1595,
            "max": 1595
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 710,
            "mean": 710,
            "median": 710,
            "max": 710
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 240815,
          "size": 893
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27398,
            "mean": 51736,
            "median": 50826,
            "max": 82653
          },
          "x()": {
            "calls": 6,
            "min": 2674,
            "mean": 10328,
            "median": 5958,
            "max": 37658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166999,
          "size": 552
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27229,
            "mean": 41915,
            "median": 32645,
            "max": 82291
          },
          "x()": {
            "calls": 6,
            "min": 2542,
            "mean": 9458,
            "median": 4727,
            "max": 37482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2201454,
          "size": 10922
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22497,
            "mean": 27216,
            "median": 28614,
            "max": 30198
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 25506,
            "mean": 36734,
            "median": 35661,
            "max": 91881
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 1817420,
          "size": 9004
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 256,
            "min": 1022,
            "mean": 42448,
            "median": 43726,
            "max": 85319
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1185,
            "mean": 48739,
            "median": 43387,
            "max": 88392
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1588,
            "mean": 40146,
            "median": 41456,
            "max": 87612
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 510,
            "mean": 510,
            "median": 510,
            "max": 510
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1878484,
          "size": 9309
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "name()": {
            "calls": 256,
            "min": 4882,
            "mean": 6671,
            "median": 4925,
            "max": 13719
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 574,
            "mean": 574,
            "median": 574,
            "max": 574
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 502,
            "mean": 502,
            "median": 502,
            "max": 502
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 287
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 5296,
            "mean": 7103,
            "median": 5334,
            "max": 14213
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "returnsString()": {
            "calls": 512,
            "min": 4892,
            "mean": 6725,
            "median": 4935,
            "max": 13751
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "reverts()": {
            "calls": 258,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "symbol()": {
            "calls": 256,
            "min": 5168,
            "mean": 6957,
            "median": 5211,
            "max": 14005
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 5306668,
          "size": 26428
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 129,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "enqueue(uint256,uint256)": {
            "calls": 379,
            "min": 24179,
            "mean": 52995,
            "median": 66732,
            "max": 66852
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 124,
            "min": 860,
            "mean": 860,
            "median": 860,
            "max": 860
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 119,
            "min": 826,
            "mean": 842,
            "median": 857,
            "max": 857
          },
          "pop()": {
            "calls": 60,
            "min": 23937,
            "mean": 23937,
            "median": 23937,
            "max": 23937
          },
          "replace(uint256)": {
            "calls": 70,
            "min": 24318,
            "mean": 24606,
            "median": 24690,
            "max": 24690
          },
          "root()": {
            "calls": 127,
            "min": 2989,
            "mean": 2989,
            "median": 2989,
            "max": 2989
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3274136,
          "size": 16279
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22460,
            "mean": 23465,
            "median": 23924,
            "max": 23948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 580156,
          "size": 2683
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 13,
            "min": 3348,
            "mean": 3404,
            "median": 3411,
            "max": 3443
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3929,
            "mean": 3959,
            "median": 3960,
            "max": 3992
          },
          "getArgUint256(uint256)": {
            "calls": 25,
            "min": 5775,
            "mean": 5834,
            "median": 5838,
            "max": 5870
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 13,
            "min": 22055,
            "mean": 24243,
            "median": 24676,
            "max": 25816
          },
          "getArgUint64(uint256)": {
            "calls": 13,
            "min": 3700,
            "mean": 3756,
            "median": 3763,
            "max": 3795
          },
          "getArgUint8(uint256)": {
            "calls": 13,
            "min": 3590,
            "mean": 3646,
            "median": 3653,
            "max": 3685
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 4570,
            "mean": 4660,
            "median": 4663,
            "max": 4756
          },
          "revertWithError()": {
            "calls": 13,
            "min": 5554,
            "mean": 5609,
            "median": 5617,
            "max": 5648
          },
          "setValue(uint256)": {
            "calls": 13,
            "min": 44263,
            "mean": 44314,
            "median": 44300,
            "max": 44437
          },
          "value()": {
            "calls": 13,
            "min": 5463,
            "mean": 5518,
            "median": 5526,
            "max": 5557
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 3026226,
          "size": 15041
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21744,
            "mean": 24206,
            "median": 24206,
            "max": 26668
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 24169,
            "mean": 24495,
            "median": 24498,
            "max": 24498
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 835580,
          "size": 3720
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3660,
            "mean": 3681,
            "median": 3676,
            "max": 3712
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 4229,
            "mean": 4229,
            "median": 4229,
            "max": 4229
          },
          "getArgUint256(uint256)": {
            "calls": 6,
            "min": 6087,
            "mean": 6107,
            "median": 6106,
            "max": 6139
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 36322,
            "mean": 37062,
            "median": 36626,
            "max": 38675
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 4012,
            "mean": 4033,
            "median": 4028,
            "max": 4064
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3902,
            "mean": 3923,
            "median": 3918,
            "max": 3954
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 5452,
            "mean": 5452,
            "median": 5452,
            "max": 5452
          },
          "revertWithError()": {
            "calls": 8,
            "min": 5719,
            "mean": 7803,
            "median": 5901,
            "max": 12723
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 44537,
            "mean": 46588,
            "median": 44578,
            "max": 51760
          },
          "value()": {
            "calls": 8,
            "min": 5557,
            "mean": 7678,
            "median": 5810,
            "max": 12564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1809406,
          "size": 8964
        },
        "functions": {
          "read(address)": {
            "calls": 172,
            "min": 621,
            "mean": 3135,
            "median": 3121,
            "max": 3430
          },
          "read(address,uint256)": {
            "calls": 78,
            "min": 2924,
            "mean": 3022,
            "median": 2924,
            "max": 3244
          },
          "read(address,uint256,uint256)": {
            "calls": 54,
            "min": 3337,
            "mean": 3461,
            "median": 3337,
            "max": 3617
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468486,
            "mean": 48556369,
            "median": 48556369,
            "max": 83644253
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 8845162,
          "size": 44092
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 22,
            "min": 543,
            "mean": 565,
            "median": 579,
            "max": 579
          },
          "toInt104(uint256)": {
            "calls": 10,
            "min": 1110,
            "mean": 1120,
            "median": 1110,
            "max": 1144
          },
          "toInt112(int256)": {
            "calls": 36,
            "min": 1093,
            "mean": 1119,
            "median": 1129,
            "max": 1129
          },
          "toInt112(uint256)": {
            "calls": 14,
            "min": 1880,
            "mean": 1887,
            "median": 1880,
            "max": 1914
          },
          "toInt120(int256)": {
            "calls": 38,
            "min": 2397,
            "mean": 2417,
            "median": 2433,
            "max": 2433
          },
          "toInt120(uint256)": {
            "calls": 13,
            "min": 1732,
            "mean": 1747,
            "median": 1732,
            "max": 1766
          },
          "toInt128(int256)": {
            "calls": 40,
            "min": 2199,
            "mean": 2226,
            "median": 2235,
            "max": 2235
          },
          "toInt128(uint256)": {
            "calls": 9,
            "min": 324,
            "mean": 335,
            "median": 324,
            "max": 358
          },
          "toInt136(int256)": {
            "calls": 36,
            "min": 1803,
            "mean": 1829,
            "median": 1839,
            "max": 1839
          },
          "toInt136(uint256)": {
            "calls": 16,
            "min": 1974,
            "mean": 1991,
            "median": 1991,
            "max": 2008
          },
          "toInt144(int256)": {
            "calls": 26,
            "min": 1363,
            "mean": 1387,
            "median": 1399,
            "max": 1399
          },
          "toInt144(uint256)": {
            "calls": 16,
            "min": 1072,
            "mean": 1089,
            "median": 1089,
            "max": 1106
          },
          "toInt152(int256)": {
            "calls": 34,
            "min": 1143,
            "mean": 1170,
            "median": 1179,
            "max": 1179
          },
          "toInt152(uint256)": {
            "calls": 20,
            "min": 1182,
            "mean": 1195,
            "median": 1182,
            "max": 1216
          },
          "toInt16(int256)": {
            "calls": 40,
            "min": 2105,
            "mean": 2126,
            "median": 2141,
            "max": 2141
          },
          "toInt16(uint256)": {
            "calls": 33,
            "min": 626,
            "mean": 631,
            "median": 626,
            "max": 660
          },
          "toInt160(int256)": {
            "calls": 20,
            "min": 1275,
            "mean": 1300,
            "median": 1311,
            "max": 1311
          },
          "toInt160(uint256)": {
            "calls": 20,
            "min": 742,
            "mean": 767,
            "median": 776,
            "max": 776
          },
          "toInt168(int256)": {
            "calls": 24,
            "min": 2331,
            "mean": 2356,
            "median": 2367,
            "max": 2367
          },
          "toInt168(uint256)": {
            "calls": 10,
            "min": 2502,
            "mean": 2512,
            "median": 2502,
            "max": 2536
          },
          "toInt176(int256)": {
            "calls": 28,
            "min": 1539,
            "mean": 1563,
            "median": 1575,
            "max": 1575
          },
          "toInt176(uint256)": {
            "calls": 14,
            "min": 676,
            "mean": 688,
            "median": 676,
            "max": 710
          },
          "toInt184(int256)": {
            "calls": 28,
            "min": 1341,
            "mean": 1366,
            "median": 1377,
            "max": 1377
          },
          "toInt184(uint256)": {
            "calls": 14,
            "min": 1820,
            "mean": 1846,
            "median": 1854,
            "max": 1854
          },
          "toInt192(int256)": {
            "calls": 20,
            "min": 263,
            "mean": 288,
            "median": 299,
            "max": 299
          },
          "toInt192(uint256)": {
            "calls": 8,
            "min": 434,
            "mean": 451,
            "median": 451,
            "max": 468
          },
          "toInt200(int256)": {
            "calls": 28,
            "min": 395,
            "mean": 423,
            "median": 431,
            "max": 431
          },
          "toInt200(uint256)": {
            "calls": 15,
            "min": 456,
            "mean": 474,
            "median": 490,
            "max": 490
          },
          "toInt208(int256)": {
            "calls": 40,
            "min": 2419,
            "mean": 2449,
            "median": 2455,
            "max": 2455
          },
          "toInt208(uint256)": {
            "calls": 16,
            "min": 588,
            "mean": 611,
            "median": 622,
            "max": 622
          },
          "toInt216(int256)": {
            "calls": 34,
            "min": 2375,
            "mean": 2407,
            "median": 2411,
            "max": 2411
          },
          "toInt216(uint256)": {
            "calls": 16,
            "min": 2348,
            "mean": 2365,
            "median": 2365,
            "max": 2382
          },
          "toInt224(int256)": {
            "calls": 50,
            "min": 835,
            "mean": 864,
            "median": 871,
            "max": 871
          },
          "toInt224(uint256)": {
            "calls": 26,
            "min": 1226,
            "mean": 1245,
            "median": 1260,
            "max": 1260
          },
          "toInt232(int256)": {
            "calls": 52,
            "min": 219,
            "mean": 248,
            "median": 255,
            "max": 255
          },
          "toInt232(uint256)": {
            "calls": 20,
            "min": 1292,
            "mean": 1310,
            "median": 1326,
            "max": 1326
          },
          "toInt24(int256)": {
            "calls": 44,
            "min": 2303,
            "mean": 2325,
            "median": 2339,
            "max": 2339
          },
          "toInt24(uint256)": {
            "calls": 18,
            "min": 1374,
            "mean": 1387,
            "median": 1374,
            "max": 1408
          },
          "toInt240(int256)": {
            "calls": 40,
            "min": 1011,
            "mean": 1041,
            "median": 1047,
            "max": 1047
          },
          "toInt240(uint256)": {
            "calls": 20,
            "min": 962,
            "mean": 973,
            "median": 962,
            "max": 996
          },
          "toInt248(int256)": {
            "calls": 42,
            "min": 197,
            "mean": 228,
            "median": 233,
            "max": 233
          },
          "toInt248(uint256)": {
            "calls": 19,
            "min": 2172,
            "mean": 2189,
            "median": 2206,
            "max": 2206
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 2208,
            "mean": 2227,
            "median": 2228,
            "max": 2228
          },
          "toInt32(int256)": {
            "calls": 30,
            "min": 1709,
            "mean": 1731,
            "median": 1745,
            "max": 1745
          },
          "toInt32(uint256)": {
            "calls": 18,
            "min": 2254,
            "mean": 2263,
            "median": 2254,
            "max": 2288
          },
          "toInt40(int256)": {
            "calls": 36,
            "min": 1995,
            "mean": 2021,
            "median": 2031,
            "max": 2031
          },
          "toInt40(uint256)": {
            "calls": 14,
            "min": 2056,
            "mean": 2070,
            "median": 2056,
            "max": 2090
          },
          "toInt48(int256)": {
            "calls": 20,
            "min": 477,
            "mean": 500,
            "median": 513,
            "max": 513
          },
          "toInt48(uint256)": {
            "calls": 14,
            "min": 1198,
            "mean": 1207,
            "median": 1198,
            "max": 1232
          },
          "toInt56(int256)": {
            "calls": 32,
            "min": 939,
            "mean": 964,
            "median": 975,
            "max": 975
          },
          "toInt56(uint256)": {
            "calls": 14,
            "min": 2430,
            "mean": 2434,
            "median": 2430,
            "max": 2464
          },
          "toInt64(int256)": {
            "calls": 38,
            "min": 2149,
            "mean": 2172,
            "median": 2185,
            "max": 2185
          },
          "toInt64(uint256)": {
            "calls": 12,
            "min": 406,
            "mean": 408,
            "median": 406,
            "max": 440
          },
          "toInt72(int256)": {
            "calls": 42,
            "min": 2281,
            "mean": 2305,
            "median": 2317,
            "max": 2317
          },
          "toInt72(uint256)": {
            "calls": 15,
            "min": 2122,
            "mean": 2131,
            "median": 2122,
            "max": 2156
          },
          "toInt8(int256)": {
            "calls": 24,
            "min": 2479,
            "mean": 2480,
            "median": 2479,
            "max": 2513
          },
          "toInt8(uint256)": {
            "calls": 16,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "toInt80(int256)": {
            "calls": 32,
            "min": 719,
            "mean": 746,
            "median": 755,
            "max": 755
          },
          "toInt80(uint256)": {
            "calls": 17,
            "min": 780,
            "mean": 792,
            "median": 780,
            "max": 814
          },
          "toInt88(int256)": {
            "calls": 48,
            "min": 1687,
            "mean": 1713,
            "median": 1723,
            "max": 1723
          },
          "toInt88(uint256)": {
            "calls": 22,
            "min": 1946,
            "mean": 1955,
            "median": 1946,
            "max": 1980
          },
          "toInt96(int256)": {
            "calls": 16,
            "min": 521,
            "mean": 548,
            "median": 557,
            "max": 557
          },
          "toInt96(uint256)": {
            "calls": 22,
            "min": 1440,
            "mean": 1452,
            "median": 1440,
            "max": 1474
          },
          "toUint104(uint256)": {
            "calls": 11,
            "min": 1550,
            "mean": 1558,
            "median": 1550,
            "max": 1580
          },
          "toUint112(uint256)": {
            "calls": 13,
            "min": 912,
            "mean": 930,
            "median": 942,
            "max": 942
          },
          "toUint120(uint256)": {
            "calls": 14,
            "min": 560,
            "mean": 575,
            "median": 575,
            "max": 590
          },
          "toUint128(uint256)": {
            "calls": 12,
            "min": 1484,
            "mean": 1497,
            "median": 1484,
            "max": 1538
          },
          "toUint136(uint256)": {
            "calls": 19,
            "min": 1748,
            "mean": 1770,
            "median": 1748,
            "max": 1802
          },
          "toUint144(uint256)": {
            "calls": 16,
            "min": 1858,
            "mean": 1881,
            "median": 1858,
            "max": 1912
          },
          "toUint152(uint256)": {
            "calls": 19,
            "min": 1600,
            "mean": 1619,
            "median": 1600,
            "max": 1654
          },
          "toUint16(uint256)": {
            "calls": 17,
            "min": 1638,
            "mean": 1645,
            "median": 1638,
            "max": 1668
          },
          "toUint160(uint256)": {
            "calls": 21,
            "min": 2238,
            "mean": 2266,
            "median": 2292,
            "max": 2292
          },
          "toUint168(uint256)": {
            "calls": 20,
            "min": 1028,
            "mean": 1065,
            "median": 1082,
            "max": 1082
          },
          "toUint176(uint256)": {
            "calls": 15,
            "min": 236,
            "mean": 268,
            "median": 290,
            "max": 290
          },
          "toUint184(uint256)": {
            "calls": 8,
            "min": 1050,
            "mean": 1083,
            "median": 1104,
            "max": 1104
          },
          "toUint192(uint256)": {
            "calls": 17,
            "min": 1424,
            "mean": 1446,
            "median": 1424,
            "max": 1478
          },
          "toUint200(uint256)": {
            "calls": 18,
            "min": 1402,
            "mean": 1423,
            "median": 1402,
            "max": 1456
          },
          "toUint208(uint256)": {
            "calls": 24,
            "min": 1930,
            "mean": 1954,
            "median": 1930,
            "max": 1984
          },
          "toUint216(uint256)": {
            "calls": 12,
            "min": 1578,
            "mean": 1605,
            "median": 1605,
            "max": 1632
          },
          "toUint224(uint256)": {
            "calls": 16,
            "min": 1160,
            "mean": 1190,
            "median": 1214,
            "max": 1214
          },
          "toUint232(uint256)": {
            "calls": 16,
            "min": 302,
            "mean": 325,
            "median": 302,
            "max": 356
          },
          "toUint24(uint256)": {
            "calls": 21,
            "min": 1660,
            "mean": 1662,
            "median": 1660,
            "max": 1690
          },
          "toUint240(uint256)": {
            "calls": 24,
            "min": 874,
            "mean": 905,
            "median": 928,
            "max": 928
          },
          "toUint248(uint256)": {
            "calls": 26,
            "min": 896,
            "mean": 918,
            "median": 896,
            "max": 950
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 2579,
            "mean": 2593,
            "median": 2599,
            "max": 2599
          },
          "toUint32(uint256)": {
            "calls": 15,
            "min": 2034,
            "mean": 2040,
            "median": 2034,
            "max": 2064
          },
          "toUint40(uint256)": {
            "calls": 19,
            "min": 2562,
            "mean": 2569,
            "median": 2562,
            "max": 2592
          },
          "toUint48(uint256)": {
            "calls": 15,
            "min": 1770,
            "mean": 1778,
            "median": 1770,
            "max": 1800
          },
          "toUint56(uint256)": {
            "calls": 14,
            "min": 2012,
            "mean": 2027,
            "median": 2027,
            "max": 2042
          },
          "toUint64(uint256)": {
            "calls": 20,
            "min": 692,
            "mean": 702,
            "median": 692,
            "max": 722
          },
          "toUint72(uint256)": {
            "calls": 11,
            "min": 802,
            "mean": 818,
            "median": 832,
            "max": 832
          },
          "toUint8(uint256)": {
            "calls": 24,
            "min": 274,
            "mean": 276,
            "median": 274,
            "max": 304
          },
          "toUint80(uint256)": {
            "calls": 15,
            "min": 2078,
            "mean": 2090,
            "median": 2078,
            "max": 2108
          },
          "toUint88(uint256)": {
            "calls": 17,
            "min": 1462,
            "mean": 1463,
            "median": 1462,
            "max": 1492
          },
          "toUint96(uint256)": {
            "calls": 16,
            "min": 494,
            "mean": 501,
            "median": 494,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 15925322,
          "size": 79420
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 85,
            "min": 172467,
            "mean": 172523,
            "median": 172527,
            "max": 172563
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 692,
            "min": 23774,
            "mean": 151023,
            "median": 74838,
            "max": 298662
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46307,
            "mean": 67709,
            "median": 69611,
            "max": 85353
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29494,
            "mean": 29928,
            "median": 29882,
            "max": 32407
          },
          "safeApprove(address,address,uint256)": {
            "calls": 255,
            "min": 26942,
            "mean": 27318,
            "median": 27398,
            "max": 27746
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 253,
            "min": 25881,
            "mean": 26254,
            "median": 26361,
            "max": 26697
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 26762,
            "mean": 27153,
            "median": 27170,
            "max": 27482
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 29364,
            "mean": 29364,
            "median": 29364,
            "max": 29364
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 23145,
            "mean": 29886,
            "median": 29941,
            "max": 30182
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 254,
            "min": 27925,
            "mean": 28449,
            "median": 28633,
            "max": 28961
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 29535,
            "mean": 50816,
            "median": 69289,
            "max": 70461
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 1729,
            "mean": 4933,
            "median": 6535,
            "max": 6535
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2566,
            "min": 26162,
            "mean": 40156,
            "median": 30441,
            "max": 62104
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 554152,
            "mean": 667873,
            "median": 582513,
            "max": 4676667
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 554132,
            "mean": 684251,
            "median": 584321,
            "max": 4644324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2717454,
          "size": 13499
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33855,
            "mean": 42787,
            "median": 40623,
            "max": 65077
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 38746,
            "mean": 59976,
            "median": 53574,
            "max": 106715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 4159277,
          "size": 20699
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1798,
            "mean": 9287,
            "median": 9665,
            "max": 16448
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 301,
            "min": 1411,
            "mean": 10744,
            "median": 10776,
            "max": 16941
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 138,
            "min": 6714,
            "mean": 6726,
            "median": 6739,
            "max": 6739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 166312,
          "size": 555
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 36,
            "min": 32933,
            "mean": 50591,
            "median": 45233,
            "max": 79433
          },
          "fallbackDeposit(uint256)": {
            "calls": 29,
            "min": 44590,
            "mean": 50486,
            "median": 44590,
            "max": 78790
          },
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3034,
            "mean": 3034,
            "median": 3034,
            "max": 3034
          },
          "getArgUint256(uint256)": {
            "calls": 1,
            "min": 5461,
            "mean": 5461,
            "median": 5461,
            "max": 5461
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 7463,
            "mean": 7463,
            "median": 7463,
            "max": 7463
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3386,
            "mean": 3386,
            "median": 3386,
            "max": 3386
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3276,
            "mean": 3276,
            "median": 3276,
            "max": 3276
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5240,
            "mean": 5240,
            "median": 5240,
            "max": 5240
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 43917,
            "mean": 43917,
            "median": 43917,
            "max": 43917
          },
          "value()": {
            "calls": 1,
            "min": 5149,
            "mean": 5149,
            "median": 5149,
            "max": 5149
          },
          "withdraw(uint256)": {
            "calls": 19,
            "min": 45366,
            "mean": 45383,
            "median": 45378,
            "max": 45426
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2982779,
          "size": 14824
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 136,
            "min": 1726,
            "mean": 1741,
            "median": 1745,
            "max": 1757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 317038,
          "size": 1274
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 334,
            "mean": 343,
            "median": 343,
            "max": 352
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 309,
            "mean": 309,
            "median": 309,
            "max": 309
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 419,
            "mean": 428,
            "median": 428,
            "max": 437
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22561,
            "mean": 22561,
            "median": 22561,
            "max": 22561
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 290,
            "mean": 299,
            "median": 299,
            "max": 308
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22200,
            "mean": 22200,
            "median": 22200,
            "max": 22200
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 287845,
          "size": 1114
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2277,
            "mean": 2277,
            "median": 2277,
            "max": 2277
          },
          "fallback()": {
            "calls": 520,
            "min": 23321,
            "mean": 64712,
            "median": 90601,
            "max": 191848
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "receive()": {
            "calls": 260,
            "min": 88,
            "mean": 20845,
            "median": 21088,
            "max": 21088
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 678,
            "mean": 33797,
            "median": 24050,
            "max": 67298
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1853,
            "mean": 35020,
            "median": 35020,
            "max": 68188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 100131,
          "size": 240
        },
        "functions": {
          "fallback()": {
            "calls": 998,
            "min": 215,
            "mean": 23571,
            "median": 22334,
            "max": 79561
          },
          "receive()": {
            "calls": 13,
            "min": 21082,
            "mean": 21082,
            "median": 21082,
            "max": 21082
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 379839,
          "size": 1525
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 209,
            "mean": 332,
            "median": 394,
            "max": 394
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 903,
            "mean": 903,
            "median": 903,
            "max": 903
          },
          "getArgAddress(uint256)": {
            "calls": 10,
            "min": 3199,
            "mean": 3219,
            "median": 3220,
            "max": 3236
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 3754,
            "mean": 3776,
            "median": 3779,
            "max": 3809
          },
          "getArgUint256(uint256)": {
            "calls": 20,
            "min": 5626,
            "mean": 5647,
            "median": 5657,
            "max": 5663
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 10,
            "min": 14601,
            "mean": 15651,
            "median": 15598,
            "max": 16874
          },
          "getArgUint64(uint256)": {
            "calls": 10,
            "min": 3551,
            "mean": 3571,
            "median": 3572,
            "max": 3588
          },
          "getArgUint8(uint256)": {
            "calls": 10,
            "min": 3441,
            "mean": 3461,
            "median": 3462,
            "max": 3478
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 4054,
            "mean": 4107,
            "median": 4127,
            "max": 4146
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 339,
            "mean": 457,
            "median": 516,
            "max": 516
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 739,
            "mean": 739,
            "median": 739,
            "max": 739
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 618,
            "mean": 618,
            "median": 618,
            "max": 618
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 676,
            "mean": 676,
            "median": 676,
            "max": 676
          },
          "revertWithError()": {
            "calls": 11,
            "min": 5405,
            "mean": 5644,
            "median": 5436,
            "max": 7834
          },
          "setValue(uint256)": {
            "calls": 11,
            "min": 44082,
            "mean": 44458,
            "median": 44143,
            "max": 46868
          },
          "value()": {
            "calls": 11,
            "min": 5314,
            "mean": 5546,
            "median": 5345,
            "max": 7672
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 618077,
          "size": 3469
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5400,
            "mean": 5413,
            "median": 5418,
            "max": 5418
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5647,
            "mean": 5656,
            "median": 5656,
            "max": 5665
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5533,
            "mean": 5542,
            "median": 5542,
            "max": 5551
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5514,
            "mean": 5523,
            "median": 5523,
            "max": 5532
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5371,
            "mean": 5380,
            "median": 5380,
            "max": 5389
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5429,
            "mean": 5438,
            "median": 5438,
            "max": 5447
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11557,
            "mean": 30282,
            "median": 33533,
            "max": 45757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1303085,
          "size": 5810
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5542,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 455,
            "min": 670,
            "mean": 2777,
            "median": 835,
            "max": 7906
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 635,
            "min": 23997,
            "mean": 30225,
            "median": 29469,
            "max": 50201
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4227,
            "min": 24039,
            "mean": 149912,
            "median": 79222,
            "max": 34829004
          },
          "burn(address,uint256,uint256)": {
            "calls": 374,
            "min": 25346,
            "mean": 29183,
            "median": 28098,
            "max": 33462
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 906,
            "min": 24647,
            "mean": 202420,
            "median": 63674,
            "max": 37577516
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1071,
            "min": 24336,
            "mean": 139517,
            "median": 58672,
            "max": 35752412
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1953,
            "min": 26434,
            "mean": 44757,
            "median": 46574,
            "max": 46606
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2821,
            "mean": 2821,
            "median": 2821,
            "max": 2821
          },
          "lastDataHash()": {
            "calls": 29,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5014,
            "min": 23143,
            "mean": 149356,
            "median": 73137,
            "max": 36170098
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 905,
            "min": 23878,
            "mean": 249916,
            "median": 62334,
            "max": 36128214
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1107,
            "min": 23858,
            "mean": 218810,
            "median": 57939,
            "max": 37746798
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1695,
            "min": 25946,
            "mean": 45338,
            "median": 46086,
            "max": 46086
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 133,
            "min": 26700,
            "mean": 37018,
            "median": 39764,
            "max": 47395
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 138,
            "min": 25622,
            "mean": 30448,
            "median": 30532,
            "max": 30786
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 129,
            "min": 33254,
            "mean": 99669,
            "median": 91221,
            "max": 1001116
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 137,
            "min": 58901,
            "mean": 74110,
            "median": 62467,
            "max": 1173067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 390787,
          "size": 1627
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 467,
            "min": 2863,
            "mean": 2883,
            "median": 2869,
            "max": 6124
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26539,
            "mean": 26539,
            "median": 26539,
            "max": 26539
          },
          "signer()": {
            "calls": 4,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 807073,
          "size": 4289
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "allowance(address,address)": {
            "calls": 2436,
            "min": 841,
            "mean": 2418,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 2635,
            "min": 25921,
            "mean": 45949,
            "median": 46013,
            "max": 46205
          },
          "balanceOf(address)": {
            "calls": 13260,
            "min": 529,
            "mean": 2352,
            "median": 2529,
            "max": 2529
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24279,
            "mean": 29314,
            "median": 27359,
            "max": 34558
          },
          "decimals()": {
            "calls": 312,
            "min": 2342,
            "mean": 2342,
            "median": 2342,
            "max": 2342
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 25177,
            "mean": 26911,
            "median": 25743,
            "max": 28649
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 25147,
            "mean": 39507,
            "median": 51999,
            "max": 52599
          },
          "mint(address,uint256)": {
            "calls": 3220,
            "min": 24348,
            "mean": 67834,
            "median": 68317,
            "max": 68677
          },
          "name()": {
            "calls": 258,
            "min": 2683,
            "mean": 4816,
            "median": 2692,
            "max": 9247
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23718,
            "mean": 43834,
            "median": 30250,
            "max": 74376
          },
          "symbol()": {
            "calls": 258,
            "min": 2870,
            "mean": 5132,
            "median": 2879,
            "max": 9437
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 2574,
            "min": 24291,
            "mean": 45628,
            "median": 51522,
            "max": 51754
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1545,
            "min": 24719,
            "mean": 40625,
            "median": 32549,
            "max": 54597
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 806989,
          "size": 4289
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21796,
            "mean": 21928,
            "median": 21862,
            "max": 22180
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28465,
            "mean": 67573,
            "median": 68385,
            "max": 68677
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22855,
            "mean": 23153,
            "median": 23155,
            "max": 29242
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24911,
            "mean": 38337,
            "median": 30341,
            "max": 52362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 829428,
          "size": 4051
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 1026,
            "min": 23723,
            "mean": 35075,
            "median": 35885,
            "max": 46407
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1402155,
          "size": 6271
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2183,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 265,
            "min": 21548,
            "mean": 22005,
            "median": 21800,
            "max": 95429
          },
          "checkpointAt(address,uint256)": {
            "calls": 295,
            "min": 0,
            "mean": 53,
            "median": 0,
            "max": 4920
          },
          "checkpointCount(address)": {
            "calls": 1314,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 471,
            "min": 21192,
            "mean": 21655,
            "median": 21432,
            "max": 91614
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23821,
            "mean": 43442,
            "median": 58927,
            "max": 76039
          },
          "delegates(address)": {
            "calls": 4087,
            "min": 0,
            "mean": 249,
            "median": 0,
            "max": 2606
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 48258,
            "mean": 48537,
            "median": 48714,
            "max": 48714
          },
          "directIncrementNonce(address)": {
            "calls": 862,
            "min": 27157,
            "mean": 31532,
            "median": 27169,
            "max": 44269
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5247,
            "mean": 5747,
            "median": 5247,
            "max": 7247
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 699,
            "mean": 3804,
            "median": 5255,
            "max": 5459
          },
          "getVotes(address)": {
            "calls": 2888,
            "min": 0,
            "mean": 12,
            "median": 0,
            "max": 4953
          },
          "getVotesTotalSupply()": {
            "calls": 758,
            "min": 0,
            "mean": 10,
            "median": 0,
            "max": 4965
          },
          "mint(address,uint256)": {
            "calls": 762,
            "min": 21560,
            "mean": 21859,
            "median": 21800,
            "max": 94733
          },
          "name()": {
            "calls": 256,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "nonces(address)": {
            "calls": 520,
            "min": 2661,
            "mean": 2661,
            "median": 2661,
            "max": 2661
          },
          "totalSupply()": {
            "calls": 378,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 516,
            "min": 21548,
            "mean": 21853,
            "median": 21800,
            "max": 86873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 243804,
          "size": 912
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21527,
            "mean": 21527,
            "median": 21527,
            "max": 21527
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21718,
            "mean": 22010,
            "median": 22090,
            "max": 22090
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2529,
            "mean": 4053,
            "median": 4663,
            "max": 4663
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 406,
            "min": 22199,
            "mean": 36278,
            "median": 44327,
            "max": 44551
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 812,
            "min": 22427,
            "mean": 36834,
            "median": 44915,
            "max": 45227
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1344744,
          "size": 6286
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31981,
            "mean": 31981,
            "median": 31981,
            "max": 31981
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12519,
            "mean": 12519,
            "median": 12519,
            "max": 12519
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6466,
            "mean": 18385,
            "median": 9112,
            "max": 140404
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 1195,
            "mean": 1195,
            "median": 1195,
            "max": 1195
          },
          "entryPoint()": {
            "calls": 7,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2972,
            "mean": 16950,
            "median": 13468,
            "max": 37892
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 135,
            "min": 2885,
            "mean": 61279,
            "median": 66423,
            "max": 217029
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 124,
            "min": 3266,
            "mean": 71035,
            "median": 73507,
            "max": 281772
          },
          "fallback()": {
            "calls": 5,
            "min": 690,
            "mean": 29082,
            "median": 690,
            "max": 109753
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5637,
            "mean": 5637,
            "median": 5637,
            "max": 5637
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2754,
            "mean": 24225,
            "median": 24292,
            "max": 24292
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6830,
            "mean": 8194,
            "median": 6872,
            "max": 13754
          },
          "owner()": {
            "calls": 267,
            "min": 2599,
            "mean": 2599,
            "median": 2599,
            "max": 2599
          },
          "receive()": {
            "calls": 258,
            "min": 62,
            "mean": 62,
            "median": 62,
            "max": 62
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 7084,
            "mean": 7084,
            "median": 7084,
            "max": 7084
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23473,
            "mean": 23473,
            "median": 23473,
            "max": 23473
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2327,
            "mean": 13393,
            "median": 13393,
            "max": 24459
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7460,
            "mean": 7460,
            "median": 7460,
            "max": 7460
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 265,
            "mean": 24122,
            "median": 29225,
            "max": 37775
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45218,
            "mean": 45218,
            "median": 45218,
            "max": 45218
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1274367,
          "size": 6799
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2927,
            "mean": 2927,
            "median": 2927,
            "max": 2927
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2683,
            "mean": 2683,
            "median": 2683,
            "max": 2683
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2754,
            "mean": 2754,
            "median": 2754,
            "max": 2754
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2364,
            "mean": 5101,
            "median": 7686,
            "max": 7745
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 8210,
            "mean": 8227,
            "median": 8227,
            "max": 8245
          },
          "decimals()": {
            "calls": 20,
            "min": 355,
            "mean": 358,
            "median": 355,
            "max": 394
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30396,
            "mean": 119273,
            "median": 120743,
            "max": 120983
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30447,
            "mean": 119674,
            "median": 120790,
            "max": 131509
          },
          "name()": {
            "calls": 1,
            "min": 2725,
            "mean": 2725,
            "median": 2725,
            "max": 2725
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 8320,
            "mean": 8320,
            "median": 8320,
            "max": 8355
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7814,
            "mean": 7814,
            "median": 7814,
            "max": 7849
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24936,
            "mean": 77693,
            "median": 78148,
            "max": 92975
          },
          "symbol()": {
            "calls": 1,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5356,
            "mean": 5356,
            "median": 5356,
            "max": 5356
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 27085,
            "mean": 78472,
            "median": 79203,
            "max": 79371
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1121620,
          "size": 5319
        },
        "functions": {
          "eip712Domain()": {
            "calls": 359,
            "min": 1170,
            "mean": 1170,
            "median": 1170,
            "max": 1170
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 6128,
            "mean": 22961,
            "median": 11152,
            "max": 63413
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 135,
            "min": 6307,
            "mean": 87854,
            "median": 99269,
            "max": 243275
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 125,
            "min": 28706,
            "mean": 88458,
            "median": 63889,
            "max": 351897
          },
          "fallback()": {
            "calls": 904,
            "min": 547,
            "mean": 6985,
            "median": 3772,
            "max": 136154
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 369,
            "min": 459,
            "mean": 14273,
            "median": 14123,
            "max": 24590
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 6187,
            "mean": 6187,
            "median": 6187,
            "max": 6187
          },
          "mockId()": {
            "calls": 2,
            "min": 621,
            "mean": 621,
            "median": 621,
            "max": 621
          },
          "owner()": {
            "calls": 802,
            "min": 6028,
            "mean": 6028,
            "median": 6028,
            "max": 6028
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 5,
            "min": 0,
            "mean": 8828,
            "median": 67,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5746,
            "mean": 14298,
            "median": 14320,
            "max": 22894
          },
          "state()": {
            "calls": 772,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "token()": {
            "calls": 536,
            "min": 695,
            "mean": 695,
            "median": 695,
            "max": 695
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 6130,
            "mean": 35503,
            "median": 35665,
            "max": 52765
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1140774,
          "size": 5368
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5467,
            "mean": 5467,
            "median": 5467,
            "max": 5467
          },
          "fallback()": {
            "calls": 252,
            "min": 3829,
            "mean": 13602,
            "median": 6147,
            "max": 53227
          },
          "mockId()": {
            "calls": 1,
            "min": 636,
            "mean": 636,
            "median": 636,
            "max": 636
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 26,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5904,
            "mean": 14456,
            "median": 14478,
            "max": 23052
          },
          "state()": {
            "calls": 513,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18723,
            "mean": 18723,
            "median": 18723,
            "max": 18723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 170071,
          "size": 566
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2437,
            "min": 94768,
            "mean": 95313,
            "median": 95344,
            "max": 95584
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 631674,
          "size": 2708
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2493,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26877,
            "mean": 46889,
            "median": 47077,
            "max": 47513
          },
          "balanceOf(address,uint256)": {
            "calls": 2386,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24576,
            "mean": 27552,
            "median": 25524,
            "max": 30782
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 26910,
            "mean": 47115,
            "median": 47290,
            "max": 47686
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 24149,
            "mean": 32332,
            "median": 26617,
            "max": 46529
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 402,
            "min": 25534,
            "mean": 40326,
            "median": 29002,
            "max": 61704
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24407,
            "mean": 45878,
            "median": 47184,
            "max": 47740
          },
          "name(uint256)": {
            "calls": 256,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 46060,
            "mean": 46060,
            "median": 46060,
            "max": 46060
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 949,
            "mean": 949,
            "median": 949,
            "max": 949
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1041,
            "min": 24302,
            "mean": 37326,
            "median": 30363,
            "max": 52813
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1641,
            "min": 27295,
            "mean": 38753,
            "median": 33382,
            "max": 60956
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1261904,
          "size": 5627
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1115,
            "min": 24188,
            "mean": 42952,
            "median": 48453,
            "max": 48797
          },
          "balanceOf(address)": {
            "calls": 10329,
            "min": 2766,
            "mean": 2766,
            "median": 2766,
            "max": 2766
          },
          "burn(uint256)": {
            "calls": 248,
            "min": 28407,
            "mean": 29520,
            "median": 28834,
            "max": 31516
          },
          "directApprove(address,uint256)": {
            "calls": 1079,
            "min": 24501,
            "mean": 44449,
            "median": 49337,
            "max": 49653
          },
          "directGetApproved(uint256)": {
            "calls": 1553,
            "min": 2875,
            "mean": 4917,
            "median": 5085,
            "max": 5085
          },
          "directOwnerOf(uint256)": {
            "calls": 2569,
            "min": 3070,
            "mean": 3262,
            "median": 3310,
            "max": 3310
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 656,
            "min": 57181,
            "mean": 75068,
            "median": 63344,
            "max": 129777
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 509,
            "min": 63916,
            "mean": 93769,
            "median": 65091,
            "max": 240804
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 909,
            "min": 24517,
            "mean": 42414,
            "median": 46657,
            "max": 46673
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1785,
            "min": 25568,
            "mean": 42942,
            "median": 41414,
            "max": 57978
          },
          "exists(uint256)": {
            "calls": 538,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "getApproved(uint256)": {
            "calls": 1571,
            "min": 2415,
            "mean": 4363,
            "median": 4551,
            "max": 4551
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 3305,
            "mean": 3305,
            "median": 3305,
            "max": 3313
          },
          "getExtraData(uint256)": {
            "calls": 3662,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 3129,
            "mean": 3129,
            "median": 3129,
            "max": 3129
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 3051,
            "mean": 5588,
            "median": 6321,
            "max": 7381
          },
          "mint(address,uint256)": {
            "calls": 10921,
            "min": 24509,
            "mean": 64448,
            "median": 68617,
            "max": 68985
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46863,
            "mean": 56028,
            "median": 51888,
            "max": 69356
          },
          "ownerOf(uint256)": {
            "calls": 5702,
            "min": 749,
            "mean": 2733,
            "median": 2749,
            "max": 2749
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71662,
            "mean": 82085,
            "median": 72459,
            "max": 121632
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72579,
            "mean": 99267,
            "median": 74064,
            "max": 232722
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1854,
            "min": 40974,
            "mean": 68851,
            "median": 63835,
            "max": 134171
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 515,
            "min": 64693,
            "mean": 96409,
            "median": 65924,
            "max": 241762
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1219,
            "min": 24480,
            "mean": 42809,
            "median": 46620,
            "max": 46628
          },
          "setAux(address,uint224)": {
            "calls": 755,
            "min": 28106,
            "mean": 45082,
            "median": 45186,
            "max": 45206
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1566,
            "min": 24243,
            "mean": 37057,
            "median": 44191,
            "max": 44647
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1920,
            "min": 24798,
            "mean": 42020,
            "median": 40612,
            "max": 57179
          },
          "uncheckedBurn(uint256)": {
            "calls": 2975,
            "min": 24062,
            "mean": 30595,
            "median": 31512,
            "max": 36696
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 188,
            "min": 54999,
            "mean": 55262,
            "median": 55235,
            "max": 55595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 558186,
          "size": 2370
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31198,
            "mean": 100431,
            "median": 91361,
            "max": 159436
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 262,
            "min": 273741,
            "mean": 359920,
            "median": 291909,
            "max": 3679643
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2665,
            "mean": 5803,
            "median": 4865,
            "max": 11423
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22115,
            "mean": 41288,
            "median": 44027,
            "max": 44027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 164180,
          "size": 744
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2247,
            "mean": 2247,
            "median": 2247,
            "max": 2247
          },
          "garbage()": {
            "calls": 780,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3034,
            "mean": 3034,
            "median": 3034,
            "max": 3034
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3583,
            "mean": 3583,
            "median": 3583,
            "max": 3583
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 5461,
            "mean": 5461,
            "median": 5461,
            "max": 5461
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 6631,
            "mean": 6631,
            "median": 6631,
            "max": 6631
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3386,
            "mean": 3386,
            "median": 3386,
            "max": 3386
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3276,
            "mean": 3276,
            "median": 3276,
            "max": 3276
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3543,
            "mean": 3543,
            "median": 3543,
            "max": 3543
          },
          "receive()": {
            "calls": 10,
            "min": 0,
            "mean": 42009,
            "median": 21100,
            "max": 286463
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5240,
            "mean": 5240,
            "median": 5240,
            "max": 5240
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 43917,
            "mean": 43917,
            "median": 43917,
            "max": 43917
          },
          "value()": {
            "calls": 1,
            "min": 5149,
            "mean": 5149,
            "median": 5149,
            "max": 5149
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 692301,
          "size": 2984
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 8005,
            "min": 513,
            "mean": 4325,
            "median": 4633,
            "max": 4633
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 263,
            "min": 26781,
            "mean": 28208,
            "median": 28248,
            "max": 28248
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 26,
            "min": 26643,
            "mean": 37835,
            "median": 35477,
            "max": 59744
          },
          "guardedByOnlyRoles()": {
            "calls": 26,
            "min": 24168,
            "mean": 35883,
            "median": 35199,
            "max": 57269
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1357,
            "mean": 8868,
            "median": 8088,
            "max": 17037
          },
          "hasRole(address,uint256)": {
            "calls": 1776,
            "min": 2598,
            "mean": 2598,
            "median": 2598,
            "max": 2598
          },
          "owner()": {
            "calls": 1904,
            "min": 2478,
            "mean": 2519,
            "median": 2523,
            "max": 2523
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 254,
            "min": 2655,
            "mean": 2914,
            "median": 2718,
            "max": 4850
          },
          "roleHolderCount(uint256)": {
            "calls": 3916,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "roleHolders(uint256)": {
            "calls": 3973,
            "min": 2726,
            "mean": 3054,
            "median": 2726,
            "max": 21127
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23589,
            "mean": 43387,
            "median": 43543,
            "max": 43873
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 26,
            "min": 24420,
            "mean": 104086,
            "median": 111341,
            "max": 223310
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21566,
            "mean": 26946,
            "median": 26426,
            "max": 43850
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23855,
            "mean": 25228,
            "median": 23855,
            "max": 26667
          },
          "setOwner(address)": {
            "calls": 267,
            "min": 26437,
            "mean": 27092,
            "median": 26665,
            "max": 43765
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23905,
            "mean": 25354,
            "median": 26717,
            "max": 26717
          },
          "setRole(address,uint256,bool)": {
            "calls": 1359,
            "min": 24541,
            "mean": 58987,
            "median": 74025,
            "max": 74565
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6905,
            "min": 33761,
            "mean": 59037,
            "median": 74047,
            "max": 78963
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 112143,
          "size": 299
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getValue(uint256)": {
            "calls": 963,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setValue(uint256,uint256)": {
            "calls": 963,
            "min": 22314,
            "mean": 22314,
            "median": 22314,
            "max": 22314
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 378457,
          "size": 2916
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23373,
            "mean": 33890,
            "median": 33890,
            "max": 44407
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 184,
            "min": 27557,
            "mean": 62531,
            "median": 67965,
            "max": 90620
          },
          "isInitializing()": {
            "calls": 180,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23482,
            "mean": 23482,
            "median": 23482,
            "max": 23482
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 232,
            "min": 24508,
            "mean": 56392,
            "median": 67400,
            "max": 90603
          },
          "version()": {
            "calls": 239,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "x()": {
            "calls": 132,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 575716,
          "size": 2507
        },
        "functions": {
          "owner()": {
            "calls": 747,
            "min": 254,
            "mean": 254,
            "median": 254,
            "max": 254
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24937,
            "mean": 33659,
            "median": 24961,
            "max": 59072
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 754037,
          "size": 3383
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 24009,
            "mean": 24009,
            "median": 24009,
            "max": 24009
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26343,
            "mean": 37963,
            "median": 44211,
            "max": 46459
          },
          "owner()": {
            "calls": 1648,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 121,
            "min": 29296,
            "mean": 66297,
            "median": 68397,
            "max": 939111
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 118,
            "min": 28547,
            "mean": 52164,
            "median": 60781,
            "max": 61173
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 130,
            "min": 28839,
            "mean": 56246,
            "median": 61871,
            "max": 62285
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 240,
            "min": 28329,
            "mean": 48769,
            "median": 47735,
            "max": 64035
          },
          "rescueETH(address,uint256)": {
            "calls": 1414,
            "min": 5764,
            "mean": 32521,
            "median": 36619,
            "max": 61958
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 7251,
            "mean": 7251,
            "median": 7251,
            "max": 7251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 567123,
          "size": 2408
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 500,
            "min": 22040,
            "mean": 24529,
            "median": 24585,
            "max": 37835
          },
          "multicallBrutalized(bytes[])": {
            "calls": 275,
            "min": 280397,
            "mean": 401250,
            "median": 286835,
            "max": 3665592
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 45141,
            "mean": 45141,
            "median": 45141,
            "max": 45141
          },
          "returnsRandomizedString(string)": {
            "calls": 238,
            "min": 664,
            "mean": 1866,
            "median": 1858,
            "max": 3519
          },
          "returnsSender()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 481,
            "mean": 481,
            "median": 481,
            "max": 481
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 273,
            "mean": 273,
            "median": 273,
            "max": 273
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 816,
            "mean": 831,
            "median": 837,
            "max": 849
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 331849,
          "size": 1244
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22615,
            "mean": 22615,
            "median": 22615,
            "max": 22615
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24015,
            "mean": 28933,
            "median": 29074,
            "max": 29090
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28271,
            "mean": 28271,
            "median": 28271,
            "max": 28271
          },
          "owner()": {
            "calls": 851,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2871,
            "mean": 2872,
            "median": 2871,
            "max": 2887
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 452,
            "mean": 452,
            "median": 452,
            "max": 452
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23115,
            "mean": 23115,
            "median": 23115,
            "max": 23115
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44499,
            "mean": 44499,
            "median": 44499,
            "max": 44499
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23552,
            "mean": 28499,
            "median": 28592,
            "max": 28608
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24021,
            "mean": 25529,
            "median": 24043,
            "max": 28852
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 34820,
            "median": 45447,
            "max": 45447
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 249695,
          "size": 863
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 608778,
          "size": 2525
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22813,
            "mean": 22813,
            "median": 22813,
            "max": 22813
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24347,
            "mean": 29284,
            "median": 29406,
            "max": 29422
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24044,
            "mean": 45706,
            "median": 48035,
            "max": 48375
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25993,
            "mean": 45159,
            "median": 45917,
            "max": 46293
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2772,
            "mean": 2773,
            "median": 2772,
            "max": 2788
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2901,
            "mean": 2903,
            "median": 2901,
            "max": 2917
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28537,
            "mean": 28537,
            "median": 28537,
            "max": 28537
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 690,
            "mean": 14295,
            "median": 6576,
            "max": 47726
          },
          "owner()": {
            "calls": 838,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 3203,
            "mean": 3205,
            "median": 3203,
            "max": 3219
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 738,
            "mean": 738,
            "median": 738,
            "max": 738
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23942,
            "mean": 27278,
            "median": 26134,
            "max": 29318
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23335,
            "mean": 23335,
            "median": 23335,
            "max": 23335
          },
          "renounceRoles(uint256)": {
            "calls": 70,
            "min": 23229,
            "mean": 27650,
            "median": 28017,
            "max": 28365
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44587,
            "mean": 44587,
            "median": 44587,
            "max": 44587
          },
          "revokeRoles(address,uint256)": {
            "calls": 53,
            "min": 24200,
            "mean": 27371,
            "median": 24776,
            "max": 31340
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 480,
            "mean": 18638,
            "median": 17489,
            "max": 41506
          },
          "rolesOf(address)": {
            "calls": 2267,
            "min": 2808,
            "mean": 2810,
            "median": 2808,
            "max": 2824
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23840,
            "mean": 28774,
            "median": 28880,
            "max": 28896
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 23785,
            "mean": 37561,
            "median": 37449,
            "max": 46301
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24353,
            "mean": 25616,
            "median": 24375,
            "max": 29184
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 34561,
            "median": 45447,
            "max": 45447
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 26064,
            "mean": 46409,
            "median": 48198,
            "max": 48558
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23899,
            "mean": 44930,
            "median": 46073,
            "max": 46391
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 26114,
            "mean": 46436,
            "median": 48229,
            "max": 48607
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 354753,
          "size": 1349
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 78927,
          "size": 142
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476139,
          "size": 1990
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 23684,
            "mean": 23684,
            "median": 23684,
            "max": 23684
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 23377,
            "mean": 23377,
            "median": 23377,
            "max": 23377
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65551,
            "mean": 65551,
            "median": 65551,
            "max": 65551
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45796,
            "mean": 45796,
            "median": 45796,
            "max": 45796
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 70055,
            "mean": 70055,
            "median": 70055,
            "max": 70055
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65940,
            "mean": 65940,
            "median": 65940,
            "max": 65940
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66821,
            "mean": 66821,
            "median": 66821,
            "max": 66821
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 47037,
            "mean": 47037,
            "median": 47037,
            "max": 47037
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 57154,
            "mean": 57154,
            "median": 57154,
            "max": 57154
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 133608,
          "size": 395
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3004,
            "mean": 3007,
            "median": 3007,
            "max": 3010
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3559,
            "mean": 3559,
            "median": 3559,
            "max": 3559
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5431,
            "mean": 5435,
            "median": 5437,
            "max": 5437
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 5499,
            "mean": 5773,
            "median": 5773,
            "max": 6047
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3356,
            "mean": 3359,
            "median": 3359,
            "max": 3362
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3246,
            "mean": 3249,
            "median": 3249,
            "max": 3252
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3471,
            "mean": 3471,
            "median": 3471,
            "max": 3471
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5210,
            "mean": 5213,
            "median": 5213,
            "max": 5216
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43887,
            "mean": 43902,
            "median": 43902,
            "max": 43917
          },
          "value()": {
            "calls": 2,
            "min": 5119,
            "mean": 5122,
            "median": 5122,
            "max": 5125
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 784534,
          "size": 3412
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 699,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 256,
            "min": 28660,
            "mean": 28660,
            "median": 28660,
            "max": 28660
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 256,
            "min": 38059,
            "mean": 40014,
            "median": 40059,
            "max": 40059
          },
          "owner()": {
            "calls": 1237,
            "min": 2589,
            "mean": 2589,
            "median": 2589,
            "max": 2589
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 23677,
            "mean": 43444,
            "median": 43601,
            "max": 43601
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91419,
            "mean": 110650,
            "median": 111355,
            "max": 111355
          },
          "setMaxTimedRole(uint256)": {
            "calls": 17,
            "min": 26761,
            "mean": 30041,
            "median": 27121,
            "max": 44221
          },
          "setOwner(address)": {
            "calls": 55,
            "min": 26665,
            "mean": 27597,
            "median": 26665,
            "max": 43765
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 725,
            "min": 24709,
            "mean": 50260,
            "median": 51852,
            "max": 51948
          },
          "timedRoleActive(address,uint256)": {
            "calls": 788,
            "min": 2749,
            "mean": 2749,
            "median": 2749,
            "max": 2749
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 257974,
          "size": 1003
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 7,
            "min": 3101,
            "mean": 3113,
            "median": 3113,
            "max": 3138
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3662,
            "mean": 3665,
            "median": 3665,
            "max": 3668
          },
          "getArgUint256(uint256)": {
            "calls": 11,
            "min": 5528,
            "mean": 5541,
            "median": 5540,
            "max": 5565
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 7,
            "min": 10322,
            "mean": 10918,
            "median": 10588,
            "max": 12298
          },
          "getArgUint64(uint256)": {
            "calls": 7,
            "min": 3453,
            "mean": 3465,
            "median": 3465,
            "max": 3490
          },
          "getArgUint8(uint256)": {
            "calls": 7,
            "min": 3343,
            "mean": 3355,
            "median": 3355,
            "max": 3380
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3779,
            "mean": 3788,
            "median": 3788,
            "max": 3798
          },
          "initialize(address)": {
            "calls": 8,
            "min": 22470,
            "mean": 22470,
            "median": 22470,
            "max": 22470
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 8,
            "min": 357,
            "mean": 4698,
            "median": 5313,
            "max": 5344
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 22304,
            "mean": 41374,
            "median": 44002,
            "max": 44344
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2785,
            "mean": 9824,
            "median": 5472,
            "max": 32241
          },
          "value()": {
            "calls": 8,
            "min": 2247,
            "mean": 4855,
            "median": 5222,
            "max": 5253
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 350610,
          "size": 1217
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1678,
            "min": 508,
            "mean": 1426,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 267916,
          "size": 836
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 508,
            "mean": 2506,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 519857,
          "size": 2000
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 748,
            "mean": 748,
            "median": 748,
            "max": 748
          },
          "balanceOf(address)": {
            "calls": 2801,
            "min": 530,
            "mean": 1626,
            "median": 2530,
            "max": 2530
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24338,
            "mean": 62931,
            "median": 66602,
            "max": 114433
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 274080,
          "size": 866
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 508,
            "mean": 2506,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 355812,
          "size": 1241
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1675,
            "min": 508,
            "mean": 1428,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 268132,
          "size": 837
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1025,
            "min": 508,
            "mean": 2506,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 265466,
          "size": 825
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 514,
            "min": 508,
            "mean": 2504,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 270930,
          "size": 1175
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24478,
            "mean": 74278,
            "median": 36486,
            "max": 118229
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 619,
            "mean": 619,
            "median": 619,
            "max": 619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 98033,
          "size": 343
        },
        "functions": {
          "fallback()": {
            "calls": 7039,
            "min": 2846,
            "mean": 16687,
            "median": 9994,
            "max": 322299
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1047406,
          "size": 4673
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "cancel(bytes32)": {
            "calls": 23,
            "min": 25522,
            "mean": 25667,
            "median": 25534,
            "max": 26308
          },
          "execute(bytes32,bytes)": {
            "calls": 270,
            "min": 28507,
            "mean": 43774,
            "median": 44961,
            "max": 95676
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2641,
            "mean": 2641,
            "median": 2641,
            "max": 2641
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23354,
            "mean": 307507,
            "median": 378234,
            "max": 378234
          },
          "minDelay()": {
            "calls": 242,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "operationState(bytes32)": {
            "calls": 977,
            "min": 2577,
            "mean": 2577,
            "median": 2577,
            "max": 2577
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 28988,
            "mean": 55365,
            "median": 55808,
            "max": 58278
          },
          "readyTimestamp(bytes32)": {
            "calls": 730,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 24152,
            "mean": 33816,
            "median": 24164,
            "max": 76119
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 636157,
          "size": 2726
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "decimals()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deposit()": {
            "calls": 550,
            "min": 27568,
            "mean": 64820,
            "median": 67368,
            "max": 67368
          },
          "name()": {
            "calls": 1,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "receive()": {
            "calls": 292,
            "min": 27420,
            "mean": 63297,
            "median": 67220,
            "max": 67220
          },
          "symbol()": {
            "calls": 1,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "withdraw(uint256)": {
            "calls": 273,
            "min": 27990,
            "mean": 39554,
            "median": 40314,
            "max": 40434
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 473250,
          "size": 1971
        },
        "functions": {
          "adminOf(address)": {
            "calls": 493,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24321,
            "mean": 26533,
            "median": 26533,
            "max": 28746
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22297,
            "mean": 54280,
            "median": 22321,
            "max": 126390
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105837,
            "mean": 159308,
            "median": 159784,
            "max": 159820
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23942,
            "mean": 148832,
            "median": 160081,
            "max": 160213
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 736,
            "mean": 736,
            "median": 736,
            "max": 736
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24320,
            "mean": 28040,
            "median": 24332,
            "max": 33616
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35652,
            "mean": 51359,
            "median": 51359,
            "max": 67067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 237303,
          "size": 997
        },
        "functions": {
          "implementation()": {
            "calls": 5000,
            "min": 145,
            "mean": 2288,
            "median": 2300,
            "max": 2300
          },
          "owner()": {
            "calls": 530,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "renounceOwnership()": {
            "calls": 44,
            "min": 23125,
            "mean": 23297,
            "median": 23348,
            "max": 23348
          },
          "transferOwnership(address)": {
            "calls": 166,
            "min": 23642,
            "mean": 27214,
            "median": 28473,
            "max": 28473
          },
          "upgradeTo(address)": {
            "calls": 95,
            "min": 23737,
            "mean": 26575,
            "median": 23827,
            "max": 32627
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3596928,
          "size": 17894
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 23065,
            "mean": 75881,
            "median": 42263,
            "max": 201323
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21888,
            "mean": 22804,
            "median": 21900,
            "max": 25999
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 7208,
            "mean": 7350,
            "median": 7276,
            "max": 7641
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2701228,
          "size": 13421
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 89168,
            "mean": 38937344,
            "median": 898384,
            "max": 96808833
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4245782,
          "size": 21134
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 484,
            "mean": 484,
            "median": 484,
            "max": 484
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1532,
            "mean": 1532,
            "median": 1532,
            "max": 1532
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 423,
            "mean": 423,
            "median": 423,
            "max": 423
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1315,
            "mean": 1315,
            "median": 1315,
            "max": 1315
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 470,
            "mean": 470,
            "median": 470,
            "max": 470
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 449,
            "mean": 449,
            "median": 449,
            "max": 449
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 467,
            "mean": 467,
            "median": 467,
            "max": 467
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 439,
            "mean": 439,
            "median": 439,
            "max": 439
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 869,
            "mean": 869,
            "median": 869,
            "max": 869
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 466,
            "mean": 466,
            "median": 466,
            "max": 466
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 814,
            "mean": 814,
            "median": 814,
            "max": 814
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 367694,
          "size": 1336
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 137,
            "min": 67730,
            "mean": 67966,
            "median": 68102,
            "max": 68102
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 196064,
          "size": 691
        },
        "functions": {
          "generate(bytes)": {
            "calls": 159,
            "min": 0,
            "mean": 2734,
            "median": 1550,
            "max": 68432
          },
          "next(uint256)": {
            "calls": 267,
            "min": 362,
            "mean": 362,
            "median": 362,
            "max": 362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 2627137,
          "size": 13051
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1442,
            "mean": 1442,
            "median": 1442,
            "max": 1442
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3510622,
          "size": 17463
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 37,
            "min": 854,
            "mean": 931,
            "median": 931,
            "max": 982
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 39,
            "min": 626321,
            "mean": 823445,
            "median": 627411,
            "max": 4753295
          },
          "recover(bytes32,bytes)": {
            "calls": 153,
            "min": 22632,
            "mean": 27185,
            "median": 26831,
            "max": 30521
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 35,
            "min": 3724,
            "mean": 24886,
            "median": 26312,
            "max": 26324
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 25976,
            "mean": 26237,
            "median": 26360,
            "max": 26489
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 140,
            "min": 651802,
            "mean": 841965,
            "median": 653232,
            "max": 4775776
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 33,
            "min": 651404,
            "mean": 759791,
            "median": 652366,
            "max": 4123705
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 651356,
            "mean": 732118,
            "median": 652744,
            "max": 4309656
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 153,
            "min": 23151,
            "mean": 30346,
            "median": 30563,
            "max": 30575
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 35,
            "min": 3679,
            "mean": 24848,
            "median": 26267,
            "max": 26279
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 26094,
            "mean": 26342,
            "median": 26478,
            "max": 26490
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 140,
            "min": 655502,
            "mean": 860869,
            "median": 657032,
            "max": 4574766
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 33,
            "min": 651648,
            "mean": 652643,
            "median": 652610,
            "max": 653761
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 651504,
            "mean": 707548,
            "median": 652892,
            "max": 4073112
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 519796,
          "size": 2190
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2664,
            "mean": 6299,
            "median": 7209,
            "max": 9447
          },
          "batchData()": {
            "calls": 520,
            "min": 2921,
            "mean": 288787,
            "median": 3100,
            "max": 8804241
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "batchIds()": {
            "calls": 520,
            "min": 2684,
            "mean": 6318,
            "median": 7228,
            "max": 9466
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "from()": {
            "calls": 512,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "id()": {
            "calls": 512,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "mintData()": {
            "calls": 512,
            "min": 2944,
            "mean": 204636,
            "median": 3123,
            "max": 8973170
          },
          "operator()": {
            "calls": 512,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1674586,
          "size": 7527
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62999,
            "mean": 63131,
            "median": 63227,
            "max": 63235
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 59176,
            "mean": 59308,
            "median": 59404,
            "max": 59412
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 50547,
            "mean": 52772,
            "median": 50547,
            "max": 121747
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62303,
            "mean": 62435,
            "median": 62531,
            "max": 62535
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49633,
            "mean": 63258,
            "median": 59162,
            "max": 76030
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 337462,
          "size": 1377
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 24,
            "min": 51175,
            "mean": 51504,
            "median": 51511,
            "max": 51727
          },
          "mint(address,uint256)": {
            "calls": 41,
            "min": 36303,
            "mean": 70388,
            "median": 61947,
            "max": 96375
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 34201,
            "mean": 34201,
            "median": 34201,
            "max": 34201
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2,
            "min": 37513,
            "mean": 37515,
            "median": 37515,
            "max": 37517
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 4817161,
          "size": 23987
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24751,
            "mean": 50905,
            "median": 50079,
            "max": 74307
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 298541,
          "size": 1164
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 251,
            "mean": 1220,
            "median": 251,
            "max": 3160
          },
          "data()": {
            "calls": 257,
            "min": 2920,
            "mean": 3687,
            "median": 2920,
            "max": 11636
          },
          "datahash()": {
            "calls": 667,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25445,
            "mean": 35856,
            "median": 25445,
            "max": 134182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 7200952,
          "size": 35888
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22275,
            "mean": 22669,
            "median": 22594,
            "max": 23428
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22283,
            "mean": 22646,
            "median": 22553,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 276065,
          "size": 1060
        },
        "functions": {
          "datahash()": {
            "calls": 375,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 305797,
          "size": 1200
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2898,
            "mean": 4533,
            "median": 2898,
            "max": 11614
          },
          "from()": {
            "calls": 1024,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "id()": {
            "calls": 1024,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "operator()": {
            "calls": 1024,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1429297,
          "size": 6401
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 405,
            "mean": 405,
            "median": 405,
            "max": 405
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 62171,
            "mean": 63785,
            "median": 62183,
            "max": 113483
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 58427,
            "mean": 59085,
            "median": 58643,
            "max": 75755
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 65506,
            "mean": 70049,
            "median": 70192,
            "max": 70306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2423296,
          "size": 12033
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 418,
            "min": 828,
            "mean": 845,
            "median": 840,
            "max": 1023
          },
          "returnsHash(bytes)": {
            "calls": 459,
            "min": 744,
            "mean": 765,
            "median": 756,
            "max": 936
          },
          "revertsWithCustomError()": {
            "calls": 10,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1115655,
          "size": 5502
        },
        "functions": {
          "get(address)": {
            "calls": 506,
            "min": 2621,
            "mean": 5934,
            "median": 5934,
            "max": 9247
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26965,
            "mean": 49145,
            "median": 37491,
            "max": 165345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 3836641,
          "size": 19091
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 179,
            "min": 21813,
            "mean": 45479,
            "median": 44241,
            "max": 142311
          },
          "addToBytes32Set(bytes32)": {
            "calls": 166,
            "min": 21747,
            "mean": 48827,
            "median": 46399,
            "max": 161532
          },
          "addressSetAt(uint256)": {
            "calls": 12,
            "min": 4856,
            "mean": 5567,
            "median": 4856,
            "max": 9122
          },
          "addressSetContains(address)": {
            "calls": 191,
            "min": 535,
            "mean": 6868,
            "median": 7085,
            "max": 7093
          },
          "bytes32SetAt(uint256)": {
            "calls": 14,
            "min": 4850,
            "mean": 6675,
            "median": 4850,
            "max": 11250
          },
          "bytes32SetContains(bytes32)": {
            "calls": 177,
            "min": 450,
            "mean": 8753,
            "median": 9070,
            "max": 9070
          },
          "removeFromAddressSet(address)": {
            "calls": 176,
            "min": 21790,
            "mean": 28218,
            "median": 28476,
            "max": 28476
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 184,
            "min": 21726,
            "mean": 29947,
            "median": 30630,
            "max": 30630
          },
          "uint8SetAt(uint256)": {
            "calls": 11,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26881,
            "mean": 50169,
            "median": 47017,
            "max": 142883
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28776,
            "mean": 54002,
            "median": 49019,
            "max": 161830
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24367,
            "mean": 28359,
            "median": 27540,
            "max": 44564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 9750780,
          "size": 48615
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 467,
            "mean": 509,
            "median": 511,
            "max": 511
          },
          "divWad(uint256,uint256)": {
            "calls": 86,
            "min": 456,
            "mean": 456,
            "median": 456,
            "max": 456
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 465,
            "mean": 537,
            "median": 568,
            "max": 568
          },
          "divWadUp(uint256,uint256)": {
            "calls": 88,
            "min": 457,
            "mean": 457,
            "median": 457,
            "max": 457
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 406,
            "mean": 406,
            "median": 406,
            "max": 406
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 330,
            "min": 592,
            "mean": 615,
            "median": 592,
            "max": 936
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 592,
            "mean": 611,
            "median": 609,
            "max": 706
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 629,
            "mean": 631,
            "median": 629,
            "max": 965
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 445,
            "mean": 445,
            "median": 445,
            "max": 445
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 501,
            "mean": 501,
            "median": 501,
            "max": 501
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 481,
            "mean": 510,
            "median": 525,
            "max": 525
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 466,
            "mean": 510,
            "median": 550,
            "max": 550
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 489,
            "mean": 548,
            "median": 598,
            "max": 598
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 488,
            "mean": 548,
            "median": 598,
            "max": 598
          },
          "mulWad(uint256,uint256)": {
            "calls": 114,
            "min": 436,
            "mean": 436,
            "median": 436,
            "max": 436
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 464,
            "mean": 523,
            "median": 567,
            "max": 567
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 103,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 677,
            "mean": 677,
            "median": 677,
            "max": 677
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 702,
            "mean": 1446,
            "median": 1446,
            "max": 2191
          },
          "sDivWad(int256,int256)": {
            "calls": 79,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 528,
            "mean": 633,
            "median": 677,
            "max": 677
          },
          "sMulWad(int256,int256)": {
            "calls": 90,
            "min": 479,
            "mean": 479,
            "median": 479,
            "max": 479
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 512,
            "mean": 647,
            "median": 701,
            "max": 701
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 7467381,
          "size": 37218
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 10553,
            "mean": 12959,
            "median": 12959,
            "max": 19443
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 10696,
            "mean": 19434,
            "median": 21832,
            "max": 22037
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 10660,
            "mean": 15061,
            "median": 13559,
            "max": 21860
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 979,
            "mean": 3249,
            "median": 1335,
            "max": 9987
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 10713,
            "mean": 14482,
            "median": 14209,
            "max": 23317
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1750734,
          "size": 8674
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 1647422,
          "size": 8158
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23799,
            "mean": 33892,
            "median": 33892,
            "max": 43985
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26756,
            "mean": 35286,
            "median": 35286,
            "max": 43817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 2759297,
          "size": 13711
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 535,
            "min": 23479,
            "mean": 24479,
            "median": 24079,
            "max": 27327
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 25286,
            "mean": 27782,
            "median": 26778,
            "max": 520662
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28401,
            "mean": 28941,
            "median": 28829,
            "max": 30177
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 25111,
            "mean": 26522,
            "median": 26747,
            "max": 27483
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 272,
            "min": 3005,
            "mean": 736815,
            "median": 646442,
            "max": 4848775
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2359822,
          "size": 11716
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 118285,
            "mean": 1308558,
            "median": 949683,
            "max": 83524431
          },
          "getArgAddress(uint256)": {
            "calls": 6,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 733,
            "mean": 747,
            "median": 751,
            "max": 757
          },
          "getArgUint256(uint256)": {
            "calls": 18,
            "min": 2726,
            "mean": 2726,
            "median": 2726,
            "max": 2726
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 6,
            "min": 12385,
            "mean": 39793,
            "median": 42379,
            "max": 63720
          },
          "getArgUint64(uint256)": {
            "calls": 6,
            "min": 397,
            "mean": 397,
            "median": 397,
            "max": 397
          },
          "getArgUint8(uint256)": {
            "calls": 6,
            "min": 420,
            "mean": 420,
            "median": 420,
            "max": 420
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 973,
            "mean": 2141,
            "median": 2251,
            "max": 3167
          },
          "revertWithError()": {
            "calls": 6,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 22377,
            "mean": 22377,
            "median": 22377,
            "max": 22377
          },
          "value()": {
            "calls": 1036,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 182699,
          "size": 628
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44660,
            "mean": 45414,
            "median": 45182,
            "max": 46801
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 942676,
          "size": 4638
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 374,
            "min": 742,
            "mean": 956,
            "median": 1053,
            "max": 1077
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 8960342,
          "size": 44670
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 9,
            "min": 3112,
            "mean": 3112,
            "median": 3112,
            "max": 3112
          },
          "argsOnClone(address,uint256)": {
            "calls": 15,
            "min": 3147,
            "mean": 3147,
            "median": 3147,
            "max": 3147
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 15,
            "min": 3280,
            "mean": 4652,
            "median": 3288,
            "max": 23766
          },
          "argsOnERC1967(address)": {
            "calls": 12,
            "min": 3130,
            "mean": 3130,
            "median": 3130,
            "max": 3130
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 7,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 9,
            "min": 3332,
            "mean": 3332,
            "median": 3332,
            "max": 3332
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 7,
            "min": 3088,
            "mean": 3088,
            "median": 3088,
            "max": 3088
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 6,
            "min": 3103,
            "mean": 3103,
            "median": 3103,
            "max": 3103
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 1,
            "min": 3307,
            "mean": 3307,
            "median": 3307,
            "max": 3307
          },
          "argsOnERC1967I(address)": {
            "calls": 11,
            "min": 3065,
            "mean": 3065,
            "median": 3065,
            "max": 3065
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 5,
            "min": 3102,
            "mean": 3102,
            "median": 3102,
            "max": 3102
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 3,
            "min": 3285,
            "mean": 3285,
            "median": 3285,
            "max": 3285
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 4,
            "min": 3087,
            "mean": 3087,
            "median": 3087,
            "max": 3087
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 2,
            "min": 3101,
            "mean": 3101,
            "median": 3101,
            "max": 3101
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 5,
            "min": 3330,
            "mean": 3330,
            "median": 3330,
            "max": 3330
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 69,
            "min": 36208,
            "mean": 46589,
            "median": 56350,
            "max": 56742
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 898,
            "mean": 906,
            "median": 911,
            "max": 914
          },
          "clone(address)": {
            "calls": 257,
            "min": 86093,
            "mean": 86093,
            "median": 86093,
            "max": 86093
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 70090,
            "mean": 1757643,
            "median": 72147,
            "max": 96830419
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 263,
            "min": 70809,
            "mean": 5924711,
            "median": 74603,
            "max": 96828646
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 86717,
            "mean": 126914,
            "median": 87089,
            "max": 3135132
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 263,
            "min": 0,
            "mean": 261983,
            "median": 76609,
            "max": 10729869
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 263,
            "min": 0,
            "mean": 472056,
            "median": 102519,
            "max": 11747199
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 115412,
            "mean": 163344,
            "median": 115772,
            "max": 670901
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 347,
            "min": 0,
            "mean": 278583,
            "median": 105660,
            "max": 11025548
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102569,
            "mean": 159052,
            "median": 102929,
            "max": 2419852
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 269,
            "min": 0,
            "mean": 327041,
            "median": 105551,
            "max": 12759700
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 119706,
            "mean": 165563,
            "median": 120078,
            "max": 4018847
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 344,
            "min": 0,
            "mean": 350221,
            "median": 107524,
            "max": 13387064
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 103559,
            "mean": 138520,
            "median": 103919,
            "max": 659095
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 266,
            "min": 96290,
            "mean": 5445401,
            "median": 100335,
            "max": 96828400
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 387,
            "min": 95272,
            "mean": 146128,
            "median": 112506,
            "max": 3061290
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 447,
            "min": 100354,
            "mean": 15518455,
            "median": 105218,
            "max": 96823830
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99533,
            "mean": 151819,
            "median": 99893,
            "max": 655069
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 264,
            "min": 100556,
            "mean": 6527018,
            "median": 104214,
            "max": 96828750
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 640,
            "min": 99543,
            "mean": 145853,
            "median": 100009,
            "max": 1134251
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 466,
            "min": 82307,
            "mean": 18316727,
            "median": 106643,
            "max": 96832172
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 100532,
            "mean": 133322,
            "median": 100904,
            "max": 656019
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 95391,
            "mean": 1423346,
            "median": 97562,
            "max": 96815631
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98836,
            "mean": 131966,
            "median": 98930,
            "max": 947499
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 116,
            "min": 99483,
            "mean": 1396764,
            "median": 101966,
            "max": 96779585
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115914,
            "mean": 115914,
            "median": 115914,
            "max": 115914
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 99721,
            "mean": 2288886,
            "median": 102637,
            "max": 96815422
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99836,
            "mean": 141528,
            "median": 99930,
            "max": 2636484
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 121,
            "min": 100526,
            "mean": 2545670,
            "median": 102594,
            "max": 96828613
          },
          "revertWithError()": {
            "calls": 7153,
            "min": 227,
            "mean": 2396,
            "median": 2411,
            "max": 2411
          },
          "setValue(uint256)": {
            "calls": 7504,
            "min": 2545,
            "mean": 22288,
            "median": 22445,
            "max": 22445
          },
          "value()": {
            "calls": 21068,
            "min": 232,
            "mean": 2422,
            "median": 2430,
            "max": 2430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2612722,
          "size": 12979
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 664,
            "mean": 664,
            "median": 664,
            "max": 664
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 646,
            "mean": 646,
            "median": 646,
            "max": 646
          },
          "decodeBatch(bytes)": {
            "calls": 62,
            "min": 1332,
            "mean": 3334,
            "median": 2766,
            "max": 5505
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 24,
            "min": 1503,
            "mean": 1689,
            "median": 1679,
            "max": 1916
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 631,
            "min": 706,
            "mean": 2154,
            "median": 1117,
            "max": 6353
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 1043,
            "mean": 1061,
            "median": 1055,
            "max": 1091
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 1096,
            "mean": 1103,
            "median": 1096,
            "max": 1132
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 120,
            "min": 30735,
            "mean": 40787,
            "median": 39898,
            "max": 58729
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 648023,
            "mean": 769519,
            "median": 654204,
            "max": 4590033
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 2305362,
          "size": 11444
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2595,
            "mean": 2595,
            "median": 2595,
            "max": 2595
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2624,
            "mean": 2624,
            "median": 2624,
            "max": 2624
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 44062,
            "mean": 44062,
            "median": 44062,
            "max": 44062
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 44031,
            "mean": 44031,
            "median": 44031,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 2830182,
          "size": 14065
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2429,
            "mean": 3673,
            "median": 4771,
            "max": 4771
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23803,
            "mean": 23827,
            "median": 23839,
            "max": 23839
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21554,
            "mean": 43455,
            "median": 43809,
            "max": 43809
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23678,
            "mean": 23966,
            "median": 24062,
            "max": 24062
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 5021049,
          "size": 25005
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24600,
            "mean": 37993,
            "median": 27749,
            "max": 91356
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24912,
            "mean": 45695,
            "median": 29693,
            "max": 129914
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 10017885,
          "size": 49948
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 873,
            "mean": 882,
            "median": 885,
            "max": 891
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 603,
            "mean": 603,
            "median": 603,
            "max": 603
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 818,
            "mean": 818,
            "median": 818,
            "max": 818
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 229928,
          "size": 845
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27606,
            "mean": 52003,
            "median": 51118,
            "max": 82868
          },
          "x()": {
            "calls": 6,
            "min": 3054,
            "mean": 10545,
            "median": 6193,
            "max": 37502
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 176259,
          "size": 597
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27392,
            "mean": 42061,
            "median": 32834,
            "max": 82275
          },
          "x()": {
            "calls": 6,
            "min": 2666,
            "mean": 9570,
            "median": 4885,
            "max": 37430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2248696,
          "size": 11161
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22551,
            "mean": 26801,
            "median": 28016,
            "max": 29560
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 25242,
            "mean": 33241,
            "median": 33643,
            "max": 61022
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 1771562,
          "size": 8778
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 255,
            "min": 1449,
            "mean": 41012,
            "median": 39027,
            "max": 83314
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1522,
            "mean": 49970,
            "median": 45734,
            "max": 85791
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 254,
            "min": 1109,
            "mean": 43738,
            "median": 44178,
            "max": 83288
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 2,
            "min": 742,
            "mean": 742,
            "median": 742,
            "max": 742
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1550517,
          "size": 7674
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "name()": {
            "calls": 256,
            "min": 5027,
            "mean": 7287,
            "median": 5251,
            "max": 13776
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 356
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 5039,
            "mean": 7313,
            "median": 5253,
            "max": 13851
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "returnsString()": {
            "calls": 512,
            "min": 5031,
            "mean": 7177,
            "median": 5255,
            "max": 13796
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "reverts()": {
            "calls": 258,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "symbol()": {
            "calls": 256,
            "min": 5048,
            "mean": 7308,
            "median": 5272,
            "max": 13797
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 3042239,
          "size": 15124
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 134,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "enqueue(uint256,uint256)": {
            "calls": 389,
            "min": 23944,
            "mean": 52119,
            "median": 66544,
            "max": 66664
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 127,
            "min": 722,
            "mean": 722,
            "median": 722,
            "max": 722
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 118,
            "min": 776,
            "mean": 777,
            "median": 776,
            "max": 779
          },
          "pop()": {
            "calls": 69,
            "min": 23548,
            "mean": 23548,
            "median": 23548,
            "max": 23548
          },
          "replace(uint256)": {
            "calls": 59,
            "min": 23789,
            "mean": 24065,
            "median": 24161,
            "max": 24161
          },
          "root()": {
            "calls": 126,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2497386,
          "size": 12403
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22552,
            "mean": 23516,
            "median": 24016,
            "max": 24016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 587485,
          "size": 2746
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 21,
            "min": 3545,
            "mean": 3580,
            "median": 3579,
            "max": 3633
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 13,
            "min": 3892,
            "mean": 3938,
            "median": 3942,
            "max": 3983
          },
          "getArgUint256(uint256)": {
            "calls": 47,
            "min": 5882,
            "mean": 5918,
            "median": 5916,
            "max": 5970
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 21,
            "min": 24007,
            "mean": 26231,
            "median": 26067,
            "max": 29310
          },
          "getArgUint64(uint256)": {
            "calls": 21,
            "min": 3553,
            "mean": 3588,
            "median": 3587,
            "max": 3641
          },
          "getArgUint8(uint256)": {
            "calls": 21,
            "min": 3576,
            "mean": 3611,
            "median": 3610,
            "max": 3664
          },
          "getCalldataHash()": {
            "calls": 13,
            "min": 4465,
            "mean": 4576,
            "median": 4574,
            "max": 4724
          },
          "revertWithError()": {
            "calls": 21,
            "min": 5561,
            "mean": 5597,
            "median": 5596,
            "max": 5650
          },
          "setValue(uint256)": {
            "calls": 21,
            "min": 44240,
            "mean": 44367,
            "median": 44322,
            "max": 44598
          },
          "value()": {
            "calls": 21,
            "min": 5489,
            "mean": 5525,
            "median": 5524,
            "max": 5578
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 2640552,
          "size": 13118
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 426,
            "mean": 426,
            "median": 426,
            "max": 426
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21621,
            "mean": 24121,
            "median": 24121,
            "max": 26621
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 24014,
            "mean": 24342,
            "median": 24345,
            "max": 24345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 877631,
          "size": 4281
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 23,
            "min": 3774,
            "mean": 3837,
            "median": 3832,
            "max": 3930
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 12,
            "min": 4128,
            "mean": 4185,
            "median": 4183,
            "max": 4277
          },
          "getArgUint256(uint256)": {
            "calls": 47,
            "min": 6111,
            "mean": 6175,
            "median": 6169,
            "max": 6267
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 23,
            "min": 35290,
            "mean": 38370,
            "median": 37966,
            "max": 42477
          },
          "getArgUint64(uint256)": {
            "calls": 23,
            "min": 3782,
            "mean": 3845,
            "median": 3840,
            "max": 3938
          },
          "getArgUint8(uint256)": {
            "calls": 23,
            "min": 3805,
            "mean": 3868,
            "median": 3863,
            "max": 3961
          },
          "getCalldataHash()": {
            "calls": 12,
            "min": 5159,
            "mean": 5328,
            "median": 5320,
            "max": 5596
          },
          "revertWithError()": {
            "calls": 26,
            "min": 5082,
            "mean": 5926,
            "median": 5852,
            "max": 7177
          },
          "setValue(uint256)": {
            "calls": 26,
            "min": 44190,
            "mean": 44666,
            "median": 44542,
            "max": 46273
          },
          "value()": {
            "calls": 26,
            "min": 5096,
            "mean": 5864,
            "median": 5780,
            "max": 7191
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1810005,
          "size": 8970
        },
        "functions": {
          "read(address)": {
            "calls": 161,
            "min": 520,
            "mean": 3102,
            "median": 3020,
            "max": 3437
          },
          "read(address,uint256)": {
            "calls": 104,
            "min": 552,
            "mean": 3192,
            "median": 3052,
            "max": 3502
          },
          "read(address,uint256,uint256)": {
            "calls": 67,
            "min": 3286,
            "mean": 3812,
            "median": 3677,
            "max": 24070
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468528,
            "mean": 48556581,
            "median": 48556581,
            "max": 83644634
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 9079161,
          "size": 45263
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 28,
            "min": 381,
            "mean": 433,
            "median": 455,
            "max": 455
          },
          "toInt104(uint256)": {
            "calls": 19,
            "min": 396,
            "mean": 424,
            "median": 396,
            "max": 472
          },
          "toInt112(int256)": {
            "calls": 26,
            "min": 381,
            "mean": 426,
            "median": 455,
            "max": 455
          },
          "toInt112(uint256)": {
            "calls": 17,
            "min": 417,
            "mean": 448,
            "median": 417,
            "max": 493
          },
          "toInt120(int256)": {
            "calls": 30,
            "min": 407,
            "mean": 453,
            "median": 481,
            "max": 481
          },
          "toInt120(uint256)": {
            "calls": 22,
            "min": 424,
            "mean": 465,
            "median": 500,
            "max": 500
          },
          "toInt128(int256)": {
            "calls": 22,
            "min": 430,
            "mean": 477,
            "median": 504,
            "max": 504
          },
          "toInt128(uint256)": {
            "calls": 24,
            "min": 381,
            "mean": 428,
            "median": 457,
            "max": 457
          },
          "toInt136(int256)": {
            "calls": 30,
            "min": 430,
            "mean": 486,
            "median": 504,
            "max": 504
          },
          "toInt136(uint256)": {
            "calls": 16,
            "min": 444,
            "mean": 467,
            "median": 444,
            "max": 520
          },
          "toInt144(int256)": {
            "calls": 36,
            "min": 429,
            "mean": 488,
            "median": 503,
            "max": 503
          },
          "toInt144(uint256)": {
            "calls": 15,
            "min": 445,
            "mean": 485,
            "median": 521,
            "max": 521
          },
          "toInt152(int256)": {
            "calls": 44,
            "min": 431,
            "mean": 478,
            "median": 505,
            "max": 505
          },
          "toInt152(uint256)": {
            "calls": 12,
            "min": 401,
            "mean": 439,
            "median": 439,
            "max": 477
          },
          "toInt16(int256)": {
            "calls": 60,
            "min": 424,
            "mean": 465,
            "median": 498,
            "max": 498
          },
          "toInt16(uint256)": {
            "calls": 18,
            "min": 374,
            "mean": 382,
            "median": 374,
            "max": 450
          },
          "toInt160(int256)": {
            "calls": 36,
            "min": 408,
            "mean": 461,
            "median": 482,
            "max": 482
          },
          "toInt160(uint256)": {
            "calls": 14,
            "min": 423,
            "mean": 455,
            "median": 423,
            "max": 499
          },
          "toInt168(int256)": {
            "calls": 14,
            "min": 408,
            "mean": 466,
            "median": 482,
            "max": 482
          },
          "toInt168(uint256)": {
            "calls": 10,
            "min": 422,
            "mean": 444,
            "median": 422,
            "max": 498
          },
          "toInt176(int256)": {
            "calls": 30,
            "min": 387,
            "mean": 453,
            "median": 461,
            "max": 461
          },
          "toInt176(uint256)": {
            "calls": 10,
            "min": 424,
            "mean": 446,
            "median": 424,
            "max": 500
          },
          "toInt184(int256)": {
            "calls": 34,
            "min": 407,
            "mean": 461,
            "median": 481,
            "max": 481
          },
          "toInt184(uint256)": {
            "calls": 13,
            "min": 445,
            "mean": 474,
            "median": 445,
            "max": 521
          },
          "toInt192(int256)": {
            "calls": 42,
            "min": 388,
            "mean": 444,
            "median": 462,
            "max": 462
          },
          "toInt192(uint256)": {
            "calls": 8,
            "min": 424,
            "mean": 462,
            "median": 462,
            "max": 500
          },
          "toInt200(int256)": {
            "calls": 32,
            "min": 387,
            "mean": 447,
            "median": 461,
            "max": 461
          },
          "toInt200(uint256)": {
            "calls": 8,
            "min": 446,
            "mean": 484,
            "median": 484,
            "max": 522
          },
          "toInt208(int256)": {
            "calls": 30,
            "min": 429,
            "mean": 485,
            "median": 503,
            "max": 503
          },
          "toInt208(uint256)": {
            "calls": 14,
            "min": 424,
            "mean": 472,
            "median": 500,
            "max": 500
          },
          "toInt216(int256)": {
            "calls": 28,
            "min": 385,
            "mean": 453,
            "median": 459,
            "max": 459
          },
          "toInt216(uint256)": {
            "calls": 15,
            "min": 423,
            "mean": 468,
            "median": 499,
            "max": 499
          },
          "toInt224(int256)": {
            "calls": 36,
            "min": 432,
            "mean": 495,
            "median": 506,
            "max": 506
          },
          "toInt224(uint256)": {
            "calls": 20,
            "min": 445,
            "mean": 471,
            "median": 445,
            "max": 521
          },
          "toInt232(int256)": {
            "calls": 32,
            "min": 411,
            "mean": 466,
            "median": 485,
            "max": 485
          },
          "toInt232(uint256)": {
            "calls": 20,
            "min": 423,
            "mean": 468,
            "median": 499,
            "max": 499
          },
          "toInt24(int256)": {
            "calls": 28,
            "min": 380,
            "mean": 424,
            "median": 454,
            "max": 454
          },
          "toInt24(uint256)": {
            "calls": 17,
            "min": 438,
            "mean": 451,
            "median": 438,
            "max": 514
          },
          "toInt240(int256)": {
            "calls": 46,
            "min": 386,
            "mean": 445,
            "median": 460,
            "max": 460
          },
          "toInt240(uint256)": {
            "calls": 16,
            "min": 402,
            "mean": 449,
            "median": 478,
            "max": 478
          },
          "toInt248(int256)": {
            "calls": 48,
            "min": 389,
            "mean": 444,
            "median": 452,
            "max": 452
          },
          "toInt248(uint256)": {
            "calls": 8,
            "min": 401,
            "mean": 441,
            "median": 466,
            "max": 466
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 372,
            "mean": 430,
            "median": 432,
            "max": 432
          },
          "toInt32(int256)": {
            "calls": 48,
            "min": 403,
            "mean": 446,
            "median": 477,
            "max": 477
          },
          "toInt32(uint256)": {
            "calls": 17,
            "min": 416,
            "mean": 429,
            "median": 416,
            "max": 492
          },
          "toInt40(int256)": {
            "calls": 22,
            "min": 381,
            "mean": 431,
            "median": 455,
            "max": 455
          },
          "toInt40(uint256)": {
            "calls": 24,
            "min": 373,
            "mean": 404,
            "median": 373,
            "max": 449
          },
          "toInt48(int256)": {
            "calls": 32,
            "min": 382,
            "mean": 428,
            "median": 456,
            "max": 456
          },
          "toInt48(uint256)": {
            "calls": 13,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "toInt56(int256)": {
            "calls": 30,
            "min": 381,
            "mean": 437,
            "median": 455,
            "max": 455
          },
          "toInt56(uint256)": {
            "calls": 8,
            "min": 438,
            "mean": 447,
            "median": 438,
            "max": 514
          },
          "toInt64(int256)": {
            "calls": 32,
            "min": 380,
            "mean": 435,
            "median": 454,
            "max": 454
          },
          "toInt64(uint256)": {
            "calls": 14,
            "min": 396,
            "mean": 412,
            "median": 396,
            "max": 472
          },
          "toInt72(int256)": {
            "calls": 26,
            "min": 445,
            "mean": 504,
            "median": 519,
            "max": 519
          },
          "toInt72(uint256)": {
            "calls": 14,
            "min": 439,
            "mean": 449,
            "median": 439,
            "max": 515
          },
          "toInt8(int256)": {
            "calls": 23,
            "min": 401,
            "mean": 404,
            "median": 401,
            "max": 474
          },
          "toInt8(uint256)": {
            "calls": 14,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "toInt80(int256)": {
            "calls": 22,
            "min": 402,
            "mean": 455,
            "median": 476,
            "max": 476
          },
          "toInt80(uint256)": {
            "calls": 20,
            "min": 375,
            "mean": 416,
            "median": 451,
            "max": 451
          },
          "toInt88(int256)": {
            "calls": 28,
            "min": 381,
            "mean": 433,
            "median": 455,
            "max": 455
          },
          "toInt88(uint256)": {
            "calls": 14,
            "min": 416,
            "mean": 432,
            "median": 416,
            "max": 492
          },
          "toInt96(int256)": {
            "calls": 46,
            "min": 426,
            "mean": 479,
            "median": 500,
            "max": 500
          },
          "toInt96(uint256)": {
            "calls": 16,
            "min": 419,
            "mean": 438,
            "median": 419,
            "max": 495
          },
          "toUint104(uint256)": {
            "calls": 8,
            "min": 396,
            "mean": 413,
            "median": 396,
            "max": 467
          },
          "toUint112(uint256)": {
            "calls": 15,
            "min": 440,
            "mean": 468,
            "median": 440,
            "max": 511
          },
          "toUint120(uint256)": {
            "calls": 11,
            "min": 396,
            "mean": 421,
            "median": 396,
            "max": 467
          },
          "toUint128(uint256)": {
            "calls": 18,
            "min": 396,
            "mean": 431,
            "median": 431,
            "max": 467
          },
          "toUint136(uint256)": {
            "calls": 21,
            "min": 373,
            "mean": 386,
            "median": 373,
            "max": 444
          },
          "toUint144(uint256)": {
            "calls": 25,
            "min": 395,
            "mean": 434,
            "median": 395,
            "max": 478
          },
          "toUint152(uint256)": {
            "calls": 16,
            "min": 379,
            "mean": 410,
            "median": 379,
            "max": 462
          },
          "toUint16(uint256)": {
            "calls": 25,
            "min": 417,
            "mean": 428,
            "median": 417,
            "max": 488
          },
          "toUint160(uint256)": {
            "calls": 26,
            "min": 400,
            "mean": 435,
            "median": 400,
            "max": 483
          },
          "toUint168(uint256)": {
            "calls": 14,
            "min": 401,
            "mean": 442,
            "median": 442,
            "max": 484
          },
          "toUint176(uint256)": {
            "calls": 18,
            "min": 426,
            "mean": 458,
            "median": 426,
            "max": 509
          },
          "toUint184(uint256)": {
            "calls": 18,
            "min": 423,
            "mean": 455,
            "median": 423,
            "max": 506
          },
          "toUint192(uint256)": {
            "calls": 24,
            "min": 403,
            "mean": 451,
            "median": 486,
            "max": 486
          },
          "toUint200(uint256)": {
            "calls": 16,
            "min": 381,
            "mean": 427,
            "median": 464,
            "max": 464
          },
          "toUint208(uint256)": {
            "calls": 14,
            "min": 400,
            "mean": 435,
            "median": 400,
            "max": 483
          },
          "toUint216(uint256)": {
            "calls": 14,
            "min": 424,
            "mean": 465,
            "median": 465,
            "max": 507
          },
          "toUint224(uint256)": {
            "calls": 11,
            "min": 379,
            "mean": 409,
            "median": 379,
            "max": 462
          },
          "toUint232(uint256)": {
            "calls": 12,
            "min": 425,
            "mean": 466,
            "median": 466,
            "max": 508
          },
          "toUint24(uint256)": {
            "calls": 20,
            "min": 439,
            "mean": 453,
            "median": 439,
            "max": 510
          },
          "toUint240(uint256)": {
            "calls": 17,
            "min": 402,
            "mean": 450,
            "median": 485,
            "max": 485
          },
          "toUint248(uint256)": {
            "calls": 16,
            "min": 424,
            "mean": 455,
            "median": 424,
            "max": 507
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 437,
            "mean": 477,
            "median": 497,
            "max": 497
          },
          "toUint32(uint256)": {
            "calls": 21,
            "min": 418,
            "mean": 434,
            "median": 418,
            "max": 489
          },
          "toUint40(uint256)": {
            "calls": 9,
            "min": 415,
            "mean": 422,
            "median": 415,
            "max": 486
          },
          "toUint48(uint256)": {
            "calls": 15,
            "min": 395,
            "mean": 428,
            "median": 395,
            "max": 466
          },
          "toUint56(uint256)": {
            "calls": 15,
            "min": 396,
            "mean": 414,
            "median": 396,
            "max": 467
          },
          "toUint64(uint256)": {
            "calls": 23,
            "min": 373,
            "mean": 391,
            "median": 373,
            "max": 444
          },
          "toUint72(uint256)": {
            "calls": 17,
            "min": 397,
            "mean": 422,
            "median": 397,
            "max": 468
          },
          "toUint8(uint256)": {
            "calls": 20,
            "min": 397,
            "mean": 400,
            "median": 397,
            "max": 468
          },
          "toUint80(uint256)": {
            "calls": 17,
            "min": 395,
            "mean": 428,
            "median": 395,
            "max": 466
          },
          "toUint88(uint256)": {
            "calls": 22,
            "min": 374,
            "mean": 406,
            "median": 374,
            "max": 445
          },
          "toUint96(uint256)": {
            "calls": 16,
            "min": 397,
            "mean": 419,
            "median": 397,
            "max": 468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 14181956,
          "size": 70727
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 83,
            "min": 161714,
            "mean": 170341,
            "median": 170762,
            "max": 170822
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 694,
            "min": 22271,
            "mean": 149762,
            "median": 73344,
            "max": 297296
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46860,
            "mean": 68250,
            "median": 70090,
            "max": 85918
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29688,
            "mean": 30140,
            "median": 30164,
            "max": 32381
          },
          "safeApprove(address,address,uint256)": {
            "calls": 255,
            "min": 24896,
            "mean": 25294,
            "median": 25388,
            "max": 25712
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 256,
            "min": 25280,
            "mean": 25652,
            "median": 25724,
            "max": 26096
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24949,
            "mean": 25343,
            "median": 25357,
            "max": 25669
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28758,
            "mean": 28758,
            "median": 28758,
            "max": 28758
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22186,
            "mean": 28891,
            "median": 28909,
            "max": 29202
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 255,
            "min": 26217,
            "mean": 26767,
            "median": 26925,
            "max": 27257
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 29019,
            "mean": 50256,
            "median": 68913,
            "max": 69893
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 604,
            "mean": 3892,
            "median": 5536,
            "max": 5536
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2564,
            "min": 26089,
            "mean": 40225,
            "median": 31745,
            "max": 62096
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 593371,
            "mean": 737097,
            "median": 620390,
            "max": 4766199
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 591613,
            "mean": 738699,
            "median": 622832,
            "max": 4759989
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2735267,
          "size": 13591
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 35662,
            "mean": 42902,
            "median": 40633,
            "max": 64504
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 40118,
            "mean": 60611,
            "median": 54609,
            "max": 105462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 3611352,
          "size": 17966
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1701,
            "mean": 9264,
            "median": 9990,
            "max": 16725
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 307,
            "min": 1146,
            "mean": 10435,
            "median": 10464,
            "max": 17041
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 121,
            "min": 6700,
            "mean": 6713,
            "median": 6726,
            "max": 6726
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 198558,
          "size": 718
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 34,
            "min": 45078,
            "mean": 52119,
            "median": 45078,
            "max": 79278
          },
          "fallbackDeposit(uint256)": {
            "calls": 35,
            "min": 32413,
            "mean": 48270,
            "median": 44713,
            "max": 78913
          },
          "withdraw(uint256)": {
            "calls": 14,
            "min": 45458,
            "mean": 45489,
            "median": 45470,
            "max": 45554
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2256903,
          "size": 11202
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 131,
            "min": 1800,
            "mean": 1814,
            "median": 1813,
            "max": 1834
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 381377,
          "size": 1574
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 258,
            "mean": 288,
            "median": 288,
            "max": 319
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 267,
            "mean": 297,
            "median": 297,
            "max": 328
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22486,
            "mean": 22486,
            "median": 22486,
            "max": 22486
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 280,
            "mean": 302,
            "median": 302,
            "max": 324
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22411,
            "mean": 22411,
            "median": 22411,
            "max": 22411
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 290229,
          "size": 1124
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "fallback()": {
            "calls": 520,
            "min": 23236,
            "mean": 64753,
            "median": 81976,
            "max": 203825
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "receive()": {
            "calls": 260,
            "min": 89,
            "mean": 20846,
            "median": 21089,
            "max": 21089
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 711,
            "mean": 33711,
            "median": 24088,
            "max": 67357
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 2018,
            "mean": 35183,
            "median": 35183,
            "max": 68349
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 108363,
          "size": 281
        },
        "functions": {
          "fallback()": {
            "calls": 992,
            "min": 234,
            "mean": 23655,
            "median": 22388,
            "max": 70080
          },
          "receive()": {
            "calls": 16,
            "min": 21107,
            "mean": 21107,
            "median": 21107,
            "max": 21107
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 390621,
          "size": 1824
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 285,
            "mean": 394,
            "median": 449,
            "max": 449
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 1010,
            "mean": 1010,
            "median": 1010,
            "max": 1010
          },
          "getArgAddress(uint256)": {
            "calls": 10,
            "min": 3376,
            "mean": 3408,
            "median": 3407,
            "max": 3445
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3736,
            "mean": 3760,
            "median": 3767,
            "max": 3779
          },
          "getArgUint256(uint256)": {
            "calls": 16,
            "min": 5713,
            "mean": 5747,
            "median": 5753,
            "max": 5782
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 10,
            "min": 16942,
            "mean": 18453,
            "median": 18398,
            "max": 20444
          },
          "getArgUint64(uint256)": {
            "calls": 10,
            "min": 3384,
            "mean": 3416,
            "median": 3415,
            "max": 3453
          },
          "getArgUint8(uint256)": {
            "calls": 10,
            "min": 3407,
            "mean": 3439,
            "median": 3438,
            "max": 3476
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 4003,
            "mean": 4077,
            "median": 4095,
            "max": 4133
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 441,
            "mean": 551,
            "median": 606,
            "max": 606
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 819,
            "mean": 819,
            "median": 819,
            "max": 819
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 762,
            "mean": 762,
            "median": 762,
            "max": 762
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "revertWithError()": {
            "calls": 11,
            "min": 5393,
            "mean": 6032,
            "median": 5430,
            "max": 12110
          },
          "setValue(uint256)": {
            "calls": 11,
            "min": 44090,
            "mean": 44799,
            "median": 44133,
            "max": 50981
          },
          "value()": {
            "calls": 11,
            "min": 5321,
            "mean": 5968,
            "median": 5358,
            "max": 12127
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 568978,
          "size": 3198
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5733,
            "mean": 6001,
            "median": 6091,
            "max": 6091
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 6022,
            "mean": 6201,
            "median": 6201,
            "max": 6380
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5889,
            "mean": 6068,
            "median": 6068,
            "max": 6247
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5853,
            "mean": 6032,
            "median": 6032,
            "max": 6211
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5774,
            "mean": 5953,
            "median": 5953,
            "max": 6132
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5832,
            "mean": 6011,
            "median": 6011,
            "max": 6190
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11742,
            "mean": 30467,
            "median": 33718,
            "max": 45942
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1455831,
          "size": 6517
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5571,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 442,
            "min": 745,
            "mean": 2967,
            "median": 1012,
            "max": 8044
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 622,
            "min": 23968,
            "mean": 29966,
            "median": 29395,
            "max": 50163
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4249,
            "min": 24018,
            "mean": 160475,
            "median": 77849,
            "max": 32713701
          },
          "burn(address,uint256,uint256)": {
            "calls": 383,
            "min": 25329,
            "mean": 29159,
            "median": 27933,
            "max": 33351
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 944,
            "min": 25028,
            "mean": 266614,
            "median": 38985,
            "max": 35278703
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1104,
            "min": 24179,
            "mean": 167837,
            "median": 58934,
            "max": 31921372
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1975,
            "min": 26564,
            "mean": 44762,
            "median": 46704,
            "max": 46712
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2675,
            "mean": 2675,
            "median": 2675,
            "max": 2675
          },
          "lastDataHash()": {
            "calls": 38,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5015,
            "min": 23160,
            "mean": 128764,
            "median": 72969,
            "max": 34754822
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 891,
            "min": 24308,
            "mean": 288815,
            "median": 63227,
            "max": 32045690
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1089,
            "min": 23732,
            "mean": 156874,
            "median": 58137,
            "max": 35532337
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1711,
            "min": 25851,
            "mean": 45205,
            "median": 45991,
            "max": 45991
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 146,
            "min": 26846,
            "mean": 36506,
            "median": 33928,
            "max": 47751
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 129,
            "min": 27620,
            "mean": 30580,
            "median": 30636,
            "max": 30868
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 129,
            "min": 33875,
            "mean": 84021,
            "median": 94032,
            "max": 423730
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 122,
            "min": 41804,
            "mean": 80565,
            "median": 62685,
            "max": 724533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 448725,
          "size": 1889
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 422,
            "min": 2899,
            "mean": 2943,
            "median": 2914,
            "max": 6391
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26544,
            "mean": 26544,
            "median": 26544,
            "max": 26544
          },
          "signer()": {
            "calls": 4,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 816228,
          "size": 4125
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 435,
            "mean": 435,
            "median": 435,
            "max": 435
          },
          "allowance(address,address)": {
            "calls": 2449,
            "min": 758,
            "mean": 2338,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 2609,
            "min": 26122,
            "mean": 46197,
            "median": 46238,
            "max": 46406
          },
          "balanceOf(address)": {
            "calls": 13233,
            "min": 608,
            "mean": 2434,
            "median": 2608,
            "max": 2608
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24304,
            "mean": 29368,
            "median": 27408,
            "max": 34620
          },
          "decimals()": {
            "calls": 312,
            "min": 2311,
            "mean": 2311,
            "median": 2311,
            "max": 2311
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 25184,
            "mean": 27118,
            "median": 28120,
            "max": 28702
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 25164,
            "mean": 37776,
            "median": 25756,
            "max": 52650
          },
          "mint(address,uint256)": {
            "calls": 3228,
            "min": 24470,
            "mean": 68048,
            "median": 68478,
            "max": 68830
          },
          "name()": {
            "calls": 258,
            "min": 2929,
            "mean": 5038,
            "median": 3108,
            "max": 9486
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23685,
            "mean": 43854,
            "median": 30264,
            "max": 74424
          },
          "symbol()": {
            "calls": 258,
            "min": 2951,
            "mean": 5302,
            "median": 4160,
            "max": 9508
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 2575,
            "min": 24329,
            "mean": 45779,
            "median": 51658,
            "max": 51878
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1548,
            "min": 25011,
            "mean": 41095,
            "median": 32979,
            "max": 54959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 816276,
          "size": 4132
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 598,
            "mean": 598,
            "median": 598,
            "max": 598
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21925,
            "mean": 22250,
            "median": 21997,
            "max": 46346
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28630,
            "mean": 68028,
            "median": 68492,
            "max": 68830
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22821,
            "mean": 23170,
            "median": 23097,
            "max": 29232
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 25203,
            "mean": 38709,
            "median": 30831,
            "max": 52754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 840124,
          "size": 3816
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2758,
            "mean": 2758,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 1022,
            "min": 23978,
            "mean": 35301,
            "median": 36132,
            "max": 46658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1211914,
          "size": 5389
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2226,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 259,
            "min": 21548,
            "mean": 21991,
            "median": 21788,
            "max": 95473
          },
          "checkpointAt(address,uint256)": {
            "calls": 300,
            "min": 0,
            "mean": 51,
            "median": 0,
            "max": 4869
          },
          "checkpointCount(address)": {
            "calls": 1327,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 491,
            "min": 21192,
            "mean": 21651,
            "median": 21432,
            "max": 91760
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23524,
            "mean": 42786,
            "median": 58779,
            "max": 75897
          },
          "delegates(address)": {
            "calls": 4039,
            "min": 0,
            "mean": 249,
            "median": 0,
            "max": 2615
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 28297,
            "mean": 48107,
            "median": 48653,
            "max": 48653
          },
          "directIncrementNonce(address)": {
            "calls": 850,
            "min": 26857,
            "mean": 31093,
            "median": 26869,
            "max": 43969
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5425,
            "mean": 5925,
            "median": 5425,
            "max": 7425
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 408,
            "mean": 3561,
            "median": 5042,
            "max": 5234
          },
          "getVotes(address)": {
            "calls": 2928,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4825
          },
          "getVotesTotalSupply()": {
            "calls": 778,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4645
          },
          "mint(address,uint256)": {
            "calls": 700,
            "min": 21548,
            "mean": 21855,
            "median": 21800,
            "max": 94888
          },
          "name()": {
            "calls": 256,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "nonces(address)": {
            "calls": 506,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "totalSupply()": {
            "calls": 388,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 542,
            "min": 21548,
            "mean": 21827,
            "median": 21788,
            "max": 86998
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 307465,
          "size": 1206
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21490,
            "mean": 21490,
            "median": 21490,
            "max": 21490
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21723,
            "mean": 22021,
            "median": 22095,
            "max": 22095
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2629,
            "mean": 4146,
            "median": 4754,
            "max": 4754
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 388,
            "min": 22478,
            "mean": 37229,
            "median": 44639,
            "max": 44863
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 776,
            "min": 22660,
            "mean": 37744,
            "median": 45238,
            "max": 45486
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1428888,
          "size": 6672
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31983,
            "mean": 31983,
            "median": 31983,
            "max": 31983
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12238,
            "mean": 12238,
            "median": 12238,
            "max": 12238
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6454,
            "mean": 20125,
            "median": 9144,
            "max": 140472
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 1078,
            "mean": 1078,
            "median": 1078,
            "max": 1078
          },
          "entryPoint()": {
            "calls": 7,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2829,
            "mean": 16779,
            "median": 13197,
            "max": 37895
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 134,
            "min": 3006,
            "mean": 67598,
            "median": 73482,
            "max": 237464
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 125,
            "min": 3328,
            "mean": 71641,
            "median": 58520,
            "max": 326640
          },
          "fallback()": {
            "calls": 5,
            "min": 270,
            "mean": 28580,
            "median": 291,
            "max": 108870
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5452,
            "mean": 5452,
            "median": 5452,
            "max": 5452
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2513,
            "mean": 24017,
            "median": 24084,
            "max": 24084
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 7202,
            "mean": 8571,
            "median": 7243,
            "max": 14470
          },
          "owner()": {
            "calls": 267,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "receive()": {
            "calls": 258,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6971,
            "mean": 6971,
            "median": 6971,
            "max": 6971
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23483,
            "mean": 23483,
            "median": 23483,
            "max": 23483
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2411,
            "mean": 2411,
            "median": 2411,
            "max": 2411
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2522,
            "mean": 13570,
            "median": 13570,
            "max": 24619
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7174,
            "mean": 7174,
            "median": 7174,
            "max": 7174
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 459,
            "mean": 24429,
            "median": 29570,
            "max": 38120
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45605,
            "mean": 45605,
            "median": 45605,
            "max": 45605
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1345208,
          "size": 6980
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2393,
            "mean": 2393,
            "median": 2393,
            "max": 2393
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2535,
            "mean": 5340,
            "median": 7990,
            "max": 8071
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7975,
            "mean": 8011,
            "median": 8011,
            "max": 8047
          },
          "decimals()": {
            "calls": 20,
            "min": 347,
            "mean": 356,
            "median": 347,
            "max": 438
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30674,
            "mean": 119746,
            "median": 121215,
            "max": 121455
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30605,
            "mean": 120028,
            "median": 121142,
            "max": 132036
          },
          "name()": {
            "calls": 1,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 8035,
            "mean": 8035,
            "median": 8035,
            "max": 8107
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 8040,
            "mean": 8040,
            "median": 8040,
            "max": 8112
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24776,
            "mean": 77985,
            "median": 78450,
            "max": 93291
          },
          "symbol()": {
            "calls": 1,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5556,
            "mean": 5556,
            "median": 5556,
            "max": 5556
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26948,
            "mean": 78892,
            "median": 79629,
            "max": 79781
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1212662,
          "size": 5712
        },
        "functions": {
          "eip712Domain()": {
            "calls": 326,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 6309,
            "mean": 23195,
            "median": 11341,
            "max": 63789
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 124,
            "min": 6240,
            "mean": 86231,
            "median": 99481,
            "max": 243638
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 136,
            "min": 28959,
            "mean": 84553,
            "median": 64286,
            "max": 317273
          },
          "fallback()": {
            "calls": 872,
            "min": 262,
            "mean": 6347,
            "median": 3432,
            "max": 135263
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 343,
            "min": 655,
            "mean": 14621,
            "median": 14382,
            "max": 31854
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 6293,
            "mean": 6293,
            "median": 6293,
            "max": 6293
          },
          "mockId()": {
            "calls": 2,
            "min": 478,
            "mean": 478,
            "median": 478,
            "max": 478
          },
          "owner()": {
            "calls": 797,
            "min": 5731,
            "mean": 5731,
            "median": 5731,
            "max": 5731
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "receive()": {
            "calls": 1,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5725,
            "mean": 14278,
            "median": 14299,
            "max": 22873
          },
          "state()": {
            "calls": 772,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "token()": {
            "calls": 536,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 6234,
            "mean": 35618,
            "median": 35780,
            "max": 52880
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1239396,
          "size": 5839
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5205,
            "mean": 5205,
            "median": 5205,
            "max": 5205
          },
          "mockId()": {
            "calls": 1,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5902,
            "mean": 14455,
            "median": 14476,
            "max": 23050
          },
          "state()": {
            "calls": 513,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18857,
            "mean": 18857,
            "median": 18857,
            "max": 18857
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 178113,
          "size": 605
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2411,
            "min": 94895,
            "mean": 95460,
            "median": 95495,
            "max": 95723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 795817,
          "size": 3467
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2476,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 27027,
            "mean": 47103,
            "median": 47275,
            "max": 47687
          },
          "balanceOf(address,uint256)": {
            "calls": 2393,
            "min": 2585,
            "mean": 2585,
            "median": 2585,
            "max": 2585
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24455,
            "mean": 27400,
            "median": 25391,
            "max": 30684
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 27200,
            "mean": 47290,
            "median": 47352,
            "max": 47724
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 24089,
            "mean": 31951,
            "median": 26557,
            "max": 46469
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 401,
            "min": 25942,
            "mean": 39475,
            "median": 29112,
            "max": 61954
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24503,
            "mean": 45962,
            "median": 47299,
            "max": 47855
          },
          "name(uint256)": {
            "calls": 256,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 46198,
            "mean": 46198,
            "median": 46198,
            "max": 46198
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 862,
            "mean": 862,
            "median": 862,
            "max": 862
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1041,
            "min": 24482,
            "mean": 37682,
            "median": 30552,
            "max": 53084
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1642,
            "min": 27265,
            "mean": 38921,
            "median": 33435,
            "max": 61010
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1369290,
          "size": 6122
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1084,
            "min": 24346,
            "mean": 43343,
            "median": 48706,
            "max": 49002
          },
          "balanceOf(address)": {
            "calls": 10309,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "burn(uint256)": {
            "calls": 262,
            "min": 28388,
            "mean": 29444,
            "median": 28827,
            "max": 31512
          },
          "directApprove(address,uint256)": {
            "calls": 1081,
            "min": 24364,
            "mean": 44152,
            "median": 49397,
            "max": 49715
          },
          "directGetApproved(uint256)": {
            "calls": 1559,
            "min": 2571,
            "mean": 4640,
            "median": 4816,
            "max": 4816
          },
          "directOwnerOf(uint256)": {
            "calls": 2577,
            "min": 2570,
            "mean": 2774,
            "median": 2827,
            "max": 2827
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 623,
            "min": 59780,
            "mean": 75549,
            "median": 63815,
            "max": 130585
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 507,
            "min": 63790,
            "mean": 95151,
            "median": 65370,
            "max": 241797
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 906,
            "min": 24618,
            "mean": 42674,
            "median": 46758,
            "max": 46764
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1807,
            "min": 25419,
            "mean": 42708,
            "median": 41291,
            "max": 57854
          },
          "exists(uint256)": {
            "calls": 531,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "getApproved(uint256)": {
            "calls": 1551,
            "min": 2537,
            "mean": 4537,
            "median": 4727,
            "max": 4727
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2995,
            "mean": 2995,
            "median": 2995,
            "max": 2998
          },
          "getExtraData(uint256)": {
            "calls": 3641,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2988,
            "mean": 5577,
            "median": 6318,
            "max": 7380
          },
          "mint(address,uint256)": {
            "calls": 10890,
            "min": 24546,
            "mean": 64474,
            "median": 68679,
            "max": 69042
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 47201,
            "mean": 56461,
            "median": 52269,
            "max": 69729
          },
          "ownerOf(uint256)": {
            "calls": 5649,
            "min": 631,
            "mean": 2610,
            "median": 2631,
            "max": 2631
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71356,
            "mean": 81978,
            "median": 72332,
            "max": 121831
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72579,
            "mean": 98826,
            "median": 73904,
            "max": 232899
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1854,
            "min": 41317,
            "mean": 69235,
            "median": 64261,
            "max": 132067
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 517,
            "min": 64391,
            "mean": 95114,
            "median": 65725,
            "max": 242047
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1226,
            "min": 24223,
            "mean": 42737,
            "median": 46363,
            "max": 46366
          },
          "setAux(address,uint224)": {
            "calls": 771,
            "min": 27821,
            "mean": 44810,
            "median": 44918,
            "max": 44921
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1573,
            "min": 24074,
            "mean": 36826,
            "median": 44022,
            "max": 44478
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1885,
            "min": 24999,
            "mean": 42534,
            "median": 40960,
            "max": 57418
          },
          "uncheckedBurn(uint256)": {
            "calls": 2961,
            "min": 23777,
            "mean": 30407,
            "median": 31312,
            "max": 36496
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 185,
            "min": 55045,
            "mean": 55302,
            "median": 55288,
            "max": 55648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 597887,
          "size": 2555
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31263,
            "mean": 100946,
            "median": 91746,
            "max": 159808
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 265,
            "min": 303121,
            "mean": 382689,
            "median": 320366,
            "max": 3014554
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2898,
            "mean": 6083,
            "median": 5137,
            "max": 11614
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22237,
            "mean": 41410,
            "median": 44149,
            "max": 44149
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 168112,
          "size": 766
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "garbage()": {
            "calls": 780,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "getArgAddress(uint256)": {
            "calls": 7,
            "min": 3162,
            "mean": 3173,
            "median": 3171,
            "max": 3180
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 3509,
            "mean": 3530,
            "median": 3527,
            "max": 3545
          },
          "getArgUint256(uint256)": {
            "calls": 17,
            "min": 5499,
            "mean": 5509,
            "median": 5508,
            "max": 5517
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 7,
            "min": 6179,
            "mean": 6837,
            "median": 7047,
            "max": 7897
          },
          "getArgUint64(uint256)": {
            "calls": 7,
            "min": 3170,
            "mean": 3181,
            "median": 3179,
            "max": 3188
          },
          "getArgUint8(uint256)": {
            "calls": 7,
            "min": 3193,
            "mean": 3204,
            "median": 3202,
            "max": 3211
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 3328,
            "mean": 3360,
            "median": 3361,
            "max": 3382
          },
          "receive()": {
            "calls": 18,
            "min": 0,
            "mean": 28247,
            "median": 21095,
            "max": 286581
          },
          "revertWithError()": {
            "calls": 7,
            "min": 5179,
            "mean": 5190,
            "median": 5188,
            "max": 5197
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 43869,
            "mean": 43953,
            "median": 43893,
            "max": 44223
          },
          "value()": {
            "calls": 7,
            "min": 5107,
            "mean": 5118,
            "median": 5116,
            "max": 5125
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 770452,
          "size": 3346
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7638,
            "min": 357,
            "mean": 4189,
            "median": 4516,
            "max": 4516
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 265,
            "min": 26900,
            "mean": 28314,
            "median": 28364,
            "max": 28364
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 32,
            "min": 26757,
            "mean": 40933,
            "median": 39082,
            "max": 59601
          },
          "guardedByOnlyRoles()": {
            "calls": 32,
            "min": 23992,
            "mean": 39971,
            "median": 38267,
            "max": 56836
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1300,
            "mean": 9124,
            "median": 8077,
            "max": 16989
          },
          "hasRole(address,uint256)": {
            "calls": 2104,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "owner()": {
            "calls": 1935,
            "min": 2330,
            "mean": 2538,
            "median": 2551,
            "max": 2551
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 269,
            "min": 2512,
            "mean": 2779,
            "median": 2629,
            "max": 4749
          },
          "roleHolderCount(uint256)": {
            "calls": 3732,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolders(uint256)": {
            "calls": 3757,
            "min": 2716,
            "mean": 3196,
            "median": 2716,
            "max": 25723
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23692,
            "mean": 43498,
            "median": 43664,
            "max": 43976
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 32,
            "min": 24509,
            "mean": 126647,
            "median": 122679,
            "max": 223371
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21669,
            "mean": 27039,
            "median": 26529,
            "max": 43953
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23774,
            "mean": 25136,
            "median": 23774,
            "max": 26586
          },
          "setOwner(address)": {
            "calls": 271,
            "min": 21769,
            "mean": 27212,
            "median": 26809,
            "max": 43909
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23769,
            "mean": 25022,
            "median": 23769,
            "max": 43681
          },
          "setRole(address,uint256,bool)": {
            "calls": 1382,
            "min": 24491,
            "mean": 59985,
            "median": 74046,
            "max": 74622
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6519,
            "min": 33590,
            "mean": 59368,
            "median": 73860,
            "max": 78764
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 131415,
          "size": 391
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "getValue(uint256)": {
            "calls": 954,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "setValue(uint256,uint256)": {
            "calls": 954,
            "min": 22379,
            "mean": 22379,
            "median": 22379,
            "max": 22379
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 366463,
          "size": 3054
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23437,
            "mean": 33955,
            "median": 33955,
            "max": 44473
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 193,
            "min": 27826,
            "mean": 62955,
            "median": 68231,
            "max": 91159
          },
          "isInitializing()": {
            "calls": 182,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23421,
            "mean": 23421,
            "median": 23421,
            "max": 23421
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 232,
            "min": 24769,
            "mean": 56769,
            "median": 67687,
            "max": 91135
          },
          "version()": {
            "calls": 248,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "x()": {
            "calls": 127,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 560701,
          "size": 2398
        },
        "functions": {
          "owner()": {
            "calls": 751,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 25060,
            "mean": 33771,
            "median": 25072,
            "max": 59312
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 742399,
          "size": 3290
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23998,
            "mean": 23998,
            "median": 23998,
            "max": 23998
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26280,
            "mean": 37934,
            "median": 44272,
            "max": 46421
          },
          "owner()": {
            "calls": 1735,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 127,
            "min": 29573,
            "mean": 76452,
            "median": 68805,
            "max": 921125
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 129,
            "min": 28606,
            "mean": 53073,
            "median": 61099,
            "max": 61437
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 143,
            "min": 28907,
            "mean": 53517,
            "median": 62279,
            "max": 62689
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 248,
            "min": 28476,
            "mean": 49359,
            "median": 48220,
            "max": 64452
          },
          "rescueETH(address,uint256)": {
            "calls": 1417,
            "min": 5914,
            "mean": 32818,
            "median": 36818,
            "max": 62107
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 7093,
            "mean": 7093,
            "median": 7093,
            "max": 7093
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 671694,
          "size": 2892
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 516,
            "min": 21975,
            "mean": 24461,
            "median": 24523,
            "max": 37372
          },
          "multicallBrutalized(bytes[])": {
            "calls": 259,
            "min": 369113,
            "mean": 441085,
            "median": 375641,
            "max": 2805272
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 44682,
            "mean": 44682,
            "median": 44682,
            "max": 44682
          },
          "returnsRandomizedString(string)": {
            "calls": 256,
            "min": 781,
            "mean": 1922,
            "median": 1894,
            "max": 3610
          },
          "returnsSender()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 483,
            "mean": 483,
            "median": 483,
            "max": 483
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 857,
            "mean": 872,
            "median": 869,
            "max": 890
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 349220,
          "size": 1343
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22645,
            "mean": 22645,
            "median": 22645,
            "max": 22645
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23969,
            "mean": 28939,
            "median": 29077,
            "max": 29081
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28401,
            "mean": 28401,
            "median": 28401,
            "max": 28401
          },
          "owner()": {
            "calls": 842,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2919,
            "mean": 2919,
            "median": 2919,
            "max": 2923
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23131,
            "mean": 23131,
            "median": 23131,
            "max": 23131
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44547,
            "mean": 44547,
            "median": 44547,
            "max": 44547
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28405,
            "mean": 28553,
            "median": 28633,
            "max": 28637
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23987,
            "mean": 25326,
            "median": 24007,
            "max": 28837
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23351,
            "mean": 35192,
            "median": 45479,
            "max": 45479
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 265240,
          "size": 961
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2280,
            "mean": 2280,
            "median": 2280,
            "max": 2280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 704567,
          "size": 2987
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22666,
            "mean": 22666,
            "median": 22666,
            "max": 22666
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24048,
            "mean": 29026,
            "median": 29156,
            "max": 29160
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24199,
            "mean": 46100,
            "median": 48257,
            "max": 48609
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 26149,
            "mean": 45842,
            "median": 46085,
            "max": 46437
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 3047,
            "mean": 3047,
            "median": 3047,
            "max": 3051
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 3046,
            "mean": 3046,
            "median": 3046,
            "max": 3050
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28481,
            "mean": 28481,
            "median": 28481,
            "max": 28481
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 639,
            "mean": 12606,
            "median": 7642,
            "max": 41804
          },
          "owner()": {
            "calls": 852,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2991
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 24038,
            "mean": 27491,
            "median": 26234,
            "max": 29414
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23154,
            "mean": 23154,
            "median": 23154,
            "max": 23154
          },
          "renounceRoles(uint256)": {
            "calls": 57,
            "min": 23402,
            "mean": 27979,
            "median": 28214,
            "max": 28562
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44591,
            "mean": 44591,
            "median": 44591,
            "max": 44591
          },
          "revokeRoles(address,uint256)": {
            "calls": 67,
            "min": 24222,
            "mean": 27549,
            "median": 24798,
            "max": 31519
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 923,
            "mean": 24561,
            "median": 23927,
            "max": 53218
          },
          "rolesOf(address)": {
            "calls": 2261,
            "min": 2945,
            "mean": 2945,
            "median": 2945,
            "max": 2949
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23628,
            "mean": 28543,
            "median": 28668,
            "max": 28672
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 25888,
            "mean": 37685,
            "median": 37558,
            "max": 46404
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24066,
            "mean": 25591,
            "median": 24086,
            "max": 28916
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23374,
            "mean": 35302,
            "median": 45502,
            "max": 45502
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25781,
            "mean": 45698,
            "median": 46098,
            "max": 48299
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23679,
            "mean": 44809,
            "median": 45861,
            "max": 46197
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25758,
            "mean": 46222,
            "median": 47904,
            "max": 48276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 386578,
          "size": 1522
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 79383,
          "size": 146
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476990,
          "size": 1993
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 26463,
            "mean": 26463,
            "median": 26463,
            "max": 26463
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 43543,
            "mean": 43543,
            "median": 43543,
            "max": 43543
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65737,
            "mean": 65737,
            "median": 65737,
            "max": 65737
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45581,
            "mean": 45581,
            "median": 45581,
            "max": 45581
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69963,
            "mean": 69963,
            "median": 69963,
            "max": 69963
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 66032,
            "mean": 66032,
            "median": 66032,
            "max": 66032
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 67153,
            "mean": 67153,
            "median": 67153,
            "max": 67153
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 47971,
            "mean": 47971,
            "median": 47971,
            "max": 47971
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 58515,
            "mean": 58515,
            "median": 58515,
            "max": 58515
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2400,
            "mean": 2400,
            "median": 2400,
            "max": 2400
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 147691,
          "size": 443
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3150,
            "mean": 3153,
            "median": 3153,
            "max": 3156
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3497,
            "mean": 3500,
            "median": 3500,
            "max": 3503
          },
          "getArgUint256(uint256)": {
            "calls": 6,
            "min": 5487,
            "mean": 5490,
            "median": 5490,
            "max": 5493
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 5601,
            "mean": 5745,
            "median": 5745,
            "max": 5890
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3158,
            "mean": 3161,
            "median": 3161,
            "max": 3164
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3181,
            "mean": 3184,
            "median": 3184,
            "max": 3187
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3292,
            "mean": 3301,
            "median": 3301,
            "max": 3310
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5167,
            "mean": 5845,
            "median": 5173,
            "max": 7197
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43845,
            "mean": 44663,
            "median": 43851,
            "max": 46293
          },
          "value()": {
            "calls": 3,
            "min": 5095,
            "mean": 5802,
            "median": 5101,
            "max": 7211
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 896304,
          "size": 3928
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 703,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 259,
            "min": 26921,
            "mean": 28393,
            "median": 28411,
            "max": 28411
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 259,
            "min": 33968,
            "mean": 40031,
            "median": 40124,
            "max": 40124
          },
          "owner()": {
            "calls": 1239,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43559,
            "mean": 43569,
            "median": 43571,
            "max": 43571
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91579,
            "mean": 111355,
            "median": 111515,
            "max": 111515
          },
          "setMaxTimedRole(uint256)": {
            "calls": 18,
            "min": 26525,
            "mean": 29677,
            "median": 26873,
            "max": 43973
          },
          "setOwner(address)": {
            "calls": 39,
            "min": 26820,
            "mean": 28147,
            "median": 26832,
            "max": 43932
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 721,
            "min": 24992,
            "mean": 50529,
            "median": 52256,
            "max": 52352
          },
          "timedRoleActive(address,uint256)": {
            "calls": 790,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 320727,
          "size": 1294
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22508,
            "mean": 22508,
            "median": 22508,
            "max": 22508
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "revertWithError()": {
            "calls": 1,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22309,
            "mean": 22309,
            "median": 22309,
            "max": 22309
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 3094,
            "mean": 10153,
            "median": 5760,
            "max": 32618
          },
          "value()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 378830,
          "size": 1350
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 1671,
            "min": 561,
            "mean": 1483,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 272746,
          "size": 858
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 549,
            "mean": 2543,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 527112,
          "size": 2034
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 2829,
            "min": 561,
            "mean": 1646,
            "median": 2561,
            "max": 2561
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24488,
            "mean": 62850,
            "median": 66794,
            "max": 114617
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 275892,
          "size": 874
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 549,
            "mean": 2547,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 377112,
          "size": 1342
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 1674,
            "min": 561,
            "mean": 1482,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 269728,
          "size": 844
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1026,
            "min": 549,
            "mean": 2545,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 266402,
          "size": 829
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 514,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 247729,
          "size": 1092
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24252,
            "mean": 73972,
            "median": 36255,
            "max": 117831
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 431,
            "mean": 431,
            "median": 431,
            "max": 431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 107580,
          "size": 420
        },
        "functions": {
          "fallback()": {
            "calls": 6187,
            "min": 2752,
            "mean": 15800,
            "median": 10047,
            "max": 355891
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1118379,
          "size": 4998
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 242,
            "mean": 242,
            "median": 242,
            "max": 242
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "cancel(bytes32)": {
            "calls": 22,
            "min": 25420,
            "mean": 25643,
            "median": 25432,
            "max": 26221
          },
          "execute(bytes32,bytes)": {
            "calls": 259,
            "min": 28356,
            "mean": 43156,
            "median": 44779,
            "max": 95366
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 22944,
            "mean": 306498,
            "median": 377078,
            "max": 377078
          },
          "minDelay()": {
            "calls": 237,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "operationState(bytes32)": {
            "calls": 912,
            "min": 2437,
            "mean": 2442,
            "median": 2442,
            "max": 2448
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 26353,
            "mean": 53370,
            "median": 55255,
            "max": 57717
          },
          "readyTimestamp(bytes32)": {
            "calls": 686,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23946,
            "mean": 33588,
            "median": 23958,
            "max": 75896
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 581749,
          "size": 2479
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "decimals()": {
            "calls": 1,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "deposit()": {
            "calls": 547,
            "min": 27583,
            "mean": 65112,
            "median": 67383,
            "max": 67383
          },
          "name()": {
            "calls": 1,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "receive()": {
            "calls": 298,
            "min": 27376,
            "mean": 63255,
            "median": 67176,
            "max": 67176
          },
          "symbol()": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "withdraw(uint256)": {
            "calls": 282,
            "min": 27889,
            "mean": 39590,
            "median": 40225,
            "max": 40333
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 759687,
          "size": 3305
        },
        "functions": {
          "adminOf(address)": {
            "calls": 482,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24161,
            "mean": 26369,
            "median": 26369,
            "max": 28577
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22231,
            "mean": 61102,
            "median": 22267,
            "max": 125961
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105400,
            "mean": 158754,
            "median": 159244,
            "max": 159304
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23726,
            "mean": 142509,
            "median": 159555,
            "max": 159765
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 578,
            "mean": 578,
            "median": 578,
            "max": 578
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24144,
            "mean": 27844,
            "median": 24156,
            "max": 33390
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35354,
            "mean": 51045,
            "median": 51045,
            "max": 66736
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 256695,
          "size": 1055
        },
        "functions": {
          "implementation()": {
            "calls": 4919,
            "min": 160,
            "mean": 2267,
            "median": 2281,
            "max": 2281
          },
          "owner()": {
            "calls": 517,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "renounceOwnership()": {
            "calls": 38,
            "min": 23089,
            "mean": 23333,
            "median": 23354,
            "max": 23354
          },
          "transferOwnership(address)": {
            "calls": 174,
            "min": 23549,
            "mean": 26997,
            "median": 28215,
            "max": 28215
          },
          "upgradeTo(address)": {
            "calls": 101,
            "min": 23636,
            "mean": 26038,
            "median": 23732,
            "max": 32503
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3107131,
          "size": 15452
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 22916,
            "mean": 86138,
            "median": 46790,
            "max": 233337
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21783,
            "mean": 23001,
            "median": 21795,
            "max": 26437
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 9297,
            "mean": 9431,
            "median": 9332,
            "max": 9763
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2975166,
          "size": 14793
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 88947,
            "mean": 38957028,
            "median": 991549,
            "max": 96809444
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 5756326,
          "size": 28680
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1101,
            "mean": 1101,
            "median": 1101,
            "max": 1101
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1029,
            "mean": 1029,
            "median": 1029,
            "max": 1029
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 360,
            "mean": 360,
            "median": 360,
            "max": 360
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 384,
            "mean": 384,
            "median": 384,
            "max": 384
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 680,
            "mean": 680,
            "median": 680,
            "max": 680
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 670,
            "mean": 670,
            "median": 670,
            "max": 670
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 347902,
          "size": 1297
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 110,
            "min": 67210,
            "mean": 67445,
            "median": 67576,
            "max": 67582
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2476,
            "mean": 2476,
            "median": 2476,
            "max": 2476
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 161178,
          "size": 532
        },
        "functions": {
          "generate(bytes)": {
            "calls": 147,
            "min": 0,
            "mean": 3135,
            "median": 1301,
            "max": 67135
          },
          "next(uint256)": {
            "calls": 263,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 5916565,
          "size": 29480
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1368,
            "mean": 1368,
            "median": 1368,
            "max": 1368
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 5621927,
          "size": 28009
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 22,
            "min": 736,
            "mean": 790,
            "median": 793,
            "max": 829
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 31,
            "min": 582721,
            "mean": 733673,
            "median": 583456,
            "max": 4488573
          },
          "recover(bytes32,bytes)": {
            "calls": 153,
            "min": 22549,
            "mean": 27118,
            "median": 26762,
            "max": 30450
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 48,
            "min": 3581,
            "mean": 25097,
            "median": 26157,
            "max": 26181
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 25898,
            "mean": 26167,
            "median": 26282,
            "max": 26352
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 140,
            "min": 608304,
            "mean": 711248,
            "median": 609240,
            "max": 4084633
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 46,
            "min": 608055,
            "mean": 769576,
            "median": 608663,
            "max": 4476722
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 607764,
            "mean": 688787,
            "median": 608657,
            "max": 4152602
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 153,
            "min": 23050,
            "mean": 30263,
            "median": 30468,
            "max": 30480
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 48,
            "min": 3563,
            "mean": 25086,
            "median": 26151,
            "max": 26163
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 25951,
            "mean": 26213,
            "median": 26335,
            "max": 26347
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 140,
            "min": 612138,
            "mean": 727859,
            "median": 612950,
            "max": 3452507
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 46,
            "min": 607971,
            "mean": 752410,
            "median": 608660,
            "max": 4173462
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 607956,
            "mean": 761340,
            "median": 608835,
            "max": 4790245
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 748270,
          "size": 3251
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2528,
            "mean": 5920,
            "median": 7075,
            "max": 9357
          },
          "batchData()": {
            "calls": 520,
            "min": 2679,
            "mean": 260375,
            "median": 2691,
            "max": 9048806
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "batchIds()": {
            "calls": 520,
            "min": 2563,
            "mean": 5957,
            "median": 7113,
            "max": 9395
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "from()": {
            "calls": 512,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "id()": {
            "calls": 512,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "mintData()": {
            "calls": 512,
            "min": 2700,
            "mean": 240011,
            "median": 2712,
            "max": 8595567
          },
          "operator()": {
            "calls": 512,
            "min": 2336,
            "mean": 2336,
            "median": 2336,
            "max": 2336
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2078897,
          "size": 9408
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61324,
            "mean": 61457,
            "median": 61552,
            "max": 61566
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 57921,
            "mean": 58054,
            "median": 58149,
            "max": 58163
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 49340,
            "mean": 51565,
            "median": 49340,
            "max": 120540
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61527,
            "mean": 61660,
            "median": 61755,
            "max": 61762
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49261,
            "mean": 62619,
            "median": 58257,
            "max": 75122
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 303557,
          "size": 1253
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25,
            "min": 50778,
            "mean": 51151,
            "median": 51162,
            "max": 51342
          },
          "burn(address,uint256)": {
            "calls": 2,
            "min": 35781,
            "mean": 35781,
            "median": 35781,
            "max": 35781
          },
          "mint(address,uint256)": {
            "calls": 39,
            "min": 35771,
            "mean": 70306,
            "median": 61403,
            "max": 95802
          },
          "sum()": {
            "calls": 1,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 7080979,
          "size": 35293
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24665,
            "mean": 49864,
            "median": 44619,
            "max": 74074
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 373506,
          "size": 1514
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 179,
            "mean": 1148,
            "median": 179,
            "max": 3088
          },
          "data()": {
            "calls": 257,
            "min": 2692,
            "mean": 3236,
            "median": 2692,
            "max": 11440
          },
          "datahash()": {
            "calls": 649,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25124,
            "mean": 33827,
            "median": 25124,
            "max": 133840
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 15094131,
          "size": 75279
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 187,
            "mean": 187,
            "median": 187,
            "max": 187
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22106,
            "mean": 22438,
            "median": 22376,
            "max": 22977
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22269,
            "mean": 22500,
            "median": 22420,
            "max": 22988
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 361609,
          "size": 1459
        },
        "functions": {
          "datahash()": {
            "calls": 394,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 313948,
          "size": 1239
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2590,
            "mean": 4072,
            "median": 2590,
            "max": 11338
          },
          "from()": {
            "calls": 1024,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "id()": {
            "calls": 1024,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "operator()": {
            "calls": 1024,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1850810,
          "size": 8359
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61825,
            "mean": 63440,
            "median": 61837,
            "max": 113137
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 56809,
            "mean": 57468,
            "median": 57025,
            "max": 74137
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 64830,
            "mean": 69375,
            "median": 69516,
            "max": 69630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2573689,
          "size": 12788
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 446,
            "min": 655,
            "mean": 677,
            "median": 667,
            "max": 850
          },
          "returnsHash(bytes)": {
            "calls": 445,
            "min": 576,
            "mean": 593,
            "median": 588,
            "max": 768
          },
          "revertsWithCustomError()": {
            "calls": 3,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1501671,
          "size": 7434
        },
        "functions": {
          "get(address)": {
            "calls": 506,
            "min": 2461,
            "mean": 5709,
            "median": 5709,
            "max": 8957
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26544,
            "mean": 48806,
            "median": 37085,
            "max": 164996
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 8582501,
          "size": 42788
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 163,
            "min": 21661,
            "mean": 44606,
            "median": 44021,
            "max": 141894
          },
          "addToBytes32Set(bytes32)": {
            "calls": 181,
            "min": 21692,
            "mean": 48684,
            "median": 46301,
            "max": 161468
          },
          "addressSetAt(uint256)": {
            "calls": 20,
            "min": 4695,
            "mean": 6812,
            "median": 6812,
            "max": 8933
          },
          "addressSetContains(address)": {
            "calls": 146,
            "min": 379,
            "mean": 6590,
            "median": 6857,
            "max": 6870
          },
          "bytes32SetAt(uint256)": {
            "calls": 19,
            "min": 4663,
            "mean": 5663,
            "median": 4663,
            "max": 11034
          },
          "bytes32SetContains(bytes32)": {
            "calls": 167,
            "min": 363,
            "mean": 8712,
            "median": 8917,
            "max": 8917
          },
          "removeFromAddressSet(address)": {
            "calls": 177,
            "min": 21682,
            "mean": 28135,
            "median": 28335,
            "max": 28335
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 185,
            "min": 21652,
            "mean": 30307,
            "median": 30537,
            "max": 30537
          },
          "uint8SetAt(uint256)": {
            "calls": 15,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26529,
            "mean": 50043,
            "median": 48728,
            "max": 142584
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28566,
            "mean": 53994,
            "median": 50851,
            "max": 161623
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24037,
            "mean": 27915,
            "median": 27001,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 16132229,
          "size": 80457
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 386
          },
          "divWad(uint256,uint256)": {
            "calls": 99,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 352,
            "mean": 377,
            "median": 387,
            "max": 387
          },
          "divWadUp(uint256,uint256)": {
            "calls": 85,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 313,
            "min": 538,
            "mean": 588,
            "median": 551,
            "max": 920
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 379,
            "mean": 440,
            "median": 415,
            "max": 539
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 568,
            "mean": 583,
            "median": 581,
            "max": 927
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 322,
            "mean": 322,
            "median": 322,
            "max": 322
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 438,
            "mean": 453,
            "median": 460,
            "max": 460
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 393,
            "mean": 412,
            "median": 416,
            "max": 432
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 426,
            "mean": 448,
            "median": 467,
            "max": 468
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 418,
            "mean": 452,
            "median": 479,
            "max": 479
          },
          "mulWad(uint256,uint256)": {
            "calls": 106,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 414,
            "mean": 429,
            "median": 431,
            "max": 444
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 126,
            "min": 432,
            "mean": 432,
            "median": 432,
            "max": 432
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 927,
            "mean": 927,
            "median": 927,
            "max": 927
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 656,
            "mean": 1643,
            "median": 1643,
            "max": 2630
          },
          "sDivWad(int256,int256)": {
            "calls": 80,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 440,
            "mean": 518,
            "median": 552,
            "max": 552
          },
          "sMulWad(int256,int256)": {
            "calls": 104,
            "min": 503,
            "mean": 515,
            "median": 516,
            "max": 516
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 448,
            "mean": 552,
            "median": 567,
            "max": 567
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 19627638,
          "size": 97888
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 37379,
            "mean": 39760,
            "median": 39597,
            "max": 45811
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 37613,
            "mean": 51807,
            "median": 55968,
            "max": 56254
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 37599,
            "mean": 43950,
            "median": 40037,
            "max": 56019
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 795,
            "mean": 3563,
            "median": 1210,
            "max": 11846
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 37432,
            "mean": 41266,
            "median": 40395,
            "max": 54513
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2367448,
          "size": 11758
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 3688466,
          "size": 18355
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23686,
            "mean": 33797,
            "median": 33797,
            "max": 43908
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26617,
            "mean": 35165,
            "median": 35165,
            "max": 43714
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 4343728,
          "size": 21627
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 528,
            "min": 23230,
            "mean": 24207,
            "median": 23854,
            "max": 27078
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 24832,
            "mean": 26663,
            "median": 26328,
            "max": 29480
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28096,
            "mean": 28639,
            "median": 28474,
            "max": 29893
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24363,
            "mean": 25774,
            "median": 25999,
            "max": 26735
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 266,
            "min": 2825,
            "mean": 740543,
            "median": 640596,
            "max": 4692000
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2979174,
          "size": 14813
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 107700,
            "mean": 1340936,
            "median": 1008644,
            "max": 83526192
          },
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 517,
            "mean": 526,
            "median": 529,
            "max": 529
          },
          "getArgUint256(uint256)": {
            "calls": 12,
            "min": 1602,
            "mean": 1602,
            "median": 1602,
            "max": 1602
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 28548,
            "mean": 40255,
            "median": 40069,
            "max": 52335
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 1537,
            "mean": 2009,
            "median": 2005,
            "max": 2490
          },
          "revertWithError()": {
            "calls": 4,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 22332,
            "mean": 22332,
            "median": 22332,
            "max": 22332
          },
          "value()": {
            "calls": 1034,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 159821,
          "size": 525
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44481,
            "mean": 45161,
            "median": 45017,
            "max": 46494
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 879419,
          "size": 4326
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 402,
            "min": 559,
            "mean": 684,
            "median": 751,
            "max": 775
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 15155268,
          "size": 75584
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 12,
            "min": 2982,
            "mean": 2982,
            "median": 2982,
            "max": 2982
          },
          "argsOnClone(address,uint256)": {
            "calls": 15,
            "min": 3026,
            "mean": 3027,
            "median": 3026,
            "max": 3043
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 9,
            "min": 3258,
            "mean": 3258,
            "median": 3258,
            "max": 3258
          },
          "argsOnERC1967(address)": {
            "calls": 10,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2987
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 11,
            "min": 3013,
            "mean": 3014,
            "median": 3013,
            "max": 3030
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 5,
            "min": 3269,
            "mean": 3273,
            "median": 3274,
            "max": 3274
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 11,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 6,
            "min": 2988,
            "mean": 2988,
            "median": 2988,
            "max": 2988
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 4,
            "min": 3290,
            "mean": 3293,
            "median": 3295,
            "max": 3295
          },
          "argsOnERC1967I(address)": {
            "calls": 6,
            "min": 2969,
            "mean": 2969,
            "median": 2969,
            "max": 2969
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 5,
            "min": 3011,
            "mean": 3011,
            "median": 3011,
            "max": 3011
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 6,
            "min": 3288,
            "mean": 3288,
            "median": 3288,
            "max": 3288
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 3,
            "min": 2985,
            "mean": 2985,
            "median": 2985,
            "max": 2985
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 6,
            "min": 3012,
            "mean": 3012,
            "median": 3012,
            "max": 3012
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 1,
            "min": 3261,
            "mean": 3261,
            "median": 3261,
            "max": 3261
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 70,
            "min": 35879,
            "mean": 49577,
            "median": 56235,
            "max": 56359
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 647,
            "mean": 650,
            "median": 647,
            "max": 663
          },
          "clone(address)": {
            "calls": 257,
            "min": 85389,
            "mean": 85389,
            "median": 85389,
            "max": 85389
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69274,
            "mean": 1496435,
            "median": 71557,
            "max": 96801724
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 262,
            "min": 69778,
            "mean": 4404509,
            "median": 73422,
            "max": 96835178
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 85797,
            "mean": 108460,
            "median": 86169,
            "max": 565366
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 316580,
            "median": 76085,
            "max": 13017830
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 263,
            "min": 0,
            "mean": 315966,
            "median": 101117,
            "max": 13661816
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 114376,
            "mean": 165065,
            "median": 114748,
            "max": 4390851
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 360,
            "min": 0,
            "mean": 227854,
            "median": 103957,
            "max": 6690183
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 101499,
            "mean": 139545,
            "median": 101864,
            "max": 3539531
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 260,
            "min": 0,
            "mean": 264287,
            "median": 104480,
            "max": 12072951
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 118639,
            "mean": 156351,
            "median": 118999,
            "max": 598198
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 361,
            "min": 0,
            "mean": 264126,
            "median": 105523,
            "max": 13603017
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102491,
            "mean": 142967,
            "median": 102863,
            "max": 3145737
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 264,
            "min": 95138,
            "mean": 7648041,
            "median": 98464,
            "max": 96828390
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 367,
            "min": 94301,
            "mean": 150807,
            "median": 111599,
            "max": 2913812
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 436,
            "min": 99193,
            "mean": 17255148,
            "median": 104416,
            "max": 96830404
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 98501,
            "mean": 139506,
            "median": 98873,
            "max": 940081
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 264,
            "min": 99407,
            "mean": 5093650,
            "median": 102767,
            "max": 96829346
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 660,
            "min": 98501,
            "mean": 144295,
            "median": 99011,
            "max": 3442921
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 461,
            "min": 100180,
            "mean": 17554955,
            "median": 105399,
            "max": 96831769
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99517,
            "mean": 137941,
            "median": 99889,
            "max": 2678238
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 94625,
            "mean": 2999868,
            "median": 97126,
            "max": 96803900
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98035,
            "mean": 124290,
            "median": 98173,
            "max": 577228
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 108,
            "min": 98627,
            "mean": 2057014,
            "median": 100553,
            "max": 96812023
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115152,
            "mean": 115152,
            "median": 115152,
            "max": 115152
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 98843,
            "mean": 4209684,
            "median": 101900,
            "max": 96820540
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99024,
            "mean": 148684,
            "median": 99162,
            "max": 3783716
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 114,
            "min": 99767,
            "mean": 4481994,
            "median": 102447,
            "max": 96832127
          },
          "revertWithError()": {
            "calls": 7143,
            "min": 267,
            "mean": 2377,
            "median": 2390,
            "max": 2390
          },
          "setValue(uint256)": {
            "calls": 7531,
            "min": 2492,
            "mean": 22218,
            "median": 22392,
            "max": 22392
          },
          "value()": {
            "calls": 21111,
            "min": 267,
            "mean": 2390,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 3761357,
          "size": 18719
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 584,
            "mean": 584,
            "median": 584,
            "max": 584
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 565,
            "mean": 565,
            "median": 565,
            "max": 565
          },
          "decodeBatch(bytes)": {
            "calls": 66,
            "min": 904,
            "mean": 2472,
            "median": 1925,
            "max": 4097
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 27,
            "min": 1231,
            "mean": 1440,
            "median": 1426,
            "max": 1770
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 675,
            "min": 502,
            "mean": 1574,
            "median": 850,
            "max": 4819
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 792,
            "mean": 810,
            "median": 804,
            "max": 840
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 839,
            "mean": 858,
            "median": 851,
            "max": 887
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23301,
            "mean": 23301,
            "median": 23301,
            "max": 23301
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 122,
            "min": 29444,
            "mean": 37957,
            "median": 36715,
            "max": 50801
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 657448,
            "mean": 741940,
            "median": 662524,
            "max": 4920730
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 7070158,
          "size": 35239
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2483,
            "mean": 2483,
            "median": 2483,
            "max": 2483
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 43936,
            "mean": 43936,
            "median": 43936,
            "max": 43936
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 43912,
            "mean": 43912,
            "median": 43912,
            "max": 43912
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 4586660,
          "size": 22840
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2387,
            "mean": 3568,
            "median": 4722,
            "max": 4737
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23748,
            "mean": 23771,
            "median": 23778,
            "max": 23784
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21496,
            "mean": 43338,
            "median": 43680,
            "max": 43692
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23598,
            "mean": 23891,
            "median": 23982,
            "max": 23982
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 10080636,
          "size": 50265
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24499,
            "mean": 45312,
            "median": 29326,
            "max": 128582
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24769,
            "mean": 49019,
            "median": 30357,
            "max": 147187
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 18981044,
          "size": 94664
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 649,
            "mean": 657,
            "median": 655,
            "max": 667
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 566,
            "mean": 566,
            "median": 566,
            "max": 566
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 667,
            "mean": 667,
            "median": 667,
            "max": 667
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 249351,
          "size": 939
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27312,
            "mean": 51584,
            "median": 50784,
            "max": 82153
          },
          "x()": {
            "calls": 6,
            "min": 2575,
            "mean": 10227,
            "median": 5828,
            "max": 37630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166489,
          "size": 556
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27184,
            "mean": 41848,
            "median": 32584,
            "max": 82161
          },
          "x()": {
            "calls": 6,
            "min": 2441,
            "mean": 9342,
            "median": 4619,
            "max": 37311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2279544,
          "size": 11319
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22405,
            "mean": 26868,
            "median": 28206,
            "max": 29886
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 24352,
            "mean": 35356,
            "median": 34254,
            "max": 84353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 2117561,
          "size": 10510
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 255,
            "min": 1191,
            "mean": 40493,
            "median": 41378,
            "max": 78755
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 253,
            "min": 940,
            "mean": 46989,
            "median": 42052,
            "max": 81056
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 871,
            "mean": 38124,
            "median": 36560,
            "max": 78435
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 3,
            "min": 578,
            "mean": 578,
            "median": 578,
            "max": 578
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 369,
            "mean": 369,
            "median": 369,
            "max": 369
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2377256,
          "size": 11807
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "name()": {
            "calls": 256,
            "min": 4788,
            "mean": 6454,
            "median": 4840,
            "max": 13566
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 262
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 4819,
            "mean": 6491,
            "median": 4848,
            "max": 13667
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "returnsString()": {
            "calls": 512,
            "min": 4821,
            "mean": 6644,
            "median": 4863,
            "max": 13611
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "reverts()": {
            "calls": 258,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "symbol()": {
            "calls": 256,
            "min": 4811,
            "mean": 6477,
            "median": 4863,
            "max": 13589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 10088448,
          "size": 50304
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 123,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "enqueue(uint256,uint256)": {
            "calls": 382,
            "min": 21651,
            "mean": 51560,
            "median": 66224,
            "max": 66386
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 138,
            "min": 400,
            "mean": 400,
            "median": 400,
            "max": 400
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 132,
            "min": 632,
            "mean": 635,
            "median": 632,
            "max": 640
          },
          "pop()": {
            "calls": 63,
            "min": 23439,
            "mean": 23439,
            "median": 23439,
            "max": 23439
          },
          "replace(uint256)": {
            "calls": 61,
            "min": 23628,
            "mean": 23944,
            "median": 24000,
            "max": 24000
          },
          "root()": {
            "calls": 121,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 4855033,
          "size": 24180
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22482,
            "mean": 23481,
            "median": 23946,
            "max": 23970
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 455667,
          "size": 1963
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 6,
            "min": 3324,
            "mean": 3346,
            "median": 3349,
            "max": 3368
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3575,
            "mean": 3575,
            "median": 3575,
            "max": 3575
          },
          "getArgUint256(uint256)": {
            "calls": 8,
            "min": 4645,
            "mean": 4661,
            "median": 4651,
            "max": 4689
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 6,
            "min": 19625,
            "mean": 21474,
            "median": 21782,
            "max": 22716
          },
          "getArgUint64(uint256)": {
            "calls": 6,
            "min": 3337,
            "mean": 3359,
            "median": 3362,
            "max": 3381
          },
          "getArgUint8(uint256)": {
            "calls": 6,
            "min": 3358,
            "mean": 3380,
            "median": 3383,
            "max": 3402
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 4082,
            "mean": 4082,
            "median": 4082,
            "max": 4082
          },
          "revertWithError()": {
            "calls": 6,
            "min": 5400,
            "mean": 5421,
            "median": 5424,
            "max": 5444
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 44076,
            "mean": 44160,
            "median": 44125,
            "max": 44288
          },
          "value()": {
            "calls": 6,
            "min": 5352,
            "mean": 5373,
            "median": 5376,
            "max": 5396
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 7943207,
          "size": 39597
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21475,
            "mean": 23885,
            "median": 23885,
            "max": 26296
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 23826,
            "mean": 24154,
            "median": 24157,
            "max": 24157
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 2275937,
          "size": 11301
        },
        "functions": {
          "read(address)": {
            "calls": 147,
            "min": 2904,
            "mean": 2968,
            "median": 2904,
            "max": 3208
          },
          "read(address,uint256)": {
            "calls": 101,
            "min": 2943,
            "mean": 3051,
            "median": 2943,
            "max": 3295
          },
          "read(address,uint256,uint256)": {
            "calls": 70,
            "min": 3180,
            "mean": 3614,
            "median": 3185,
            "max": 23684
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468290,
            "mean": 48556916,
            "median": 48556916,
            "max": 83645543
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 13057894,
          "size": 65121
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 26,
            "min": 297,
            "mean": 327,
            "median": 335,
            "max": 335
          },
          "toInt104(uint256)": {
            "calls": 10,
            "min": 302,
            "mean": 317,
            "median": 302,
            "max": 340
          },
          "toInt112(int256)": {
            "calls": 28,
            "min": 286,
            "mean": 311,
            "median": 324,
            "max": 324
          },
          "toInt112(uint256)": {
            "calls": 15,
            "min": 308,
            "mean": 325,
            "median": 308,
            "max": 346
          },
          "toInt120(int256)": {
            "calls": 60,
            "min": 326,
            "mean": 351,
            "median": 364,
            "max": 364
          },
          "toInt120(uint256)": {
            "calls": 19,
            "min": 307,
            "mean": 333,
            "median": 345,
            "max": 345
          },
          "toInt128(int256)": {
            "calls": 32,
            "min": 314,
            "mean": 342,
            "median": 352,
            "max": 352
          },
          "toInt128(uint256)": {
            "calls": 8,
            "min": 279,
            "mean": 307,
            "median": 317,
            "max": 317
          },
          "toInt136(int256)": {
            "calls": 36,
            "min": 316,
            "mean": 339,
            "median": 354,
            "max": 354
          },
          "toInt136(uint256)": {
            "calls": 16,
            "min": 310,
            "mean": 324,
            "median": 310,
            "max": 348
          },
          "toInt144(int256)": {
            "calls": 26,
            "min": 317,
            "mean": 344,
            "median": 355,
            "max": 355
          },
          "toInt144(uint256)": {
            "calls": 9,
            "min": 309,
            "mean": 330,
            "median": 347,
            "max": 347
          },
          "toInt152(int256)": {
            "calls": 32,
            "min": 319,
            "mean": 347,
            "median": 357,
            "max": 357
          },
          "toInt152(uint256)": {
            "calls": 16,
            "min": 319,
            "mean": 333,
            "median": 319,
            "max": 357
          },
          "toInt16(int256)": {
            "calls": 36,
            "min": 310,
            "mean": 334,
            "median": 348,
            "max": 348
          },
          "toInt16(uint256)": {
            "calls": 13,
            "min": 269,
            "mean": 277,
            "median": 269,
            "max": 307
          },
          "toInt160(int256)": {
            "calls": 32,
            "min": 315,
            "mean": 345,
            "median": 353,
            "max": 353
          },
          "toInt160(uint256)": {
            "calls": 12,
            "min": 293,
            "mean": 305,
            "median": 293,
            "max": 331
          },
          "toInt168(int256)": {
            "calls": 34,
            "min": 315,
            "mean": 340,
            "median": 353,
            "max": 353
          },
          "toInt168(uint256)": {
            "calls": 13,
            "min": 309,
            "mean": 338,
            "median": 347,
            "max": 347
          },
          "toInt176(int256)": {
            "calls": 20,
            "min": 292,
            "mean": 324,
            "median": 330,
            "max": 330
          },
          "toInt176(uint256)": {
            "calls": 15,
            "min": 307,
            "mean": 327,
            "median": 345,
            "max": 345
          },
          "toInt184(int256)": {
            "calls": 20,
            "min": 321,
            "mean": 355,
            "median": 359,
            "max": 359
          },
          "toInt184(uint256)": {
            "calls": 18,
            "min": 320,
            "mean": 332,
            "median": 320,
            "max": 358
          },
          "toInt192(int256)": {
            "calls": 26,
            "min": 280,
            "mean": 309,
            "median": 318,
            "max": 318
          },
          "toInt192(uint256)": {
            "calls": 16,
            "min": 303,
            "mean": 319,
            "median": 303,
            "max": 341
          },
          "toInt200(int256)": {
            "calls": 30,
            "min": 314,
            "mean": 343,
            "median": 352,
            "max": 352
          },
          "toInt200(uint256)": {
            "calls": 15,
            "min": 308,
            "mean": 325,
            "median": 308,
            "max": 346
          },
          "toInt208(int256)": {
            "calls": 20,
            "min": 317,
            "mean": 347,
            "median": 355,
            "max": 355
          },
          "toInt208(uint256)": {
            "calls": 16,
            "min": 292,
            "mean": 308,
            "median": 292,
            "max": 330
          },
          "toInt216(int256)": {
            "calls": 28,
            "min": 316,
            "mean": 345,
            "median": 354,
            "max": 354
          },
          "toInt216(uint256)": {
            "calls": 14,
            "min": 308,
            "mean": 343,
            "median": 346,
            "max": 346
          },
          "toInt224(int256)": {
            "calls": 36,
            "min": 318,
            "mean": 352,
            "median": 356,
            "max": 356
          },
          "toInt224(uint256)": {
            "calls": 29,
            "min": 320,
            "mean": 343,
            "median": 358,
            "max": 358
          },
          "toInt232(int256)": {
            "calls": 26,
            "min": 312,
            "mean": 339,
            "median": 350,
            "max": 350
          },
          "toInt232(uint256)": {
            "calls": 20,
            "min": 308,
            "mean": 325,
            "median": 308,
            "max": 346
          },
          "toInt24(int256)": {
            "calls": 34,
            "min": 287,
            "mean": 311,
            "median": 325,
            "max": 325
          },
          "toInt24(uint256)": {
            "calls": 18,
            "min": 310,
            "mean": 316,
            "median": 310,
            "max": 348
          },
          "toInt240(int256)": {
            "calls": 32,
            "min": 315,
            "mean": 347,
            "median": 353,
            "max": 353
          },
          "toInt240(uint256)": {
            "calls": 18,
            "min": 291,
            "mean": 307,
            "median": 291,
            "max": 329
          },
          "toInt248(int256)": {
            "calls": 44,
            "min": 287,
            "mean": 322,
            "median": 326,
            "max": 326
          },
          "toInt248(uint256)": {
            "calls": 23,
            "min": 305,
            "mean": 323,
            "median": 333,
            "max": 333
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 306,
            "mean": 316,
            "median": 317,
            "max": 317
          },
          "toInt32(int256)": {
            "calls": 46,
            "min": 297,
            "mean": 320,
            "median": 335,
            "max": 335
          },
          "toInt32(uint256)": {
            "calls": 17,
            "min": 305,
            "mean": 318,
            "median": 305,
            "max": 343
          },
          "toInt40(int256)": {
            "calls": 46,
            "min": 275,
            "mean": 299,
            "median": 313,
            "max": 313
          },
          "toInt40(uint256)": {
            "calls": 19,
            "min": 303,
            "mean": 313,
            "median": 303,
            "max": 341
          },
          "toInt48(int256)": {
            "calls": 30,
            "min": 274,
            "mean": 298,
            "median": 312,
            "max": 312
          },
          "toInt48(uint256)": {
            "calls": 18,
            "min": 304,
            "mean": 316,
            "median": 304,
            "max": 342
          },
          "toInt56(int256)": {
            "calls": 22,
            "min": 286,
            "mean": 311,
            "median": 324,
            "max": 324
          },
          "toInt56(uint256)": {
            "calls": 17,
            "min": 310,
            "mean": 321,
            "median": 310,
            "max": 348
          },
          "toInt64(int256)": {
            "calls": 36,
            "min": 287,
            "mean": 305,
            "median": 314,
            "max": 314
          },
          "toInt64(uint256)": {
            "calls": 12,
            "min": 307,
            "mean": 320,
            "median": 320,
            "max": 334
          },
          "toInt72(int256)": {
            "calls": 30,
            "min": 327,
            "mean": 352,
            "median": 365,
            "max": 365
          },
          "toInt72(uint256)": {
            "calls": 11,
            "min": 309,
            "mean": 315,
            "median": 309,
            "max": 347
          },
          "toInt8(int256)": {
            "calls": 16,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "toInt8(uint256)": {
            "calls": 20,
            "min": 308,
            "mean": 311,
            "median": 308,
            "max": 344
          },
          "toInt80(int256)": {
            "calls": 28,
            "min": 314,
            "mean": 342,
            "median": 352,
            "max": 352
          },
          "toInt80(uint256)": {
            "calls": 11,
            "min": 279,
            "mean": 289,
            "median": 279,
            "max": 317
          },
          "toInt88(int256)": {
            "calls": 30,
            "min": 275,
            "mean": 301,
            "median": 313,
            "max": 313
          },
          "toInt88(uint256)": {
            "calls": 17,
            "min": 305,
            "mean": 311,
            "median": 305,
            "max": 343
          },
          "toInt96(int256)": {
            "calls": 24,
            "min": 312,
            "mean": 335,
            "median": 350,
            "max": 350
          },
          "toInt96(uint256)": {
            "calls": 19,
            "min": 317,
            "mean": 331,
            "median": 317,
            "max": 355
          },
          "toUint104(uint256)": {
            "calls": 15,
            "min": 302,
            "mean": 315,
            "median": 324,
            "max": 324
          },
          "toUint112(uint256)": {
            "calls": 16,
            "min": 319,
            "mean": 324,
            "median": 319,
            "max": 341
          },
          "toUint120(uint256)": {
            "calls": 17,
            "min": 318,
            "mean": 324,
            "median": 318,
            "max": 340
          },
          "toUint128(uint256)": {
            "calls": 16,
            "min": 302,
            "mean": 310,
            "median": 302,
            "max": 324
          },
          "toUint136(uint256)": {
            "calls": 12,
            "min": 303,
            "mean": 310,
            "median": 303,
            "max": 325
          },
          "toUint144(uint256)": {
            "calls": 20,
            "min": 303,
            "mean": 314,
            "median": 314,
            "max": 325
          },
          "toUint152(uint256)": {
            "calls": 15,
            "min": 303,
            "mean": 311,
            "median": 303,
            "max": 325
          },
          "toUint16(uint256)": {
            "calls": 28,
            "min": 304,
            "mean": 307,
            "median": 304,
            "max": 326
          },
          "toUint160(uint256)": {
            "calls": 12,
            "min": 320,
            "mean": 331,
            "median": 331,
            "max": 342
          },
          "toUint168(uint256)": {
            "calls": 19,
            "min": 319,
            "mean": 332,
            "median": 341,
            "max": 341
          },
          "toUint176(uint256)": {
            "calls": 12,
            "min": 305,
            "mean": 317,
            "median": 327,
            "max": 327
          },
          "toUint184(uint256)": {
            "calls": 11,
            "min": 304,
            "mean": 316,
            "median": 326,
            "max": 326
          },
          "toUint192(uint256)": {
            "calls": 19,
            "min": 301,
            "mean": 310,
            "median": 301,
            "max": 323
          },
          "toUint200(uint256)": {
            "calls": 10,
            "min": 279,
            "mean": 285,
            "median": 279,
            "max": 301
          },
          "toUint208(uint256)": {
            "calls": 17,
            "min": 320,
            "mean": 334,
            "median": 342,
            "max": 342
          },
          "toUint216(uint256)": {
            "calls": 8,
            "min": 318,
            "mean": 331,
            "median": 340,
            "max": 340
          },
          "toUint224(uint256)": {
            "calls": 15,
            "min": 303,
            "mean": 319,
            "median": 325,
            "max": 325
          },
          "toUint232(uint256)": {
            "calls": 21,
            "min": 317,
            "mean": 327,
            "median": 317,
            "max": 339
          },
          "toUint24(uint256)": {
            "calls": 20,
            "min": 320,
            "mean": 327,
            "median": 320,
            "max": 342
          },
          "toUint240(uint256)": {
            "calls": 17,
            "min": 318,
            "mean": 332,
            "median": 340,
            "max": 340
          },
          "toUint248(uint256)": {
            "calls": 22,
            "min": 303,
            "mean": 319,
            "median": 325,
            "max": 325
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 324,
            "mean": 331,
            "median": 335,
            "max": 335
          },
          "toUint32(uint256)": {
            "calls": 18,
            "min": 318,
            "mean": 320,
            "median": 318,
            "max": 340
          },
          "toUint40(uint256)": {
            "calls": 15,
            "min": 306,
            "mean": 308,
            "median": 306,
            "max": 328
          },
          "toUint48(uint256)": {
            "calls": 18,
            "min": 319,
            "mean": 325,
            "median": 319,
            "max": 341
          },
          "toUint56(uint256)": {
            "calls": 18,
            "min": 302,
            "mean": 309,
            "median": 302,
            "max": 324
          },
          "toUint64(uint256)": {
            "calls": 17,
            "min": 303,
            "mean": 313,
            "median": 303,
            "max": 325
          },
          "toUint72(uint256)": {
            "calls": 15,
            "min": 301,
            "mean": 312,
            "median": 323,
            "max": 323
          },
          "toUint8(uint256)": {
            "calls": 29,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 323
          },
          "toUint80(uint256)": {
            "calls": 10,
            "min": 319,
            "mean": 330,
            "median": 330,
            "max": 341
          },
          "toUint88(uint256)": {
            "calls": 16,
            "min": 280,
            "mean": 288,
            "median": 280,
            "max": 302
          },
          "toUint96(uint256)": {
            "calls": 12,
            "min": 301,
            "mean": 308,
            "median": 301,
            "max": 323
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 18546875,
          "size": 92499
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 81,
            "min": 170583,
            "mean": 170651,
            "median": 170679,
            "max": 170679
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 696,
            "min": 22079,
            "mean": 146902,
            "median": 73146,
            "max": 296866
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 45823,
            "mean": 67092,
            "median": 68536,
            "max": 84813
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29356,
            "mean": 29798,
            "median": 29764,
            "max": 32031
          },
          "safeApprove(address,address,uint256)": {
            "calls": 256,
            "min": 24746,
            "mean": 25248,
            "median": 25298,
            "max": 25550
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 254,
            "min": 25171,
            "mean": 25668,
            "median": 25687,
            "max": 25987
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24812,
            "mean": 25274,
            "median": 25304,
            "max": 25532
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28645,
            "mean": 28645,
            "median": 28645,
            "max": 28645
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22057,
            "mean": 28842,
            "median": 28903,
            "max": 29095
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 256,
            "min": 25873,
            "mean": 26546,
            "median": 26614,
            "max": 26912
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 28243,
            "mean": 49557,
            "median": 68096,
            "max": 69166
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 469,
            "mean": 3689,
            "median": 5299,
            "max": 5299
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2561,
            "min": 25644,
            "mean": 39618,
            "median": 30844,
            "max": 61421
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 526820,
            "mean": 646055,
            "median": 553457,
            "max": 4572253
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 525244,
            "mean": 654414,
            "median": 554059,
            "max": 4609906
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2994789,
          "size": 14891
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33047,
            "mean": 41883,
            "median": 39339,
            "max": 70600
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 37783,
            "mean": 59249,
            "median": 50948,
            "max": 117915
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 5974652,
          "size": 29770
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1564,
            "mean": 8702,
            "median": 9305,
            "max": 16036
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 291,
            "min": 1056,
            "mean": 10274,
            "median": 10313,
            "max": 16350
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 138,
            "min": 6450,
            "mean": 6454,
            "median": 6450,
            "max": 6460
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 163778,
          "size": 603
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 31,
            "min": 32649,
            "mean": 47861,
            "median": 44949,
            "max": 79149
          },
          "fallbackDeposit(uint256)": {
            "calls": 41,
            "min": 44563,
            "mean": 51236,
            "median": 44563,
            "max": 78763
          },
          "withdraw(uint256)": {
            "calls": 23,
            "min": 32935,
            "mean": 44193,
            "median": 45259,
            "max": 45343
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 3285154,
          "size": 16341
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 130,
            "min": 1463,
            "mean": 1478,
            "median": 1482,
            "max": 1506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 334836,
          "size": 1360
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 234,
            "mean": 249,
            "median": 249,
            "max": 265
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 252,
            "mean": 267,
            "median": 267,
            "max": 283
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 250,
            "mean": 265,
            "median": 265,
            "max": 280
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22039,
            "mean": 22039,
            "median": 22039,
            "max": 22039
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 253751,
          "size": 962
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "fallback()": {
            "calls": 520,
            "min": 22823,
            "mean": 63518,
            "median": 89704,
            "max": 171740
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "receive()": {
            "calls": 260,
            "min": 65,
            "mean": 20822,
            "median": 21065,
            "max": 21065
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 524,
            "mean": 33726,
            "median": 34011,
            "max": 67499
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1730,
            "mean": 34888,
            "median": 34888,
            "max": 68046
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 107785,
          "size": 284
        },
        "functions": {
          "fallback()": {
            "calls": 994,
            "min": 256,
            "mean": 23447,
            "median": 22364,
            "max": 272713
          },
          "receive()": {
            "calls": 15,
            "min": 21079,
            "mean": 21079,
            "median": 21079,
            "max": 21079
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 317747,
          "size": 1402
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 227,
            "mean": 339,
            "median": 396,
            "max": 396
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 769,
            "mean": 769,
            "median": 769,
            "max": 769
          },
          "getArgAddress(uint256)": {
            "calls": 11,
            "min": 3194,
            "mean": 3205,
            "median": 3200,
            "max": 3231
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3445,
            "mean": 3456,
            "median": 3451,
            "max": 3482
          },
          "getArgUint256(uint256)": {
            "calls": 23,
            "min": 4515,
            "mean": 4526,
            "median": 4521,
            "max": 4552
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 11,
            "min": 13127,
            "mean": 14128,
            "median": 14343,
            "max": 15579
          },
          "getArgUint64(uint256)": {
            "calls": 11,
            "min": 3207,
            "mean": 3218,
            "median": 3213,
            "max": 3244
          },
          "getArgUint8(uint256)": {
            "calls": 11,
            "min": 3228,
            "mean": 3239,
            "median": 3234,
            "max": 3265
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 3695,
            "mean": 3729,
            "median": 3714,
            "max": 3805
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 314,
            "mean": 422,
            "median": 476,
            "max": 476
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 702,
            "mean": 702,
            "median": 702,
            "max": 702
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 647,
            "mean": 647,
            "median": 647,
            "max": 647
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 689,
            "mean": 689,
            "median": 689,
            "max": 689
          },
          "revertWithError()": {
            "calls": 11,
            "min": 5270,
            "mean": 5281,
            "median": 5276,
            "max": 5307
          },
          "setValue(uint256)": {
            "calls": 11,
            "min": 43958,
            "mean": 44007,
            "median": 43964,
            "max": 44330
          },
          "value()": {
            "calls": 11,
            "min": 5222,
            "mean": 5233,
            "median": 5228,
            "max": 5259
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 802964,
          "size": 4775
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5107,
            "mean": 5120,
            "median": 5125,
            "max": 5125
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5297,
            "mean": 5306,
            "median": 5306,
            "max": 5315
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5208,
            "mean": 5217,
            "median": 5217,
            "max": 5226
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5215,
            "mean": 5224,
            "median": 5224,
            "max": 5233
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5159,
            "mean": 5168,
            "median": 5168,
            "max": 5177
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5201,
            "mean": 5210,
            "median": 5210,
            "max": 5219
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11280,
            "mean": 30005,
            "median": 33256,
            "max": 45480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1729004,
          "size": 7788
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5500,
            "min": 2433,
            "mean": 2433,
            "median": 2433,
            "max": 2433
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 456,
            "min": 533,
            "mean": 2499,
            "median": 638,
            "max": 7638
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 636,
            "min": 23529,
            "mean": 29617,
            "median": 29048,
            "max": 49714
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4213,
            "min": 23582,
            "mean": 157319,
            "median": 78791,
            "max": 44272059
          },
          "burn(address,uint256,uint256)": {
            "calls": 383,
            "min": 24692,
            "mean": 28890,
            "median": 27730,
            "max": 33074
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 928,
            "min": 24406,
            "mean": 219037,
            "median": 63503,
            "max": 26851880
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1094,
            "min": 23833,
            "mean": 222504,
            "median": 58160,
            "max": 42647512
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1978,
            "min": 26335,
            "mean": 44526,
            "median": 46475,
            "max": 46489
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "lastDataHash()": {
            "calls": 30,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 4998,
            "min": 22701,
            "mean": 140123,
            "median": 72454,
            "max": 43342889
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 899,
            "min": 23675,
            "mean": 301250,
            "median": 61700,
            "max": 41628767
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1098,
            "min": 23509,
            "mean": 209154,
            "median": 57466,
            "max": 44626101
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1704,
            "min": 25734,
            "mean": 45025,
            "median": 45874,
            "max": 45874
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 132,
            "min": 26281,
            "mean": 36451,
            "median": 36097,
            "max": 47103
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 129,
            "min": 26991,
            "mean": 30232,
            "median": 30271,
            "max": 30542
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 118,
            "min": 32774,
            "mean": 110103,
            "median": 93546,
            "max": 1295033
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 123,
            "min": 59113,
            "mean": 72699,
            "median": 62239,
            "max": 1107679
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 410294,
          "size": 1749
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 440,
            "min": 2762,
            "mean": 2775,
            "median": 2776,
            "max": 2800
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26441,
            "mean": 26441,
            "median": 26441,
            "max": 26441
          },
          "signer()": {
            "calls": 4,
            "min": 2303,
            "mean": 2303,
            "median": 2303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908992,
          "size": 5209
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 419,
            "mean": 419,
            "median": 419,
            "max": 419
          },
          "allowance(address,address)": {
            "calls": 2441,
            "min": 462,
            "mean": 2040,
            "median": 2462,
            "max": 2462
          },
          "approve(address,uint256)": {
            "calls": 2610,
            "min": 25934,
            "mean": 45912,
            "median": 46038,
            "max": 46218
          },
          "balanceOf(address)": {
            "calls": 13275,
            "min": 420,
            "mean": 2242,
            "median": 2420,
            "max": 2420
          },
          "burn(address,uint256)": {
            "calls": 516,
            "min": 24090,
            "mean": 29089,
            "median": 27221,
            "max": 34398
          },
          "decimals()": {
            "calls": 312,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 24920,
            "mean": 26682,
            "median": 25443,
            "max": 28334
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 24829,
            "mean": 37442,
            "median": 25405,
            "max": 52281
          },
          "mint(address,uint256)": {
            "calls": 3226,
            "min": 24248,
            "mean": 67573,
            "median": 68228,
            "max": 68580
          },
          "name()": {
            "calls": 258,
            "min": 2698,
            "mean": 4966,
            "median": 5981,
            "max": 9263
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23399,
            "mean": 43538,
            "median": 30083,
            "max": 74101
          },
          "symbol()": {
            "calls": 258,
            "min": 2686,
            "mean": 5042,
            "median": 4855,
            "max": 9241
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 2574,
            "min": 24105,
            "mean": 45517,
            "median": 51333,
            "max": 51556
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1548,
            "min": 24679,
            "mean": 40199,
            "median": 32436,
            "max": 54527
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 909004,
          "size": 5209
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21781,
            "mean": 22115,
            "median": 21877,
            "max": 46158
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28389,
            "mean": 67475,
            "median": 68252,
            "max": 68580
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22512,
            "mean": 22837,
            "median": 22776,
            "max": 28931
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24883,
            "mean": 38377,
            "median": 30409,
            "max": 52322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 927382,
          "size": 4193
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 2512,
            "mean": 2512,
            "median": 2512,
            "max": 2512
          },
          "approve(address,uint256)": {
            "calls": 1014,
            "min": 23742,
            "mean": 35093,
            "median": 35870,
            "max": 46371
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1643780,
          "size": 7399
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 251,
            "min": 21548,
            "mean": 22007,
            "median": 21788,
            "max": 94918
          },
          "checkpointAt(address,uint256)": {
            "calls": 314,
            "min": 0,
            "mean": 46,
            "median": 0,
            "max": 4630
          },
          "checkpointCount(address)": {
            "calls": 1300,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 526,
            "min": 21192,
            "mean": 21630,
            "median": 21432,
            "max": 91321
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23243,
            "mean": 40994,
            "median": 23279,
            "max": 75513
          },
          "delegates(address)": {
            "calls": 4014,
            "min": 0,
            "mean": 229,
            "median": 0,
            "max": 2445
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 47950,
            "mean": 48241,
            "median": 48394,
            "max": 48394
          },
          "directIncrementNonce(address)": {
            "calls": 816,
            "min": 26766,
            "mean": 31219,
            "median": 26778,
            "max": 43878
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5193,
            "mean": 5693,
            "median": 5193,
            "max": 7193
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 281,
            "mean": 3414,
            "median": 4873,
            "max": 5089
          },
          "getVotes(address)": {
            "calls": 2899,
            "min": 0,
            "mean": 10,
            "median": 0,
            "max": 4616
          },
          "getVotesTotalSupply()": {
            "calls": 762,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4529
          },
          "mint(address,uint256)": {
            "calls": 737,
            "min": 21548,
            "mean": 21855,
            "median": 21800,
            "max": 94548
          },
          "name()": {
            "calls": 256,
            "min": 448,
            "mean": 448,
            "median": 448,
            "max": 448
          },
          "nonces(address)": {
            "calls": 491,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "totalSupply()": {
            "calls": 380,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 566,
            "min": 21536,
            "mean": 21827,
            "median": 21788,
            "max": 86457
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 250299,
          "size": 943
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21454,
            "mean": 21454,
            "median": 21454,
            "max": 21454
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21654,
            "mean": 21950,
            "median": 22026,
            "max": 22026
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2506,
            "mean": 4013,
            "median": 4598,
            "max": 4617
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 392,
            "min": 21977,
            "mean": 36559,
            "median": 44128,
            "max": 44344
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 784,
            "min": 22152,
            "mean": 37083,
            "median": 44726,
            "max": 44966
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1474237,
          "size": 6806
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31903,
            "mean": 31903,
            "median": 31903,
            "max": 31903
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12077,
            "mean": 12077,
            "median": 12077,
            "max": 12077
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 5979,
            "mean": 18887,
            "median": 8513,
            "max": 139727
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 853,
            "mean": 853,
            "median": 853,
            "max": 853
          },
          "entryPoint()": {
            "calls": 7,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2531,
            "mean": 16332,
            "median": 12788,
            "max": 37220
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 121,
            "min": 2816,
            "mean": 60086,
            "median": 65862,
            "max": 209522
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 138,
            "min": 2975,
            "mean": 69175,
            "median": 72724,
            "max": 280774
          },
          "fallback()": {
            "calls": 5,
            "min": 219,
            "mean": 27734,
            "median": 266,
            "max": 104992
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5262,
            "mean": 5262,
            "median": 5262,
            "max": 5262
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2387,
            "mean": 23859,
            "median": 23926,
            "max": 23926
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6486,
            "mean": 7851,
            "median": 6486,
            "max": 13617
          },
          "owner()": {
            "calls": 267,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "receive()": {
            "calls": 258,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6904,
            "mean": 6904,
            "median": 6904,
            "max": 6904
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2363,
            "mean": 13435,
            "median": 13435,
            "max": 24507
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 6967,
            "mean": 6967,
            "median": 6967,
            "max": 6967
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 320,
            "mean": 24107,
            "median": 29186,
            "max": 37736
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45021,
            "mean": 45021,
            "median": 45021,
            "max": 45021
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1734814,
          "size": 9549
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2436,
            "mean": 5086,
            "median": 7587,
            "max": 7703
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7618,
            "mean": 7666,
            "median": 7666,
            "max": 7715
          },
          "decimals()": {
            "calls": 20,
            "min": 288,
            "mean": 291,
            "median": 288,
            "max": 324
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30183,
            "mean": 119032,
            "median": 120502,
            "max": 120742
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30138,
            "mean": 119334,
            "median": 120457,
            "max": 131062
          },
          "name()": {
            "calls": 1,
            "min": 2745,
            "mean": 2745,
            "median": 2745,
            "max": 2745
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 7615,
            "mean": 7615,
            "median": 7615,
            "max": 7712
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7715,
            "mean": 7715,
            "median": 7715,
            "max": 7744
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24468,
            "mean": 76864,
            "median": 77322,
            "max": 92198
          },
          "symbol()": {
            "calls": 1,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5337,
            "mean": 5337,
            "median": 5337,
            "max": 5337
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26661,
            "mean": 77577,
            "median": 78308,
            "max": 78452
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1240147,
          "size": 5772
        },
        "functions": {
          "eip712Domain()": {
            "calls": 309,
            "min": 832,
            "mean": 832,
            "median": 832,
            "max": 832
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 5775,
            "mean": 22553,
            "median": 10786,
            "max": 62865
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 126,
            "min": 5795,
            "mean": 84963,
            "median": 63259,
            "max": 241964
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 134,
            "min": 28345,
            "mean": 101591,
            "median": 98210,
            "max": 350784
          },
          "fallback()": {
            "calls": 872,
            "min": 221,
            "mean": 6041,
            "median": 3196,
            "max": 131407
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 320,
            "min": 429,
            "mean": 13914,
            "median": 13683,
            "max": 35015
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 5785,
            "mean": 5785,
            "median": 5785,
            "max": 5785
          },
          "mockId()": {
            "calls": 2,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "owner()": {
            "calls": 798,
            "min": 5569,
            "mean": 5569,
            "median": 5569,
            "max": 5569
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "receive()": {
            "calls": 1,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5578,
            "mean": 14130,
            "median": 14152,
            "max": 22726
          },
          "state()": {
            "calls": 772,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "token()": {
            "calls": 536,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 5767,
            "mean": 35014,
            "median": 35175,
            "max": 52275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1259409,
          "size": 5862
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5231,
            "mean": 5231,
            "median": 5231,
            "max": 5231
          },
          "mockId()": {
            "calls": 1,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5692,
            "mean": 14244,
            "median": 14266,
            "max": 22840
          },
          "state()": {
            "calls": 513,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18189,
            "mean": 18189,
            "median": 18189,
            "max": 18189
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 185210,
          "size": 642
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2388,
            "min": 94664,
            "mean": 95228,
            "median": 95276,
            "max": 95492
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 825331,
          "size": 3609
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2489,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26775,
            "mean": 46811,
            "median": 47047,
            "max": 47438
          },
          "balanceOf(address,uint256)": {
            "calls": 2422,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24210,
            "mean": 27244,
            "median": 25204,
            "max": 30424
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 27006,
            "mean": 47084,
            "median": 47170,
            "max": 47530
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 23826,
            "mean": 31756,
            "median": 26294,
            "max": 46206
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 379,
            "min": 25702,
            "mean": 41258,
            "median": 33176,
            "max": 61558
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24227,
            "mean": 45648,
            "median": 47039,
            "max": 47586
          },
          "name(uint256)": {
            "calls": 256,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 45910,
            "mean": 45910,
            "median": 45910,
            "max": 45910
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 386,
            "mean": 386,
            "median": 386,
            "max": 386
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 717,
            "mean": 717,
            "median": 717,
            "max": 717
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1048,
            "min": 24159,
            "mean": 37294,
            "median": 30281,
            "max": 52721
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1657,
            "min": 26881,
            "mean": 38355,
            "median": 32967,
            "max": 60741
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1771622,
          "size": 7993
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1069,
            "min": 23995,
            "mean": 43075,
            "median": 48324,
            "max": 48636
          },
          "balanceOf(address)": {
            "calls": 10257,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "burn(uint256)": {
            "calls": 248,
            "min": 28213,
            "mean": 29311,
            "median": 28662,
            "max": 31358
          },
          "directApprove(address,uint256)": {
            "calls": 1057,
            "min": 24138,
            "mean": 43437,
            "median": 48892,
            "max": 49223
          },
          "directGetApproved(uint256)": {
            "calls": 1529,
            "min": 2472,
            "mean": 4451,
            "median": 4645,
            "max": 4645
          },
          "directOwnerOf(uint256)": {
            "calls": 2547,
            "min": 2480,
            "mean": 2657,
            "median": 2701,
            "max": 2701
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 653,
            "min": 56735,
            "mean": 74991,
            "median": 63040,
            "max": 129514
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 489,
            "min": 63727,
            "mean": 97151,
            "median": 64957,
            "max": 240732
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 962,
            "min": 24288,
            "mean": 42086,
            "median": 46428,
            "max": 46454
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1844,
            "min": 25073,
            "mean": 42486,
            "median": 40954,
            "max": 57523
          },
          "exists(uint256)": {
            "calls": 522,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getApproved(uint256)": {
            "calls": 1563,
            "min": 2447,
            "mean": 4401,
            "median": 4564,
            "max": 4564
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2730,
            "mean": 2731,
            "median": 2730,
            "max": 2743
          },
          "getExtraData(uint256)": {
            "calls": 3614,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2807,
            "mean": 5351,
            "median": 6087,
            "max": 7140
          },
          "mint(address,uint256)": {
            "calls": 10857,
            "min": 24359,
            "mean": 64346,
            "median": 68517,
            "max": 68878
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46699,
            "mean": 55880,
            "median": 51737,
            "max": 69197
          },
          "ownerOf(uint256)": {
            "calls": 5639,
            "min": 497,
            "mean": 2481,
            "median": 2497,
            "max": 2497
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71108,
            "mean": 81477,
            "median": 71863,
            "max": 121061
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72114,
            "mean": 97583,
            "median": 73453,
            "max": 232104
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1807,
            "min": 40504,
            "mean": 68305,
            "median": 63170,
            "max": 129653
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 535,
            "min": 63767,
            "mean": 90565,
            "median": 64987,
            "max": 218485
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1185,
            "min": 24024,
            "mean": 42703,
            "median": 46164,
            "max": 46177
          },
          "setAux(address,uint224)": {
            "calls": 747,
            "min": 27580,
            "mean": 44559,
            "median": 44667,
            "max": 44680
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1554,
            "min": 23906,
            "mean": 36759,
            "median": 43866,
            "max": 44322
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1790,
            "min": 24518,
            "mean": 42371,
            "median": 40551,
            "max": 56916
          },
          "uncheckedBurn(uint256)": {
            "calls": 2959,
            "min": 23625,
            "mean": 30127,
            "median": 31043,
            "max": 36227
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 180,
            "min": 54711,
            "mean": 54954,
            "median": 54940,
            "max": 55312
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 613279,
          "size": 2628
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31160,
            "mean": 101288,
            "median": 91010,
            "max": 159025
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 258,
            "min": 316608,
            "mean": 476688,
            "median": 341026,
            "max": 3787437
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2597,
            "mean": 5805,
            "median": 4754,
            "max": 11333
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22078,
            "mean": 41251,
            "median": 43990,
            "max": 43990
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 159309,
          "size": 715
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "garbage()": {
            "calls": 780,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          },
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3048,
            "mean": 3056,
            "median": 3060,
            "max": 3060
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3305,
            "mean": 3309,
            "median": 3311,
            "max": 3311
          },
          "getArgUint256(uint256)": {
            "calls": 11,
            "min": 4369,
            "mean": 4378,
            "median": 4381,
            "max": 4381
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 6062,
            "mean": 6544,
            "median": 6368,
            "max": 7269
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3061,
            "mean": 3069,
            "median": 3073,
            "max": 3073
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3082,
            "mean": 3090,
            "median": 3094,
            "max": 3094
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3277,
            "mean": 3289,
            "median": 3295,
            "max": 3295
          },
          "receive()": {
            "calls": 14,
            "min": 0,
            "mean": 33143,
            "median": 21096,
            "max": 286345
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5124,
            "mean": 5132,
            "median": 5136,
            "max": 5136
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 43818,
            "mean": 43825,
            "median": 43824,
            "max": 43836
          },
          "value()": {
            "calls": 5,
            "min": 5076,
            "mean": 5084,
            "median": 5088,
            "max": 5088
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 792781,
          "size": 3455
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7412,
            "min": 327,
            "mean": 4111,
            "median": 4453,
            "max": 4453
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 273,
            "min": 26708,
            "mean": 28030,
            "median": 28118,
            "max": 28118
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 21,
            "min": 26278,
            "mean": 41547,
            "median": 43888,
            "max": 54882
          },
          "guardedByOnlyRoles()": {
            "calls": 21,
            "min": 23721,
            "mean": 40628,
            "median": 41331,
            "max": 52325
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1004,
            "mean": 8323,
            "median": 7717,
            "max": 16669
          },
          "hasRole(address,uint256)": {
            "calls": 1641,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "owner()": {
            "calls": 1935,
            "min": 2351,
            "mean": 2366,
            "median": 2368,
            "max": 2368
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 227,
            "min": 2431,
            "mean": 2656,
            "median": 2474,
            "max": 4570
          },
          "roleHolderCount(uint256)": {
            "calls": 3462,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "roleHolders(uint256)": {
            "calls": 3539,
            "min": 2552,
            "mean": 2863,
            "median": 2552,
            "max": 16313
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23618,
            "mean": 43414,
            "median": 43578,
            "max": 43902
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 21,
            "min": 24262,
            "mean": 130815,
            "median": 133679,
            "max": 200831
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21601,
            "mean": 26972,
            "median": 26485,
            "max": 43885
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23644,
            "mean": 25093,
            "median": 26456,
            "max": 26456
          },
          "setOwner(address)": {
            "calls": 267,
            "min": 26468,
            "mean": 27130,
            "median": 26696,
            "max": 43796
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23666,
            "mean": 25028,
            "median": 23666,
            "max": 26478
          },
          "setRole(address,uint256,bool)": {
            "calls": 1385,
            "min": 24263,
            "mean": 59379,
            "median": 73563,
            "max": 74079
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6286,
            "min": 33362,
            "mean": 60300,
            "median": 73600,
            "max": 78507
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 113853,
          "size": 312
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          },
          "getValue(uint256)": {
            "calls": 956,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "setValue(uint256,uint256)": {
            "calls": 956,
            "min": 2421,
            "mean": 22279,
            "median": 22321,
            "max": 22321
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 405672,
          "size": 3066
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23365,
            "mean": 33882,
            "median": 33882,
            "max": 44399
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 204,
            "min": 27439,
            "mean": 59294,
            "median": 67409,
            "max": 90548
          },
          "isInitializing()": {
            "calls": 199,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23402,
            "mean": 23402,
            "median": 23402,
            "max": 23402
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 242,
            "min": 24395,
            "mean": 55787,
            "median": 67192,
            "max": 90553
          },
          "version()": {
            "calls": 272,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "x()": {
            "calls": 146,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 850682,
          "size": 3778
        },
        "functions": {
          "owner()": {
            "calls": 752,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24778,
            "mean": 33472,
            "median": 24802,
            "max": 58975
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 1026645,
          "size": 4666
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23854,
            "mean": 23854,
            "median": 23854,
            "max": 23854
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26162,
            "mean": 37784,
            "median": 44009,
            "max": 46295
          },
          "owner()": {
            "calls": 1677,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 116,
            "min": 28924,
            "mean": 73885,
            "median": 67670,
            "max": 800246
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 133,
            "min": 28084,
            "mean": 54528,
            "median": 60361,
            "max": 60548
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 133,
            "min": 28518,
            "mean": 53010,
            "median": 61439,
            "max": 61884
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 232,
            "min": 27953,
            "mean": 48107,
            "median": 47054,
            "max": 63323
          },
          "rescueETH(address,uint256)": {
            "calls": 1404,
            "min": 5702,
            "mean": 32317,
            "median": 36548,
            "max": 61926
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 6816,
            "mean": 6816,
            "median": 6816,
            "max": 6816
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 691419,
          "size": 2988
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 518,
            "min": 21842,
            "mean": 24272,
            "median": 24318,
            "max": 37376
          },
          "multicallBrutalized(bytes[])": {
            "calls": 257,
            "min": 388676,
            "mean": 483825,
            "median": 395403,
            "max": 3819962
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 42399,
            "mean": 42399,
            "median": 42399,
            "max": 42399
          },
          "returnsRandomizedString(string)": {
            "calls": 242,
            "min": 725,
            "mean": 1651,
            "median": 1671,
            "max": 3204
          },
          "returnsSender()": {
            "calls": 1,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 455,
            "mean": 455,
            "median": 455,
            "max": 455
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 165,
            "mean": 165,
            "median": 165,
            "max": 165
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 686,
            "mean": 700,
            "median": 695,
            "max": 719
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 386295,
          "size": 1499
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22661,
            "mean": 22661,
            "median": 22661,
            "max": 22661
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23814,
            "mean": 28719,
            "median": 28840,
            "max": 28847
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28229,
            "mean": 28229,
            "median": 28229,
            "max": 28229
          },
          "owner()": {
            "calls": 835,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2694
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23102,
            "mean": 23102,
            "median": 23102,
            "max": 23102
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44565,
            "mean": 44565,
            "median": 44565,
            "max": 44565
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23420,
            "mean": 28357,
            "median": 28460,
            "max": 28467
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23837,
            "mean": 25017,
            "median": 23865,
            "max": 28519
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23365,
            "mean": 33998,
            "median": 23365,
            "max": 45496
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 283357,
          "size": 1022
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 743690,
          "size": 3152
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22670,
            "mean": 22670,
            "median": 22670,
            "max": 22670
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23886,
            "mean": 28790,
            "median": 28906,
            "max": 28913
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24003,
            "mean": 45802,
            "median": 47968,
            "max": 48335
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25892,
            "mean": 45744,
            "median": 45816,
            "max": 46176
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2739,
            "mean": 2739,
            "median": 2739,
            "max": 2746
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2759
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28268,
            "mean": 28268,
            "median": 28268,
            "max": 28268
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 451,
            "mean": 14655,
            "median": 6033,
            "max": 52333
          },
          "owner()": {
            "calls": 832,
            "min": 2336,
            "mean": 2336,
            "median": 2336,
            "max": 2336
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2735,
            "mean": 2735,
            "median": 2735,
            "max": 2742
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23743,
            "mean": 27123,
            "median": 25942,
            "max": 29119
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23124,
            "mean": 23124,
            "median": 23124,
            "max": 23124
          },
          "renounceRoles(uint256)": {
            "calls": 60,
            "min": 23254,
            "mean": 27742,
            "median": 28066,
            "max": 28426
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44604,
            "mean": 44604,
            "median": 44604,
            "max": 44604
          },
          "revokeRoles(address,uint256)": {
            "calls": 64,
            "min": 24043,
            "mean": 27111,
            "median": 24589,
            "max": 31254
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 477,
            "mean": 23640,
            "median": 22348,
            "max": 53912
          },
          "rolesOf(address)": {
            "calls": 2262,
            "min": 2704,
            "mean": 2705,
            "median": 2704,
            "max": 2711
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28233,
            "mean": 28385,
            "median": 28461,
            "max": 28468
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 28500,
            "mean": 37477,
            "median": 37346,
            "max": 46200
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23884,
            "mean": 24993,
            "median": 23889,
            "max": 28543
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23387,
            "mean": 34285,
            "median": 23387,
            "max": 45530
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25724,
            "mean": 46276,
            "median": 47846,
            "max": 48218
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23615,
            "mean": 44553,
            "median": 45785,
            "max": 46121
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25721,
            "mean": 46336,
            "median": 46091,
            "max": 48215
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 409434,
          "size": 1605
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 87013,
          "size": 188
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 431375,
          "size": 1781
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 21302,
            "mean": 21302,
            "median": 21302,
            "max": 21302
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 21262,
            "mean": 21262,
            "median": 21262,
            "max": 21262
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65556,
            "mean": 65556,
            "median": 65556,
            "max": 65556
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45535,
            "mean": 45535,
            "median": 45535,
            "max": 45535
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69591,
            "mean": 69591,
            "median": 69591,
            "max": 69591
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65869,
            "mean": 65869,
            "median": 65869,
            "max": 65869
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66501,
            "mean": 66501,
            "median": 66501,
            "max": 66501
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 45573,
            "mean": 45573,
            "median": 45573,
            "max": 45573
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 51232,
            "mean": 51232,
            "median": 51232,
            "max": 51232
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 912777,
          "size": 4010
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 705,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 258,
            "min": 26701,
            "mean": 28140,
            "median": 28149,
            "max": 28909
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 258,
            "min": 33542,
            "mean": 39565,
            "median": 39659,
            "max": 40428
          },
          "owner()": {
            "calls": 1241,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43515,
            "mean": 43526,
            "median": 43527,
            "max": 43527
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91351,
            "mean": 111116,
            "median": 111275,
            "max": 111275
          },
          "setMaxTimedRole(uint256)": {
            "calls": 11,
            "min": 26790,
            "mean": 31485,
            "median": 26826,
            "max": 43926
          },
          "setOwner(address)": {
            "calls": 43,
            "min": 26684,
            "mean": 27888,
            "median": 26696,
            "max": 43796
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 725,
            "min": 24474,
            "mean": 50033,
            "median": 51668,
            "max": 51764
          },
          "timedRoleActive(address,uint256)": {
            "calls": 800,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 267863,
          "size": 1043
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22354,
            "mean": 22354,
            "median": 22354,
            "max": 22354
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 1,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22287,
            "mean": 22287,
            "median": 22287,
            "max": 22287
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2677,
            "mean": 9683,
            "median": 5331,
            "max": 32072
          },
          "value()": {
            "calls": 1,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 349849,
          "size": 1216
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1673,
            "min": 412,
            "mean": 1333,
            "median": 412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 259875,
          "size": 800
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 412,
            "mean": 2404,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 561556,
          "size": 2196
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 2830,
            "min": 412,
            "mean": 1497,
            "median": 2412,
            "max": 2412
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24196,
            "mean": 62608,
            "median": 66485,
            "max": 114307
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 261425,
          "size": 807
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1033,
            "min": 412,
            "mean": 2402,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 351363,
          "size": 1223
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1686,
            "min": 412,
            "mean": 1326,
            "median": 412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 260093,
          "size": 801
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1028,
            "min": 412,
            "mean": 2404,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 216374,
          "size": 599
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 513,
            "mean": 513,
            "median": 513,
            "max": 513
          },
          "balanceOf(address)": {
            "calls": 515,
            "min": 374,
            "mean": 2370,
            "median": 2374,
            "max": 2374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 242667,
          "size": 1008
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24267,
            "mean": 74013,
            "median": 36267,
            "max": 117891
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 451,
            "mean": 451,
            "median": 451,
            "max": 451
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 104740,
          "size": 274
        },
        "functions": {
          "fallback()": {
            "calls": 6306,
            "min": 2738,
            "mean": 15340,
            "median": 10028,
            "max": 246978
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1035691,
          "size": 4639
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "cancel(bytes32)": {
            "calls": 16,
            "min": 25444,
            "mean": 25644,
            "median": 25444,
            "max": 26250
          },
          "execute(bytes32,bytes)": {
            "calls": 279,
            "min": 28325,
            "mean": 42877,
            "median": 44721,
            "max": 95352
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2533,
            "mean": 2533,
            "median": 2533,
            "max": 2533
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 22969,
            "mean": 306691,
            "median": 377313,
            "max": 377313
          },
          "minDelay()": {
            "calls": 235,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "operationState(bytes32)": {
            "calls": 954,
            "min": 2488,
            "mean": 2493,
            "median": 2493,
            "max": 2499
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 26482,
            "mean": 54502,
            "median": 55310,
            "max": 57762
          },
          "readyTimestamp(bytes32)": {
            "calls": 719,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23992,
            "mean": 33634,
            "median": 24004,
            "max": 75955
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 536852,
          "size": 2268
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "decimals()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "deposit()": {
            "calls": 547,
            "min": 27560,
            "mean": 65318,
            "median": 67360,
            "max": 67360
          },
          "name()": {
            "calls": 1,
            "min": 375,
            "mean": 375,
            "median": 375,
            "max": 375
          },
          "receive()": {
            "calls": 295,
            "min": 27379,
            "mean": 63412,
            "median": 67179,
            "max": 67179
          },
          "symbol()": {
            "calls": 1,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "withdraw(uint256)": {
            "calls": 279,
            "min": 27909,
            "mean": 39680,
            "median": 40233,
            "max": 40353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 647085,
          "size": 2782
        },
        "functions": {
          "adminOf(address)": {
            "calls": 491,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24169,
            "mean": 26375,
            "median": 26375,
            "max": 28581
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22271,
            "mean": 57285,
            "median": 22295,
            "max": 126103
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105514,
            "mean": 158945,
            "median": 159362,
            "max": 159422
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23567,
            "mean": 147408,
            "median": 159621,
            "max": 159783
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24209,
            "mean": 27911,
            "median": 24221,
            "max": 33459
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35404,
            "mean": 51093,
            "median": 51093,
            "max": 66783
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 232860,
          "size": 862
        },
        "functions": {
          "implementation()": {
            "calls": 5018,
            "min": 76,
            "mean": 2246,
            "median": 2258,
            "max": 2258
          },
          "owner()": {
            "calls": 562,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "renounceOwnership()": {
            "calls": 58,
            "min": 23058,
            "mean": 23303,
            "median": 23332,
            "max": 23332
          },
          "transferOwnership(address)": {
            "calls": 216,
            "min": 23563,
            "mean": 26847,
            "median": 28222,
            "max": 28222
          },
          "upgradeTo(address)": {
            "calls": 110,
            "min": 23640,
            "mean": 26024,
            "median": 23747,
            "max": 32500
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3157168,
          "size": 15699
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 22789,
            "mean": 83426,
            "median": 45220,
            "max": 226125
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21808,
            "mean": 22810,
            "median": 21820,
            "max": 26189
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 9235,
            "mean": 9381,
            "median": 9282,
            "max": 9725
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2759285,
          "size": 13712
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 88850,
            "mean": 38939845,
            "median": 907664,
            "max": 96809776
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 5733066,
          "size": 28561
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 408,
            "mean": 408,
            "median": 408,
            "max": 408
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 412,
            "mean": 412,
            "median": 412,
            "max": 412
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 388,
            "mean": 388,
            "median": 388,
            "max": 388
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1094,
            "mean": 1094,
            "median": 1094,
            "max": 1094
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1024,
            "mean": 1024,
            "median": 1024,
            "max": 1024
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 331,
            "mean": 331,
            "median": 331,
            "max": 331
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 387,
            "mean": 387,
            "median": 387,
            "max": 387
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 699,
            "mean": 699,
            "median": 699,
            "max": 699
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 677,
            "mean": 677,
            "median": 677,
            "max": 677
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 342320,
          "size": 1238
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 117,
            "min": 67256,
            "mean": 67481,
            "median": 67616,
            "max": 67628
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 159186,
          "size": 520
        },
        "functions": {
          "generate(bytes)": {
            "calls": 144,
            "min": 0,
            "mean": 2981,
            "median": 1310,
            "max": 73943
          },
          "next(uint256)": {
            "calls": 263,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 4013856,
          "size": 19977
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1350,
            "mean": 1350,
            "median": 1350,
            "max": 1350
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 331,
            "mean": 331,
            "median": 331,
            "max": 331
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 4816149,
          "size": 23983
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 32,
            "min": 748,
            "mean": 812,
            "median": 817,
            "max": 841
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 36,
            "min": 582072,
            "mean": 665664,
            "median": 582836,
            "max": 2928984
          },
          "recover(bytes32,bytes)": {
            "calls": 173,
            "min": 22532,
            "mean": 27152,
            "median": 26745,
            "max": 30287
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 39,
            "min": 3603,
            "mean": 24953,
            "median": 26203,
            "max": 26203
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 289,
            "min": 25884,
            "mean": 26165,
            "median": 26268,
            "max": 26360
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 160,
            "min": 607679,
            "mean": 729714,
            "median": 608686,
            "max": 4699032
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 37,
            "min": 607334,
            "mean": 778012,
            "median": 608208,
            "max": 4728805
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 289,
            "min": 607108,
            "mean": 704156,
            "median": 608190,
            "max": 4818484
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 173,
            "min": 22875,
            "mean": 30122,
            "median": 30305,
            "max": 30305
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 39,
            "min": 3592,
            "mean": 24944,
            "median": 26192,
            "max": 26192
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 289,
            "min": 25970,
            "mean": 26241,
            "median": 26354,
            "max": 26366
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 160,
            "min": 611222,
            "mean": 685459,
            "median": 612291,
            "max": 3824784
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 37,
            "min": 607157,
            "mean": 818554,
            "median": 608186,
            "max": 4229362
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 289,
            "min": 607274,
            "mean": 714511,
            "median": 608304,
            "max": 4320318
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 659162,
          "size": 2838
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2415,
            "mean": 6025,
            "median": 6917,
            "max": 9176
          },
          "batchData()": {
            "calls": 520,
            "min": 2539,
            "mean": 226824,
            "median": 2584,
            "max": 8514095
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "batchIds()": {
            "calls": 520,
            "min": 2437,
            "mean": 6051,
            "median": 6944,
            "max": 9205
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "from()": {
            "calls": 512,
            "min": 2296,
            "mean": 2296,
            "median": 2296,
            "max": 2296
          },
          "id()": {
            "calls": 512,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "mintData()": {
            "calls": 512,
            "min": 2561,
            "mean": 341439,
            "median": 2616,
            "max": 8898999
          },
          "operator()": {
            "calls": 512,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2076555,
          "size": 9409
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61192,
            "mean": 61325,
            "median": 61420,
            "max": 61434
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 57736,
            "mean": 57869,
            "median": 57964,
            "max": 57978
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 49281,
            "mean": 51506,
            "median": 49281,
            "max": 120481
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 60173,
            "mean": 60306,
            "median": 60401,
            "max": 60408
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 48747,
            "mean": 62070,
            "median": 57674,
            "max": 74539
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 266305,
          "size": 1033
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 33,
            "min": 50752,
            "mean": 50982,
            "median": 50968,
            "max": 51328
          },
          "mint(address,uint256)": {
            "calls": 37,
            "min": 61071,
            "mean": 71582,
            "median": 61551,
            "max": 95811
          },
          "sum()": {
            "calls": 1,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 33616,
            "mean": 33616,
            "median": 33616,
            "max": 33616
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 36758,
            "mean": 36758,
            "median": 36758,
            "max": 36758
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 5770523,
          "size": 28748
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24681,
            "mean": 51409,
            "median": 49919,
            "max": 74111
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 342738,
          "size": 1370
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 178,
            "mean": 1147,
            "median": 178,
            "max": 3087
          },
          "data()": {
            "calls": 257,
            "min": 2516,
            "mean": 3181,
            "median": 2516,
            "max": 11246
          },
          "datahash()": {
            "calls": 648,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25096,
            "mean": 34699,
            "median": 25096,
            "max": 133812
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 9618330,
          "size": 47955
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22142,
            "mean": 22486,
            "median": 22414,
            "max": 23048
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22193,
            "mean": 22489,
            "median": 22422,
            "max": 23008
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 331078,
          "size": 1316
        },
        "functions": {
          "datahash()": {
            "calls": 371,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 293529,
          "size": 1143
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2493,
            "mean": 4048,
            "median": 2493,
            "max": 11223
          },
          "from()": {
            "calls": 1024,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "id()": {
            "calls": 1024,
            "min": 2270,
            "mean": 2270,
            "median": 2270,
            "max": 2270
          },
          "operator()": {
            "calls": 1024,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1574277,
          "size": 7070
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 363,
            "mean": 363,
            "median": 363,
            "max": 363
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61846,
            "mean": 63460,
            "median": 61858,
            "max": 113158
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 56898,
            "mean": 57557,
            "median": 57114,
            "max": 74226
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 64790,
            "mean": 69335,
            "median": 69476,
            "max": 69590
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2608302,
          "size": 12958
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 439,
            "min": 558,
            "mean": 578,
            "median": 570,
            "max": 753
          },
          "returnsHash(bytes)": {
            "calls": 462,
            "min": 533,
            "mean": 552,
            "median": 545,
            "max": 725
          },
          "revertsWithCustomError()": {
            "calls": 6,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1370512,
          "size": 6776
        },
        "functions": {
          "get(address)": {
            "calls": 506,
            "min": 2499,
            "mean": 5748,
            "median": 5748,
            "max": 8998
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26532,
            "mean": 48757,
            "median": 37130,
            "max": 165067
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 4942920,
          "size": 24616
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 198,
            "min": 21748,
            "mean": 44597,
            "median": 44134,
            "max": 142296
          },
          "addToBytes32Set(bytes32)": {
            "calls": 201,
            "min": 21726,
            "mean": 47692,
            "median": 46351,
            "max": 161553
          },
          "addressSetAt(uint256)": {
            "calls": 27,
            "min": 4761,
            "mean": 6170,
            "median": 4761,
            "max": 8993
          },
          "addressSetContains(address)": {
            "calls": 160,
            "min": 430,
            "mean": 6713,
            "median": 6916,
            "max": 6916
          },
          "bytes32SetAt(uint256)": {
            "calls": 17,
            "min": 4734,
            "mean": 5728,
            "median": 4734,
            "max": 11088
          },
          "bytes32SetContains(bytes32)": {
            "calls": 194,
            "min": 412,
            "mean": 8861,
            "median": 8972,
            "max": 8972
          },
          "removeFromAddressSet(address)": {
            "calls": 163,
            "min": 21725,
            "mean": 27938,
            "median": 28384,
            "max": 28384
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 167,
            "min": 21689,
            "mean": 30442,
            "median": 30584,
            "max": 30584
          },
          "uint8SetAt(uint256)": {
            "calls": 21,
            "min": 321,
            "mean": 747,
            "median": 321,
            "max": 9286
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26584,
            "mean": 49849,
            "median": 46614,
            "max": 142662
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28616,
            "mean": 53831,
            "median": 48795,
            "max": 161724
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24067,
            "mean": 27950,
            "median": 27033,
            "max": 44063
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 10710602,
          "size": 53406
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 380,
            "mean": 381,
            "median": 380,
            "max": 416
          },
          "divWad(uint256,uint256)": {
            "calls": 97,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 399,
            "mean": 429,
            "median": 445,
            "max": 445
          },
          "divWadUp(uint256,uint256)": {
            "calls": 87,
            "min": 426,
            "mean": 426,
            "median": 426,
            "max": 426
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 379,
            "mean": 379,
            "median": 379,
            "max": 379
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 317,
            "min": 568,
            "mean": 597,
            "median": 581,
            "max": 926
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 523,
            "mean": 555,
            "median": 554,
            "max": 636
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 555,
            "mean": 570,
            "median": 568,
            "max": 917
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 427,
            "mean": 427,
            "median": 427,
            "max": 427
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 375,
            "mean": 375,
            "median": 375,
            "max": 375
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 377,
            "mean": 423,
            "median": 413,
            "max": 449
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 450,
            "mean": 487,
            "median": 504,
            "max": 517
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 421,
            "mean": 444,
            "median": 433,
            "max": 458
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 484,
            "mean": 541,
            "median": 575,
            "max": 588
          },
          "mulWad(uint256,uint256)": {
            "calls": 113,
            "min": 395,
            "mean": 395,
            "median": 395,
            "max": 395
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 386,
            "mean": 420,
            "median": 422,
            "max": 423
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 113,
            "min": 437,
            "mean": 437,
            "median": 437,
            "max": 437
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 967,
            "mean": 967,
            "median": 967,
            "max": 967
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 720,
            "mean": 1595,
            "median": 1595,
            "max": 2470
          },
          "sDivWad(int256,int256)": {
            "calls": 71,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 412,
            "mean": 470,
            "median": 491,
            "max": 491
          },
          "sMulWad(int256,int256)": {
            "calls": 91,
            "min": 520,
            "mean": 520,
            "median": 520,
            "max": 520
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 422,
            "mean": 546,
            "median": 553,
            "max": 554
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 12330293,
          "size": 61488
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 19419,
            "mean": 22122,
            "median": 21847,
            "max": 30574
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 19653,
            "mean": 32973,
            "median": 36923,
            "max": 37151
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 19632,
            "mean": 25649,
            "median": 22384,
            "max": 36971
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 713,
            "mean": 3384,
            "median": 1116,
            "max": 11368
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 19460,
            "mean": 23152,
            "median": 22373,
            "max": 37830
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2301343,
          "size": 11425
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 308,
            "mean": 308,
            "median": 308,
            "max": 308
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 3611340,
          "size": 17967
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23728,
            "mean": 33826,
            "median": 33826,
            "max": 43924
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26665,
            "mean": 35201,
            "median": 35201,
            "max": 43738
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 3449129,
          "size": 17157
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 530,
            "min": 23057,
            "mean": 23978,
            "median": 23633,
            "max": 26765
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 24690,
            "mean": 27508,
            "median": 26158,
            "max": 659174
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 27867,
            "mean": 28450,
            "median": 28342,
            "max": 29684
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24337,
            "mean": 25748,
            "median": 25973,
            "max": 26709
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 279,
            "min": 2820,
            "mean": 792531,
            "median": 631842,
            "max": 4747725
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2326973,
          "size": 11553
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 117867,
            "mean": 1338420,
            "median": 965670,
            "max": 83526327
          },
          "getArgAddress(uint256)": {
            "calls": 6,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 487,
            "mean": 501,
            "median": 505,
            "max": 511
          },
          "getArgUint256(uint256)": {
            "calls": 18,
            "min": 1617,
            "mean": 1617,
            "median": 1617,
            "max": 1617
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 6,
            "min": 31357,
            "mean": 50889,
            "median": 53923,
            "max": 61668
          },
          "getArgUint64(uint256)": {
            "calls": 6,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "getArgUint8(uint256)": {
            "calls": 6,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 1700,
            "mean": 2495,
            "median": 2625,
            "max": 2951
          },
          "revertWithError()": {
            "calls": 6,
            "min": 2359,
            "mean": 2359,
            "median": 2359,
            "max": 2359
          },
          "setValue(uint256)": {
            "calls": 6,
            "min": 22343,
            "mean": 22343,
            "median": 22343,
            "max": 22343
          },
          "value()": {
            "calls": 1036,
            "min": 2303,
            "mean": 2303,
            "median": 2303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 148939,
          "size": 472
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44376,
            "mean": 45077,
            "median": 44843,
            "max": 46397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 882805,
          "size": 4340
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 377,
            "min": 476,
            "mean": 582,
            "median": 629,
            "max": 653
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 12504659,
          "size": 62358
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 15,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnClone(address,uint256)": {
            "calls": 10,
            "min": 3078,
            "mean": 3079,
            "median": 3078,
            "max": 3095
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 8,
            "min": 3267,
            "mean": 3267,
            "median": 3267,
            "max": 3267
          },
          "argsOnERC1967(address)": {
            "calls": 18,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 5,
            "min": 3079,
            "mean": 3079,
            "median": 3079,
            "max": 3079
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 9,
            "min": 3286,
            "mean": 3286,
            "median": 3286,
            "max": 3286
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 9,
            "min": 3021,
            "mean": 3021,
            "median": 3021,
            "max": 3021
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 7,
            "min": 3048,
            "mean": 3048,
            "median": 3048,
            "max": 3048
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 6,
            "min": 3274,
            "mean": 3274,
            "median": 3274,
            "max": 3274
          },
          "argsOnERC1967I(address)": {
            "calls": 11,
            "min": 3026,
            "mean": 3026,
            "median": 3026,
            "max": 3026
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 5,
            "min": 3079,
            "mean": 3079,
            "median": 3079,
            "max": 3079
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 7,
            "min": 3253,
            "mean": 3257,
            "median": 3258,
            "max": 3258
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 5,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 1,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 1,
            "min": 3260,
            "mean": 3260,
            "median": 3260,
            "max": 3260
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 68,
            "min": 35842,
            "mean": 45154,
            "median": 35874,
            "max": 56339
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 697,
            "mean": 702,
            "median": 697,
            "max": 718
          },
          "clone(address)": {
            "calls": 257,
            "min": 85461,
            "mean": 85461,
            "median": 85461,
            "max": 85461
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69318,
            "mean": 1957700,
            "median": 72661,
            "max": 96822068
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 267,
            "min": 69851,
            "mean": 9514354,
            "median": 73066,
            "max": 96829963
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 85914,
            "mean": 150858,
            "median": 86274,
            "max": 4726718
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 268,
            "min": 0,
            "mean": 445671,
            "median": 76678,
            "max": 14448742
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 263,
            "min": 0,
            "mean": 205485,
            "median": 101083,
            "max": 8110006
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 114426,
            "mean": 134788,
            "median": 114798,
            "max": 685050
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 361,
            "min": 0,
            "mean": 328561,
            "median": 104394,
            "max": 13349161
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 101577,
            "mean": 121962,
            "median": 101949,
            "max": 682939
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 262,
            "min": 0,
            "mean": 293046,
            "median": 104874,
            "max": 13595390
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 118697,
            "mean": 164673,
            "median": 119062,
            "max": 2926124
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 366,
            "min": 0,
            "mean": 367285,
            "median": 105324,
            "max": 13323361
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102566,
            "mean": 141647,
            "median": 102938,
            "max": 1478509
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 269,
            "min": 95139,
            "mean": 8554560,
            "median": 98211,
            "max": 96828390
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 401,
            "min": 94429,
            "mean": 166541,
            "median": 111672,
            "max": 3976742
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 466,
            "min": 99164,
            "mean": 17464502,
            "median": 105188,
            "max": 96836592
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 98646,
            "mean": 162333,
            "median": 99018,
            "max": 2523679
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 263,
            "min": 99458,
            "mean": 7762295,
            "median": 102561,
            "max": 96827922
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 626,
            "min": 98637,
            "mean": 149223,
            "median": 99136,
            "max": 3414396
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 451,
            "min": 86370,
            "mean": 17119814,
            "median": 106277,
            "max": 96834107
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99612,
            "mean": 132961,
            "median": 99984,
            "max": 1153176
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 94605,
            "mean": 3670792,
            "median": 96901,
            "max": 96825569
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98140,
            "mean": 142518,
            "median": 98267,
            "max": 3129943
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 131,
            "min": 98643,
            "mean": 1784225,
            "median": 102102,
            "max": 96784276
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115226,
            "mean": 115226,
            "median": 115226,
            "max": 115226
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 98880,
            "mean": 2456783,
            "median": 100864,
            "max": 96828206
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99137,
            "mean": 167870,
            "median": 99264,
            "max": 3649344
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 122,
            "min": 85742,
            "mean": 4353409,
            "median": 102776,
            "max": 96834346
          },
          "revertWithError()": {
            "calls": 7138,
            "min": 45,
            "mean": 2399,
            "median": 2414,
            "max": 2414
          },
          "setValue(uint256)": {
            "calls": 7480,
            "min": 2531,
            "mean": 22271,
            "median": 22431,
            "max": 22431
          },
          "value()": {
            "calls": 21006,
            "min": 45,
            "mean": 2409,
            "median": 2418,
            "max": 2418
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 4407186,
          "size": 21941
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 515,
            "mean": 515,
            "median": 515,
            "max": 515
          },
          "decodeBatch(bytes)": {
            "calls": 62,
            "min": 814,
            "mean": 2455,
            "median": 1895,
            "max": 4323
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 20,
            "min": 1022,
            "mean": 1222,
            "median": 1200,
            "max": 1390
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 679,
            "min": 521,
            "mean": 1512,
            "median": 866,
            "max": 4711
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 602,
            "mean": 609,
            "median": 602,
            "max": 638
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 656,
            "mean": 663,
            "median": 656,
            "max": 692
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23310,
            "mean": 23310,
            "median": 23310,
            "max": 23310
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 137,
            "min": 29378,
            "mean": 37661,
            "median": 36833,
            "max": 50870
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 614346,
            "mean": 781016,
            "median": 619711,
            "max": 4639011
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 3999439,
          "size": 19905
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 43917,
            "mean": 43917,
            "median": 43917,
            "max": 43917
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 43899,
            "mean": 43899,
            "median": 43899,
            "max": 43899
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 4303848,
          "size": 21425
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2427,
            "mean": 3570,
            "median": 2427,
            "max": 4813
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23770,
            "mean": 23794,
            "median": 23806,
            "max": 23806
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21527,
            "mean": 43312,
            "median": 43751,
            "max": 43751
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23675,
            "mean": 23962,
            "median": 24047,
            "max": 24047
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 7059912,
          "size": 35185
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24541,
            "mean": 42158,
            "median": 28645,
            "max": 112255
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24681,
            "mean": 48008,
            "median": 30051,
            "max": 142484
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 13397988,
          "size": 66815
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 597,
            "mean": 606,
            "median": 603,
            "max": 615
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 579,
            "mean": 579,
            "median": 579,
            "max": 579
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 645,
            "mean": 645,
            "median": 645,
            "max": 645
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 228932,
          "size": 842
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27299,
            "mean": 51627,
            "median": 50780,
            "max": 82453
          },
          "x()": {
            "calls": 6,
            "min": 2514,
            "mean": 10117,
            "median": 5759,
            "max": 37314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166651,
          "size": 554
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27194,
            "mean": 41867,
            "median": 32603,
            "max": 82196
          },
          "x()": {
            "calls": 6,
            "min": 2439,
            "mean": 9347,
            "median": 4625,
            "max": 37326
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2336787,
          "size": 11602
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22276,
            "mean": 26508,
            "median": 27756,
            "max": 29358
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 24279,
            "mean": 32142,
            "median": 32762,
            "max": 59944
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 2324573,
          "size": 11541
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 255,
            "min": 853,
            "mean": 38812,
            "median": 38131,
            "max": 81014
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 254,
            "min": 910,
            "mean": 49890,
            "median": 42471,
            "max": 83883
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 254,
            "min": 848,
            "mean": 43457,
            "median": 44153,
            "max": 81517
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 4,
            "min": 524,
            "mean": 524,
            "median": 524,
            "max": 524
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 298,
            "mean": 298,
            "median": 298,
            "max": 298
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2246684,
          "size": 11152
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "name()": {
            "calls": 256,
            "min": 4732,
            "mean": 6431,
            "median": 4808,
            "max": 13501
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 292
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 4688,
            "mean": 6401,
            "median": 4750,
            "max": 13531
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "returnsString()": {
            "calls": 512,
            "min": 4754,
            "mean": 6495,
            "median": 4830,
            "max": 13523
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "reverts()": {
            "calls": 258,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "symbol()": {
            "calls": 256,
            "min": 4747,
            "mean": 6446,
            "median": 4823,
            "max": 13516
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 15004664,
          "size": 74830
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 110,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "enqueue(uint256,uint256)": {
            "calls": 370,
            "min": 21687,
            "mean": 52671,
            "median": 66319,
            "max": 66415
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 113,
            "min": 744,
            "mean": 744,
            "median": 744,
            "max": 744
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 139,
            "min": 777,
            "mean": 779,
            "median": 781,
            "max": 781
          },
          "pop()": {
            "calls": 66,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "replace(uint256)": {
            "calls": 67,
            "min": 23664,
            "mean": 23962,
            "median": 24036,
            "max": 24036
          },
          "root()": {
            "calls": 122,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2655563,
          "size": 13194
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22474,
            "mean": 23460,
            "median": 23938,
            "max": 23962
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 3893892,
          "size": 2088
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 5085,
            "mean": 5085,
            "median": 5085,
            "max": 5085
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44176,
            "mean": 44176,
            "median": 44176,
            "max": 44176
          },
          "value()": {
            "calls": 1,
            "min": 5084,
            "mean": 5084,
            "median": 5084,
            "max": 5084
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 7219571,
          "size": 35982
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21489,
            "mean": 23919,
            "median": 23919,
            "max": 26350
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 23894,
            "mean": 24222,
            "median": 24225,
            "max": 24225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1892278,
          "size": 9382
        },
        "functions": {
          "read(address)": {
            "calls": 162,
            "min": 438,
            "mean": 2976,
            "median": 2938,
            "max": 3209
          },
          "read(address,uint256)": {
            "calls": 94,
            "min": 2976,
            "mean": 3085,
            "median": 2976,
            "max": 3295
          },
          "read(address,uint256,uint256)": {
            "calls": 64,
            "min": 3194,
            "mean": 3972,
            "median": 3470,
            "max": 23656
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468257,
            "mean": 48556941,
            "median": 48556941,
            "max": 83645625
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 11289344,
          "size": 56294
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 24,
            "min": 349,
            "mean": 368,
            "median": 380,
            "max": 380
          },
          "toInt104(uint256)": {
            "calls": 13,
            "min": 360,
            "mean": 364,
            "median": 360,
            "max": 380
          },
          "toInt112(int256)": {
            "calls": 42,
            "min": 344,
            "mean": 359,
            "median": 364,
            "max": 364
          },
          "toInt112(uint256)": {
            "calls": 14,
            "min": 352,
            "mean": 363,
            "median": 352,
            "max": 383
          },
          "toInt120(int256)": {
            "calls": 30,
            "min": 371,
            "mean": 388,
            "median": 391,
            "max": 391
          },
          "toInt120(uint256)": {
            "calls": 11,
            "min": 353,
            "mean": 361,
            "median": 353,
            "max": 384
          },
          "toInt128(int256)": {
            "calls": 40,
            "min": 358,
            "mean": 378,
            "median": 389,
            "max": 389
          },
          "toInt128(uint256)": {
            "calls": 11,
            "min": 339,
            "mean": 342,
            "median": 339,
            "max": 359
          },
          "toInt136(int256)": {
            "calls": 34,
            "min": 349,
            "mean": 370,
            "median": 380,
            "max": 380
          },
          "toInt136(uint256)": {
            "calls": 16,
            "min": 366,
            "mean": 376,
            "median": 376,
            "max": 386
          },
          "toInt144(int256)": {
            "calls": 38,
            "min": 357,
            "mean": 379,
            "median": 388,
            "max": 388
          },
          "toInt144(uint256)": {
            "calls": 9,
            "min": 376,
            "mean": 380,
            "median": 376,
            "max": 396
          },
          "toInt152(int256)": {
            "calls": 32,
            "min": 374,
            "mean": 393,
            "median": 405,
            "max": 405
          },
          "toInt152(uint256)": {
            "calls": 10,
            "min": 375,
            "mean": 385,
            "median": 385,
            "max": 395
          },
          "toInt16(int256)": {
            "calls": 46,
            "min": 346,
            "mean": 365,
            "median": 377,
            "max": 377
          },
          "toInt16(uint256)": {
            "calls": 12,
            "min": 338,
            "mean": 344,
            "median": 338,
            "max": 358
          },
          "toInt160(int256)": {
            "calls": 26,
            "min": 357,
            "mean": 377,
            "median": 388,
            "max": 388
          },
          "toInt160(uint256)": {
            "calls": 18,
            "min": 360,
            "mean": 366,
            "median": 360,
            "max": 380
          },
          "toInt168(int256)": {
            "calls": 28,
            "min": 362,
            "mean": 368,
            "median": 371,
            "max": 371
          },
          "toInt168(uint256)": {
            "calls": 14,
            "min": 351,
            "mean": 365,
            "median": 371,
            "max": 371
          },
          "toInt176(int256)": {
            "calls": 16,
            "min": 341,
            "mean": 356,
            "median": 361,
            "max": 361
          },
          "toInt176(uint256)": {
            "calls": 16,
            "min": 362,
            "mean": 373,
            "median": 362,
            "max": 393
          },
          "toInt184(int256)": {
            "calls": 28,
            "min": 373,
            "mean": 391,
            "median": 404,
            "max": 404
          },
          "toInt184(uint256)": {
            "calls": 13,
            "min": 367,
            "mean": 376,
            "median": 367,
            "max": 387
          },
          "toInt192(int256)": {
            "calls": 26,
            "min": 327,
            "mean": 349,
            "median": 358,
            "max": 358
          },
          "toInt192(uint256)": {
            "calls": 14,
            "min": 361,
            "mean": 371,
            "median": 371,
            "max": 381
          },
          "toInt200(int256)": {
            "calls": 24,
            "min": 358,
            "mean": 383,
            "median": 389,
            "max": 389
          },
          "toInt200(uint256)": {
            "calls": 15,
            "min": 377,
            "mean": 385,
            "median": 377,
            "max": 397
          },
          "toInt208(int256)": {
            "calls": 34,
            "min": 348,
            "mean": 374,
            "median": 379,
            "max": 379
          },
          "toInt208(uint256)": {
            "calls": 19,
            "min": 358,
            "mean": 366,
            "median": 358,
            "max": 378
          },
          "toInt216(int256)": {
            "calls": 24,
            "min": 367,
            "mean": 382,
            "median": 387,
            "max": 387
          },
          "toInt216(uint256)": {
            "calls": 15,
            "min": 352,
            "mean": 368,
            "median": 383,
            "max": 383
          },
          "toInt224(int256)": {
            "calls": 24,
            "min": 378,
            "mean": 403,
            "median": 409,
            "max": 409
          },
          "toInt224(uint256)": {
            "calls": 12,
            "min": 376,
            "mean": 384,
            "median": 376,
            "max": 396
          },
          "toInt232(int256)": {
            "calls": 30,
            "min": 368,
            "mean": 383,
            "median": 388,
            "max": 388
          },
          "toInt232(uint256)": {
            "calls": 22,
            "min": 361,
            "mean": 382,
            "median": 392,
            "max": 392
          },
          "toInt24(int256)": {
            "calls": 28,
            "min": 323,
            "mean": 344,
            "median": 354,
            "max": 354
          },
          "toInt24(uint256)": {
            "calls": 28,
            "min": 375,
            "mean": 379,
            "median": 375,
            "max": 395
          },
          "toInt240(int256)": {
            "calls": 40,
            "min": 363,
            "mean": 384,
            "median": 394,
            "max": 394
          },
          "toInt240(uint256)": {
            "calls": 19,
            "min": 360,
            "mean": 372,
            "median": 380,
            "max": 380
          },
          "toInt248(int256)": {
            "calls": 42,
            "min": 329,
            "mean": 354,
            "median": 360,
            "max": 360
          },
          "toInt248(uint256)": {
            "calls": 13,
            "min": 350,
            "mean": 368,
            "median": 370,
            "max": 370
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 349,
            "mean": 359,
            "median": 360,
            "max": 360
          },
          "toInt32(int256)": {
            "calls": 44,
            "min": 346,
            "mean": 364,
            "median": 377,
            "max": 377
          },
          "toInt32(uint256)": {
            "calls": 16,
            "min": 350,
            "mean": 353,
            "median": 350,
            "max": 370
          },
          "toInt40(int256)": {
            "calls": 44,
            "min": 324,
            "mean": 344,
            "median": 355,
            "max": 355
          },
          "toInt40(uint256)": {
            "calls": 24,
            "min": 350,
            "mean": 355,
            "median": 350,
            "max": 370
          },
          "toInt48(int256)": {
            "calls": 34,
            "min": 331,
            "mean": 349,
            "median": 362,
            "max": 362
          },
          "toInt48(uint256)": {
            "calls": 19,
            "min": 360,
            "mean": 365,
            "median": 360,
            "max": 380
          },
          "toInt56(int256)": {
            "calls": 32,
            "min": 333,
            "mean": 352,
            "median": 364,
            "max": 364
          },
          "toInt56(uint256)": {
            "calls": 19,
            "min": 366,
            "mean": 370,
            "median": 366,
            "max": 386
          },
          "toInt64(int256)": {
            "calls": 48,
            "min": 323,
            "mean": 341,
            "median": 354,
            "max": 354
          },
          "toInt64(uint256)": {
            "calls": 19,
            "min": 376,
            "mean": 381,
            "median": 376,
            "max": 396
          },
          "toInt72(int256)": {
            "calls": 38,
            "min": 361,
            "mean": 382,
            "median": 392,
            "max": 392
          },
          "toInt72(uint256)": {
            "calls": 15,
            "min": 367,
            "mean": 376,
            "median": 367,
            "max": 387
          },
          "toInt8(int256)": {
            "calls": 23,
            "min": 344,
            "mean": 345,
            "median": 344,
            "max": 374
          },
          "toInt8(uint256)": {
            "calls": 21,
            "min": 363,
            "mean": 365,
            "median": 363,
            "max": 393
          },
          "toInt80(int256)": {
            "calls": 30,
            "min": 384,
            "mean": 396,
            "median": 404,
            "max": 404
          },
          "toInt80(uint256)": {
            "calls": 13,
            "min": 322,
            "mean": 329,
            "median": 322,
            "max": 353
          },
          "toInt88(int256)": {
            "calls": 40,
            "min": 324,
            "mean": 346,
            "median": 355,
            "max": 355
          },
          "toInt88(uint256)": {
            "calls": 16,
            "min": 350,
            "mean": 358,
            "median": 350,
            "max": 370
          },
          "toInt96(int256)": {
            "calls": 30,
            "min": 380,
            "mean": 394,
            "median": 400,
            "max": 400
          },
          "toInt96(uint256)": {
            "calls": 13,
            "min": 345,
            "mean": 361,
            "median": 376,
            "max": 376
          },
          "toUint104(uint256)": {
            "calls": 15,
            "min": 349,
            "mean": 357,
            "median": 349,
            "max": 371
          },
          "toUint112(uint256)": {
            "calls": 13,
            "min": 372,
            "mean": 380,
            "median": 372,
            "max": 394
          },
          "toUint120(uint256)": {
            "calls": 15,
            "min": 371,
            "mean": 375,
            "median": 371,
            "max": 393
          },
          "toUint128(uint256)": {
            "calls": 20,
            "min": 342,
            "mean": 354,
            "median": 364,
            "max": 364
          },
          "toUint136(uint256)": {
            "calls": 14,
            "min": 348,
            "mean": 362,
            "median": 370,
            "max": 370
          },
          "toUint144(uint256)": {
            "calls": 13,
            "min": 348,
            "mean": 359,
            "median": 370,
            "max": 370
          },
          "toUint152(uint256)": {
            "calls": 10,
            "min": 348,
            "mean": 363,
            "median": 370,
            "max": 370
          },
          "toUint16(uint256)": {
            "calls": 24,
            "min": 349,
            "mean": 353,
            "median": 349,
            "max": 371
          },
          "toUint160(uint256)": {
            "calls": 15,
            "min": 363,
            "mean": 371,
            "median": 363,
            "max": 385
          },
          "toUint168(uint256)": {
            "calls": 19,
            "min": 373,
            "mean": 383,
            "median": 373,
            "max": 395
          },
          "toUint176(uint256)": {
            "calls": 17,
            "min": 364,
            "mean": 374,
            "median": 364,
            "max": 386
          },
          "toUint184(uint256)": {
            "calls": 11,
            "min": 358,
            "mean": 370,
            "median": 380,
            "max": 380
          },
          "toUint192(uint256)": {
            "calls": 14,
            "min": 341,
            "mean": 352,
            "median": 352,
            "max": 363
          },
          "toUint200(uint256)": {
            "calls": 19,
            "min": 319,
            "mean": 330,
            "median": 341,
            "max": 341
          },
          "toUint208(uint256)": {
            "calls": 18,
            "min": 363,
            "mean": 372,
            "median": 363,
            "max": 385
          },
          "toUint216(uint256)": {
            "calls": 10,
            "min": 365,
            "mean": 378,
            "median": 387,
            "max": 387
          },
          "toUint224(uint256)": {
            "calls": 8,
            "min": 357,
            "mean": 373,
            "median": 379,
            "max": 379
          },
          "toUint232(uint256)": {
            "calls": 17,
            "min": 365,
            "mean": 374,
            "median": 365,
            "max": 387
          },
          "toUint24(uint256)": {
            "calls": 7,
            "min": 365,
            "mean": 368,
            "median": 365,
            "max": 387
          },
          "toUint240(uint256)": {
            "calls": 22,
            "min": 371,
            "mean": 381,
            "median": 371,
            "max": 393
          },
          "toUint248(uint256)": {
            "calls": 22,
            "min": 356,
            "mean": 368,
            "median": 378,
            "max": 378
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 376,
            "mean": 383,
            "median": 387,
            "max": 387
          },
          "toUint32(uint256)": {
            "calls": 15,
            "min": 354,
            "mean": 362,
            "median": 354,
            "max": 376
          },
          "toUint40(uint256)": {
            "calls": 17,
            "min": 347,
            "mean": 353,
            "median": 347,
            "max": 369
          },
          "toUint48(uint256)": {
            "calls": 22,
            "min": 364,
            "mean": 372,
            "median": 364,
            "max": 386
          },
          "toUint56(uint256)": {
            "calls": 15,
            "min": 349,
            "mean": 353,
            "median": 349,
            "max": 371
          },
          "toUint64(uint256)": {
            "calls": 18,
            "min": 357,
            "mean": 361,
            "median": 357,
            "max": 379
          },
          "toUint72(uint256)": {
            "calls": 9,
            "min": 356,
            "mean": 365,
            "median": 356,
            "max": 378
          },
          "toUint8(uint256)": {
            "calls": 26,
            "min": 349,
            "mean": 351,
            "median": 349,
            "max": 371
          },
          "toUint80(uint256)": {
            "calls": 16,
            "min": 364,
            "mean": 369,
            "median": 364,
            "max": 386
          },
          "toUint88(uint256)": {
            "calls": 9,
            "min": 320,
            "mean": 324,
            "median": 320,
            "max": 342
          },
          "toUint96(uint256)": {
            "calls": 11,
            "min": 356,
            "mean": 362,
            "median": 356,
            "max": 378
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 16395424,
          "size": 81767
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 77,
            "min": 170627,
            "mean": 170691,
            "median": 170711,
            "max": 170723
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 700,
            "min": 22122,
            "mean": 151211,
            "median": 170818,
            "max": 296942
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46101,
            "mean": 67455,
            "median": 69386,
            "max": 85156
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29357,
            "mean": 29793,
            "median": 29736,
            "max": 32037
          },
          "safeApprove(address,address,uint256)": {
            "calls": 257,
            "min": 24734,
            "mean": 25235,
            "median": 25262,
            "max": 25550
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 256,
            "min": 25180,
            "mean": 25645,
            "median": 25684,
            "max": 25984
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24814,
            "mean": 25274,
            "median": 25306,
            "max": 25534
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28672,
            "mean": 28672,
            "median": 28672,
            "max": 28672
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22133,
            "mean": 28916,
            "median": 28952,
            "max": 29156
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 255,
            "min": 25870,
            "mean": 26471,
            "median": 26537,
            "max": 26897
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 28316,
            "mean": 49573,
            "median": 68258,
            "max": 69196
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 513,
            "mean": 3745,
            "median": 5362,
            "max": 5362
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2558,
            "min": 25693,
            "mean": 39702,
            "median": 31021,
            "max": 61382
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 583333,
            "mean": 711110,
            "median": 609918,
            "max": 4755010
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 581539,
            "mean": 726663,
            "median": 610279,
            "max": 4717999
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 3069858,
          "size": 15263
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33938,
            "mean": 41383,
            "median": 38688,
            "max": 68075
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 37924,
            "mean": 58039,
            "median": 50831,
            "max": 112748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 4207519,
          "size": 20944
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1372,
            "mean": 8415,
            "median": 9024,
            "max": 15576
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 301,
            "min": 900,
            "mean": 10120,
            "median": 10159,
            "max": 15926
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 155,
            "min": 6459,
            "mean": 6463,
            "median": 6467,
            "max": 6467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 157588,
          "size": 522
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 31,
            "min": 32613,
            "mean": 46722,
            "median": 44913,
            "max": 79113
          },
          "fallbackDeposit(uint256)": {
            "calls": 38,
            "min": 44556,
            "mean": 52656,
            "median": 44556,
            "max": 78756
          },
          "withdraw(uint256)": {
            "calls": 20,
            "min": 45234,
            "mean": 45243,
            "median": 45246,
            "max": 45270
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2347595,
          "size": 11656
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 130,
            "min": 1173,
            "mean": 1187,
            "median": 1186,
            "max": 1204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 323404,
          "size": 1325
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 225,
            "mean": 250,
            "median": 250,
            "max": 275
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 242,
            "mean": 267,
            "median": 267,
            "max": 292
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22345,
            "mean": 22345,
            "median": 22345,
            "max": 22345
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 249,
            "mean": 273,
            "median": 273,
            "max": 298
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22070,
            "mean": 22070,
            "median": 22070,
            "max": 22070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 247736,
          "size": 932
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2261,
            "mean": 2261,
            "median": 2261,
            "max": 2261
          },
          "fallback()": {
            "calls": 520,
            "min": 22924,
            "mean": 62014,
            "median": 76847,
            "max": 172207
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2274,
            "mean": 2274,
            "median": 2274,
            "max": 2274
          },
          "receive()": {
            "calls": 260,
            "min": 80,
            "mean": 20837,
            "median": 21080,
            "max": 21080
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 495,
            "mean": 33478,
            "median": 23854,
            "max": 67104
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1761,
            "mean": 34915,
            "median": 34915,
            "max": 68069
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 110115,
          "size": 292
        },
        "functions": {
          "fallback()": {
            "calls": 1004,
            "min": 245,
            "mean": 23545,
            "median": 22379,
            "max": 90195
          },
          "receive()": {
            "calls": 10,
            "min": 21101,
            "mean": 21101,
            "median": 21101,
            "max": 21101
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 297934,
          "size": 1195
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 225,
            "mean": 337,
            "median": 394,
            "max": 394
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 474,
            "mean": 474,
            "median": 474,
            "max": 474
          },
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3211,
            "mean": 3224,
            "median": 3223,
            "max": 3242
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3415,
            "mean": 3423,
            "median": 3421,
            "max": 3434
          },
          "getArgUint256(uint256)": {
            "calls": 11,
            "min": 4518,
            "mean": 4535,
            "median": 4536,
            "max": 4549
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 12632,
            "mean": 13049,
            "median": 12935,
            "max": 13543
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3206,
            "mean": 3219,
            "median": 3218,
            "max": 3237
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3229,
            "mean": 3242,
            "median": 3241,
            "max": 3260
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3697,
            "mean": 3721,
            "median": 3716,
            "max": 3752
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 341,
            "mean": 449,
            "median": 503,
            "max": 503
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 629,
            "mean": 629,
            "median": 629,
            "max": 629
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 671,
            "mean": 671,
            "median": 671,
            "max": 671
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5256,
            "mean": 5269,
            "median": 5268,
            "max": 5286
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 43957,
            "mean": 43975,
            "median": 43963,
            "max": 44024
          },
          "value()": {
            "calls": 5,
            "min": 5198,
            "mean": 5211,
            "median": 5210,
            "max": 5228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 663346,
          "size": 4082
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5043,
            "mean": 5110,
            "median": 5133,
            "max": 5133
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5189,
            "mean": 5234,
            "median": 5234,
            "max": 5279
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5165,
            "mean": 5210,
            "median": 5210,
            "max": 5255
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5109,
            "mean": 5154,
            "median": 5154,
            "max": 5199
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5062,
            "mean": 5107,
            "median": 5107,
            "max": 5152
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5104,
            "mean": 5149,
            "median": 5149,
            "max": 5194
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11166,
            "mean": 29891,
            "median": 33142,
            "max": 45366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1825012,
          "size": 8246
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5643,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 441,
            "min": 533,
            "mean": 2504,
            "median": 670,
            "max": 7649
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 631,
            "min": 23483,
            "mean": 29760,
            "median": 28970,
            "max": 49659
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4235,
            "min": 23464,
            "mean": 145700,
            "median": 78676,
            "max": 36950658
          },
          "burn(address,uint256,uint256)": {
            "calls": 385,
            "min": 24787,
            "mean": 28940,
            "median": 27801,
            "max": 33138
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 924,
            "min": 24349,
            "mean": 344352,
            "median": 63282,
            "max": 41600117
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1092,
            "min": 23921,
            "mean": 222140,
            "median": 58057,
            "max": 42422832
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 2012,
            "min": 26308,
            "mean": 44541,
            "median": 46448,
            "max": 46462
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2495,
            "mean": 2495,
            "median": 2495,
            "max": 2495
          },
          "lastDataHash()": {
            "calls": 32,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 4984,
            "min": 22810,
            "mean": 129585,
            "median": 72432,
            "max": 39843766
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 907,
            "min": 23675,
            "mean": 251339,
            "median": 61954,
            "max": 40446470
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1094,
            "min": 23510,
            "mean": 308223,
            "median": 57459,
            "max": 41691744
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1678,
            "min": 25704,
            "mean": 45089,
            "median": 45844,
            "max": 45844
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 137,
            "min": 26321,
            "mean": 36378,
            "median": 39432,
            "max": 46851
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 127,
            "min": 27233,
            "mean": 30325,
            "median": 30410,
            "max": 30645
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 125,
            "min": 35479,
            "mean": 147025,
            "median": 93658,
            "max": 1473941
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 129,
            "min": 59134,
            "mean": 100715,
            "median": 62183,
            "max": 1410677
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 367203,
          "size": 1506
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 407,
            "min": 2594,
            "mean": 2649,
            "median": 2618,
            "max": 5888
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26449,
            "mean": 26449,
            "median": 26449,
            "max": 26449
          },
          "signer()": {
            "calls": 4,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 825451,
          "size": 4728
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 437,
            "mean": 437,
            "median": 437,
            "max": 437
          },
          "allowance(address,address)": {
            "calls": 2449,
            "min": 489,
            "mean": 2069,
            "median": 2489,
            "max": 2489
          },
          "approve(address,uint256)": {
            "calls": 2618,
            "min": 25996,
            "mean": 46008,
            "median": 46100,
            "max": 46280
          },
          "balanceOf(address)": {
            "calls": 13253,
            "min": 468,
            "mean": 2290,
            "median": 2468,
            "max": 2468
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24096,
            "mean": 29098,
            "median": 27221,
            "max": 34381
          },
          "decimals()": {
            "calls": 312,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 24884,
            "mean": 26766,
            "median": 27757,
            "max": 28359
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 24831,
            "mean": 37205,
            "median": 25422,
            "max": 52288
          },
          "mint(address,uint256)": {
            "calls": 3224,
            "min": 24283,
            "mean": 67721,
            "median": 68242,
            "max": 68597
          },
          "name()": {
            "calls": 258,
            "min": 2627,
            "mean": 4640,
            "median": 2662,
            "max": 9183
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2434,
            "mean": 2434,
            "median": 2434,
            "max": 2434
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23430,
            "mean": 43568,
            "median": 29985,
            "max": 74113
          },
          "symbol()": {
            "calls": 258,
            "min": 2570,
            "mean": 4919,
            "median": 6964,
            "max": 9140
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "transfer(address,uint256)": {
            "calls": 2575,
            "min": 24125,
            "mean": 45550,
            "median": 51380,
            "max": 51608
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1547,
            "min": 24707,
            "mean": 40305,
            "median": 32552,
            "max": 54598
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 825451,
          "size": 4728
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 322,
            "mean": 322,
            "median": 322,
            "max": 322
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21834,
            "mean": 22071,
            "median": 21918,
            "max": 46220
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28413,
            "mean": 68117,
            "median": 68296,
            "max": 68597
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22553,
            "mean": 22842,
            "median": 22829,
            "max": 28953
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24899,
            "mean": 38325,
            "median": 30458,
            "max": 52371
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 844127,
          "size": 3801
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "approve(address,uint256)": {
            "calls": 1010,
            "min": 23790,
            "mean": 35134,
            "median": 26030,
            "max": 46429
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1249860,
          "size": 5567
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2195,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 244,
            "min": 21536,
            "mean": 22009,
            "median": 21788,
            "max": 95109
          },
          "checkpointAt(address,uint256)": {
            "calls": 312,
            "min": 0,
            "mean": 47,
            "median": 0,
            "max": 4668
          },
          "checkpointCount(address)": {
            "calls": 1331,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 506,
            "min": 21192,
            "mean": 21646,
            "median": 21432,
            "max": 91424
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23282,
            "mean": 40820,
            "median": 23318,
            "max": 75515
          },
          "delegates(address)": {
            "calls": 4177,
            "min": 0,
            "mean": 224,
            "median": 0,
            "max": 2491
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 47955,
            "mean": 48222,
            "median": 48387,
            "max": 48399
          },
          "directIncrementNonce(address)": {
            "calls": 871,
            "min": 26787,
            "mean": 31077,
            "median": 26799,
            "max": 43899
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5370,
            "mean": 5870,
            "median": 5370,
            "max": 7370
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 324,
            "mean": 3519,
            "median": 4985,
            "max": 5250
          },
          "getVotes(address)": {
            "calls": 2947,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4695
          },
          "getVotesTotalSupply()": {
            "calls": 758,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4573
          },
          "mint(address,uint256)": {
            "calls": 709,
            "min": 21560,
            "mean": 21857,
            "median": 21800,
            "max": 94612
          },
          "name()": {
            "calls": 256,
            "min": 412,
            "mean": 412,
            "median": 412,
            "max": 412
          },
          "nonces(address)": {
            "calls": 495,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          },
          "totalSupply()": {
            "calls": 378,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 497,
            "min": 21548,
            "mean": 21847,
            "median": 21788,
            "max": 86631
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 262784,
          "size": 1002
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21442,
            "mean": 21442,
            "median": 21442,
            "max": 21442
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21661,
            "mean": 21956,
            "median": 22033,
            "max": 22033
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2523,
            "mean": 4040,
            "median": 4628,
            "max": 4647
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 392,
            "min": 22248,
            "mean": 36800,
            "median": 44364,
            "max": 44594
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 784,
            "min": 22416,
            "mean": 37309,
            "median": 44941,
            "max": 45195
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1487594,
          "size": 6874
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31930,
            "mean": 31930,
            "median": 31930,
            "max": 31930
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12131,
            "mean": 12131,
            "median": 12131,
            "max": 12131
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6072,
            "mean": 19245,
            "median": 8431,
            "max": 139793
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 826,
            "mean": 826,
            "median": 826,
            "max": 826
          },
          "entryPoint()": {
            "calls": 7,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2674,
            "mean": 16427,
            "median": 12866,
            "max": 37301
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 131,
            "min": 2796,
            "mean": 60106,
            "median": 37634,
            "max": 216073
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 128,
            "min": 3007,
            "mean": 64306,
            "median": 69328,
            "max": 302834
          },
          "fallback()": {
            "calls": 5,
            "min": 227,
            "mean": 27736,
            "median": 257,
            "max": 104877
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5292,
            "mean": 5292,
            "median": 5292,
            "max": 5292
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2422,
            "mean": 23875,
            "median": 23942,
            "max": 23942
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6536,
            "mean": 7895,
            "median": 6536,
            "max": 13524
          },
          "owner()": {
            "calls": 267,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "receive()": {
            "calls": 258,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6881,
            "mean": 6881,
            "median": 6881,
            "max": 6881
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23497,
            "mean": 23497,
            "median": 23497,
            "max": 23497
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2476,
            "mean": 13531,
            "median": 13531,
            "max": 24587
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7043,
            "mean": 7043,
            "median": 7043,
            "max": 7043
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 356,
            "mean": 24144,
            "median": 29224,
            "max": 37774
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45091,
            "mean": 45091,
            "median": 45091,
            "max": 45091
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1687648,
          "size": 9146
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2488,
            "mean": 5173,
            "median": 7709,
            "max": 7792
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7719,
            "mean": 7754,
            "median": 7754,
            "max": 7790
          },
          "decimals()": {
            "calls": 20,
            "min": 290,
            "mean": 295,
            "median": 290,
            "max": 346
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30258,
            "mean": 119162,
            "median": 120633,
            "max": 120873
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30192,
            "mean": 119441,
            "median": 120550,
            "max": 131223
          },
          "name()": {
            "calls": 1,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 7733,
            "mean": 7733,
            "median": 7733,
            "max": 7804
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7831,
            "mean": 7831,
            "median": 7831,
            "max": 7856
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24504,
            "mean": 77076,
            "median": 77524,
            "max": 92384
          },
          "symbol()": {
            "calls": 1,
            "min": 2639,
            "mean": 2639,
            "median": 2639,
            "max": 2639
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5416,
            "mean": 5416,
            "median": 5416,
            "max": 5416
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26699,
            "mean": 77817,
            "median": 78551,
            "max": 78702
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1307281,
          "size": 6112
        },
        "functions": {
          "eip712Domain()": {
            "calls": 356,
            "min": 826,
            "mean": 826,
            "median": 826,
            "max": 826
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 5904,
            "mean": 22620,
            "median": 10843,
            "max": 62889
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 122,
            "min": 5880,
            "mean": 80427,
            "median": 63260,
            "max": 241861
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 138,
            "min": 28388,
            "mean": 85128,
            "median": 63299,
            "max": 241908
          },
          "fallback()": {
            "calls": 872,
            "min": 193,
            "mean": 6102,
            "median": 3244,
            "max": 133077
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 374,
            "min": 494,
            "mean": 14201,
            "median": 13707,
            "max": 49299
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 5860,
            "mean": 5860,
            "median": 5860,
            "max": 5860
          },
          "mockId()": {
            "calls": 2,
            "min": 314,
            "mean": 314,
            "median": 314,
            "max": 314
          },
          "owner()": {
            "calls": 813,
            "min": 5668,
            "mean": 5668,
            "median": 5668,
            "max": 5668
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "receive()": {
            "calls": 1,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5564,
            "mean": 14117,
            "median": 14138,
            "max": 22712
          },
          "state()": {
            "calls": 772,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "token()": {
            "calls": 536,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 5907,
            "mean": 35133,
            "median": 35294,
            "max": 52394
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1320475,
          "size": 6173
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5221,
            "mean": 5221,
            "median": 5221,
            "max": 5221
          },
          "mockId()": {
            "calls": 1,
            "min": 314,
            "mean": 314,
            "median": 314,
            "max": 314
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5628,
            "mean": 14181,
            "median": 14202,
            "max": 22776
          },
          "state()": {
            "calls": 513,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18258,
            "mean": 18258,
            "median": 18258,
            "max": 18258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 174543,
          "size": 590
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2442,
            "min": 94674,
            "mean": 95248,
            "median": 95310,
            "max": 95502
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 708864,
          "size": 3064
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2490,
            "min": 2518,
            "mean": 2518,
            "median": 2518,
            "max": 2518
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26782,
            "mean": 46778,
            "median": 47037,
            "max": 47445
          },
          "balanceOf(address,uint256)": {
            "calls": 2424,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24295,
            "mean": 27300,
            "median": 25282,
            "max": 30490
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 46293,
            "mean": 47103,
            "median": 47121,
            "max": 47493
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 23825,
            "mean": 31787,
            "median": 26305,
            "max": 46217
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 377,
            "min": 25826,
            "mean": 40650,
            "median": 28903,
            "max": 61572
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24324,
            "mean": 45801,
            "median": 47119,
            "max": 47666
          },
          "name(uint256)": {
            "calls": 256,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 45963,
            "mean": 45963,
            "median": 45963,
            "max": 45963
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 633,
            "mean": 633,
            "median": 633,
            "max": 633
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1052,
            "min": 24303,
            "mean": 37398,
            "median": 30373,
            "max": 52823
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1655,
            "min": 26996,
            "mean": 38596,
            "median": 33093,
            "max": 60883
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1484757,
          "size": 6656
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1074,
            "min": 24206,
            "mean": 42962,
            "median": 48474,
            "max": 48817
          },
          "balanceOf(address)": {
            "calls": 10091,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "burn(uint256)": {
            "calls": 246,
            "min": 28264,
            "mean": 29323,
            "median": 28699,
            "max": 31352
          },
          "directApprove(address,uint256)": {
            "calls": 1016,
            "min": 24204,
            "mean": 43694,
            "median": 49099,
            "max": 49435
          },
          "directGetApproved(uint256)": {
            "calls": 1459,
            "min": 2480,
            "mean": 4491,
            "median": 4667,
            "max": 4667
          },
          "directOwnerOf(uint256)": {
            "calls": 2549,
            "min": 2498,
            "mean": 2685,
            "median": 2732,
            "max": 2732
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 645,
            "min": 57110,
            "mean": 75042,
            "median": 63168,
            "max": 129607
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 512,
            "min": 63396,
            "mean": 94936,
            "median": 64804,
            "max": 240466
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 944,
            "min": 24299,
            "mean": 41530,
            "median": 46439,
            "max": 46453
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1806,
            "min": 25055,
            "mean": 42328,
            "median": 40922,
            "max": 57484
          },
          "exists(uint256)": {
            "calls": 482,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "getApproved(uint256)": {
            "calls": 1553,
            "min": 2486,
            "mean": 4405,
            "median": 4594,
            "max": 4594
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2783,
            "mean": 2783,
            "median": 2783,
            "max": 2790
          },
          "getExtraData(uint256)": {
            "calls": 3494,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2844,
            "mean": 5405,
            "median": 6141,
            "max": 7202
          },
          "mint(address,uint256)": {
            "calls": 10872,
            "min": 24197,
            "mean": 64410,
            "median": 68534,
            "max": 68894
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46854,
            "mean": 56034,
            "median": 51873,
            "max": 69333
          },
          "ownerOf(uint256)": {
            "calls": 5626,
            "min": 546,
            "mean": 2528,
            "median": 2546,
            "max": 2546
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71147,
            "mean": 81415,
            "median": 71887,
            "max": 121057
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72319,
            "mean": 98364,
            "median": 73312,
            "max": 231852
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1862,
            "min": 40515,
            "mean": 68034,
            "median": 63203,
            "max": 130032
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 512,
            "min": 63364,
            "mean": 92030,
            "median": 64676,
            "max": 240762
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1173,
            "min": 24000,
            "mean": 42979,
            "median": 46140,
            "max": 46147
          },
          "setAux(address,uint224)": {
            "calls": 771,
            "min": 27600,
            "mean": 44583,
            "median": 44688,
            "max": 44700
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1501,
            "min": 23928,
            "mean": 37053,
            "median": 43948,
            "max": 44332
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1770,
            "min": 24510,
            "mean": 42210,
            "median": 40505,
            "max": 56892
          },
          "uncheckedBurn(uint256)": {
            "calls": 2920,
            "min": 23677,
            "mean": 30126,
            "median": 31115,
            "max": 36299
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 206,
            "min": 54697,
            "mean": 54953,
            "median": 54930,
            "max": 55297
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 589478,
          "size": 2516
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31204,
            "mean": 99199,
            "median": 90736,
            "max": 158743
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 261,
            "min": 297438,
            "mean": 364662,
            "median": 318708,
            "max": 3319895
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2531,
            "mean": 5620,
            "median": 4733,
            "max": 11261
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22071,
            "mean": 41244,
            "median": 43983,
            "max": 43983
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 149934,
          "size": 439
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "garbage()": {
            "calls": 780,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3071,
            "mean": 3077,
            "median": 3077,
            "max": 3083
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3269,
            "mean": 3272,
            "median": 3269,
            "max": 3278
          },
          "getArgUint256(uint256)": {
            "calls": 10,
            "min": 4378,
            "mean": 4382,
            "median": 4384,
            "max": 4390
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 4786,
            "mean": 5529,
            "median": 5381,
            "max": 6568
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3066,
            "mean": 3072,
            "median": 3072,
            "max": 3078
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3089,
            "mean": 3095,
            "median": 3095,
            "max": 3101
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3243,
            "mean": 3255,
            "median": 3261,
            "max": 3261
          },
          "receive()": {
            "calls": 14,
            "min": 0,
            "mean": 33148,
            "median": 21096,
            "max": 286387
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5116,
            "mean": 5533,
            "median": 5122,
            "max": 7180
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 43817,
            "mean": 44288,
            "median": 43823,
            "max": 46139
          },
          "value()": {
            "calls": 5,
            "min": 5058,
            "mean": 5487,
            "median": 5064,
            "max": 7179
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 764431,
          "size": 3323
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 8181,
            "min": 320,
            "mean": 4119,
            "median": 4446,
            "max": 4446
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 263,
            "min": 26688,
            "mean": 28074,
            "median": 28112,
            "max": 28112
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 29,
            "min": 26193,
            "mean": 42267,
            "median": 42027,
            "max": 59102
          },
          "guardedByOnlyRoles()": {
            "calls": 29,
            "min": 23639,
            "mean": 41648,
            "median": 41206,
            "max": 56550
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 972,
            "mean": 8631,
            "median": 7723,
            "max": 16723
          },
          "hasRole(address,uint256)": {
            "calls": 1897,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "owner()": {
            "calls": 2008,
            "min": 2344,
            "mean": 2359,
            "median": 2361,
            "max": 2361
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 262,
            "min": 2444,
            "mean": 2707,
            "median": 2487,
            "max": 4583
          },
          "roleHolderCount(uint256)": {
            "calls": 4105,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "roleHolders(uint256)": {
            "calls": 4142,
            "min": 2569,
            "mean": 2964,
            "median": 2569,
            "max": 25406
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23623,
            "mean": 43501,
            "median": 43595,
            "max": 43907
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 29,
            "min": 44425,
            "mean": 139130,
            "median": 133556,
            "max": 202976
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21606,
            "mean": 27012,
            "median": 26532,
            "max": 43890
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23644,
            "mean": 25039,
            "median": 23644,
            "max": 26456
          },
          "setOwner(address)": {
            "calls": 267,
            "min": 26482,
            "mean": 27147,
            "median": 26710,
            "max": 43810
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23664,
            "mean": 25026,
            "median": 23664,
            "max": 26476
          },
          "setRole(address,uint256,bool)": {
            "calls": 1460,
            "min": 24288,
            "mean": 60016,
            "median": 73578,
            "max": 74082
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6980,
            "min": 33295,
            "mean": 58175,
            "median": 73559,
            "max": 78471
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 112047,
          "size": 301
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "getValue(uint256)": {
            "calls": 967,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "setValue(uint256,uint256)": {
            "calls": 967,
            "min": 2417,
            "mean": 22296,
            "median": 22317,
            "max": 22317
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 163,
            "mean": 163,
            "median": 163,
            "max": 163
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 334296,
          "size": 2501
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23352,
            "mean": 33868,
            "median": 33868,
            "max": 44385
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 193,
            "min": 27483,
            "mean": 59408,
            "median": 67460,
            "max": 90381
          },
          "isInitializing()": {
            "calls": 179,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23390,
            "mean": 23390,
            "median": 23390,
            "max": 23390
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 242,
            "min": 24452,
            "mean": 56980,
            "median": 67344,
            "max": 90374
          },
          "version()": {
            "calls": 241,
            "min": 2309,
            "mean": 2309,
            "median": 2309,
            "max": 2309
          },
          "x()": {
            "calls": 132,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 514896,
          "size": 2206
        },
        "functions": {
          "owner()": {
            "calls": 746,
            "min": 151,
            "mean": 151,
            "median": 151,
            "max": 151
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24929,
            "mean": 33670,
            "median": 24953,
            "max": 59115
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 707871,
          "size": 3100
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23861,
            "mean": 23861,
            "median": 23861,
            "max": 23861
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26207,
            "mean": 37850,
            "median": 44166,
            "max": 46335
          },
          "owner()": {
            "calls": 1695,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 132,
            "min": 29164,
            "mean": 75588,
            "median": 67715,
            "max": 914794
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 125,
            "min": 28274,
            "mean": 52365,
            "median": 60453,
            "max": 60766
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 137,
            "min": 28573,
            "mean": 53589,
            "median": 61583,
            "max": 61957
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 226,
            "min": 28151,
            "mean": 48426,
            "median": 47461,
            "max": 63541
          },
          "rescueETH(address,uint256)": {
            "calls": 1400,
            "min": 5756,
            "mean": 32272,
            "median": 36602,
            "max": 61981
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 6823,
            "mean": 6823,
            "median": 6823,
            "max": 6823
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 670626,
          "size": 2893
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 522,
            "min": 21842,
            "mean": 24084,
            "median": 24152,
            "max": 35805
          },
          "multicallBrutalized(bytes[])": {
            "calls": 253,
            "min": 369351,
            "mean": 491855,
            "median": 375939,
            "max": 3932466
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 40184,
            "mean": 40184,
            "median": 40184,
            "max": 40184
          },
          "returnsRandomizedString(string)": {
            "calls": 240,
            "min": 624,
            "mean": 1511,
            "median": 1477,
            "max": 3086
          },
          "returnsSender()": {
            "calls": 1,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 151,
            "mean": 151,
            "median": 151,
            "max": 151
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 547,
            "mean": 562,
            "median": 559,
            "max": 580
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 351711,
          "size": 1357
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22628,
            "mean": 22628,
            "median": 22628,
            "max": 22628
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23834,
            "mean": 28738,
            "median": 28854,
            "max": 28861
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28234,
            "mean": 28234,
            "median": 28234,
            "max": 28234
          },
          "owner()": {
            "calls": 842,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2729
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 309,
            "mean": 309,
            "median": 309,
            "max": 309
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23078,
            "mean": 23078,
            "median": 23078,
            "max": 23078
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44529,
            "mean": 44529,
            "median": 44529,
            "max": 44529
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28245,
            "mean": 28396,
            "median": 28473,
            "max": 28480
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23868,
            "mean": 25155,
            "median": 23881,
            "max": 28519
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23350,
            "mean": 32591,
            "median": 23350,
            "max": 45461
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 262397,
          "size": 943
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 694915,
          "size": 2946
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22660,
            "mean": 22660,
            "median": 22660,
            "max": 22660
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23918,
            "mean": 28804,
            "median": 28927,
            "max": 28934
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24046,
            "mean": 46030,
            "median": 48011,
            "max": 48354
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25922,
            "mean": 45628,
            "median": 45876,
            "max": 46213
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2777,
            "mean": 2777,
            "median": 2777,
            "max": 2784
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2798,
            "mean": 2798,
            "median": 2798,
            "max": 2805
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28280,
            "mean": 28280,
            "median": 28280,
            "max": 28280
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 478,
            "mean": 17411,
            "median": 12078,
            "max": 55403
          },
          "owner()": {
            "calls": 835,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2779
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23771,
            "mean": 27153,
            "median": 25963,
            "max": 29147
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23107,
            "mean": 23107,
            "median": 23107,
            "max": 23107
          },
          "renounceRoles(uint256)": {
            "calls": 77,
            "min": 25265,
            "mean": 27925,
            "median": 28137,
            "max": 28437
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44583,
            "mean": 44583,
            "median": 44583,
            "max": 44583
          },
          "revokeRoles(address,uint256)": {
            "calls": 65,
            "min": 24077,
            "mean": 26205,
            "median": 24473,
            "max": 31281
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 738,
            "mean": 24747,
            "median": 25283,
            "max": 52781
          },
          "rolesOf(address)": {
            "calls": 2288,
            "min": 2755,
            "mean": 2756,
            "median": 2755,
            "max": 2762
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28262,
            "mean": 28407,
            "median": 28490,
            "max": 28497
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 23939,
            "mean": 37505,
            "median": 37382,
            "max": 46230
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23904,
            "mean": 25067,
            "median": 23921,
            "max": 28557
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23387,
            "mean": 34448,
            "median": 34448,
            "max": 45510
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25736,
            "mean": 45819,
            "median": 46016,
            "max": 48224
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23632,
            "mean": 44671,
            "median": 45832,
            "max": 46120
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25731,
            "mean": 45497,
            "median": 46059,
            "max": 48219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 378491,
          "size": 1480
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 86947,
          "size": 185
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 426176,
          "size": 1754
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 26461,
            "mean": 26461,
            "median": 26461,
            "max": 26461
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 43529,
            "mean": 43529,
            "median": 43529,
            "max": 43529
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65656,
            "mean": 65656,
            "median": 65656,
            "max": 65656
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45529,
            "mean": 45529,
            "median": 45529,
            "max": 45529
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69608,
            "mean": 69608,
            "median": 69608,
            "max": 69608
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65880,
            "mean": 65880,
            "median": 65880,
            "max": 65880
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66801,
            "mean": 66801,
            "median": 66801,
            "max": 66801
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 45162,
            "mean": 45162,
            "median": 45162,
            "max": 45162
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 55096,
            "mean": 55096,
            "median": 55096,
            "max": 55096
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 875470,
          "size": 3837
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 691,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 256,
            "min": 28136,
            "mean": 28144,
            "median": 28136,
            "max": 28882
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 256,
            "min": 35769,
            "mean": 39484,
            "median": 39550,
            "max": 40305
          },
          "owner()": {
            "calls": 1221,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43521,
            "mean": 43531,
            "median": 43533,
            "max": 43533
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91286,
            "mean": 110894,
            "median": 111210,
            "max": 111210
          },
          "setMaxTimedRole(uint256)": {
            "calls": 22,
            "min": 26460,
            "mean": 29076,
            "median": 26820,
            "max": 43920
          },
          "setOwner(address)": {
            "calls": 39,
            "min": 26701,
            "mean": 28028,
            "median": 26713,
            "max": 43813
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 709,
            "min": 24492,
            "mean": 50344,
            "median": 51688,
            "max": 51784
          },
          "timedRoleActive(address,uint256)": {
            "calls": 778,
            "min": 2603,
            "mean": 2603,
            "median": 2603,
            "max": 2603
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 262925,
          "size": 1038
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22339,
            "mean": 22339,
            "median": 22339,
            "max": 22339
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "revertWithError()": {
            "calls": 1,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22275,
            "mean": 22275,
            "median": 22275,
            "max": 22275
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2734,
            "mean": 9719,
            "median": 5362,
            "max": 32086
          },
          "value()": {
            "calls": 1,
            "min": 2261,
            "mean": 2261,
            "median": 2261,
            "max": 2261
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 324154,
          "size": 1115
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 1665,
            "min": 423,
            "mean": 1349,
            "median": 423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 223384,
          "size": 649
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 555,
            "mean": 555,
            "median": 555,
            "max": 555
          },
          "balanceOf(address)": {
            "calls": 1032,
            "min": 434,
            "mean": 2426,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 579313,
          "size": 2296
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 2813,
            "min": 423,
            "mean": 1515,
            "median": 2423,
            "max": 2423
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24223,
            "mean": 63893,
            "median": 66512,
            "max": 114334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 225160,
          "size": 657
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 1030,
            "min": 423,
            "mean": 2419,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 326112,
          "size": 1124
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 1659,
            "min": 423,
            "mean": 1352,
            "median": 423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 223600,
          "size": 650
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 555,
            "mean": 555,
            "median": 555,
            "max": 555
          },
          "balanceOf(address)": {
            "calls": 1026,
            "min": 434,
            "mean": 2430,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 198476,
          "size": 534
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 533,
            "mean": 533,
            "median": 533,
            "max": 533
          },
          "balanceOf(address)": {
            "calls": 515,
            "min": 434,
            "mean": 2430,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "solmate": {
    "solc": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 904688,
          "size": 4136
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4941,
            "mean": 7855,
            "median": 9286,
            "max": 9286
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2712,
            "mean": 2712,
            "median": 2712,
            "max": 2712
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2611,
            "mean": 2611,
            "median": 2611,
            "max": 2611
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27701,
            "mean": 40251,
            "median": 49613,
            "max": 49661
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28317,
            "mean": 40868,
            "median": 50225,
            "max": 50273
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27863,
            "mean": 38072,
            "median": 33143,
            "max": 50243
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28373,
            "mean": 39471,
            "median": 39441,
            "max": 50510
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 826820,
          "size": 3770
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2806,
            "mean": 6746,
            "median": 7239,
            "max": 7239
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2755,
            "mean": 2755,
            "median": 2755,
            "max": 2755
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28525,
            "mean": 39672,
            "median": 39625,
            "max": 50725
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 29017,
            "mean": 42348,
            "median": 50938,
            "max": 51202
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28329,
            "mean": 39435,
            "median": 39397,
            "max": 50466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 399869,
          "size": 1668
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25481,
            "min": 28931,
            "mean": 50573,
            "median": 51179,
            "max": 51443
          },
          "burn(address,uint256)": {
            "calls": 502,
            "min": 35708,
            "mean": 39129,
            "median": 35936,
            "max": 44708
          },
          "mint(address,uint256)": {
            "calls": 22090,
            "min": 33269,
            "mean": 61128,
            "median": 61377,
            "max": 95853
          },
          "sum()": {
            "calls": 1,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 388,
            "min": 33579,
            "mean": 37628,
            "median": 33819,
            "max": 56831
          },
          "transferFrom(address,address,uint256)": {
            "calls": 327,
            "min": 36093,
            "mean": 36553,
            "median": 36561,
            "max": 36561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 549769,
          "size": 2567
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 392,
            "mean": 534,
            "median": 534,
            "max": 677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 232936,
          "size": 889
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23784,
            "min": 31837,
            "mean": 46555,
            "median": 46637,
            "max": 80837
          },
          "fallbackDeposit(uint256)": {
            "calls": 23478,
            "min": 33695,
            "mean": 45938,
            "median": 45995,
            "max": 80195
          },
          "withdraw(uint256)": {
            "calls": 23489,
            "min": 31993,
            "mean": 46570,
            "median": 46829,
            "max": 46937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111424,
          "size": 414
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25481,
            "min": 23691,
            "mean": 45335,
            "median": 45939,
            "max": 46203
          },
          "burn(address,uint256)": {
            "calls": 502,
            "min": 28080,
            "mean": 30430,
            "median": 28308,
            "max": 34280
          },
          "mint(address,uint256)": {
            "calls": 22090,
            "min": 27968,
            "mean": 50596,
            "median": 51004,
            "max": 68380
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "transfer(address,uint256)": {
            "calls": 388,
            "min": 28172,
            "mean": 32221,
            "median": 28412,
            "max": 51424
          },
          "transferFrom(address,address,uint256)": {
            "calls": 327,
            "min": 30771,
            "mean": 31231,
            "median": 31239,
            "max": 31239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 221104,
          "size": 749
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23191,
            "mean": 28045,
            "median": 28231,
            "max": 28231
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23414,
            "mean": 23425,
            "median": 23414,
            "max": 26252
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 935400,
          "size": 4921
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "deposit()": {
            "calls": 24299,
            "min": 29138,
            "mean": 35505,
            "median": 34738,
            "max": 68938
          },
          "receive()": {
            "calls": 23735,
            "min": 28791,
            "mean": 34842,
            "median": 34391,
            "max": 68591
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "withdraw(uint256)": {
            "calls": 23747,
            "min": 29345,
            "mean": 41421,
            "median": 41681,
            "max": 41789
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 928554,
          "size": 4296
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4985,
            "mean": 7965,
            "median": 9357,
            "max": 9357
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2657,
            "mean": 2657,
            "median": 2657,
            "max": 2657
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2679,
            "mean": 2679,
            "median": 2679,
            "max": 2679
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2602,
            "mean": 2602,
            "median": 2602,
            "max": 2602
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2562,
            "mean": 2562,
            "median": 2562,
            "max": 2562
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27824,
            "mean": 40375,
            "median": 49736,
            "max": 49784
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28505,
            "mean": 41070,
            "median": 50436,
            "max": 50484
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27936,
            "mean": 38145,
            "median": 33216,
            "max": 50316
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28485,
            "mean": 39594,
            "median": 39564,
            "max": 50644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 848184,
          "size": 3916
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2870,
            "mean": 6817,
            "median": 7311,
            "max": 7311
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2844,
            "mean": 2844,
            "median": 2844,
            "max": 2844
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2717,
            "mean": 2717,
            "median": 2717,
            "max": 2717
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28522,
            "mean": 39669,
            "median": 39622,
            "max": 50722
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 29173,
            "mean": 42527,
            "median": 51128,
            "max": 51392
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28507,
            "mean": 39621,
            "median": 39586,
            "max": 50666
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 345486,
          "size": 1414
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25526,
            "min": 31271,
            "mean": 51037,
            "median": 51531,
            "max": 51795
          },
          "burn(address,uint256)": {
            "calls": 432,
            "min": 35757,
            "mean": 38698,
            "median": 35973,
            "max": 44745
          },
          "mint(address,uint256)": {
            "calls": 22926,
            "min": 35803,
            "mean": 61447,
            "median": 61639,
            "max": 96115
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "transfer(address,uint256)": {
            "calls": 366,
            "min": 33654,
            "mean": 39215,
            "median": 33870,
            "max": 56954
          },
          "transferFrom(address,address,uint256)": {
            "calls": 321,
            "min": 36549,
            "mean": 36996,
            "median": 37005,
            "max": 37005
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 541963,
          "size": 2532
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 558,
            "mean": 690,
            "median": 690,
            "max": 822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 209530,
          "size": 771
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23402,
            "min": 34298,
            "mean": 46515,
            "median": 46598,
            "max": 80798
          },
          "fallbackDeposit(uint256)": {
            "calls": 23374,
            "min": 33945,
            "mean": 46174,
            "median": 46245,
            "max": 80445
          },
          "withdraw(uint256)": {
            "calls": 22900,
            "min": 32239,
            "mean": 46814,
            "median": 47063,
            "max": 47183
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111281,
          "size": 406
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25526,
            "min": 25938,
            "mean": 45706,
            "median": 46198,
            "max": 46462
          },
          "burn(address,uint256)": {
            "calls": 432,
            "min": 28143,
            "mean": 30170,
            "median": 28359,
            "max": 34331
          },
          "mint(address,uint256)": {
            "calls": 22926,
            "min": 28166,
            "mean": 50857,
            "median": 51202,
            "max": 68578
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 366,
            "min": 28267,
            "mean": 33835,
            "median": 28483,
            "max": 51567
          },
          "transferFrom(address,address,uint256)": {
            "calls": 321,
            "min": 31077,
            "mean": 31524,
            "median": 31533,
            "max": 31533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 235926,
          "size": 831
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23376,
            "mean": 28306,
            "median": 28416,
            "max": 28416
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23402,
            "mean": 23413,
            "median": 23402,
            "max": 26332
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 939688,
          "size": 4638
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2527,
            "mean": 2527,
            "median": 2527,
            "max": 2527
          },
          "deposit()": {
            "calls": 23917,
            "min": 29088,
            "mean": 35466,
            "median": 34688,
            "max": 68888
          },
          "receive()": {
            "calls": 23631,
            "min": 28940,
            "mean": 34983,
            "median": 34540,
            "max": 68740
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "withdraw(uint256)": {
            "calls": 23158,
            "min": 29583,
            "mean": 41656,
            "median": 41907,
            "max": 42027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 708291,
          "size": 3245
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4705,
            "mean": 7541,
            "median": 9043,
            "max": 9043
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27636,
            "mean": 40187,
            "median": 49548,
            "max": 49596
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28204,
            "mean": 40756,
            "median": 50113,
            "max": 50161
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27736,
            "mean": 37951,
            "median": 33016,
            "max": 50116
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28226,
            "mean": 39321,
            "median": 39295,
            "max": 50365
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 650148,
          "size": 2975
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2560,
            "mean": 6472,
            "median": 6962,
            "max": 6962
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28279,
            "mean": 39410,
            "median": 39373,
            "max": 50467
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 28814,
            "mean": 42136,
            "median": 50737,
            "max": 51001
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28228,
            "mean": 39320,
            "median": 39290,
            "max": 50353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 294691,
          "size": 1212
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25503,
            "min": 29046,
            "mean": 50582,
            "median": 51078,
            "max": 51342
          },
          "burn(address,uint256)": {
            "calls": 485,
            "min": 35243,
            "mean": 38589,
            "median": 35459,
            "max": 44243
          },
          "mint(address,uint256)": {
            "calls": 23027,
            "min": 35270,
            "mean": 60916,
            "median": 61094,
            "max": 95582
          },
          "sum()": {
            "calls": 1,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "transfer(address,uint256)": {
            "calls": 334,
            "min": 33213,
            "mean": 34554,
            "median": 33441,
            "max": 56153
          },
          "transferFrom(address,address,uint256)": {
            "calls": 301,
            "min": 35926,
            "mean": 36359,
            "median": 36370,
            "max": 36370
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 500327,
          "size": 2327
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 397,
            "mean": 532,
            "median": 532,
            "max": 668
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 166648,
          "size": 617
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 24020,
            "min": 34058,
            "mean": 46276,
            "median": 46358,
            "max": 80558
          },
          "fallbackDeposit(uint256)": {
            "calls": 24043,
            "min": 31173,
            "mean": 45899,
            "median": 45973,
            "max": 80173
          },
          "withdraw(uint256)": {
            "calls": 23676,
            "min": 34355,
            "mean": 46452,
            "median": 46691,
            "max": 46799
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 105817,
          "size": 399
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 797877,
          "size": 5150
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25503,
            "min": 23910,
            "mean": 45448,
            "median": 45942,
            "max": 46206
          },
          "burn(address,uint256)": {
            "calls": 485,
            "min": 27876,
            "mean": 30177,
            "median": 28092,
            "max": 34076
          },
          "mint(address,uint256)": {
            "calls": 23027,
            "min": 27888,
            "mean": 50582,
            "median": 50912,
            "max": 68300
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "transfer(address,uint256)": {
            "calls": 334,
            "min": 27961,
            "mean": 29302,
            "median": 28189,
            "max": 50901
          },
          "transferFrom(address,address,uint256)": {
            "calls": 301,
            "min": 30663,
            "mean": 31096,
            "median": 31107,
            "max": 31107
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 191417,
          "size": 637
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23180,
            "mean": 28106,
            "median": 28220,
            "max": 28220
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23440,
            "mean": 23451,
            "median": 23440,
            "max": 26281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 814183,
          "size": 4156
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "deposit()": {
            "calls": 24535,
            "min": 28992,
            "mean": 35361,
            "median": 34592,
            "max": 68792
          },
          "receive()": {
            "calls": 24300,
            "min": 28785,
            "mean": 34816,
            "median": 34385,
            "max": 68585
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "withdraw(uint256)": {
            "calls": 23934,
            "min": 29309,
            "mean": 41403,
            "median": 41645,
            "max": 41753
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 648823,
          "size": 2959
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4731,
            "mean": 7567,
            "median": 9078,
            "max": 9078
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2469,
            "mean": 2469,
            "median": 2469,
            "max": 2469
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27645,
            "mean": 40197,
            "median": 49557,
            "max": 49605
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28239,
            "mean": 40803,
            "median": 50170,
            "max": 50218
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27737,
            "mean": 37959,
            "median": 33017,
            "max": 50117
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28253,
            "mean": 39369,
            "median": 39332,
            "max": 50412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 589180,
          "size": 2682
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2582,
            "mean": 6493,
            "median": 6982,
            "max": 6982
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2483,
            "mean": 2483,
            "median": 2483,
            "max": 2483
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2533,
            "mean": 2533,
            "median": 2533,
            "max": 2533
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28280,
            "mean": 39421,
            "median": 39380,
            "max": 50480
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 28843,
            "mean": 42171,
            "median": 50786,
            "max": 51050
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28224,
            "mean": 39346,
            "median": 39309,
            "max": 50395
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 257439,
          "size": 992
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25706,
            "min": 28552,
            "mean": 50552,
            "median": 51072,
            "max": 51336
          },
          "burn(address,uint256)": {
            "calls": 503,
            "min": 35239,
            "mean": 38584,
            "median": 35467,
            "max": 44203
          },
          "mint(address,uint256)": {
            "calls": 22809,
            "min": 35286,
            "mean": 60945,
            "median": 61110,
            "max": 95598
          },
          "sum()": {
            "calls": 1,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "transfer(address,uint256)": {
            "calls": 606,
            "min": 30846,
            "mean": 43382,
            "median": 33346,
            "max": 56430
          },
          "transferFrom(address,address,uint256)": {
            "calls": 331,
            "min": 35856,
            "mean": 36293,
            "median": 36300,
            "max": 36300
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 432039,
          "size": 1983
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 425,
            "mean": 555,
            "median": 555,
            "max": 686
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 162178,
          "size": 544
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23696,
            "min": 34070,
            "mean": 46280,
            "median": 46370,
            "max": 80570
          },
          "fallbackDeposit(uint256)": {
            "calls": 23613,
            "min": 33715,
            "mean": 45969,
            "median": 46015,
            "max": 80215
          },
          "withdraw(uint256)": {
            "calls": 23249,
            "min": 34389,
            "mean": 46465,
            "median": 46737,
            "max": 46833
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 102089,
          "size": 334
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 704926,
          "size": 4575
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25706,
            "min": 25752,
            "mean": 45494,
            "median": 46012,
            "max": 46276
          },
          "burn(address,uint256)": {
            "calls": 503,
            "min": 27885,
            "mean": 30189,
            "median": 28113,
            "max": 34049
          },
          "mint(address,uint256)": {
            "calls": 22809,
            "min": 27917,
            "mean": 50623,
            "median": 50953,
            "max": 68329
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "transfer(address,uint256)": {
            "calls": 606,
            "min": 28019,
            "mean": 38287,
            "median": 28247,
            "max": 51331
          },
          "transferFrom(address,address,uint256)": {
            "calls": 331,
            "min": 30734,
            "mean": 31171,
            "median": 31178,
            "max": 31178
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 180024,
          "size": 603
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2242,
            "mean": 2242,
            "median": 2242,
            "max": 2242
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23155,
            "mean": 28086,
            "median": 28195,
            "max": 28195
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23373,
            "mean": 23384,
            "median": 23373,
            "max": 26230
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 753061,
          "size": 3803
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "deposit()": {
            "calls": 24211,
            "min": 29017,
            "mean": 35397,
            "median": 34617,
            "max": 68817
          },
          "receive()": {
            "calls": 23870,
            "min": 28836,
            "mean": 34887,
            "median": 34436,
            "max": 68636
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "withdraw(uint256)": {
            "calls": 23507,
            "min": 29376,
            "mean": 41450,
            "median": 41724,
            "max": 41820
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "tokenlon": {
    "solc": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 643922,
          "size": 3071
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23485,
            "mean": 26545,
            "median": 27565,
            "max": 27565
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24715,
            "mean": 50069,
            "median": 48497,
            "max": 89862
          },
          "unpause()": {
            "calls": 2,
            "min": 23375,
            "mean": 25350,
            "median": 25350,
            "max": 27326
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9759810,
          "size": 47833
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 307229,
            "mean": 307305,
            "median": 307305,
            "max": 307381
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 705609,
          "size": 3116
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25706,
            "mean": 79373,
            "median": 79373,
            "max": 133041
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25012,
            "mean": 54660,
            "median": 54660,
            "max": 84308
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 378556,
          "size": 1804
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 337,
            "mean": 705,
            "median": 705,
            "max": 1074
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 1006,
            "mean": 1006,
            "median": 1006,
            "max": 1006
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "originalChainId()": {
            "calls": 1,
            "min": 139,
            "mean": 139,
            "median": 139,
            "max": 139
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 288249,
          "size": 1168
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23398,
            "mean": 25713,
            "median": 25713,
            "max": 28029
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23728,
            "mean": 42317,
            "median": 46965,
            "max": 46965
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "owner()": {
            "calls": 3,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23375,
            "mean": 24659,
            "median": 25105,
            "max": 25497
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 349547,
          "size": 1409
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 510,
            "mean": 2275,
            "median": 517,
            "max": 5799
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 306,
            "mean": 309,
            "median": 309,
            "max": 313
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22170,
            "mean": 34261,
            "median": 27062,
            "max": 56716
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 230000,
          "size": 852
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3934,
            "mean": 3934,
            "median": 3934,
            "max": 3934
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3192362,
          "size": 15492
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 9918,
            "mean": 9918,
            "median": 9918,
            "max": 9918
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 787264,
          "size": 3420
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46269,
            "mean": 46269,
            "median": 46269,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 480,
            "mean": 998,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 50,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 669646,
          "size": 2934
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 2889,
            "mean": 4928,
            "median": 6223,
            "max": 6250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 759220,
          "size": 4056
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2727,
            "mean": 2727,
            "median": 2727,
            "max": 2727
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46242,
            "mean": 46242,
            "median": 46242,
            "max": 46242
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 510,
            "mean": 1398,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 10,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68010,
            "mean": 68012,
            "median": 68010,
            "max": 68022
          },
          "totalSupply()": {
            "calls": 50,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 771016,
          "size": 3346
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46251,
            "mean": 46251,
            "median": 46251,
            "max": 46251
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 480,
            "mean": 1025,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 50,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 764300,
          "size": 3747
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46277,
            "mean": 46277,
            "median": 46277,
            "max": 46277
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 510,
            "mean": 941,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 10,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "totalSupply()": {
            "calls": 50,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 703448,
          "size": 3444
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23402,
            "mean": 26580,
            "median": 27640,
            "max": 27640
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24987,
            "mean": 50857,
            "median": 49334,
            "max": 91027
          },
          "unpause()": {
            "calls": 2,
            "min": 23403,
            "mean": 25510,
            "median": 25510,
            "max": 27618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 8984811,
          "size": 42642
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 316492,
            "mean": 316564,
            "median": 316564,
            "max": 316636
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 844372,
          "size": 3776
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25917,
            "mean": 80692,
            "median": 80692,
            "max": 135467
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25160,
            "mean": 55469,
            "median": 55469,
            "max": 85779
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 331107,
          "size": 1561
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 298,
            "mean": 467,
            "median": 467,
            "max": 636
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 539,
            "mean": 539,
            "median": 539,
            "max": 539
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "originalChainId()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 302284,
          "size": 1251
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23392,
            "mean": 25871,
            "median": 25871,
            "max": 28351
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23848,
            "mean": 42444,
            "median": 47093,
            "max": 47093
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "owner()": {
            "calls": 3,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23369,
            "mean": 24725,
            "median": 25312,
            "max": 25495
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 420284,
          "size": 1737
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 715,
            "mean": 2485,
            "median": 720,
            "max": 6022
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 417,
            "mean": 419,
            "median": 419,
            "max": 422
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22347,
            "mean": 34533,
            "median": 27257,
            "max": 56933
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 281629,
          "size": 1093
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 4375,
            "mean": 4375,
            "median": 4375,
            "max": 4375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3229415,
          "size": 15682
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 8156,
            "mean": 8156,
            "median": 8156,
            "max": 8156
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 735333,
          "size": 3316
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46511,
            "mean": 46511,
            "median": 46511,
            "max": 46511
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 558,
            "mean": 1076,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 50,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 772690,
          "size": 3408
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 921,
            "mean": 3891,
            "median": 4361,
            "max": 6522
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 689248,
          "size": 3528
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2752
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46629,
            "mean": 46629,
            "median": 46629,
            "max": 46629
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 558,
            "mean": 1446,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68294,
            "mean": 68296,
            "median": 68294,
            "max": 68306
          },
          "totalSupply()": {
            "calls": 50,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 677862,
          "size": 3037
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46441,
            "mean": 46441,
            "median": 46441,
            "max": 46441
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 558,
            "mean": 1103,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 50,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 683410,
          "size": 3085
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46630,
            "mean": 46630,
            "median": 46630,
            "max": 46630
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 558,
            "mean": 989,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "totalSupply()": {
            "calls": 50,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 497928,
          "size": 2504
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23402,
            "mean": 26473,
            "median": 27497,
            "max": 27497
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24696,
            "mean": 49767,
            "median": 48213,
            "max": 89180
          },
          "unpause()": {
            "calls": 2,
            "min": 23393,
            "mean": 25368,
            "median": 25368,
            "max": 27344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9066035,
          "size": 45083
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 285676,
            "mean": 285688,
            "median": 285688,
            "max": 285700
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 729135,
          "size": 3244
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25649,
            "mean": 78477,
            "median": 78477,
            "max": 131305
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 24928,
            "mean": 53633,
            "median": 53633,
            "max": 82339
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 336689,
          "size": 1574
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 255,
            "mean": 483,
            "median": 483,
            "max": 712
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 875,
            "mean": 875,
            "median": 875,
            "max": 875
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "originalChainId()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 246745,
          "size": 1012
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23395,
            "mean": 25709,
            "median": 25709,
            "max": 28024
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23742,
            "mean": 42347,
            "median": 46999,
            "max": 46999
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "owner()": {
            "calls": 3,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23365,
            "mean": 24648,
            "median": 25089,
            "max": 25490
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 269451,
          "size": 1032
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 372,
            "mean": 2066,
            "median": 390,
            "max": 5437
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22110,
            "mean": 34113,
            "median": 26986,
            "max": 56641
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 162413,
          "size": 537
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3718,
            "mean": 3718,
            "median": 3718,
            "max": 3718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 2963687,
          "size": 14354
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 186,
            "mean": 186,
            "median": 186,
            "max": 186
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 9357,
            "mean": 9357,
            "median": 9357,
            "max": 9357
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 614265,
          "size": 2678
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46272,
            "mean": 46272,
            "median": 46272,
            "max": 46272
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 400,
            "mean": 918,
            "median": 400,
            "max": 2400
          },
          "decimals()": {
            "calls": 10,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 671987,
          "size": 2958
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 2581,
            "mean": 4573,
            "median": 5870,
            "max": 5911
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 598128,
          "size": 3763
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46239,
            "mean": 46239,
            "median": 46239,
            "max": 46239
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 406,
            "mean": 1294,
            "median": 406,
            "max": 2406
          },
          "decimals()": {
            "calls": 10,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 67913,
            "mean": 67915,
            "median": 67913,
            "max": 67925
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 591969,
          "size": 2575
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46259,
            "mean": 46259,
            "median": 46259,
            "max": 46259
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 400,
            "mean": 945,
            "median": 400,
            "max": 2400
          },
          "decimals()": {
            "calls": 10,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 604587,
          "size": 2708
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46281,
            "mean": 46281,
            "median": 46281,
            "max": 46281
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 406,
            "mean": 837,
            "median": 406,
            "max": 2406
          },
          "decimals()": {
            "calls": 10,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 471026,
          "size": 2312
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23370,
            "mean": 26515,
            "median": 27564,
            "max": 27564
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24732,
            "mean": 49841,
            "median": 48285,
            "max": 89224
          },
          "unpause()": {
            "calls": 2,
            "min": 23383,
            "mean": 25352,
            "median": 25352,
            "max": 27322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 7153611,
          "size": 34488
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 273443,
            "mean": 273453,
            "median": 273453,
            "max": 273463
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 607349,
          "size": 2653
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25688,
            "mean": 78680,
            "median": 78680,
            "max": 131672
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 24971,
            "mean": 53811,
            "median": 53811,
            "max": 82651
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 256001,
          "size": 1130
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 260,
            "mean": 458,
            "median": 458,
            "max": 656
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 470,
            "mean": 470,
            "median": 470,
            "max": 470
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 416,
            "mean": 416,
            "median": 416,
            "max": 416
          },
          "originalChainId()": {
            "calls": 1,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 239223,
          "size": 948
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23373,
            "mean": 25790,
            "median": 25790,
            "max": 28208
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23756,
            "mean": 42340,
            "median": 46987,
            "max": 46987
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          },
          "owner()": {
            "calls": 3,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23342,
            "mean": 24661,
            "median": 25165,
            "max": 25476
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 267732,
          "size": 1021
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 398,
            "mean": 2090,
            "median": 405,
            "max": 5469
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22111,
            "mean": 34119,
            "median": 26971,
            "max": 56592
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 161699,
          "size": 531
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3760,
            "mean": 3760,
            "median": 3760,
            "max": 3760
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 2595020,
          "size": 12510
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 7303,
            "mean": 7303,
            "median": 7303,
            "max": 7303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 554279,
          "size": 2464
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46344,
            "mean": 46344,
            "median": 46344,
            "max": 46344
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 422,
            "mean": 940,
            "median": 422,
            "max": 2422
          },
          "decimals()": {
            "calls": 10,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 622008,
          "size": 2680
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 466,
            "mean": 3316,
            "median": 3783,
            "max": 5919
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 568497,
          "size": 3570
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2600,
            "mean": 2600,
            "median": 2600,
            "max": 2600
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46394,
            "mean": 46394,
            "median": 46394,
            "max": 46394
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 427,
            "mean": 1315,
            "median": 427,
            "max": 2427
          },
          "decimals()": {
            "calls": 10,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68030,
            "mean": 68032,
            "median": 68030,
            "max": 68042
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 528650,
          "size": 2347
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46304,
            "mean": 46304,
            "median": 46304,
            "max": 46304
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 422,
            "mean": 967,
            "median": 422,
            "max": 2422
          },
          "decimals()": {
            "calls": 10,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 570267,
          "size": 2543
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46355,
            "mean": 46355,
            "median": 46355,
            "max": 46355
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 427,
            "mean": 858,
            "median": 427,
            "max": 2427
          },
          "decimals()": {
            "calls": 10,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "uniswap-v4": {
    "solc": [
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26303,
            "mean": 45119,
            "median": 46203,
            "max": 46203
          },
          "balanceOf(address)": {
            "calls": 130152,
            "min": 525,
            "mean": 1697,
            "median": 2525,
            "max": 2525
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 33868,
            "mean": 62323,
            "median": 68008,
            "max": 68080
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46324,
            "mean": 51093,
            "median": 51076,
            "max": 51304
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5243607,
          "size": 24226
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22964,
            "mean": 22964,
            "median": 22964,
            "max": 22964
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57728,
            "mean": 58442,
            "median": 57870,
            "max": 59513
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 1040,
            "mean": 12403,
            "median": 12403,
            "max": 23766
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 375,
            "mean": 2370,
            "median": 2375,
            "max": 2375
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 949,
            "mean": 4092,
            "median": 6949,
            "max": 6949
          },
          "exttload(bytes32)": {
            "calls": 40502,
            "min": 859,
            "mean": 859,
            "median": 859,
            "max": 859
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 23229,
            "mean": 52232,
            "median": 51532,
            "max": 152701
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22395,
            "mean": 22395,
            "median": 22395,
            "max": 22395
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1470,
            "mean": 13258,
            "median": 13183,
            "max": 25196
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2866,
            "mean": 2866,
            "median": 2866,
            "max": 2866
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 46183,
            "mean": 46183,
            "median": 46183,
            "max": 46183
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29642,
            "mean": 32347,
            "median": 32262,
            "max": 32478
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 30106,
            "mean": 47137,
            "median": 47206,
            "max": 47206
          },
          "settle()": {
            "calls": 1,
            "min": 21396,
            "mean": 21396,
            "median": 21396,
            "max": 21396
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1771,
            "mean": 13462,
            "median": 13462,
            "max": 25153
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22397,
            "mean": 22397,
            "median": 22397,
            "max": 22397
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23556,
            "mean": 23556,
            "median": 23556,
            "max": 23556
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2281095,
          "size": 10347
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 46893,
            "mean": 85751,
            "median": 89905,
            "max": 107490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 397868,
          "size": 1634
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 3034,
            "mean": 5266,
            "median": 5825,
            "max": 5825
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 312,
            "mean": 4344,
            "median": 5688,
            "max": 5688
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "toId(address)": {
            "calls": 769,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24682,
            "mean": 52991,
            "median": 54724,
            "max": 56969
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 93643,
          "size": 210
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 241,
            "mean": 247,
            "median": 250,
            "max": 250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 592222,
          "size": 2524
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 902,
            "min": 2728,
            "mean": 2728,
            "median": 2728,
            "max": 2728
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26711,
            "mean": 46699,
            "median": 46875,
            "max": 47271
          },
          "balanceOf(address,uint256)": {
            "calls": 2701,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24577,
            "mean": 24854,
            "median": 24817,
            "max": 29389
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26472,
            "mean": 32304,
            "median": 32277,
            "max": 38201
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2719,
            "mean": 2719,
            "median": 2719,
            "max": 2719
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24144,
            "mean": 46918,
            "median": 47023,
            "max": 47551
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25863,
            "mean": 40888,
            "median": 46003,
            "max": 46003
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24066,
            "mean": 38266,
            "median": 30224,
            "max": 52680
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24498,
            "mean": 42965,
            "median": 47757,
            "max": 61067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1585503,
          "size": 6940
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 524,
            "mean": 1774,
            "median": 1774,
            "max": 3024
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 176115,
          "size": 611
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 235,
            "mean": 237,
            "median": 237,
            "max": 240
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 695526,
          "size": 3164
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 78692,
            "mean": 78692,
            "median": 78692,
            "max": 78692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 1057526,
          "size": 4854
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 39186,
            "mean": 121827,
            "median": 145546,
            "max": 253009
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 233735,
          "size": 892
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29661,
            "mean": 29661,
            "median": 29661,
            "max": 29661
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1356010,
          "size": 6233
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 44907,
            "mean": 187926,
            "median": 183809,
            "max": 389021
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 134491,
            "mean": 149714,
            "median": 149714,
            "max": 164938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1075778,
          "size": 4917
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 85099,
            "mean": 131702,
            "median": 161276,
            "max": 161276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 13370
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69616,
            "mean": 76682,
            "median": 69616,
            "max": 89540
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 4556241,
          "size": 19956
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2531,
            "mean": 2531,
            "median": 2531,
            "max": 2531
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 40912,
            "mean": 139633,
            "median": 179030,
            "max": 236884
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1544945,
          "size": 7133
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 42871,
            "mean": 387992,
            "median": 145378,
            "max": 17412146
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 851773,
          "size": 3910
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 41314,
            "mean": 63485,
            "median": 59159,
            "max": 88197
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 689214,
          "size": 2935
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24133,
            "mean": 43933,
            "median": 27161,
            "max": 62338
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "protocolFeesAccrued(address)": {
            "calls": 902,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 44895,
            "mean": 45524,
            "median": 45519,
            "max": 45915
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 24550,
            "mean": 27866,
            "median": 25735,
            "max": 32342
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23838,
            "mean": 46977,
            "median": 47022,
            "max": 47022
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22521,
            "mean": 38363,
            "median": 44061,
            "max": 44421
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3189051,
          "size": 14704
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6953,
            "mean": 6953,
            "median": 6953,
            "max": 6953
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 863,
            "mean": 863,
            "median": 863,
            "max": 863
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47207,
            "mean": 47207,
            "median": 47207,
            "max": 47207
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 764547,
          "size": 3471
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 108434,
            "mean": 115789,
            "median": 115789,
            "max": 123144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 488598,
          "size": 2156
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46168,
            "mean": 46174,
            "median": 46174,
            "max": 46180
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 436,
            "mean": 1769,
            "median": 2436,
            "max": 2436
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 630030,
          "size": 2706
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 363,
            "mean": 448,
            "median": 363,
            "max": 1254
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 281,
            "mean": 499,
            "median": 281,
            "max": 2272
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 146887,
          "size": 459
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2412,
            "mean": 1087164,
            "median": 1016398,
            "max": 2177213
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2562,
            "mean": 1089798,
            "median": 1113864,
            "max": 2180360
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 188108,
          "size": 653
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 126,
            "min": 342,
            "mean": 359,
            "median": 355,
            "max": 367
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 325,
            "mean": 365,
            "median": 367,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 131787,
          "size": 391
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 266,
            "mean": 307,
            "median": 308,
            "max": 319
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26562,
            "mean": 45378,
            "median": 46462,
            "max": 46462
          },
          "balanceOf(address)": {
            "calls": 130027,
            "min": 527,
            "mean": 1700,
            "median": 2527,
            "max": 2527
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 34066,
            "mean": 62521,
            "median": 68206,
            "max": 68278
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46395,
            "mean": 51164,
            "median": 51147,
            "max": 51375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5872628,
          "size": 27173
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22487,
            "mean": 22487,
            "median": 22487,
            "max": 22487
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57633,
            "mean": 58330,
            "median": 57785,
            "max": 59377
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 1374,
            "mean": 12736,
            "median": 12736,
            "max": 24099
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 415,
            "mean": 2410,
            "median": 2415,
            "max": 2415
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 883,
            "mean": 4026,
            "median": 6883,
            "max": 6883
          },
          "exttload(bytes32)": {
            "calls": 40504,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 23272,
            "mean": 52699,
            "median": 52214,
            "max": 154058
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22467,
            "mean": 22467,
            "median": 22467,
            "max": 22467
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1628,
            "mean": 13415,
            "median": 13340,
            "max": 25353
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2576,
            "mean": 2576,
            "median": 2576,
            "max": 2576
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 46204,
            "mean": 46204,
            "median": 46204,
            "max": 46204
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29752,
            "mean": 32457,
            "median": 32372,
            "max": 32588
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 30067,
            "mean": 47098,
            "median": 47167,
            "max": 47167
          },
          "settle()": {
            "calls": 1,
            "min": 21369,
            "mean": 21369,
            "median": 21369,
            "max": 21369
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1575,
            "mean": 13265,
            "median": 13265,
            "max": 24956
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22579,
            "mean": 22579,
            "median": 22579,
            "max": 22579
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23646,
            "mean": 23646,
            "median": 23646,
            "max": 23646
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2323730,
          "size": 10523
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 47412,
            "mean": 86679,
            "median": 91465,
            "max": 109456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 395951,
          "size": 1627
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 3167,
            "mean": 5383,
            "median": 5938,
            "max": 5938
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 457,
            "mean": 4480,
            "median": 5822,
            "max": 5822
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 334,
            "mean": 334,
            "median": 334,
            "max": 334
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 404,
            "mean": 404,
            "median": 404,
            "max": 404
          },
          "toId(address)": {
            "calls": 769,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24803,
            "mean": 53152,
            "median": 54899,
            "max": 57111
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 107511,
          "size": 277
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 377,
            "mean": 439,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 660716,
          "size": 2846
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 902,
            "min": 2801,
            "mean": 2801,
            "median": 2801,
            "max": 2801
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26855,
            "mean": 46842,
            "median": 47031,
            "max": 47415
          },
          "balanceOf(address,uint256)": {
            "calls": 2701,
            "min": 2609,
            "mean": 2609,
            "median": 2609,
            "max": 2609
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24591,
            "mean": 24871,
            "median": 24831,
            "max": 29403
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26646,
            "mean": 32519,
            "median": 32528,
            "max": 38452
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24273,
            "mean": 47089,
            "median": 47186,
            "max": 47726
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25993,
            "mean": 41015,
            "median": 46133,
            "max": 46133
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24192,
            "mean": 38483,
            "median": 30401,
            "max": 52933
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24527,
            "mean": 43117,
            "median": 47995,
            "max": 61263
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1373040,
          "size": 6061
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 488,
            "mean": 1738,
            "median": 1738,
            "max": 2988
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 160080,
          "size": 543
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 241,
            "mean": 242,
            "median": 242,
            "max": 244
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 444,
            "mean": 444,
            "median": 444,
            "max": 444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 768441,
          "size": 3530
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 79276,
            "mean": 79276,
            "median": 79276,
            "max": 79276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 1309655,
          "size": 6073
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 39983,
            "mean": 122080,
            "median": 146011,
            "max": 253546
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 260679,
          "size": 1015
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29889,
            "mean": 29889,
            "median": 29889,
            "max": 29889
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1565024,
          "size": 7267
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 46199,
            "mean": 190748,
            "median": 182791,
            "max": 393830
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 136946,
            "mean": 152555,
            "median": 152555,
            "max": 168165
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1174519,
          "size": 5422
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 88109,
            "mean": 134522,
            "median": 164012,
            "max": 164012
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 15069
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69526,
            "mean": 76592,
            "median": 69526,
            "max": 89450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 4863324,
          "size": 21415
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 39912,
            "mean": 139384,
            "median": 179253,
            "max": 237367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1752250,
          "size": 8147
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 42798,
            "mean": 406375,
            "median": 147810,
            "max": 18767721
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 1038987,
          "size": 4789
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 41880,
            "mean": 64062,
            "median": 59656,
            "max": 88534
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 733288,
          "size": 3158
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24287,
            "mean": 42615,
            "median": 27386,
            "max": 62761
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "protocolFeesAccrued(address)": {
            "calls": 890,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 45290,
            "mean": 45903,
            "median": 45902,
            "max": 46298
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 25004,
            "mean": 28533,
            "median": 26215,
            "max": 33006
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23955,
            "mean": 47100,
            "median": 47145,
            "max": 47145
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22550,
            "mean": 38392,
            "median": 44090,
            "max": 44450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3332751,
          "size": 15462
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6883,
            "mean": 6883,
            "median": 6883,
            "max": 6883
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47167,
            "mean": 47167,
            "median": 47167,
            "max": 47167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 936598,
          "size": 4309
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 111833,
            "mean": 119113,
            "median": 119113,
            "max": 126394
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 502947,
          "size": 2277
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46393,
            "mean": 46399,
            "median": 46399,
            "max": 46405
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 507,
            "mean": 1840,
            "median": 2507,
            "max": 2507
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 560765,
          "size": 2387
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 398,
            "mean": 484,
            "median": 398,
            "max": 1170
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 397,
            "mean": 638,
            "median": 397,
            "max": 2548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 167887,
          "size": 558
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2489,
            "mean": 1031117,
            "median": 953516,
            "max": 2165302
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2646,
            "mean": 944935,
            "median": 892339,
            "max": 2158466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 216784,
          "size": 789
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 119,
            "min": 548,
            "mean": 615,
            "median": 615,
            "max": 626
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 476,
            "mean": 565,
            "median": 555,
            "max": 629
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 146539,
          "size": 462
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 408,
            "mean": 510,
            "median": 503,
            "max": 565
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 797877,
          "size": 5150
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26306,
            "mean": 45122,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 130059,
            "min": 386,
            "mean": 1559,
            "median": 2386,
            "max": 2386
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 33788,
            "mean": 62243,
            "median": 67928,
            "max": 68000
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46101,
            "mean": 50869,
            "median": 50853,
            "max": 51081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 4998564,
          "size": 23068
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2531,
            "mean": 2531,
            "median": 2531,
            "max": 2531
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22343,
            "mean": 22343,
            "median": 22343,
            "max": 22343
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57133,
            "mean": 57927,
            "median": 57302,
            "max": 59118
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 913,
            "mean": 12299,
            "median": 12299,
            "max": 23686
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 323,
            "mean": 2318,
            "median": 2323,
            "max": 2323
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 842,
            "mean": 3985,
            "median": 6842,
            "max": 6842
          },
          "exttload(bytes32)": {
            "calls": 40484,
            "min": 335,
            "mean": 335,
            "median": 335,
            "max": 335
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 22919,
            "mean": 51513,
            "median": 51068,
            "max": 150848
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22337,
            "mean": 22337,
            "median": 22337,
            "max": 22337
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1116,
            "mean": 12927,
            "median": 12852,
            "max": 24889
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2480,
            "mean": 2480,
            "median": 2480,
            "max": 2480
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 45952,
            "mean": 45952,
            "median": 45952,
            "max": 45952
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29317,
            "mean": 32022,
            "median": 31937,
            "max": 32153
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 29991,
            "mean": 47022,
            "median": 47091,
            "max": 47091
          },
          "settle()": {
            "calls": 1,
            "min": 21406,
            "mean": 21406,
            "median": 21406,
            "max": 21406
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1084,
            "mean": 12793,
            "median": 12793,
            "max": 24502
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22362,
            "mean": 22362,
            "median": 22362,
            "max": 22362
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23322,
            "mean": 23322,
            "median": 23322,
            "max": 23322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2350970,
          "size": 10642
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 44022,
            "mean": 78628,
            "median": 81364,
            "max": 100531
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 270855,
          "size": 1038
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 2887,
            "mean": 4917,
            "median": 5425,
            "max": 5425
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 248,
            "mean": 4106,
            "median": 5392,
            "max": 5392
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "toId(address)": {
            "calls": 769,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24544,
            "mean": 52831,
            "median": 54363,
            "max": 56853
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 95465,
          "size": 227
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 252,
            "mean": 252,
            "median": 253,
            "max": 253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 520595,
          "size": 2193
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 893,
            "min": 2586,
            "mean": 2586,
            "median": 2586,
            "max": 2586
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26640,
            "mean": 46624,
            "median": 46804,
            "max": 47200
          },
          "balanceOf(address,uint256)": {
            "calls": 2692,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24376,
            "mean": 24652,
            "median": 24616,
            "max": 29188
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26376,
            "mean": 31783,
            "median": 27216,
            "max": 38018
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24123,
            "mean": 46849,
            "median": 46958,
            "max": 47486
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25736,
            "mean": 40759,
            "median": 45876,
            "max": 45876
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24042,
            "mean": 38225,
            "median": 30197,
            "max": 52585
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24204,
            "mean": 42686,
            "median": 47475,
            "max": 60704
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1608111,
          "size": 7067
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 344,
            "mean": 1594,
            "median": 1594,
            "max": 2844
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 134430,
          "size": 419
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 216,
            "mean": 220,
            "median": 220,
            "max": 224
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 493382,
          "size": 2226
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 75619,
            "mean": 75619,
            "median": 75619,
            "max": 75619
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 954087,
          "size": 4377
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 35823,
            "mean": 114296,
            "median": 136493,
            "max": 242216
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 219592,
          "size": 866
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29154,
            "mean": 29154,
            "median": 29154,
            "max": 29154
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1416604,
          "size": 6522
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 42492,
            "mean": 180026,
            "median": 174736,
            "max": 373222
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 126308,
            "mean": 142040,
            "median": 142040,
            "max": 157773
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1095476,
          "size": 5020
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 81541,
            "mean": 127469,
            "median": 156836,
            "max": 156836
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 17537
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69158,
            "mean": 76224,
            "median": 69158,
            "max": 89082
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 5562686,
          "size": 24618
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 38380,
            "mean": 127556,
            "median": 163790,
            "max": 207947
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1285185,
          "size": 5912
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 37760,
            "mean": 344007,
            "median": 135634,
            "max": 16521154
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 762363,
          "size": 3499
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 39043,
            "mean": 58401,
            "median": 54051,
            "max": 79214
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 542523,
          "size": 2263
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24081,
            "mean": 44310,
            "median": 56976,
            "max": 62046
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "protocolFeesAccrued(address)": {
            "calls": 906,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 44778,
            "mean": 45406,
            "median": 45402,
            "max": 45798
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 24529,
            "mean": 27747,
            "median": 25731,
            "max": 32338
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23844,
            "mean": 47001,
            "median": 47046,
            "max": 47046
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22431,
            "mean": 38272,
            "median": 43971,
            "max": 44331
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 2430290,
          "size": 11249
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6803,
            "mean": 6803,
            "median": 6803,
            "max": 6803
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 335,
            "mean": 335,
            "median": 335,
            "max": 335
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47091,
            "mean": 47091,
            "median": 47091,
            "max": 47091
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 646865,
          "size": 2939
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 104711,
            "mean": 111457,
            "median": 111457,
            "max": 118204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 311368,
          "size": 1268
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46148,
            "mean": 46154,
            "median": 46154,
            "max": 46160
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 349,
            "mean": 1682,
            "median": 2349,
            "max": 2349
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 527023,
          "size": 2230
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 321,
            "mean": 408,
            "median": 321,
            "max": 1088
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 284,
            "mean": 498,
            "median": 284,
            "max": 2209
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 128029,
          "size": 378
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2368,
            "mean": 1043132,
            "median": 956931,
            "max": 2178168
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2514,
            "mean": 1118025,
            "median": 1164490,
            "max": 2181311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 159617,
          "size": 527
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 119,
            "min": 303,
            "mean": 303,
            "median": 304,
            "max": 307
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 304,
            "mean": 333,
            "median": 350,
            "max": 350
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 119513,
          "size": 339
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 276,
            "mean": 310,
            "median": 327,
            "max": 327
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 704926,
          "size": 4575
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26376,
            "mean": 45192,
            "median": 46276,
            "max": 46276
          },
          "balanceOf(address)": {
            "calls": 130363,
            "min": 416,
            "mean": 1587,
            "median": 2416,
            "max": 2416
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 33817,
            "mean": 62272,
            "median": 67957,
            "max": 68029
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46159,
            "mean": 50928,
            "median": 50911,
            "max": 51139
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5037358,
          "size": 23211
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22375,
            "mean": 22375,
            "median": 22375,
            "max": 22375
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57192,
            "mean": 57975,
            "median": 57349,
            "max": 59151
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 844,
            "mean": 12213,
            "median": 12213,
            "max": 23582
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 353,
            "mean": 2348,
            "median": 2353,
            "max": 2353
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 866,
            "mean": 4009,
            "median": 6866,
            "max": 6866
          },
          "exttload(bytes32)": {
            "calls": 40494,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 22829,
            "mean": 51317,
            "median": 50863,
            "max": 150451
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22376,
            "mean": 22376,
            "median": 22376,
            "max": 22376
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 962,
            "mean": 12757,
            "median": 12682,
            "max": 24702
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 45998,
            "mean": 45998,
            "median": 45998,
            "max": 45998
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29220,
            "mean": 31925,
            "median": 31840,
            "max": 32056
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 29994,
            "mean": 47025,
            "median": 47094,
            "max": 47094
          },
          "settle()": {
            "calls": 1,
            "min": 21412,
            "mean": 21412,
            "median": 21412,
            "max": 21412
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 950,
            "mean": 12648,
            "median": 12648,
            "max": 24347
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22394,
            "mean": 22394,
            "median": 22394,
            "max": 22394
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23223,
            "mean": 23223,
            "median": 23223,
            "max": 23223
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2152055,
          "size": 9688
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 43922,
            "mean": 78173,
            "median": 80731,
            "max": 99996
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 243312,
          "size": 908
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 2913,
            "mean": 4946,
            "median": 5455,
            "max": 5455
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 284,
            "mean": 4148,
            "median": 5436,
            "max": 5436
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "toId(address)": {
            "calls": 769,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24548,
            "mean": 52786,
            "median": 54388,
            "max": 56908
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 91071,
          "size": 204
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 240,
            "mean": 242,
            "median": 243,
            "max": 243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 482030,
          "size": 2012
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 901,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26638,
            "mean": 46627,
            "median": 46802,
            "max": 47198
          },
          "balanceOf(address,uint256)": {
            "calls": 2700,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24400,
            "mean": 24677,
            "median": 24640,
            "max": 29212
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26411,
            "mean": 32152,
            "median": 32082,
            "max": 38054
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24066,
            "mean": 46793,
            "median": 46898,
            "max": 47426
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25780,
            "mean": 40814,
            "median": 45932,
            "max": 45932
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24021,
            "mean": 38209,
            "median": 30167,
            "max": 52582
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24261,
            "mean": 42727,
            "median": 47545,
            "max": 60739
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1460225,
          "size": 6457
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 375,
            "mean": 1625,
            "median": 1625,
            "max": 2875
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 153549,
          "size": 536
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 188,
            "mean": 194,
            "median": 194,
            "max": 201
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 190,
            "mean": 190,
            "median": 190,
            "max": 190
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 455327,
          "size": 1994
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 75797,
            "mean": 75797,
            "median": 75797,
            "max": 75797
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 835540,
          "size": 3771
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 35188,
            "mean": 113484,
            "median": 135793,
            "max": 241365
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 194204,
          "size": 700
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29048,
            "mean": 29048,
            "median": 29048,
            "max": 29048
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1106586,
          "size": 5025
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 42324,
            "mean": 180016,
            "median": 174486,
            "max": 372691
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 126015,
            "mean": 141741,
            "median": 141741,
            "max": 157468
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 837106,
          "size": 3765
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 81468,
            "mean": 127346,
            "median": 156697,
            "max": 156697
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 15802
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69163,
            "mean": 76229,
            "median": 69163,
            "max": 89087
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 5115774,
          "size": 22396
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 37917,
            "mean": 127619,
            "median": 164200,
            "max": 208860
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1138915,
          "size": 5178
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 36974,
            "mean": 350955,
            "median": 134946,
            "max": 17262405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 658977,
          "size": 2960
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 38991,
            "mean": 58180,
            "median": 53793,
            "max": 78831
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 491599,
          "size": 2047
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24096,
            "mean": 43919,
            "median": 27106,
            "max": 62082
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "protocolFeesAccrued(address)": {
            "calls": 903,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 44675,
            "mean": 45307,
            "median": 45299,
            "max": 45695
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 24438,
            "mean": 28056,
            "median": 25656,
            "max": 32215
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23831,
            "mean": 46982,
            "median": 47027,
            "max": 47027
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22426,
            "mean": 38272,
            "median": 43966,
            "max": 44326
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 2434538,
          "size": 11244
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6836,
            "mean": 6836,
            "median": 6836,
            "max": 6836
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47094,
            "mean": 47094,
            "median": 47094,
            "max": 47094
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 535390,
          "size": 2367
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 104572,
            "mean": 111304,
            "median": 111304,
            "max": 118036
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 301989,
          "size": 1200
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46194,
            "mean": 46200,
            "median": 46200,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 364,
            "mean": 1697,
            "median": 2364,
            "max": 2364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 476750,
          "size": 1990
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 342,
            "mean": 431,
            "median": 342,
            "max": 1126
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 308,
            "mean": 520,
            "median": 308,
            "max": 2207
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 125707,
          "size": 365
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2374,
            "mean": 1016227,
            "median": 950404,
            "max": 2178174
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2516,
            "mean": 1041296,
            "median": 1000920,
            "max": 2181313
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 140891,
          "size": 436
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 123,
            "min": 328,
            "mean": 338,
            "median": 334,
            "max": 344
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 293,
            "mean": 320,
            "median": 331,
            "max": 338
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 114039,
          "size": 311
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 262,
            "mean": 307,
            "median": 307,
            "max": 319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "unix": {
    "solc": [
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 9441411,
          "size": 47190
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 3625037,
            "mean": 3625037,
            "median": 3625037,
            "max": 3625037
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 7359
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 66500,
            "mean": 66500,
            "median": 66500,
            "max": 66500
          },
          "stdout(string)": {
            "calls": 1,
            "min": 45601,
            "mean": 45601,
            "median": 45601,
            "max": 45601
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 8567395,
          "size": 42856
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 3349955,
            "mean": 3349955,
            "median": 3349955,
            "max": 3349955
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 6468
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 66587,
            "mean": 66587,
            "median": 66587,
            "max": 66587
          },
          "stdout(string)": {
            "calls": 1,
            "min": 45744,
            "mean": 45744,
            "median": 45744,
            "max": 45744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 6784627,
          "size": 33917
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 2663118,
            "mean": 2663118,
            "median": 2663118,
            "max": 2663118
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 5667
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 65597,
            "mean": 65597,
            "median": 65597,
            "max": 65597
          },
          "stdout(string)": {
            "calls": 1,
            "min": 44399,
            "mean": 44399,
            "median": 44399,
            "max": 44399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 6038059,
          "size": 30211
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 2364120,
            "mean": 2364120,
            "median": 2364120,
            "max": 2364120
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 5190
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 65612,
            "mean": 65612,
            "median": 65612,
            "max": 65612
          },
          "stdout(string)": {
            "calls": 1,
            "min": 44425,
            "mean": 44425,
            "median": 44425,
            "max": 44425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  }
};