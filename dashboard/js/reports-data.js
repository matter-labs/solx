// Auto-generated file from build.js
const REPORTS_DATA = {
  "aave-v3": {
    "solc": [
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 821471,
          "size": 3581
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2834,
            "mean": 2834,
            "median": 2834,
            "max": 2834
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 157262,
            "mean": 157262,
            "median": 157262,
            "max": 157262
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1079
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2295,
            "mean": 2295,
            "median": 2295,
            "max": 2295
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 547575,
          "size": 2789
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5091,
            "mean": 26846,
            "median": 7571,
            "max": 2412228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 504619,
          "size": 2090
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 781,
            "mean": 2381,
            "median": 2781,
            "max": 2781
          },
          "approve(address,uint256)": {
            "calls": 3547,
            "min": 28777,
            "mean": 44736,
            "median": 45985,
            "max": 46249
          },
          "balanceOf(address)": {
            "calls": 19583,
            "min": 530,
            "mean": 2526,
            "median": 2530,
            "max": 2530
          },
          "decimals()": {
            "calls": 2436,
            "min": 364,
            "mean": 2322,
            "median": 2364,
            "max": 2364
          },
          "deposit()": {
            "calls": 51,
            "min": 45033,
            "mean": 45033,
            "median": 45033,
            "max": 45033
          },
          "name()": {
            "calls": 16,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "symbol()": {
            "calls": 42,
            "min": 2835,
            "mean": 2835,
            "median": 2835,
            "max": 2835
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 46767,
            "mean": 46767,
            "median": 46767,
            "max": 46767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1589167,
          "size": 7707
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 333459,
            "mean": 423659,
            "median": 455038,
            "max": 482480
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 1692459,
          "size": 8257
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 35848,
            "mean": 35848,
            "median": 35848,
            "max": 35848
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 364475,
            "mean": 466364,
            "median": 490329,
            "max": 520324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1403419,
          "size": 6831
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 333470,
            "mean": 361396,
            "median": 354794,
            "max": 395925
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3183
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2384897,
            "mean": 2384897,
            "median": 2384897,
            "max": 2384897
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2516,
            "mean": 2516,
            "median": 2516,
            "max": 2516
          },
          "initialize()": {
            "calls": 795,
            "min": 23576,
            "mean": 24028,
            "median": 24040,
            "max": 24040
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 20870
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 5983,
            "mean": 5983,
            "median": 5983,
            "max": 5983
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "aToken()": {
            "calls": 1,
            "min": 3073,
            "mean": 3073,
            "median": 3073,
            "max": 3073
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 3713,
            "mean": 3713,
            "median": 3713,
            "max": 3713
          },
          "asset()": {
            "calls": 1,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2979,
            "mean": 2979,
            "median": 2979,
            "max": 2979
          },
          "canPause(address)": {
            "calls": 257,
            "min": 11936,
            "mean": 11936,
            "median": 11936,
            "max": 11936
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 328083,
            "mean": 328083,
            "median": 328083,
            "max": 328083
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 3523,
            "mean": 3523,
            "median": 3523,
            "max": 3523
          },
          "decimals()": {
            "calls": 1,
            "min": 2632,
            "mean": 2632,
            "median": 2632,
            "max": 2632
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 260332,
            "mean": 269532,
            "median": 269532,
            "max": 278732
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 160022,
            "mean": 160982,
            "median": 160022,
            "max": 201967
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 6401,
            "mean": 126600,
            "median": 127305,
            "max": 149156
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2787,
            "mean": 2787,
            "median": 2787,
            "max": 2787
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25918,
            "mean": 231162,
            "median": 231964,
            "max": 238964
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 28729,
            "mean": 28729,
            "median": 28729,
            "max": 28729
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 31799,
            "mean": 31799,
            "median": 31799,
            "max": 31799
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 260702,
            "mean": 260702,
            "median": 260702,
            "max": 260702
          },
          "name()": {
            "calls": 1,
            "min": 2834,
            "mean": 2834,
            "median": 2834,
            "max": 2834
          },
          "nonces(address)": {
            "calls": 3,
            "min": 3016,
            "mean": 3016,
            "median": 3016,
            "max": 3016
          },
          "paused()": {
            "calls": 2,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 1438,
            "mean": 30601,
            "median": 33112,
            "max": 57255
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 17531,
            "mean": 17531,
            "median": 17531,
            "max": 17531
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 34065,
            "mean": 108829,
            "median": 108829,
            "max": 183593
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 133394,
            "mean": 133394,
            "median": 133394,
            "max": 133394
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 156830,
            "mean": 156830,
            "median": 156830,
            "max": 156830
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 11479,
            "mean": 12100,
            "median": 11479,
            "max": 34847
          },
          "symbol()": {
            "calls": 1,
            "min": 3560,
            "mean": 3560,
            "median": 3560,
            "max": 3560
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 3340,
            "mean": 3340,
            "median": 3340,
            "max": 3340
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 37291,
            "mean": 37291,
            "median": 37291,
            "max": 37291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 8937
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 5,
            "min": 504,
            "mean": 504,
            "median": 504,
            "max": 504
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 1,
            "min": 351481,
            "mean": 351481,
            "median": 351481,
            "max": 351481
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 1,
            "min": 1546950,
            "mean": 1546950,
            "median": 1546950,
            "max": 1546950
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 770,
            "min": 1545936,
            "mean": 4436163,
            "median": 4439200,
            "max": 4449298
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 192775,
            "mean": 192775,
            "median": 192775,
            "max": 192775
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 18883,
            "mean": 79883,
            "median": 79883,
            "max": 140884
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 60540,
            "mean": 60540,
            "median": 60540,
            "max": 60540
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 6565,
            "mean": 29287,
            "median": 6874,
            "max": 63217
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 21282,
            "mean": 35048,
            "median": 24569,
            "max": 69773
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 38541,
            "mean": 38541,
            "median": 38541,
            "max": 38541
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 114697,
            "mean": 114697,
            "median": 114697,
            "max": 114697
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7173
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2594,
            "min": 4310,
            "mean": 7590,
            "median": 6310,
            "max": 31548
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 12075,
            "mean": 12075,
            "median": 12075,
            "max": 12075
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 12417,
            "mean": 12417,
            "median": 12417,
            "max": 12417
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 6,
            "min": 8693,
            "mean": 8693,
            "median": 8693,
            "max": 8693
          },
          "getIsVirtualAccActive(address)": {
            "calls": 9082,
            "min": 669,
            "mean": 669,
            "median": 669,
            "max": 669
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 12097,
            "mean": 12097,
            "median": 12097,
            "max": 12097
          },
          "getPaused(address)": {
            "calls": 9349,
            "min": 12430,
            "mean": 12430,
            "median": 12430,
            "max": 12540
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 12160,
            "mean": 12160,
            "median": 12160,
            "max": 12160
          },
          "getReserveConfigurationData(address)": {
            "calls": 10678,
            "min": 12398,
            "mean": 12398,
            "median": 12398,
            "max": 12508
          },
          "getReserveTokensAddresses(address)": {
            "calls": 9199,
            "min": 15945,
            "mean": 15945,
            "median": 15945,
            "max": 16055
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 12480,
            "mean": 12480,
            "median": 12480,
            "max": 12480
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 5890,
            "mean": 23545,
            "median": 29431,
            "max": 29431
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 514,
            "mean": 514,
            "median": 514,
            "max": 514
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 66962,
            "mean": 67207,
            "median": 67203,
            "max": 71032
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 11474,
            "mean": 11474,
            "median": 11474,
            "max": 11474
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3052
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 34887,
            "mean": 34887,
            "median": 34887,
            "max": 34887
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 57928,
            "mean": 57928,
            "median": 57928,
            "max": 57928
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 34920,
            "mean": 34920,
            "median": 34920,
            "max": 34920
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 34898,
            "mean": 34898,
            "median": 34898,
            "max": 34898
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35344,
            "mean": 35344,
            "median": 35344,
            "max": 35344
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 34901,
            "mean": 34901,
            "median": 34901,
            "max": 34901
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 35003,
            "mean": 35003,
            "median": 35003,
            "max": 35003
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35141,
            "mean": 35141,
            "median": 35141,
            "max": 35141
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 34767,
            "mean": 34805,
            "median": 34805,
            "max": 34844
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1631192,
          "size": 7642
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 179914,
            "mean": 180200,
            "median": 180200,
            "max": 180487
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 149551,
            "mean": 179312,
            "median": 181231,
            "max": 220296
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 4835
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 239089,
            "mean": 242378,
            "median": 242378,
            "max": 245668
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 196631,
            "mean": 231568,
            "median": 235450,
            "max": 235450
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33800,
            "mean": 33800,
            "median": 33800,
            "max": 33800
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52705,
            "mean": 52705,
            "median": 52705,
            "max": 52705
          },
          "fallback()": {
            "calls": 2,
            "min": 21703,
            "mean": 21703,
            "median": 21703,
            "max": 21703
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 332,
            "mean": 332,
            "median": 332,
            "max": 332
          },
          "owner()": {
            "calls": 2,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "receive()": {
            "calls": 1,
            "min": 21206,
            "mean": 21206,
            "median": 21206,
            "max": 21206
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 152537,
            "mean": 158991,
            "median": 155633,
            "max": 171773
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 222610,
            "mean": 234121,
            "median": 228580,
            "max": 251174
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 240812,
            "mean": 259066,
            "median": 265302,
            "max": 271084
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2280428,
          "size": 11226
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2529,
            "mean": 2536,
            "median": 2529,
            "max": 3478
          },
          "POOL()": {
            "calls": 107,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 11924,
            "min": 684,
            "mean": 684,
            "median": 684,
            "max": 684
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 794,
            "mean": 794,
            "median": 794,
            "max": 794
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 9172,
            "min": 2812,
            "mean": 2812,
            "median": 2812,
            "max": 2812
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 3278,
            "mean": 3278,
            "median": 3278,
            "max": 3278
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24371,
            "mean": 24371,
            "median": 24371,
            "max": 24371
          },
          "balanceOf(address)": {
            "calls": 18085,
            "min": 3802,
            "mean": 12580,
            "median": 18802,
            "max": 19043
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 1105,
            "mean": 40892,
            "median": 35388,
            "max": 61488
          },
          "decimals()": {
            "calls": 9872,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7905,
            "mean": 7905,
            "median": 7905,
            "max": 7905
          },
          "getIncentivesController()": {
            "calls": 9080,
            "min": 508,
            "mean": 508,
            "median": 508,
            "max": 508
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 3136,
            "mean": 3136,
            "median": 3136,
            "max": 3136
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 587,
            "mean": 4326,
            "median": 4587,
            "max": 4587
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7685,
            "mean": 21675,
            "median": 24785,
            "max": 24785
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44666,
            "min": 123835,
            "mean": 205332,
            "median": 208832,
            "max": 298961
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 992,
            "mean": 58705,
            "median": 62245,
            "max": 69863
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 637,
            "mean": 41200,
            "median": 44807,
            "max": 61907
          },
          "name()": {
            "calls": 9242,
            "min": 2786,
            "mean": 5006,
            "median": 2795,
            "max": 9404
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2803,
            "mean": 2803,
            "median": 2803,
            "max": 2803
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 1157,
            "mean": 24671,
            "median": 9748,
            "max": 53997
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 12474,
            "mean": 24913,
            "median": 14653,
            "max": 47612
          },
          "scaledBalanceOf(address)": {
            "calls": 26198,
            "min": 535,
            "mean": 2284,
            "median": 2535,
            "max": 2535
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 810,
            "mean": 2017,
            "median": 2810,
            "max": 2810
          },
          "symbol()": {
            "calls": 9223,
            "min": 3245,
            "mean": 5501,
            "median": 3254,
            "max": 9836
          },
          "totalSupply()": {
            "calls": 9982,
            "min": 399,
            "mean": 6233,
            "median": 7396,
            "max": 18637
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 781,
            "mean": 104311,
            "median": 109642,
            "max": 179296
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2901,
            "mean": 94745,
            "median": 112642,
            "max": 149022
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 1011,
            "mean": 30215,
            "median": 34832,
            "max": 41859
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 557,
            "mean": 28035,
            "median": 33637,
            "max": 33637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 20580
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2366,
            "mean": 2366,
            "median": 2366,
            "max": 2366
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 3771,
            "mean": 25530,
            "median": 25605,
            "max": 25605
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 190968,
            "mean": 197871,
            "median": 196568,
            "max": 240250
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 197029,
            "mean": 197029,
            "median": 197029,
            "max": 197029
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 6585,
            "mean": 28572,
            "median": 49974,
            "max": 49974
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 25284,
            "mean": 25284,
            "median": 25284,
            "max": 25284
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 7335,
            "mean": 7335,
            "median": 7335,
            "max": 7335
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 6311,
            "mean": 6595,
            "median": 6311,
            "max": 79509
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 1806,
            "mean": 1824,
            "median": 1806,
            "max": 3806
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 3180,
            "mean": 3180,
            "median": 3180,
            "max": 3180
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 3488,
            "mean": 3488,
            "median": 3488,
            "max": 3488
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 1696,
            "mean": 1696,
            "median": 1696,
            "max": 1696
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 398,
            "mean": 398,
            "median": 398,
            "max": 398
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 970,
            "mean": 970,
            "median": 970,
            "max": 970
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 1520,
            "mean": 1520,
            "median": 1520,
            "max": 1520
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 1707,
            "mean": 1753,
            "median": 1707,
            "max": 3707
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 6449,
            "mean": 21481,
            "median": 22449,
            "max": 24949
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 1937,
            "mean": 1967,
            "median": 1937,
            "max": 5937
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 888,
            "mean": 3617,
            "median": 4117,
            "max": 5347
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getReservesList()": {
            "calls": 2,
            "min": 12477,
            "mean": 12477,
            "median": 12477,
            "max": 12477
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 904,
            "mean": 904,
            "median": 904,
            "max": 904
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 82632,
            "mean": 82632,
            "median": 82632,
            "max": 82632
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 3057,
            "mean": 3057,
            "median": 3057,
            "max": 3057
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 6769,
            "mean": 39740,
            "median": 6769,
            "max": 146008
          },
          "initialize(address)": {
            "calls": 69,
            "min": 46346,
            "mean": 46346,
            "median": 46346,
            "max": 46346
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 4192,
            "mean": 4192,
            "median": 4192,
            "max": 4192
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 370379,
            "mean": 370379,
            "median": 370379,
            "max": 370379
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 73772,
            "mean": 75170,
            "median": 75170,
            "max": 76568
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 220579,
            "mean": 220579,
            "median": 220579,
            "max": 220579
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 8824,
            "mean": 8824,
            "median": 8824,
            "max": 8824
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 125560,
            "mean": 125560,
            "median": 125560,
            "max": 125560
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 117786,
            "mean": 117786,
            "median": 117786,
            "max": 117786
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 131027,
            "mean": 131027,
            "median": 131027,
            "max": 131027
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 164179,
            "mean": 170775,
            "median": 170509,
            "max": 172628
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 49431,
            "mean": 49431,
            "median": 49431,
            "max": 49431
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 5494,
            "mean": 6577,
            "median": 7213,
            "max": 16494
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 3361,
            "mean": 5690,
            "median": 3361,
            "max": 25581
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 6918,
            "mean": 12096,
            "median": 11432,
            "max": 18015
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 19160,
            "mean": 40020,
            "median": 38779,
            "max": 84189
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2934,
            "mean": 3083,
            "median": 2934,
            "max": 41363
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 11354,
            "mean": 12768,
            "median": 11354,
            "max": 59429
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 27193,
            "mean": 27193,
            "median": 27193,
            "max": 27193
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 3535,
            "mean": 4300,
            "median": 3535,
            "max": 57629
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 151794,
            "mean": 202594,
            "median": 203094,
            "max": 203094
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 206211,
            "mean": 206211,
            "median": 206211,
            "max": 206211
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 254392,
            "mean": 254392,
            "median": 254392,
            "max": 254392
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 9504,
            "mean": 16137,
            "median": 9504,
            "max": 29404
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 15790,
            "mean": 15790,
            "median": 15790,
            "max": 15790
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 6684,
            "mean": 10001,
            "median": 6684,
            "max": 22308
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 120135,
            "mean": 122555,
            "median": 122555,
            "max": 124976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3605346,
          "size": 16354
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4619,
            "min": 14638,
            "mean": 26343,
            "median": 17636,
            "max": 88984
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 17128,
            "mean": 28917,
            "median": 31184,
            "max": 40689
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 14133,
            "mean": 14986,
            "median": 14133,
            "max": 102394
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 596,
            "mean": 596,
            "median": 596,
            "max": 596
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2803,
            "mean": 2803,
            "median": 2803,
            "max": 2803
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2820,
            "min": 17324,
            "mean": 20464309,
            "median": 1372919,
            "max": 180529564
          },
          "initialize(address)": {
            "calls": 803,
            "min": 72898,
            "mean": 90753,
            "median": 90798,
            "max": 90798
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1810,
            "min": 20355,
            "mean": 84212,
            "median": 84255,
            "max": 98524
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3895,
            "min": 18032,
            "mean": 71697,
            "median": 81628,
            "max": 81936
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2576,
            "min": 13951,
            "mean": 14545,
            "median": 13951,
            "max": 46971
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2327,
            "min": 13153,
            "mean": 13459,
            "median": 13153,
            "max": 46426
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2584,
            "min": 17753,
            "mean": 38754,
            "median": 38480,
            "max": 88433
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3381,
            "min": 17726,
            "mean": 77186,
            "median": 82249,
            "max": 82315
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2318,
            "min": 13506,
            "mean": 13680,
            "median": 13506,
            "max": 46526
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 17380,
            "mean": 17853,
            "median": 17380,
            "max": 98638
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 17130,
            "mean": 66324,
            "median": 65855,
            "max": 118705
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 14535,
            "mean": 17350,
            "median": 14535,
            "max": 85242
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3340,
            "min": 13420,
            "mean": 20928,
            "median": 13640,
            "max": 44231
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2568,
            "min": 17442,
            "mean": 44792,
            "median": 41063,
            "max": 111154
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2823,
            "min": 13772,
            "mean": 19446,
            "median": 13772,
            "max": 46803
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 20932,
            "mean": 50029,
            "median": 55722,
            "max": 75828
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 17744,
            "mean": 29556,
            "median": 17744,
            "max": 98286
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 17332,
            "mean": 31568,
            "median": 45749,
            "max": 45749
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 14702,
            "mean": 41494,
            "median": 50491,
            "max": 52920
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2315,
            "min": 13956,
            "mean": 14141,
            "median": 13956,
            "max": 73869
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2839,
            "min": 13555,
            "mean": 17689,
            "median": 13555,
            "max": 46575
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 13972,
            "mean": 29321,
            "median": 13972,
            "max": 109515
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1059,
            "min": 14353,
            "mean": 27376,
            "median": 31534,
            "max": 36434
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 14500,
            "mean": 14865,
            "median": 14500,
            "max": 108316
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4200588,
          "size": 19540
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6411,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 749,
            "min": 2366,
            "mean": 2366,
            "median": 2366,
            "max": 2366
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 685,
            "mean": 685,
            "median": 685,
            "max": 685
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 1565,
            "mean": 1565,
            "median": 1565,
            "max": 1565
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46804,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 3661,
            "mean": 25420,
            "median": 25495,
            "max": 25495
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 21988,
            "mean": 216812,
            "median": 225006,
            "max": 297228
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3112,
            "min": 6519,
            "mean": 46288,
            "median": 49908,
            "max": 49908
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1808,
            "min": 3186,
            "mean": 25051,
            "median": 25086,
            "max": 25086
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3113,
            "min": 2447,
            "mean": 7242,
            "median": 7247,
            "max": 7247
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 33916,
            "mean": 194650,
            "median": 203857,
            "max": 203857
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 6267,
            "mean": 7081,
            "median": 6267,
            "max": 79465
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 6522,
            "mean": 54865,
            "median": 96034,
            "max": 104775
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 9744,
            "mean": 49566,
            "median": 52370,
            "max": 111024
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 29486,
            "mean": 105469,
            "median": 77216,
            "max": 504486
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 23508,
            "mean": 293554,
            "median": 159442,
            "max": 687334
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "getConfiguration(address)": {
            "calls": 51258,
            "min": 1696,
            "mean": 2850,
            "median": 3696,
            "max": 3696
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1842,
            "min": 1092,
            "mean": 3087,
            "median": 3092,
            "max": 3092
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4700,
            "min": 1378,
            "mean": 3375,
            "median": 3378,
            "max": 3378
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 123,
            "min": 2138,
            "mean": 4105,
            "median": 4138,
            "max": 4138
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 4331,
            "mean": 5661,
            "median": 6322,
            "max": 6331
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 30,
            "min": 3086,
            "mean": 3086,
            "median": 3086,
            "max": 3086
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 1542,
            "mean": 1542,
            "median": 1542,
            "max": 1542
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 398,
            "mean": 398,
            "median": 398,
            "max": 398
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5601,
            "min": 865,
            "mean": 1569,
            "median": 865,
            "max": 2865
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 882,
            "mean": 882,
            "median": 882,
            "max": 882
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 1410,
            "mean": 1410,
            "median": 1410,
            "max": 1410
          },
          "getReserveAToken(address)": {
            "calls": 21069,
            "min": 1597,
            "mean": 3194,
            "median": 3597,
            "max": 3597
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2775,
            "mean": 2775,
            "median": 2775,
            "max": 2775
          },
          "getReserveData(address)": {
            "calls": 14593,
            "min": 4449,
            "mean": 18134,
            "median": 22449,
            "max": 24949
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 1553,
            "mean": 3401,
            "median": 3553,
            "max": 3553
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42008,
            "min": 1827,
            "mean": 3330,
            "median": 1827,
            "max": 6068
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4084,
            "min": 888,
            "mean": 2654,
            "median": 888,
            "max": 5347
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 13897,
            "min": 695,
            "mean": 2434,
            "median": 2695,
            "max": 2695
          },
          "getReservesList()": {
            "calls": 3685,
            "min": 4367,
            "mean": 19279,
            "median": 12367,
            "max": 363252
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 838,
            "mean": 838,
            "median": 838,
            "max": 838
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 5473,
            "mean": 66573,
            "median": 82501,
            "max": 125486
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 948,
            "mean": 2026,
            "median": 2948,
            "max": 2948
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 1733,
            "mean": 2524,
            "median": 1733,
            "max": 3733
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1939,
            "min": 991,
            "mean": 2718,
            "median": 2991,
            "max": 2991
          },
          "initReserve(address,address,address)": {
            "calls": 45013,
            "min": 6681,
            "mean": 159055,
            "median": 158596,
            "max": 187172
          },
          "initialize(address)": {
            "calls": 740,
            "min": 27257,
            "mean": 46183,
            "median": 46236,
            "max": 46236
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 4016,
            "mean": 4016,
            "median": 4016,
            "max": 4016
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6378,
            "min": 29012,
            "mean": 256519,
            "median": 299156,
            "max": 453726
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 3187,
            "mean": 48969,
            "median": 52162,
            "max": 133736
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 154234,
            "mean": 219511,
            "median": 220322,
            "max": 480549
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 8626,
            "mean": 8626,
            "median": 8626,
            "max": 8626
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 15328,
            "mean": 90977,
            "median": 97202,
            "max": 126848
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 80288,
            "mean": 126180,
            "median": 126443,
            "max": 138252
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 117194,
            "mean": 142049,
            "median": 131324,
            "max": 172947
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 49321,
            "mean": 49321,
            "median": 49321,
            "max": 49321
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2403,
            "min": 5340,
            "mean": 5532,
            "median": 5340,
            "max": 16340
          },
          "setConfiguration(address,(uint256))": {
            "calls": 72216,
            "min": 3207,
            "mean": 17136,
            "median": 25207,
            "max": 25427
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3469,
            "min": 5896,
            "mean": 13103,
            "median": 13405,
            "max": 17905
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 5606,
            "mean": 44925,
            "median": 38778,
            "max": 109414
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2934,
            "mean": 3835,
            "median": 2934,
            "max": 111999
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 7280,
            "mean": 14183,
            "median": 11280,
            "max": 92164
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 3425,
            "mean": 4482,
            "median": 3425,
            "max": 57530
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 30336,
            "mean": 184861,
            "median": 203021,
            "max": 210639
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 109600,
            "mean": 191221,
            "median": 212280,
            "max": 251784
          },
          "syncIndexesState(address)": {
            "calls": 2190,
            "min": 9394,
            "mean": 16371,
            "median": 9394,
            "max": 48817
          },
          "syncRatesState(address)": {
            "calls": 2190,
            "min": 15680,
            "mean": 15739,
            "median": 15680,
            "max": 20180
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 989,
            "min": 6574,
            "mean": 18138,
            "median": 22198,
            "max": 22198
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 35003,
            "mean": 129483,
            "median": 131689,
            "max": 195367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1681536,
          "size": 8296
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 9077,
            "min": 2724,
            "mean": 2724,
            "median": 2724,
            "max": 2724
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 27328,
            "mean": 27328,
            "median": 27328,
            "max": 27328
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 773,
            "mean": 9953,
            "median": 4843,
            "max": 18302
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2836,
            "mean": 2836,
            "median": 2836,
            "max": 2836
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 12429,
            "mean": 24218,
            "median": 24229,
            "max": 24229
          },
          "decimals()": {
            "calls": 9849,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 563,
            "mean": 28492,
            "median": 21636,
            "max": 55836
          },
          "getIncentivesController()": {
            "calls": 9077,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44666,
            "min": 123203,
            "mean": 207522,
            "median": 208198,
            "max": 298321
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 23973,
            "mean": 60073,
            "median": 60173,
            "max": 69831
          },
          "name()": {
            "calls": 9164,
            "min": 2786,
            "mean": 5057,
            "median": 2795,
            "max": 9404
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "scaledBalanceOf(address)": {
            "calls": 18693,
            "min": 535,
            "mean": 1813,
            "median": 2535,
            "max": 2535
          },
          "scaledTotalSupply()": {
            "calls": 44910,
            "min": 722,
            "mean": 2613,
            "median": 2722,
            "max": 2722
          },
          "symbol()": {
            "calls": 9157,
            "min": 3179,
            "mean": 5395,
            "median": 3188,
            "max": 9770
          },
          "totalSupply()": {
            "calls": 190,
            "min": 2444,
            "mean": 5689,
            "median": 6444,
            "max": 17903
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3198
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "getAssetPrice(address)": {
            "calls": 58318,
            "min": 0,
            "mean": 5630,
            "median": 7844,
            "max": 15297
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5593,
            "mean": 7589,
            "median": 8588,
            "max": 8588
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "getSourceOfAsset(address)": {
            "calls": 1140,
            "min": 2511,
            "mean": 2511,
            "median": 2511,
            "max": 2511
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 36938,
            "mean": 58426,
            "median": 61291,
            "max": 62411
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 59369,
            "mean": 59369,
            "median": 59369,
            "max": 59369
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 814671,
          "size": 3715
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42573,
            "min": 0,
            "mean": 4211,
            "median": 3990,
            "max": 5335
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2905,
            "min": 2743,
            "mean": 2743,
            "median": 2743,
            "max": 2743
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3694,
            "mean": 3694,
            "median": 3694,
            "max": 3694
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1361,
            "min": 2983,
            "mean": 2983,
            "median": 2983,
            "max": 2983
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2133,
            "min": 2671,
            "mean": 2671,
            "median": 2671,
            "max": 2671
          },
          "getVariableRateSlope1(address)": {
            "calls": 2137,
            "min": 2545,
            "mean": 2545,
            "median": 2545,
            "max": 2545
          },
          "getVariableRateSlope2(address)": {
            "calls": 1365,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 28060,
            "mean": 29408,
            "median": 28716,
            "max": 36701
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 28327,
            "mean": 32876,
            "median": 29512,
            "max": 37081
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 392243,
          "size": 1638
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 9953,
            "mean": 10807,
            "median": 9953,
            "max": 12088
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 9975,
            "mean": 10829,
            "median": 9975,
            "max": 12110
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 36233,
            "mean": 39241,
            "median": 39241,
            "max": 42249
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 32908,
            "mean": 33524,
            "median": 33524,
            "max": 34140
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 339168,
          "size": 1510
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21371,
            "mean": 21371,
            "median": 21371,
            "max": 21371
          },
          "fallback()": {
            "calls": 558653,
            "min": 0,
            "mean": 123710,
            "median": 7733,
            "max": 181689354
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26731,
            "mean": 28626,
            "median": 28626,
            "max": 30522
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28589,
            "mean": 151970,
            "median": 186652,
            "max": 186652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 475114,
          "size": 2236
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43523,
            "mean": 43523,
            "median": 43523,
            "max": 43523
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43654,
            "mean": 43654,
            "median": 43654,
            "max": 43654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 349321,
          "size": 1653
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43545,
            "mean": 43545,
            "median": 43545,
            "max": 43545
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43654,
            "mean": 43654,
            "median": 43654,
            "max": 43654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4256273,
          "size": 19708
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 29158,
            "mean": 29158,
            "median": 29158,
            "max": 29158
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 113748,
          "size": 336
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "decimals()": {
            "calls": 80,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "description()": {
            "calls": 80,
            "min": 152,
            "mean": 152,
            "median": 152,
            "max": 152
          },
          "latestAnswer()": {
            "calls": 56474,
            "min": 277,
            "mean": 1744,
            "median": 2277,
            "max": 2277
          },
          "name()": {
            "calls": 80,
            "min": 152,
            "mean": 152,
            "median": 152,
            "max": 152
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 133239,
          "size": 396
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25625,
            "mean": 38919,
            "median": 45561,
            "max": 45573
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 227580,
          "size": 1010
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4532,
            "mean": 4542,
            "median": 4549,
            "max": 4549
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26034,
            "mean": 27230,
            "median": 26034,
            "max": 45946
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 422133,
          "size": 1732
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133299,
            "mean": 133299,
            "median": 133299,
            "max": 133299
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133367,
            "mean": 133380,
            "median": 133391,
            "max": 133391
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 85510,
          "size": 297
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1024440,
          "size": 5517
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 991,
            "mean": 2102,
            "median": 2991,
            "max": 2991
          },
          "approve(address,uint256)": {
            "calls": 23006,
            "min": 26032,
            "mean": 45540,
            "median": 46076,
            "max": 46316
          },
          "balanceOf(address)": {
            "calls": 89423,
            "min": 603,
            "mean": 2601,
            "median": 2603,
            "max": 2603
          },
          "decimals()": {
            "calls": 82291,
            "min": 372,
            "mean": 2367,
            "median": 2372,
            "max": 2372
          },
          "mint(address,uint256)": {
            "calls": 6452,
            "min": 36229,
            "mean": 62367,
            "median": 70441,
            "max": 70549
          },
          "name()": {
            "calls": 2080,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2670,
            "mean": 2670,
            "median": 2670,
            "max": 2670
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 76519,
            "mean": 76574,
            "median": 76567,
            "max": 76723
          },
          "symbol()": {
            "calls": 86,
            "min": 3049,
            "mean": 3049,
            "median": 3049,
            "max": 3049
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46940,
            "mean": 51032,
            "median": 51716,
            "max": 51716
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28773,
            "mean": 28773,
            "median": 28773,
            "max": 28773
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 109021,
          "size": 283
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 428,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 666,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 219,
            "mean": 253,
            "median": 256,
            "max": 256
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 247,
            "mean": 274,
            "median": 287,
            "max": 287
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 230240,
          "size": 848
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "HALF_WAD()": {
            "calls": 439,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "RAY()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "WAD()": {
            "calls": 652,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "WAD_RAY_RATIO()": {
            "calls": 1768,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 231,
            "mean": 235,
            "median": 231,
            "max": 249
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 426,
            "mean": 457,
            "median": 463,
            "max": 463
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 335,
            "mean": 364,
            "median": 375,
            "max": 375
          },
          "wadToRay(uint256)": {
            "calls": 491,
            "min": 175,
            "mean": 194,
            "median": 196,
            "max": 196
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2349985,
          "size": 11547
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 728,
            "mean": 728,
            "median": 728,
            "max": 728
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 552,
            "mean": 552,
            "median": 552,
            "max": 552
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 56081,
            "mean": 56081,
            "median": 56081,
            "max": 56081
          },
          "name()": {
            "calls": 1,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67988,
            "mean": 67988,
            "median": 67988,
            "max": 67988
          },
          "symbol()": {
            "calls": 1,
            "min": 3298,
            "mean": 3298,
            "median": 3298,
            "max": 3298
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 63822,
            "mean": 63822,
            "median": 63822,
            "max": 63822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1681508,
          "size": 8295
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 55404,
            "mean": 55404,
            "median": 55404,
            "max": 55404
          },
          "name()": {
            "calls": 1,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "symbol()": {
            "calls": 1,
            "min": 3188,
            "mean": 3188,
            "median": 3188,
            "max": 3188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 413421,
          "size": 1594
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 156865,
            "mean": 156865,
            "median": 156865,
            "max": 156865
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5195,
            "mean": 5195,
            "median": 5195,
            "max": 5195
          },
          "text()": {
            "calls": 6,
            "min": 2711,
            "mean": 2711,
            "median": 2711,
            "max": 2711
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "value()": {
            "calls": 7,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4519,
            "mean": 4519,
            "median": 4519,
            "max": 4519
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 413853,
          "size": 1596
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51465,
            "mean": 51465,
            "median": 51465,
            "max": 51465
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5195,
            "mean": 5195,
            "median": 5195,
            "max": 5195
          },
          "text()": {
            "calls": 2,
            "min": 2711,
            "mean": 2711,
            "median": 2711,
            "max": 2711
          },
          "value()": {
            "calls": 4,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4519,
            "mean": 4519,
            "median": 4519,
            "max": 4519
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132032,
          "size": 291
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 44876,
            "mean": 44876,
            "median": 44876,
            "max": 44876
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 132032,
          "size": 291
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 27776,
            "mean": 27776,
            "median": 27776,
            "max": 27776
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1372170,
          "size": 6407
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1622,
            "min": 724,
            "mean": 724,
            "median": 724,
            "max": 724
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 801,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 51063,
            "mean": 51063,
            "median": 51063,
            "max": 51063
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 51041,
            "mean": 51041,
            "median": 51041,
            "max": 51041
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50623,
            "mean": 50623,
            "median": 50623,
            "max": 50623
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 48746,
            "mean": 50500,
            "median": 51085,
            "max": 51085
          },
          "addPoolAdmin(address)": {
            "calls": 789,
            "min": 50655,
            "mean": 50666,
            "median": 50667,
            "max": 50667
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 50865,
            "mean": 50865,
            "median": 50865,
            "max": 50865
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 48954,
            "mean": 51050,
            "median": 51350,
            "max": 51350
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "isAssetListingAdmin(address)": {
            "calls": 3880,
            "min": 535,
            "mean": 2137,
            "median": 2535,
            "max": 2535
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2645,
            "mean": 2645,
            "median": 2645,
            "max": 2645
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 3170,
            "mean": 3170,
            "median": 3170,
            "max": 3170
          },
          "isPoolAdmin(address)": {
            "calls": 56584,
            "min": 931,
            "mean": 2022,
            "median": 2931,
            "max": 2931
          },
          "isRiskAdmin(address)": {
            "calls": 41039,
            "min": 821,
            "mean": 1732,
            "median": 821,
            "max": 2821
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 29220,
            "mean": 29220,
            "median": 29220,
            "max": 29220
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 28648,
            "mean": 28648,
            "median": 28648,
            "max": 28648
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 29066,
            "mean": 29066,
            "median": 29066,
            "max": 29066
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 28824,
            "mean": 38609,
            "median": 38609,
            "max": 48394
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 29285,
            "mean": 29285,
            "median": 29285,
            "max": 29285
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28890,
            "mean": 28890,
            "median": 28890,
            "max": 28890
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 46613,
            "mean": 48325,
            "median": 48668,
            "max": 48668
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1582423,
          "size": 8012
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1088,
            "min": 319,
            "mean": 846,
            "median": 319,
            "max": 2319
          },
          "getACLManager()": {
            "calls": 51761,
            "min": 531,
            "mean": 1537,
            "median": 2531,
            "max": 2531
          },
          "getAddress(bytes32)": {
            "calls": 18685,
            "min": 377,
            "mean": 1905,
            "median": 2377,
            "max": 2377
          },
          "getMarketId()": {
            "calls": 6,
            "min": 2873,
            "mean": 2873,
            "median": 2873,
            "max": 2873
          },
          "getPool()": {
            "calls": 2619,
            "min": 297,
            "mean": 1020,
            "median": 297,
            "max": 2297
          },
          "getPoolConfigurator()": {
            "calls": 197180,
            "min": 509,
            "mean": 826,
            "median": 509,
            "max": 2509
          },
          "getPoolDataProvider()": {
            "calls": 2628,
            "min": 729,
            "mean": 1558,
            "median": 729,
            "max": 2729
          },
          "getPriceOracle()": {
            "calls": 33067,
            "min": 812,
            "mean": 2667,
            "median": 2812,
            "max": 2812
          },
          "getPriceOracleSentinel()": {
            "calls": 15831,
            "min": 487,
            "mean": 2486,
            "median": 2487,
            "max": 2487
          },
          "owner()": {
            "calls": 804,
            "min": 2538,
            "mean": 2538,
            "median": 2538,
            "max": 2538
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 24115,
            "mean": 47320,
            "median": 47967,
            "max": 47967
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 24269,
            "mean": 37883,
            "median": 39571,
            "max": 48121
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24699,
            "mean": 48519,
            "median": 48638,
            "max": 48914
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24275,
            "mean": 181039,
            "median": 56442,
            "max": 399989
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24634,
            "mean": 28465,
            "median": 28465,
            "max": 32296
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 24225,
            "mean": 233648,
            "median": 241748,
            "max": 426872
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 24203,
            "mean": 37817,
            "median": 39505,
            "max": 48055
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 24159,
            "mean": 220254,
            "median": 228358,
            "max": 400144
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 23936,
            "mean": 37391,
            "median": 39026,
            "max": 47576
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 24093,
            "mean": 41119,
            "median": 47945,
            "max": 47945
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 1982
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2506,
            "mean": 4813,
            "median": 4813,
            "max": 7120
          },
          "owner()": {
            "calls": 801,
            "min": 2359,
            "mean": 2359,
            "median": 2359,
            "max": 2359
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 24123,
            "mean": 103955,
            "median": 119922,
            "max": 119922
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 26014,
            "mean": 38822,
            "median": 39852,
            "max": 49570
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 716541,
          "size": 3270
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 210941,
            "mean": 284128,
            "median": 284098,
            "max": 289806
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "owner()": {
            "calls": 2,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 59330,
            "mean": 59330,
            "median": 59330,
            "max": 59330
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43937,
            "mean": 43937,
            "median": 43937,
            "max": 43937
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48659,
            "mean": 48666,
            "median": 48671,
            "max": 48671
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 60623,
            "mean": 60623,
            "median": 60623,
            "max": 60623
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46814,
            "mean": 46814,
            "median": 46814,
            "max": 46814
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28754,
            "mean": 28754,
            "median": 28754,
            "max": 28754
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 44916,
            "mean": 44916,
            "median": 44916,
            "max": 44916
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 2421138,
          "size": 11056
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 804,
            "min": 728,
            "mean": 728,
            "median": 728,
            "max": 728
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 91344,
            "mean": 91344,
            "median": 91344,
            "max": 91344
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 93626,
            "mean": 93626,
            "median": 93626,
            "max": 93626
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 91221,
            "mean": 91221,
            "median": 91221,
            "max": 91221
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 706,
            "min": 682,
            "mean": 72359,
            "median": 83390,
            "max": 118726
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 86736,
            "mean": 86736,
            "median": 86736,
            "max": 86736
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 84345,
            "mean": 84345,
            "median": 84345,
            "max": 84345
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 173758,
            "mean": 246958,
            "median": 246939,
            "max": 252623
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 29065,
            "mean": 29065,
            "median": 29065,
            "max": 29065
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "getAssetIndex(address,address)": {
            "calls": 9788,
            "min": 3170,
            "mean": 10704,
            "median": 11045,
            "max": 16503
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 508,
            "mean": 508,
            "median": 508,
            "max": 508
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 3163,
            "mean": 5606,
            "median": 5692,
            "max": 8221
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 2998,
            "mean": 2998,
            "median": 2998,
            "max": 2998
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 5301,
            "mean": 5301,
            "median": 5301,
            "max": 5301
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 7506,
            "mean": 7506,
            "median": 7506,
            "max": 7506
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 2861,
            "mean": 2861,
            "median": 2861,
            "max": 2861
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 12161,
            "mean": 18015,
            "median": 17936,
            "max": 22978
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 605,
            "mean": 2231,
            "median": 2605,
            "max": 37505
          },
          "initialize(address)": {
            "calls": 801,
            "min": 26426,
            "mean": 45391,
            "median": 45415,
            "max": 45415
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24708,
            "mean": 24708,
            "median": 24708,
            "max": 24708
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 9139,
            "mean": 9139,
            "median": 9139,
            "max": 9139
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 24251,
            "mean": 24251,
            "median": 24251,
            "max": 24251
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12345,
            "mean": 12345,
            "median": 12345,
            "max": 12345
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 10257,
            "mean": 10257,
            "median": 10257,
            "max": 10257
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 285742,
          "size": 1373
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 479112,
          "size": 2642
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25848,
            "mean": 25848,
            "median": 25848,
            "max": 25848
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52701,
            "mean": 52701,
            "median": 52701,
            "max": 52701
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 26927,
            "mean": 26927,
            "median": 26927,
            "max": 26927
          },
          "renewApproval()": {
            "calls": 1,
            "min": 28024,
            "mean": 28024,
            "median": 28024,
            "max": 28024
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1310611,
          "size": 5901
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 404,
            "mean": 404,
            "median": 404,
            "max": 404
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2934,
            "mean": 16554,
            "median": 16554,
            "max": 30174
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19747,
            "mean": 19881,
            "median": 19881,
            "max": 20015
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7618,
            "mean": 42201,
            "median": 35030,
            "max": 91127
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2880,
            "mean": 122399,
            "median": 206007,
            "max": 206007
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2552,
            "mean": 7598,
            "median": 2552,
            "max": 17691
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7148,
            "mean": 18253,
            "median": 18253,
            "max": 29359
          },
          "initialize(uint256,address)": {
            "calls": 871,
            "min": 95869,
            "mean": 116869,
            "median": 117987,
            "max": 117987
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2884,
            "mean": 2884,
            "median": 2884,
            "max": 2884
          },
          "receive()": {
            "calls": 4,
            "min": 67,
            "mean": 67,
            "median": 67,
            "max": 67
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2846,
            "mean": 19256,
            "median": 19256,
            "max": 35666
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7646,
            "mean": 35402,
            "median": 20362,
            "max": 87348
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 457832,
          "size": 2153
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23675,
            "mean": 91187,
            "median": 92593,
            "max": 92593
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24316,
            "mean": 132039,
            "median": 134999,
            "max": 134999
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 2420523,
          "size": 19207
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 824,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 2677199,
          "size": 15866
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 799,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 5971953,
          "size": 28651
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 774,
            "min": 17852,
            "mean": 17852,
            "median": 17852,
            "max": 17852
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 6961277,
          "size": 30340
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 774,
            "min": 9001,
            "mean": 9001,
            "median": 9001,
            "max": 9001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8142911,
          "size": 37570
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 944472,
          "size": 6030
        },
        "functions": {
          "getMiscReport()": {
            "calls": 824,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 4795099,
          "size": 24424
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 6392306,
          "size": 31256
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 824,
            "min": 17852,
            "mean": 17852,
            "median": 17852,
            "max": 17852
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 7917592,
          "size": 36530
        },
        "functions": {
          "getPoolReport()": {
            "calls": 743,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5918141,
          "size": 30628
        },
        "functions": {
          "getInitialReport()": {
            "calls": 824,
            "min": 6932,
            "mean": 6932,
            "median": 6932,
            "max": 6932
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 774,
            "min": 649756,
            "mean": 652019,
            "median": 649756,
            "max": 770560
          },
          "setProtocolDataProvider(address)": {
            "calls": 799,
            "min": 60045,
            "mean": 60056,
            "median": 60057,
            "max": 60057
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 801,
            "min": 2399349,
            "mean": 2785239,
            "median": 2785195,
            "max": 2811586
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 799,
            "min": 47975,
            "mean": 47979,
            "median": 47975,
            "max": 48047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4062003,
          "size": 20086
        },
        "functions": {
          "getTokensReport()": {
            "calls": 799,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 1563085,
          "size": 7206
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 57483,
            "mean": 105133,
            "median": 57858,
            "max": 170139
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 34496,
            "mean": 85041,
            "median": 58760,
            "max": 174754
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 57280,
            "mean": 104932,
            "median": 57655,
            "max": 169936
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 47982,
            "mean": 86288,
            "median": 56755,
            "max": 129068
          },
          "getClaimableRewards(address,address)": {
            "calls": 3473,
            "min": 26554,
            "mean": 29605,
            "median": 29692,
            "max": 29697
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 28774,
            "mean": 34480,
            "median": 34549,
            "max": 34554
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1164,
            "min": 2901,
            "mean": 2901,
            "median": 2901,
            "max": 2901
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "mint(address,uint256)": {
            "calls": 2469,
            "min": 53293,
            "mean": 96386,
            "median": 97030,
            "max": 100163
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 79813,
            "mean": 79813,
            "median": 79813,
            "max": 79813
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 116623,
            "mean": 116642,
            "median": 116643,
            "max": 116998
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 5300,
            "mean": 5300,
            "median": 5300,
            "max": 5300
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 59347,
            "mean": 75462,
            "median": 71597,
            "max": 102350
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1041576,
          "size": 5596
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2416,
            "mean": 2416,
            "median": 2416,
            "max": 2416
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 957,
            "min": 2567,
            "mean": 3641,
            "median": 4567,
            "max": 4567
          },
          "mint(address,uint256)": {
            "calls": 2469,
            "min": 51081,
            "mean": 67260,
            "median": 68409,
            "max": 68409
          },
          "scaledTotalSupply()": {
            "calls": 12090,
            "min": 2696,
            "mean": 2696,
            "median": 2696,
            "max": 2696
          },
          "transfer(address,uint256)": {
            "calls": 2469,
            "min": 29884,
            "mean": 45915,
            "median": 47056,
            "max": 47056
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2016957,
          "size": 9402
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26100,
            "mean": 45761,
            "median": 46048,
            "max": 46144
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 16298,
            "mean": 16298,
            "median": 16298,
            "max": 16298
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 16848,
            "mean": 16848,
            "median": 16848,
            "max": 16848
          },
          "decimals()": {
            "calls": 256,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 60534,
            "mean": 196007,
            "median": 209202,
            "max": 214358
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 76566,
            "mean": 243052,
            "median": 265897,
            "max": 348604
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 37220,
            "mean": 51310,
            "median": 51475,
            "max": 51475
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 37809,
            "mean": 37809,
            "median": 37809,
            "max": 37809
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 14908,
            "mean": 23774,
            "median": 28206,
            "max": 28210
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 68426,
            "mean": 187058,
            "median": 187024,
            "max": 305623
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 133210,
            "mean": 133210,
            "median": 133210,
            "max": 133210
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 16979,
            "mean": 16979,
            "median": 16979,
            "max": 16979
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 16832,
            "mean": 16832,
            "median": 16832,
            "max": 16832
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 16540,
            "mean": 16540,
            "median": 16540,
            "max": 16540
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 16458,
            "mean": 16458,
            "median": 16458,
            "max": 16458
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 169799,
            "mean": 170010,
            "median": 170087,
            "max": 170147
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 40854,
            "mean": 119534,
            "median": 158457,
            "max": 159345
          },
          "totalAssets()": {
            "calls": 258,
            "min": 18370,
            "mean": 18370,
            "median": 18370,
            "max": 18370
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 53007,
            "mean": 113193,
            "median": 113169,
            "max": 173319
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 833976,
          "size": 3920
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 219092,
            "mean": 219092,
            "median": 219092,
            "max": 219092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 825756,
          "size": 3819
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 166596,
            "mean": 166596,
            "median": 166596,
            "max": 166596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 825540,
          "size": 3818
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 44602,
            "mean": 44602,
            "median": 44602,
            "max": 44602
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 790313,
          "size": 3655
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86050,
            "mean": 86050,
            "median": 86050,
            "max": 86050
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 826428,
          "size": 3822
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 825564,
          "size": 3818
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 32292,
            "mean": 32292,
            "median": 32292,
            "max": 32292
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 826428,
          "size": 3822
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 827292,
          "size": 3826
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 32558,
            "mean": 32558,
            "median": 32558,
            "max": 32558
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 917923,
          "size": 4403
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 380221,
            "mean": 380221,
            "median": 380221,
            "max": 380221
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 778943,
          "size": 3518
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 95712,
            "mean": 95712,
            "median": 95712,
            "max": 95712
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 805784,
          "size": 3642
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 53675,
            "mean": 53675,
            "median": 53675,
            "max": 53675
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 778739,
          "size": 3517
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 47221,
            "mean": 47221,
            "median": 47221,
            "max": 47221
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 883884,
          "size": 4151
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1535212,
            "mean": 1535212,
            "median": 1535212,
            "max": 1535212
          },
          "newListings()": {
            "calls": 4,
            "min": 2906,
            "mean": 2906,
            "median": 2906,
            "max": 2906
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 949815,
          "size": 4582
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1534838,
            "mean": 1534838,
            "median": 1534838,
            "max": 1534838
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 3655,
            "mean": 3655,
            "median": 3655,
            "max": 3655
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 837657,
          "size": 3937
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 64023,
            "mean": 64023,
            "median": 64023,
            "max": 64023
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 821895,
          "size": 3801
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 140541,
            "mean": 140541,
            "median": 140541,
            "max": 140541
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 1664,
            "mean": 1664,
            "median": 1664,
            "max": 1664
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1683943,
          "size": 8307
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 663,
            "mean": 663,
            "median": 663,
            "max": 663
          },
          "POOL()": {
            "calls": 2818,
            "min": 442,
            "mean": 442,
            "median": 442,
            "max": 442
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2724,
            "mean": 2724,
            "median": 2724,
            "max": 2724
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 924,
            "mean": 924,
            "median": 924,
            "max": 924
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21562,
            "mean": 21562,
            "median": 21562,
            "max": 21562
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 27350,
            "mean": 27350,
            "median": 27350,
            "max": 27350
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 28251,
            "mean": 28251,
            "median": 28251,
            "max": 28251
          },
          "decimals()": {
            "calls": 2818,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21936,
            "mean": 21936,
            "median": 21936,
            "max": 21936
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21738,
            "mean": 21738,
            "median": 21738,
            "max": 21738
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 46290,
            "mean": 181818,
            "median": 208176,
            "max": 298299
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 62173,
            "mean": 64587,
            "median": 62173,
            "max": 71831
          },
          "name()": {
            "calls": 2818,
            "min": 2786,
            "mean": 3847,
            "median": 2795,
            "max": 9404
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "symbol()": {
            "calls": 2818,
            "min": 3179,
            "mean": 4218,
            "median": 3188,
            "max": 9770
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21958,
            "mean": 21958,
            "median": 21958,
            "max": 21958
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 21867,
            "mean": 21867,
            "median": 21867,
            "max": 21867
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 75513659,
          "size": 376200
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 76130,
            "mean": 76325,
            "median": 76418,
            "max": 76428
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 78021,
            "mean": 78021,
            "median": 78021,
            "max": 78021
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 156792,
            "mean": 156792,
            "median": 156792,
            "max": 156792
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 434458,
            "mean": 793821,
            "median": 853876,
            "max": 856746
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 730325,
            "mean": 730325,
            "median": 730325,
            "max": 730325
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 60364,
            "mean": 76291,
            "median": 76291,
            "max": 92219
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 63519,
            "mean": 75202,
            "median": 77189,
            "max": 77199
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 477844,
            "mean": 726796,
            "median": 726796,
            "max": 975748
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 561390,
            "mean": 582015,
            "median": 581890,
            "max": 602767
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 462209,
            "mean": 598295,
            "median": 643929,
            "max": 709348
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 649103,
            "mean": 687572,
            "median": 687572,
            "max": 726042
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 162464,
            "mean": 162464,
            "median": 162464,
            "max": 162464
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 130374,
            "mean": 139894,
            "median": 144655,
            "max": 144655
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 591214,
            "mean": 627855,
            "median": 619396,
            "max": 667743
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 646193,
            "mean": 646193,
            "median": 646193,
            "max": 646193
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 575046,
            "mean": 586714,
            "median": 575046,
            "max": 621719
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 36630,
            "mean": 36865,
            "median": 37002,
            "max": 37014
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 594872,
            "mean": 594872,
            "median": 594872,
            "max": 594872
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 624398,
            "mean": 624398,
            "median": 624398,
            "max": 624398
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 621946,
            "mean": 678732,
            "median": 627551,
            "max": 786699
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 594556,
            "mean": 631694,
            "median": 626619,
            "max": 687076
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 592689,
            "mean": 646159,
            "median": 648449,
            "max": 697341
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 627308,
            "mean": 627308,
            "median": 627308,
            "max": 627308
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 480012,
            "mean": 644133,
            "median": 709257,
            "max": 709257
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 431676,
            "mean": 566667,
            "median": 621397,
            "max": 646929
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 701831,
            "mean": 1158036,
            "median": 1297598,
            "max": 1306319
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 514103,
            "mean": 514103,
            "median": 514103,
            "max": 514103
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 706237,
            "mean": 706237,
            "median": 706237,
            "max": 706237
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 755886,
            "mean": 755886,
            "median": 755886,
            "max": 755886
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 130390,
          "size": 413
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 299,
            "mean": 1097,
            "median": 299,
            "max": 2299
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 3418855,
          "size": 13565
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 766,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "WBTC_ADDRESS()": {
            "calls": 766,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "execute()": {
            "calls": 769,
            "min": 4355483,
            "mean": 4356205,
            "median": 4355483,
            "max": 4365581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 80019,
          "size": 147
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 259
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 120311,
          "size": 336
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3233917,
          "size": 15634
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 509,
            "mean": 509,
            "median": 509,
            "max": 509
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24371,
            "mean": 24371,
            "median": 24371,
            "max": 24371
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 18956,
            "mean": 19139,
            "median": 19197,
            "max": 19197
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 47694,
            "mean": 74955,
            "median": 71083,
            "max": 88183
          },
          "delegate(address)": {
            "calls": 26,
            "min": 7153,
            "mean": 68441,
            "median": 71665,
            "max": 91565
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 28043,
            "mean": 47310,
            "median": 50052,
            "max": 62063
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5820,
            "mean": 6998,
            "median": 8024,
            "max": 8031
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5558,
            "mean": 8314,
            "median": 9969,
            "max": 9969
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 6327,
            "mean": 6513,
            "median": 6515,
            "max": 6521
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 6807,
            "mean": 7100,
            "median": 7184,
            "max": 7184
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 56191,
            "mean": 56191,
            "median": 56191,
            "max": 56191
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 31608,
            "mean": 56156,
            "median": 48708,
            "max": 89197
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply()": {
            "calls": 5,
            "min": 7418,
            "mean": 7418,
            "median": 7418,
            "max": 7418
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 86183,
            "mean": 122091,
            "median": 123928,
            "max": 141916
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 93029,
            "mean": 138140,
            "median": 134846,
            "max": 194101
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 40498,
            "mean": 75172,
            "median": 73676,
            "max": 121476
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 33446,
            "mean": 33446,
            "median": 33446,
            "max": 33446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 270528,
          "size": 1381
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1372,
            "mean": 1372,
            "median": 1372,
            "max": 1372
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 53320,
          "size": 296
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 565,
            "mean": 1874,
            "median": 3065,
            "max": 3065
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 823931,
          "size": 3593
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2810,
            "mean": 2810,
            "median": 2810,
            "max": 2810
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 157609,
            "mean": 157609,
            "median": 157609,
            "max": 157609
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1245
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 652623,
          "size": 3607
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5175,
            "mean": 27083,
            "median": 7333,
            "max": 2690044
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 530447,
          "size": 2330
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 799,
            "mean": 2399,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 3547,
            "min": 28991,
            "mean": 44950,
            "median": 46199,
            "max": 46463
          },
          "balanceOf(address)": {
            "calls": 19583,
            "min": 538,
            "mean": 2534,
            "median": 2538,
            "max": 2538
          },
          "decimals()": {
            "calls": 2436,
            "min": 312,
            "mean": 2270,
            "median": 2312,
            "max": 2312
          },
          "deposit()": {
            "calls": 51,
            "min": 44976,
            "mean": 44976,
            "median": 44976,
            "max": 44976
          },
          "name()": {
            "calls": 16,
            "min": 3077,
            "mean": 3077,
            "median": 3077,
            "max": 3077
          },
          "symbol()": {
            "calls": 42,
            "min": 3121,
            "mean": 3121,
            "median": 3121,
            "max": 3121
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 47047,
            "mean": 47047,
            "median": 47047,
            "max": 47047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1878917,
          "size": 9298
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 326177,
            "mean": 416976,
            "median": 448888,
            "max": 475863
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 2003830,
          "size": 9963
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 36113,
            "mean": 36113,
            "median": 36113,
            "max": 36113
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 357734,
            "mean": 459416,
            "median": 483264,
            "max": 513403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1561933,
          "size": 7750
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 326114,
            "mean": 355983,
            "median": 350586,
            "max": 391251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3530
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2662624,
            "mean": 2662624,
            "median": 2662624,
            "max": 2662624
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "initialize()": {
            "calls": 795,
            "min": 23515,
            "mean": 24075,
            "median": 24089,
            "max": 24089
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 19639
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 6513,
            "mean": 6513,
            "median": 6513,
            "max": 6513
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "aToken()": {
            "calls": 1,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 2805,
            "mean": 2805,
            "median": 2805,
            "max": 2805
          },
          "asset()": {
            "calls": 1,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2650,
            "mean": 2650,
            "median": 2650,
            "max": 2650
          },
          "canPause(address)": {
            "calls": 257,
            "min": 11507,
            "mean": 11507,
            "median": 11507,
            "max": 11507
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 332132,
            "mean": 332132,
            "median": 332132,
            "max": 332132
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 3160,
            "mean": 3160,
            "median": 3160,
            "max": 3160
          },
          "decimals()": {
            "calls": 1,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 258033,
            "mean": 267756,
            "median": 267756,
            "max": 277480
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 155521,
            "mean": 156476,
            "median": 155521,
            "max": 197233
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 5919,
            "mean": 121489,
            "median": 122157,
            "max": 143966
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25518,
            "mean": 230315,
            "median": 231125,
            "max": 238125
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 26566,
            "mean": 26566,
            "median": 26566,
            "max": 26566
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 29319,
            "mean": 29319,
            "median": 29319,
            "max": 29319
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 258126,
            "mean": 258126,
            "median": 258126,
            "max": 258126
          },
          "name()": {
            "calls": 1,
            "min": 3269,
            "mean": 3269,
            "median": 3269,
            "max": 3269
          },
          "nonces(address)": {
            "calls": 3,
            "min": 2776,
            "mean": 2776,
            "median": 2776,
            "max": 2776
          },
          "paused()": {
            "calls": 2,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 777,
            "mean": 30644,
            "median": 33447,
            "max": 57709
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 16046,
            "mean": 16046,
            "median": 16046,
            "max": 16046
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 31858,
            "mean": 105619,
            "median": 105619,
            "max": 179380
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 130290,
            "mean": 130290,
            "median": 130290,
            "max": 130290
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 156130,
            "mean": 156130,
            "median": 156130,
            "max": 156130
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 11489,
            "mean": 12111,
            "median": 11489,
            "max": 34887
          },
          "symbol()": {
            "calls": 1,
            "min": 3281,
            "mean": 3281,
            "median": 3281,
            "max": 3281
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 2759,
            "mean": 2759,
            "median": 2759,
            "max": 2759
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 34612,
            "mean": 34612,
            "median": 34612,
            "max": 34612
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 9880
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 5,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 1,
            "min": 334410,
            "mean": 334410,
            "median": 334410,
            "max": 334410
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 1,
            "min": 1720106,
            "mean": 1720106,
            "median": 1720106,
            "max": 1720106
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 770,
            "min": 1719548,
            "mean": 4950020,
            "median": 4954089,
            "max": 4955937
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 180574,
            "mean": 180574,
            "median": 180574,
            "max": 180574
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 18820,
            "mean": 73576,
            "median": 73576,
            "max": 128333
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 58161,
            "mean": 58161,
            "median": 58161,
            "max": 58161
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 7617,
            "mean": 28859,
            "median": 7656,
            "max": 60685
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 20356,
            "mean": 33769,
            "median": 23635,
            "max": 67452
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 38010,
            "mean": 38010,
            "median": 38010,
            "max": 38010
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 110458,
            "mean": 110458,
            "median": 110458,
            "max": 110458
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7910
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2594,
            "min": 3553,
            "mean": 6732,
            "median": 5553,
            "max": 30085
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 11351,
            "mean": 11351,
            "median": 11351,
            "max": 11351
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 11346,
            "mean": 11346,
            "median": 11346,
            "max": 11346
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 6,
            "min": 8811,
            "mean": 8811,
            "median": 8811,
            "max": 8811
          },
          "getIsVirtualAccActive(address)": {
            "calls": 8543,
            "min": 463,
            "mean": 463,
            "median": 463,
            "max": 463
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 11373,
            "mean": 11373,
            "median": 11373,
            "max": 11373
          },
          "getPaused(address)": {
            "calls": 8810,
            "min": 11440,
            "mean": 11461,
            "median": 11462,
            "max": 11462
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 11383,
            "mean": 11383,
            "median": 11383,
            "max": 11383
          },
          "getReserveConfigurationData(address)": {
            "calls": 10139,
            "min": 11797,
            "mean": 11818,
            "median": 11819,
            "max": 11819
          },
          "getReserveTokensAddresses(address)": {
            "calls": 8660,
            "min": 14934,
            "mean": 14934,
            "median": 14934,
            "max": 14979
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 11399,
            "mean": 11399,
            "median": 11399,
            "max": 11399
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 6109,
            "mean": 23641,
            "median": 29486,
            "max": 29486
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 66386,
            "mean": 66840,
            "median": 66846,
            "max": 70414
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 11144,
            "mean": 11144,
            "median": 11144,
            "max": 11144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3812
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 35195,
            "mean": 35195,
            "median": 35195,
            "max": 35195
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 58427,
            "mean": 58427,
            "median": 58427,
            "max": 58427
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 35079,
            "mean": 35079,
            "median": 35079,
            "max": 35079
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 35106,
            "mean": 35106,
            "median": 35106,
            "max": 35106
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35565,
            "mean": 35565,
            "median": 35565,
            "max": 35565
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 35021,
            "mean": 35021,
            "median": 35021,
            "max": 35021
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 35124,
            "mean": 35124,
            "median": 35124,
            "max": 35124
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 35480,
            "mean": 35480,
            "median": 35480,
            "max": 35480
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 34965,
            "mean": 34998,
            "median": 34998,
            "max": 35032
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1677119,
          "size": 7853
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 172474,
            "mean": 172750,
            "median": 172750,
            "max": 173026
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 142738,
            "mean": 171783,
            "median": 173508,
            "max": 213618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 6326
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 235164,
            "mean": 238263,
            "median": 238263,
            "max": 241362
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 194700,
            "mean": 229032,
            "median": 232847,
            "max": 232847
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33756,
            "mean": 33756,
            "median": 33756,
            "max": 33756
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52882,
            "mean": 52882,
            "median": 52882,
            "max": 52882
          },
          "fallback()": {
            "calls": 2,
            "min": 21596,
            "mean": 21596,
            "median": 21596,
            "max": 21596
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "owner()": {
            "calls": 2,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "receive()": {
            "calls": 1,
            "min": 21206,
            "mean": 21206,
            "median": 21206,
            "max": 21206
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 150472,
            "mean": 157180,
            "median": 153710,
            "max": 170609
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 216854,
            "mean": 227854,
            "median": 221441,
            "max": 245269
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 233262,
            "mean": 251417,
            "median": 257632,
            "max": 263358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2301071,
          "size": 11182
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2455,
            "mean": 2459,
            "median": 2455,
            "max": 3539
          },
          "POOL()": {
            "calls": 107,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 11385,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8633,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24585,
            "mean": 24585,
            "median": 24585,
            "max": 24585
          },
          "balanceOf(address)": {
            "calls": 18103,
            "min": 2743,
            "mean": 11536,
            "median": 17743,
            "max": 18203
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 591,
            "mean": 40556,
            "median": 35049,
            "max": 61149
          },
          "decimals()": {
            "calls": 9333,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7704,
            "mean": 7704,
            "median": 7704,
            "max": 7704
          },
          "getIncentivesController()": {
            "calls": 8541,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 825,
            "mean": 4564,
            "median": 4825,
            "max": 4825
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7771,
            "mean": 21761,
            "median": 24871,
            "max": 24871
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44127,
            "min": 123674,
            "mean": 209154,
            "median": 209087,
            "max": 298803
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 572,
            "mean": 58595,
            "median": 62135,
            "max": 69886
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 351,
            "mean": 41149,
            "median": 44783,
            "max": 61883
          },
          "name()": {
            "calls": 8703,
            "min": 2997,
            "mean": 5314,
            "median": 3176,
            "max": 9554
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 709,
            "mean": 24207,
            "median": 9265,
            "max": 53570
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 11555,
            "mean": 23984,
            "median": 13708,
            "max": 46689
          },
          "scaledBalanceOf(address)": {
            "calls": 26216,
            "min": 665,
            "mean": 2414,
            "median": 2665,
            "max": 2665
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 373,
            "mean": 1580,
            "median": 2373,
            "max": 2373
          },
          "symbol()": {
            "calls": 8684,
            "min": 3062,
            "mean": 5425,
            "median": 5301,
            "max": 9619
          },
          "totalSupply()": {
            "calls": 9982,
            "min": 406,
            "mean": 5529,
            "median": 6478,
            "max": 17938
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 535,
            "mean": 101019,
            "median": 106157,
            "max": 175585
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2974,
            "mean": 92083,
            "median": 109568,
            "max": 145496
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 592,
            "mean": 29780,
            "median": 34397,
            "max": 41466
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 440,
            "mean": 27958,
            "median": 33520,
            "max": 33559
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 22463
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 2756,
            "mean": 24543,
            "median": 24618,
            "max": 24618
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 186092,
            "mean": 193538,
            "median": 191692,
            "max": 235669
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 191727,
            "mean": 191727,
            "median": 191727,
            "max": 191727
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 5991,
            "mean": 28113,
            "median": 49647,
            "max": 49647
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 23735,
            "mean": 23735,
            "median": 23735,
            "max": 23735
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 6629,
            "mean": 6629,
            "median": 6629,
            "max": 6629
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 5825,
            "mean": 6109,
            "median": 5825,
            "max": 79050
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 369,
            "mean": 369,
            "median": 369,
            "max": 369
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 723,
            "mean": 741,
            "median": 723,
            "max": 2723
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 2666,
            "mean": 2666,
            "median": 2666,
            "max": 2666
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 654,
            "mean": 700,
            "median": 654,
            "max": 2654
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 6072,
            "mean": 21104,
            "median": 22072,
            "max": 24572
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 867,
            "mean": 897,
            "median": 867,
            "max": 4867
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 912,
            "mean": 3723,
            "median": 4223,
            "max": 5535
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2699,
            "mean": 2699,
            "median": 2699,
            "max": 2699
          },
          "getReservesList()": {
            "calls": 2,
            "min": 10982,
            "mean": 10982,
            "median": 10982,
            "max": 10982
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 80899,
            "mean": 80899,
            "median": 80899,
            "max": 80899
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 5993,
            "mean": 38793,
            "median": 5993,
            "max": 144632
          },
          "initialize(address)": {
            "calls": 69,
            "min": 45373,
            "mean": 45373,
            "median": 45373,
            "max": 45373
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2815,
            "mean": 2815,
            "median": 2815,
            "max": 2815
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 361278,
            "mean": 361278,
            "median": 361278,
            "max": 361278
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 72784,
            "mean": 74145,
            "median": 74145,
            "max": 75506
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 217089,
            "mean": 217089,
            "median": 217089,
            "max": 217089
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7416,
            "mean": 7416,
            "median": 7416,
            "max": 7416
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 124170,
            "mean": 124170,
            "median": 124170,
            "max": 124170
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 116050,
            "mean": 116050,
            "median": 116050,
            "max": 116050
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 125992,
            "mean": 125992,
            "median": 125992,
            "max": 125992
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 162856,
            "mean": 169636,
            "median": 169291,
            "max": 171088
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 48002,
            "mean": 48002,
            "median": 48002,
            "max": 48002
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 4197,
            "mean": 5251,
            "median": 5868,
            "max": 15197
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 1904,
            "mean": 4219,
            "median": 1904,
            "max": 24059
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 5928,
            "mean": 10984,
            "median": 10347,
            "max": 16798
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 18799,
            "mean": 39708,
            "median": 38529,
            "max": 83617
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2842,
            "mean": 2990,
            "median": 2842,
            "max": 40936
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 10480,
            "mean": 11901,
            "median": 10480,
            "max": 58619
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 26682,
            "mean": 26682,
            "median": 26682,
            "max": 26682
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 2926,
            "mean": 3680,
            "median": 2926,
            "max": 56434
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 150008,
            "mean": 200806,
            "median": 201308,
            "max": 201308
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 203491,
            "mean": 203491,
            "median": 203491,
            "max": 203491
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 252980,
            "mean": 252980,
            "median": 252980,
            "max": 252980
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 7757,
            "mean": 14390,
            "median": 7757,
            "max": 27657
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 14052,
            "mean": 14052,
            "median": 14052,
            "max": 14052
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 5809,
            "mean": 9129,
            "median": 5809,
            "max": 21449
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 117208,
            "mean": 119633,
            "median": 119633,
            "max": 122058
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3656968,
          "size": 16598
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4619,
            "min": 11342,
            "mean": 23542,
            "median": 16847,
            "max": 84039
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 16751,
            "mean": 27943,
            "median": 29645,
            "max": 39123
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 13570,
            "mean": 14411,
            "median": 13570,
            "max": 101270
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2640,
            "mean": 2640,
            "median": 2640,
            "max": 2640
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2820,
            "min": 16955,
            "mean": 23395340,
            "median": 1580661,
            "max": 203108638
          },
          "initialize(address)": {
            "calls": 803,
            "min": 72440,
            "mean": 90295,
            "median": 90340,
            "max": 90340
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1810,
            "min": 18016,
            "mean": 81868,
            "median": 81916,
            "max": 94887
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3895,
            "min": 16986,
            "mean": 68594,
            "median": 77852,
            "max": 77897
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2576,
            "min": 10599,
            "mean": 11388,
            "median": 10599,
            "max": 43554
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2327,
            "min": 10318,
            "mean": 10587,
            "median": 10318,
            "max": 43318
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2584,
            "min": 16770,
            "mean": 33072,
            "median": 32328,
            "max": 83516
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3381,
            "min": 17290,
            "mean": 76095,
            "median": 81102,
            "max": 81191
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2318,
            "min": 10616,
            "mean": 10756,
            "median": 10616,
            "max": 43571
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 16739,
            "mean": 17150,
            "median": 16739,
            "max": 87493
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 16850,
            "mean": 59734,
            "median": 55454,
            "max": 104578
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 13702,
            "mean": 16336,
            "median": 13702,
            "max": 80102
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3340,
            "min": 10405,
            "mean": 18062,
            "median": 10560,
            "max": 41214
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2568,
            "min": 16815,
            "mean": 38817,
            "median": 34543,
            "max": 105316
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2823,
            "min": 10404,
            "mean": 16048,
            "median": 10404,
            "max": 43368
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 20040,
            "mean": 47423,
            "median": 52229,
            "max": 72428
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 17071,
            "mean": 28300,
            "median": 17071,
            "max": 93636
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 16861,
            "mean": 29692,
            "median": 42475,
            "max": 42475
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 13876,
            "mean": 38286,
            "median": 46191,
            "max": 48501
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2315,
            "min": 10775,
            "mean": 10923,
            "median": 10775,
            "max": 70071
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2839,
            "min": 10645,
            "mean": 14950,
            "median": 10645,
            "max": 43600
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 13666,
            "mean": 28904,
            "median": 13666,
            "max": 108517
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1059,
            "min": 13614,
            "mean": 26120,
            "median": 30128,
            "max": 35028
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 13686,
            "mean": 14052,
            "median": 13686,
            "max": 107954
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4537988,
          "size": 21163
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6411,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 749,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46265,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 2778,
            "mean": 24565,
            "median": 24640,
            "max": 24640
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 19661,
            "mean": 212200,
            "median": 220335,
            "max": 292660
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3112,
            "min": 5902,
            "mean": 45916,
            "median": 49558,
            "max": 49558
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1808,
            "min": 1835,
            "mean": 23700,
            "median": 23735,
            "max": 23735
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3113,
            "min": 1829,
            "mean": 6624,
            "median": 6629,
            "max": 6629
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 31615,
            "mean": 192108,
            "median": 201307,
            "max": 201307
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 5825,
            "mean": 6634,
            "median": 5825,
            "max": 78983
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 5967,
            "mean": 53174,
            "median": 93294,
            "max": 102383
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 8134,
            "mean": 47348,
            "median": 50123,
            "max": 108551
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 27385,
            "mean": 89255,
            "median": 74356,
            "max": 488086
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 23256,
            "mean": 289354,
            "median": 157228,
            "max": 676533
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "getConfiguration(address)": {
            "calls": 50180,
            "min": 745,
            "mean": 1881,
            "median": 2745,
            "max": 2745
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1842,
            "min": 666,
            "mean": 2661,
            "median": 2666,
            "max": 2666
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4700,
            "min": 672,
            "mean": 2669,
            "median": 2672,
            "max": 2672
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 123,
            "min": 848,
            "mean": 2815,
            "median": 2848,
            "max": 2848
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 4015,
            "mean": 5288,
            "median": 5836,
            "max": 6015
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 30,
            "min": 3478,
            "mean": 3478,
            "median": 3478,
            "max": 3478
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5625,
            "min": 701,
            "mean": 1411,
            "median": 701,
            "max": 2701
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "getReserveAToken(address)": {
            "calls": 20530,
            "min": 676,
            "mean": 2262,
            "median": 2676,
            "max": 2676
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "getReserveData(address)": {
            "calls": 14593,
            "min": 4094,
            "mean": 17779,
            "median": 22094,
            "max": 24594
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 609,
            "mean": 2457,
            "median": 2609,
            "max": 2609
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42026,
            "min": 889,
            "mean": 2406,
            "median": 889,
            "max": 5349
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4071,
            "min": 845,
            "mean": 2650,
            "median": 845,
            "max": 5468
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 13358,
            "min": 632,
            "mean": 2360,
            "median": 2632,
            "max": 2632
          },
          "getReservesList()": {
            "calls": 3685,
            "min": 2915,
            "mean": 17235,
            "median": 10915,
            "max": 343860
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 4222,
            "mean": 64920,
            "median": 80862,
            "max": 124537
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 746,
            "mean": 1824,
            "median": 2746,
            "max": 2746
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 612,
            "mean": 1403,
            "median": 612,
            "max": 2612
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1939,
            "min": 680,
            "mean": 2407,
            "median": 2680,
            "max": 2680
          },
          "initReserve(address,address,address)": {
            "calls": 44474,
            "min": 5993,
            "mean": 152137,
            "median": 153312,
            "max": 173184
          },
          "initialize(address)": {
            "calls": 740,
            "min": 26381,
            "mean": 45343,
            "median": 45395,
            "max": 45395
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2837,
            "mean": 2837,
            "median": 2837,
            "max": 2837
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6396,
            "min": 25967,
            "mean": 250355,
            "median": 292309,
            "max": 444655
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 2412,
            "mean": 48128,
            "median": 51262,
            "max": 132908
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 150842,
            "mean": 216218,
            "median": 217089,
            "max": 467361
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7416,
            "mean": 7416,
            "median": 7416,
            "max": 7416
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 14299,
            "mean": 89683,
            "median": 96217,
            "max": 125728
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 78073,
            "mean": 124257,
            "median": 124640,
            "max": 135267
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 115307,
            "mean": 140271,
            "median": 129538,
            "max": 170817
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 48024,
            "mean": 48024,
            "median": 48024,
            "max": 48024
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2403,
            "min": 4197,
            "mean": 4384,
            "median": 4197,
            "max": 15197
          },
          "setConfiguration(address,(uint256))": {
            "calls": 71677,
            "min": 1828,
            "mean": 15684,
            "median": 23828,
            "max": 23983
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3508,
            "min": 4843,
            "mean": 12019,
            "median": 12298,
            "max": 16798
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 5302,
            "mean": 44553,
            "median": 38529,
            "max": 108726
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2886,
            "mean": 3782,
            "median": 2886,
            "max": 111177
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 6480,
            "mean": 13395,
            "median": 10480,
            "max": 91385
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 2904,
            "mean": 3946,
            "median": 2904,
            "max": 56412
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 29351,
            "mean": 183165,
            "median": 201308,
            "max": 209059
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 109054,
            "mean": 190401,
            "median": 211334,
            "max": 250816
          },
          "syncIndexesState(address)": {
            "calls": 2190,
            "min": 7735,
            "mean": 14712,
            "median": 7735,
            "max": 47602
          },
          "syncRatesState(address)": {
            "calls": 2190,
            "min": 14030,
            "mean": 14090,
            "median": 14030,
            "max": 18530
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 989,
            "min": 5876,
            "mean": 17452,
            "median": 21516,
            "max": 21516
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 33040,
            "mean": 126783,
            "median": 128952,
            "max": 193186
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1671293,
          "size": 8105
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8538,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 27030,
            "mean": 27030,
            "median": 27030,
            "max": 27030
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 674,
            "mean": 9799,
            "median": 4702,
            "max": 18392
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2827,
            "mean": 2827,
            "median": 2827,
            "max": 2827
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 12242,
            "mean": 24031,
            "median": 24042,
            "max": 24043
          },
          "decimals()": {
            "calls": 9310,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 689,
            "mean": 28619,
            "median": 21779,
            "max": 55979
          },
          "getIncentivesController()": {
            "calls": 8538,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44127,
            "min": 123201,
            "mean": 203937,
            "median": 208393,
            "max": 298327
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 23985,
            "mean": 60085,
            "median": 60185,
            "max": 69972
          },
          "name()": {
            "calls": 8625,
            "min": 2997,
            "mean": 5351,
            "median": 5236,
            "max": 9554
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "scaledBalanceOf(address)": {
            "calls": 18729,
            "min": 687,
            "mean": 1964,
            "median": 2687,
            "max": 2687
          },
          "scaledTotalSupply()": {
            "calls": 44928,
            "min": 439,
            "mean": 2331,
            "median": 2439,
            "max": 2439
          },
          "symbol()": {
            "calls": 8618,
            "min": 3040,
            "mean": 5391,
            "median": 5279,
            "max": 9597
          },
          "totalSupply()": {
            "calls": 190,
            "min": 2416,
            "mean": 5731,
            "median": 6416,
            "max": 18039
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3718
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "getAssetPrice(address)": {
            "calls": 58354,
            "min": 0,
            "mean": 5651,
            "median": 7865,
            "max": 15388
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5602,
            "mean": 7675,
            "median": 8712,
            "max": 8712
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2364,
            "mean": 2364,
            "median": 2364,
            "max": 2364
          },
          "getSourceOfAsset(address)": {
            "calls": 1140,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 36887,
            "mean": 57572,
            "median": 60249,
            "max": 61841
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 59354,
            "mean": 59354,
            "median": 59354,
            "max": 59354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 827932,
          "size": 3791
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42573,
            "min": 0,
            "mean": 4278,
            "median": 3969,
            "max": 5688
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2905,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3788,
            "mean": 3788,
            "median": 3788,
            "max": 3788
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 2970,
            "mean": 2970,
            "median": 2970,
            "max": 2970
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1361,
            "min": 2958,
            "mean": 2958,
            "median": 2958,
            "max": 2958
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2133,
            "min": 2734,
            "mean": 2734,
            "median": 2734,
            "max": 2734
          },
          "getVariableRateSlope1(address)": {
            "calls": 2137,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "getVariableRateSlope2(address)": {
            "calls": 1365,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 27838,
            "mean": 29172,
            "median": 28518,
            "max": 36376
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 28157,
            "mean": 32560,
            "median": 29152,
            "max": 36701
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 431441,
          "size": 1842
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 10307,
            "mean": 11177,
            "median": 10307,
            "max": 12484
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 10262,
            "mean": 11132,
            "median": 10262,
            "max": 12439
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 35724,
            "mean": 38744,
            "median": 38744,
            "max": 41765
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 32590,
            "mean": 33231,
            "median": 33231,
            "max": 33873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 451714,
          "size": 2040
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21388,
            "mean": 21388,
            "median": 21388,
            "max": 21388
          },
          "fallback()": {
            "calls": 550101,
            "min": 0,
            "mean": 139153,
            "median": 7539,
            "max": 206071223
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26838,
            "mean": 28730,
            "median": 28730,
            "max": 30622
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28725,
            "mean": 152584,
            "median": 187354,
            "max": 187354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 545865,
          "size": 2554
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43635,
            "mean": 43635,
            "median": 43635,
            "max": 43635
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43679,
            "mean": 43679,
            "median": 43679,
            "max": 43679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 383040,
          "size": 1801
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43657,
            "mean": 43657,
            "median": 43657,
            "max": 43657
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43679,
            "mean": 43679,
            "median": 43679,
            "max": 43679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4596073,
          "size": 21402
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 28321,
            "mean": 28321,
            "median": 28321,
            "max": 28321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 108459,
          "size": 305
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "decimals()": {
            "calls": 80,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "description()": {
            "calls": 80,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          },
          "latestAnswer()": {
            "calls": 56510,
            "min": 279,
            "mean": 1747,
            "median": 2279,
            "max": 2279
          },
          "name()": {
            "calls": 80,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 154707,
          "size": 497
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25767,
            "mean": 39061,
            "median": 45703,
            "max": 45715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 273597,
          "size": 1358
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4721,
            "mean": 4724,
            "median": 4726,
            "max": 4726
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26202,
            "mean": 27398,
            "median": 26202,
            "max": 46114
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 472482,
          "size": 1967
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133431,
            "mean": 133431,
            "median": 133431,
            "max": 133431
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133499,
            "mean": 133512,
            "median": 133523,
            "max": 133523
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 93907,
          "size": 334
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1108671,
          "size": 5931
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 832,
            "mean": 1943,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 23006,
            "min": 26299,
            "mean": 45804,
            "median": 46343,
            "max": 46583
          },
          "balanceOf(address)": {
            "calls": 89423,
            "min": 648,
            "mean": 2646,
            "median": 2648,
            "max": 2648
          },
          "decimals()": {
            "calls": 80135,
            "min": 311,
            "mean": 2305,
            "median": 2311,
            "max": 2311
          },
          "mint(address,uint256)": {
            "calls": 6452,
            "min": 36474,
            "mean": 62612,
            "median": 70686,
            "max": 70794
          },
          "name()": {
            "calls": 2080,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2601,
            "mean": 2601,
            "median": 2601,
            "max": 2601
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 76762,
            "mean": 76821,
            "median": 76810,
            "max": 76966
          },
          "symbol()": {
            "calls": 86,
            "min": 3240,
            "mean": 3240,
            "median": 3240,
            "max": 3240
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46924,
            "mean": 51016,
            "median": 51700,
            "max": 51700
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28797,
            "mean": 28797,
            "median": 28797,
            "max": 28797
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 117443,
          "size": 325
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 431,
            "min": 146,
            "mean": 146,
            "median": 146,
            "max": 146
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 662,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 314,
            "mean": 416,
            "median": 427,
            "max": 427
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 331,
            "mean": 399,
            "median": 430,
            "max": 430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 229220,
          "size": 844
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "HALF_WAD()": {
            "calls": 428,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "RAY()": {
            "calls": 1,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "WAD()": {
            "calls": 646,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          },
          "WAD_RAY_RATIO()": {
            "calls": 1763,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 493,
            "mean": 493,
            "median": 493,
            "max": 493
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 496,
            "mean": 496,
            "median": 496,
            "max": 496
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 384,
            "mean": 386,
            "median": 384,
            "max": 398
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 424,
            "mean": 521,
            "median": 537,
            "max": 537
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 331,
            "mean": 398,
            "median": 430,
            "max": 430
          },
          "wadToRay(uint256)": {
            "calls": 486,
            "min": 279,
            "mean": 352,
            "median": 357,
            "max": 357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2360651,
          "size": 11509
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 56152,
            "mean": 56152,
            "median": 56152,
            "max": 56152
          },
          "name()": {
            "calls": 1,
            "min": 3176,
            "mean": 3176,
            "median": 3176,
            "max": 3176
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2687
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67806,
            "mean": 67806,
            "median": 67806,
            "max": 67806
          },
          "symbol()": {
            "calls": 1,
            "min": 3174,
            "mean": 3174,
            "median": 3174,
            "max": 3174
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 63785,
            "mean": 63785,
            "median": 63785,
            "max": 63785
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1677678,
          "size": 8219
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 55657,
            "mean": 55657,
            "median": 55657,
            "max": 55657
          },
          "name()": {
            "calls": 1,
            "min": 3176,
            "mean": 3176,
            "median": 3176,
            "max": 3176
          },
          "symbol()": {
            "calls": 1,
            "min": 3219,
            "mean": 3219,
            "median": 3219,
            "max": 3219
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 407218,
          "size": 1569
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 157367,
            "mean": 157367,
            "median": 157367,
            "max": 157367
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5255,
            "mean": 5255,
            "median": 5255,
            "max": 5255
          },
          "text()": {
            "calls": 6,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "value()": {
            "calls": 7,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4594,
            "mean": 4594,
            "median": 4594,
            "max": 4594
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 407650,
          "size": 1571
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51970,
            "mean": 51970,
            "median": 51970,
            "max": 51970
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5255,
            "mean": 5255,
            "median": 5255,
            "max": 5255
          },
          "text()": {
            "calls": 2,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "value()": {
            "calls": 4,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4594,
            "mean": 4594,
            "median": 4594,
            "max": 4594
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 142020,
          "size": 342
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 45128,
            "mean": 45128,
            "median": 45128,
            "max": 45128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 142452,
          "size": 344
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 28031,
            "mean": 28031,
            "median": 28031,
            "max": 28031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 839430,
          "size": 3973
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1622,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 801,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 50952,
            "mean": 50952,
            "median": 50952,
            "max": 50952
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 51018,
            "mean": 51018,
            "median": 51018,
            "max": 51018
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50953,
            "mean": 50953,
            "median": 50953,
            "max": 50953
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 50974,
            "mean": 51933,
            "median": 50974,
            "max": 54813
          },
          "addPoolAdmin(address)": {
            "calls": 789,
            "min": 50985,
            "mean": 50996,
            "median": 50997,
            "max": 50997
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 51018,
            "mean": 51018,
            "median": 51018,
            "max": 51018
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 51473,
            "mean": 51954,
            "median": 51473,
            "max": 55323
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2736,
            "mean": 2736,
            "median": 2736,
            "max": 2736
          },
          "isAssetListingAdmin(address)": {
            "calls": 3880,
            "min": 806,
            "mean": 2408,
            "median": 2806,
            "max": 2806
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2739,
            "mean": 2739,
            "median": 2739,
            "max": 2739
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "isPoolAdmin(address)": {
            "calls": 56584,
            "min": 749,
            "mean": 1840,
            "median": 2749,
            "max": 2749
          },
          "isRiskAdmin(address)": {
            "calls": 41039,
            "min": 739,
            "mean": 1650,
            "median": 739,
            "max": 2739
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 29044,
            "mean": 29044,
            "median": 29044,
            "max": 29044
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 29013,
            "mean": 29013,
            "median": 29013,
            "max": 29013
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 28989,
            "mean": 28989,
            "median": 28989,
            "max": 28989
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 29012,
            "mean": 41913,
            "median": 41913,
            "max": 54814
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 29042,
            "mean": 29042,
            "median": 29042,
            "max": 29042
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28989,
            "mean": 28989,
            "median": 28989,
            "max": 28989
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 48882,
            "mean": 49597,
            "median": 48882,
            "max": 53174
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1615912,
          "size": 8284
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1088,
            "min": 388,
            "mean": 915,
            "median": 388,
            "max": 2388
          },
          "getACLManager()": {
            "calls": 51761,
            "min": 431,
            "mean": 1437,
            "median": 2431,
            "max": 2431
          },
          "getAddress(bytes32)": {
            "calls": 18685,
            "min": 531,
            "mean": 2059,
            "median": 2531,
            "max": 2531
          },
          "getMarketId()": {
            "calls": 6,
            "min": 3241,
            "mean": 3241,
            "median": 3241,
            "max": 3241
          },
          "getPool()": {
            "calls": 2619,
            "min": 355,
            "mean": 1078,
            "median": 355,
            "max": 2355
          },
          "getPoolConfigurator()": {
            "calls": 195602,
            "min": 409,
            "mean": 729,
            "median": 409,
            "max": 2409
          },
          "getPoolDataProvider()": {
            "calls": 2628,
            "min": 386,
            "mean": 1215,
            "median": 386,
            "max": 2386
          },
          "getPriceOracle()": {
            "calls": 33085,
            "min": 474,
            "mean": 2329,
            "median": 2474,
            "max": 2474
          },
          "getPriceOracleSentinel()": {
            "calls": 15849,
            "min": 387,
            "mean": 2386,
            "median": 2387,
            "max": 2387
          },
          "owner()": {
            "calls": 804,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 24013,
            "mean": 46973,
            "median": 47617,
            "max": 47617
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 24056,
            "mean": 37484,
            "median": 39110,
            "max": 47660
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24621,
            "mean": 48242,
            "median": 48359,
            "max": 48635
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24327,
            "mean": 223180,
            "median": 56885,
            "max": 505068
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24399,
            "mean": 28404,
            "median": 28404,
            "max": 32410
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 24012,
            "mean": 285504,
            "median": 293502,
            "max": 531000
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 24101,
            "mean": 37529,
            "median": 39155,
            "max": 47705
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 24057,
            "mean": 272024,
            "median": 280020,
            "max": 504000
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 24080,
            "mean": 37508,
            "median": 39134,
            "max": 47684
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 24123,
            "mean": 40943,
            "median": 47727,
            "max": 47727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2439
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2519,
            "mean": 2519,
            "median": 2519,
            "max": 2519
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2663,
            "mean": 4995,
            "median": 5009,
            "max": 7286
          },
          "owner()": {
            "calls": 801,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 24147,
            "mean": 103773,
            "median": 119699,
            "max": 119699
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 26122,
            "mean": 38899,
            "median": 39940,
            "max": 49596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 831432,
          "size": 3937
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 211129,
            "mean": 284049,
            "median": 284019,
            "max": 289745
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "owner()": {
            "calls": 2,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 58787,
            "mean": 58787,
            "median": 58787,
            "max": 58787
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43704,
            "mean": 43704,
            "median": 43704,
            "max": 43704
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48601,
            "mean": 48608,
            "median": 48613,
            "max": 48613
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 60835,
            "mean": 60835,
            "median": 60835,
            "max": 60835
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46867,
            "mean": 46867,
            "median": 46867,
            "max": 46867
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28729,
            "mean": 28729,
            "median": 28729,
            "max": 28729
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 44414,
            "mean": 44414,
            "median": 44414,
            "max": 44414
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3095547,
          "size": 14187
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 804,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 91905,
            "mean": 91905,
            "median": 91905,
            "max": 91905
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 94203,
            "mean": 94203,
            "median": 94203,
            "max": 94203
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 91704,
            "mean": 91704,
            "median": 91704,
            "max": 91704
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 719,
            "min": 949,
            "mean": 74476,
            "median": 84678,
            "max": 120615
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 88143,
            "mean": 88143,
            "median": 88143,
            "max": 88143
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 85647,
            "mean": 85647,
            "median": 85647,
            "max": 85647
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 173491,
            "mean": 246425,
            "median": 246405,
            "max": 252107
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 29353,
            "mean": 29353,
            "median": 29353,
            "max": 29353
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2656,
            "mean": 2656,
            "median": 2656,
            "max": 2656
          },
          "getAssetIndex(address,address)": {
            "calls": 9723,
            "min": 3062,
            "mean": 10671,
            "median": 10983,
            "max": 16470
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2625,
            "mean": 2625,
            "median": 2625,
            "max": 2625
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 3041,
            "mean": 5579,
            "median": 5668,
            "max": 8256
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 2975,
            "mean": 2975,
            "median": 2975,
            "max": 2975
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 5109,
            "mean": 5109,
            "median": 5109,
            "max": 5109
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2648,
            "mean": 2648,
            "median": 2648,
            "max": 2648
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 7574,
            "mean": 7574,
            "median": 7574,
            "max": 7574
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 3004,
            "mean": 3004,
            "median": 3004,
            "max": 3004
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 12230,
            "mean": 18503,
            "median": 18443,
            "max": 23648
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 727,
            "mean": 2353,
            "median": 2727,
            "max": 38060
          },
          "initialize(address)": {
            "calls": 801,
            "min": 26065,
            "mean": 45226,
            "median": 45250,
            "max": 45250
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24278,
            "mean": 24278,
            "median": 24278,
            "max": 24278
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 8883,
            "mean": 8883,
            "median": 8883,
            "max": 8883
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 24237,
            "mean": 24237,
            "median": 24237,
            "max": 24237
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12317,
            "mean": 12317,
            "median": 12317,
            "max": 12317
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 9854,
            "mean": 9854,
            "median": 9854,
            "max": 9854
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 309033,
          "size": 1494
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 493587,
          "size": 2778
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25880,
            "mean": 25880,
            "median": 25880,
            "max": 25880
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52964,
            "mean": 52964,
            "median": 52964,
            "max": 52964
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 27082,
            "mean": 27082,
            "median": 27082,
            "max": 27082
          },
          "renewApproval()": {
            "calls": 1,
            "min": 27971,
            "mean": 27971,
            "median": 27971,
            "max": 27971
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1484455,
          "size": 6710
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2937,
            "mean": 16690,
            "median": 16690,
            "max": 30443
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19753,
            "mean": 19941,
            "median": 19941,
            "max": 20130
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7634,
            "mean": 42572,
            "median": 35360,
            "max": 91936
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2911,
            "mean": 122835,
            "median": 206712,
            "max": 206712
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2675,
            "mean": 7749,
            "median": 2675,
            "max": 17898
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7504,
            "mean": 18622,
            "median": 18622,
            "max": 29741
          },
          "initialize(uint256,address)": {
            "calls": 871,
            "min": 96424,
            "mean": 117416,
            "median": 118533,
            "max": 118533
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "receive()": {
            "calls": 4,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2960,
            "mean": 19489,
            "median": 19489,
            "max": 36019
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7678,
            "mean": 35657,
            "median": 20509,
            "max": 88037
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 500248,
          "size": 2366
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 170,
            "mean": 170,
            "median": 170,
            "max": 170
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23633,
            "mean": 90625,
            "median": 92645,
            "max": 92645
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24230,
            "mean": 133013,
            "median": 135729,
            "max": 135729
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 2881932,
          "size": 22568
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 824,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3104569,
          "size": 18867
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 799,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 7395224,
          "size": 35544
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 774,
            "min": 17693,
            "mean": 17693,
            "median": 17693,
            "max": 17693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 7110884,
          "size": 30758
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 774,
            "min": 8968,
            "mean": 8968,
            "median": 8968,
            "max": 8968
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8578653,
          "size": 39711
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 950905,
          "size": 6288
        },
        "functions": {
          "getMiscReport()": {
            "calls": 824,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5553853,
          "size": 28790
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 7618797,
          "size": 38002
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 824,
            "min": 17693,
            "mean": 17693,
            "median": 17693,
            "max": 17693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 8297803,
          "size": 38411
        },
        "functions": {
          "getPoolReport()": {
            "calls": 743,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5653909,
          "size": 30109
        },
        "functions": {
          "getInitialReport()": {
            "calls": 824,
            "min": 6848,
            "mean": 6848,
            "median": 6848,
            "max": 6848
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 774,
            "min": 652531,
            "mean": 654794,
            "median": 652531,
            "max": 773335
          },
          "setProtocolDataProvider(address)": {
            "calls": 799,
            "min": 59524,
            "mean": 59535,
            "median": 59536,
            "max": 59536
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 801,
            "min": 2107841,
            "mean": 2598111,
            "median": 2598230,
            "max": 2624015
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 799,
            "min": 47667,
            "mean": 47671,
            "median": 47667,
            "max": 47739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4062096,
          "size": 19813
        },
        "functions": {
          "getTokensReport()": {
            "calls": 799,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 1765931,
          "size": 8162
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 58130,
            "mean": 105559,
            "median": 58556,
            "max": 172228
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 34372,
            "mean": 87534,
            "median": 59085,
            "max": 176475
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 57641,
            "mean": 106758,
            "median": 58067,
            "max": 171739
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 48125,
            "mean": 89095,
            "median": 57094,
            "max": 130232
          },
          "getClaimableRewards(address,address)": {
            "calls": 3421,
            "min": 26262,
            "mean": 29963,
            "median": 30062,
            "max": 30093
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 29005,
            "mean": 35126,
            "median": 35218,
            "max": 35227
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1112,
            "min": 2817,
            "mean": 2817,
            "median": 2817,
            "max": 2817
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2575,
            "mean": 2575,
            "median": 2575,
            "max": 2575
          },
          "mint(address,uint256)": {
            "calls": 2456,
            "min": 53648,
            "mean": 96885,
            "median": 97552,
            "max": 100760
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 79933,
            "mean": 79933,
            "median": 79933,
            "max": 79933
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 116360,
            "mean": 116368,
            "median": 116368,
            "max": 116786
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 5007,
            "mean": 5007,
            "median": 5007,
            "max": 5007
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 60047,
            "mean": 75264,
            "median": 72724,
            "max": 103007
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1134869,
          "size": 6059
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 970,
            "min": 2735,
            "mean": 3794,
            "median": 4735,
            "max": 4735
          },
          "mint(address,uint256)": {
            "calls": 2456,
            "min": 51307,
            "mean": 67583,
            "median": 68647,
            "max": 68647
          },
          "scaledTotalSupply()": {
            "calls": 12025,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "transfer(address,uint256)": {
            "calls": 2456,
            "min": 29802,
            "mean": 45917,
            "median": 46974,
            "max": 46974
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2113246,
          "size": 9855
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26447,
            "mean": 45950,
            "median": 46383,
            "max": 46491
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 16024,
            "mean": 16024,
            "median": 16024,
            "max": 16024
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 16025,
            "mean": 16025,
            "median": 16025,
            "max": 16025
          },
          "decimals()": {
            "calls": 256,
            "min": 2540,
            "mean": 2540,
            "median": 2540,
            "max": 2540
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 58961,
            "mean": 191847,
            "median": 204778,
            "max": 209934
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 74940,
            "mean": 239952,
            "median": 261347,
            "max": 346390
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 22235,
            "mean": 22235,
            "median": 22235,
            "max": 22235
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 37175,
            "mean": 50740,
            "median": 50897,
            "max": 50897
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 37788,
            "mean": 37788,
            "median": 37788,
            "max": 37788
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 13586,
            "mean": 22217,
            "median": 26528,
            "max": 26538
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 68383,
            "mean": 185982,
            "median": 185950,
            "max": 303518
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 133320,
            "mean": 133320,
            "median": 133320,
            "max": 133320
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 16068,
            "mean": 16068,
            "median": 16068,
            "max": 16068
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 16064,
            "mean": 16064,
            "median": 16064,
            "max": 16064
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 16000,
            "mean": 16000,
            "median": 16000,
            "max": 16000
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 16046,
            "mean": 16046,
            "median": 16046,
            "max": 16046
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 165560,
            "mean": 165773,
            "median": 165836,
            "max": 165908
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 40816,
            "mean": 117433,
            "median": 155291,
            "max": 156242
          },
          "totalAssets()": {
            "calls": 258,
            "min": 18017,
            "mean": 18017,
            "median": 18017,
            "max": 18017
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 51322,
            "mean": 110061,
            "median": 110030,
            "max": 168739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 829123,
          "size": 3901
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 206866,
            "mean": 206866,
            "median": 206866,
            "max": 206866
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 805957,
          "size": 3727
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 154329,
            "mean": 154329,
            "median": 154329,
            "max": 154329
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 812445,
          "size": 3757
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 45039,
            "mean": 45039,
            "median": 45039,
            "max": 45039
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 793856,
          "size": 3671
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 83827,
            "mean": 83827,
            "median": 83827,
            "max": 83827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 806833,
          "size": 3731
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86685,
            "mean": 86685,
            "median": 86685,
            "max": 86685
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 812673,
          "size": 3758
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 33878,
            "mean": 33878,
            "median": 33878,
            "max": 33878
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 806833,
          "size": 3731
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86685,
            "mean": 86685,
            "median": 86685,
            "max": 86685
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 807685,
          "size": 3735
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 33400,
            "mean": 33400,
            "median": 33400,
            "max": 33400
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 893631,
          "size": 4306
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 363109,
            "mean": 363109,
            "median": 363109,
            "max": 363109
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 775267,
          "size": 3496
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 93476,
            "mean": 93476,
            "median": 93476,
            "max": 93476
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 775903,
          "size": 3499
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 52634,
            "mean": 52634,
            "median": 52634,
            "max": 52634
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 790620,
          "size": 3567
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 46606,
            "mean": 46606,
            "median": 46606,
            "max": 46606
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 867802,
          "size": 4080
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1708338,
            "mean": 1708338,
            "median": 1708338,
            "max": 1708338
          },
          "newListings()": {
            "calls": 4,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 931919,
          "size": 4517
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1708244,
            "mean": 1708244,
            "median": 1708244,
            "max": 1708244
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2959,
            "mean": 2959,
            "median": 2959,
            "max": 2959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 796701,
          "size": 3751
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 63563,
            "mean": 63563,
            "median": 63563,
            "max": 63563
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 797956,
          "size": 3690
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 136318,
            "mean": 136318,
            "median": 136318,
            "max": 136318
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 1182,
            "mean": 1182,
            "median": 1182,
            "max": 1182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1675945,
          "size": 8165
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "POOL()": {
            "calls": 2818,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 482,
            "mean": 482,
            "median": 482,
            "max": 482
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21747,
            "mean": 21747,
            "median": 21747,
            "max": 21747
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 27030,
            "mean": 27030,
            "median": 27030,
            "max": 27030
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 28042,
            "mean": 28042,
            "median": 28042,
            "max": 28042
          },
          "decimals()": {
            "calls": 2818,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21790,
            "mean": 21790,
            "median": 21790,
            "max": 21790
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21768,
            "mean": 21768,
            "median": 21768,
            "max": 21768
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 46168,
            "mean": 182333,
            "median": 208383,
            "max": 298317
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 62251,
            "mean": 64697,
            "median": 62251,
            "max": 72038
          },
          "name()": {
            "calls": 2818,
            "min": 2997,
            "mean": 4177,
            "median": 3176,
            "max": 9554
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2687
          },
          "symbol()": {
            "calls": 2818,
            "min": 3040,
            "mean": 4231,
            "median": 3219,
            "max": 9597
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21723,
            "mean": 21723,
            "median": 21723,
            "max": 21723
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 22016,
            "mean": 22016,
            "median": 22016,
            "max": 22016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 79661091,
          "size": 395761
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 76220,
            "mean": 76415,
            "median": 76508,
            "max": 76517
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 78384,
            "mean": 78384,
            "median": 78384,
            "max": 78384
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 151591,
            "mean": 151591,
            "median": 151591,
            "max": 151591
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 416528,
            "mean": 756809,
            "median": 813419,
            "max": 817838
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 700079,
            "mean": 700079,
            "median": 700079,
            "max": 700079
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 59844,
            "mean": 75706,
            "median": 75706,
            "max": 91569
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 63064,
            "mean": 74747,
            "median": 76735,
            "max": 76744
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 461158,
            "mean": 700632,
            "median": 700632,
            "max": 940106
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 533452,
            "mean": 553089,
            "median": 553958,
            "max": 571858
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 447327,
            "mean": 571989,
            "median": 610248,
            "max": 677303
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 614458,
            "mean": 654907,
            "median": 654907,
            "max": 695356
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 158383,
            "mean": 158383,
            "median": 158383,
            "max": 158383
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 128356,
            "mean": 137011,
            "median": 141339,
            "max": 141339
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 561663,
            "mean": 597586,
            "median": 588647,
            "max": 636999
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 613122,
            "mean": 613122,
            "median": 613122,
            "max": 613122
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 552300,
            "mean": 564496,
            "median": 552300,
            "max": 601087
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 36172,
            "mean": 36407,
            "median": 36544,
            "max": 36556
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 564512,
            "mean": 564512,
            "median": 564512,
            "max": 564512
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 587349,
            "mean": 587349,
            "median": 587349,
            "max": 587349
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 590830,
            "mean": 647945,
            "median": 596878,
            "max": 756127
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 564521,
            "mean": 601451,
            "median": 595988,
            "max": 656970
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 562152,
            "mean": 615083,
            "median": 616394,
            "max": 666703
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 592799,
            "mean": 592799,
            "median": 592799,
            "max": 592799
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 458776,
            "mean": 613394,
            "median": 674679,
            "max": 674679
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 417291,
            "mean": 542853,
            "median": 593397,
            "max": 617871
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 666463,
            "mean": 1121262,
            "median": 1260061,
            "max": 1271407
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 493224,
            "mean": 493224,
            "median": 493224,
            "max": 493224
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 685813,
            "mean": 685813,
            "median": 685813,
            "max": 685813
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 721508,
            "mean": 721508,
            "median": 721508,
            "max": 721508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 132089,
          "size": 418
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 301,
            "mean": 1099,
            "median": 301,
            "max": 2301
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 3537494,
          "size": 13937
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 766,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "WBTC_ADDRESS()": {
            "calls": 766,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute()": {
            "calls": 769,
            "min": 4869739,
            "mean": 4869871,
            "median": 4869739,
            "max": 4871587
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 88481,
          "size": 188
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 130081,
          "size": 383
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3099582,
          "size": 14931
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24585,
            "mean": 24585,
            "median": 24585,
            "max": 24585
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 17809,
            "mean": 18159,
            "median": 18269,
            "max": 18269
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 47324,
            "mean": 73983,
            "median": 69961,
            "max": 87061
          },
          "delegate(address)": {
            "calls": 26,
            "min": 6439,
            "mean": 66460,
            "median": 69479,
            "max": 89379
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 26301,
            "mean": 45602,
            "median": 48303,
            "max": 60381
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5407,
            "mean": 6582,
            "median": 7590,
            "max": 7612
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5588,
            "mean": 8316,
            "median": 9954,
            "max": 9954
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 5710,
            "mean": 5927,
            "median": 5931,
            "max": 5935
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 6946,
            "mean": 7289,
            "median": 7388,
            "max": 7388
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 56174,
            "mean": 56174,
            "median": 56174,
            "max": 56174
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 31253,
            "mean": 55737,
            "median": 48353,
            "max": 88090
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "totalSupply()": {
            "calls": 5,
            "min": 6478,
            "mean": 6478,
            "median": 6478,
            "max": 6478
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 82778,
            "mean": 117707,
            "median": 119354,
            "max": 137527
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 90149,
            "mean": 134150,
            "median": 130538,
            "max": 189527
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 39509,
            "mean": 73167,
            "median": 71184,
            "max": 118984
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 33648,
            "mean": 33648,
            "median": 33648,
            "max": 33648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 315578,
          "size": 1628
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1450,
            "mean": 1450,
            "median": 1450,
            "max": 1450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 66140,
          "size": 382
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 712,
            "mean": 2021,
            "median": 3212,
            "max": 3212
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 986086,
          "size": 4349
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2526,
            "mean": 2526,
            "median": 2526,
            "max": 2526
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 156904,
            "mean": 156904,
            "median": 156904,
            "max": 156904
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1466
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2279,
            "mean": 2279,
            "median": 2279,
            "max": 2279
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 652742,
          "size": 3597
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5038,
            "mean": 26233,
            "median": 7183,
            "max": 2671437
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 546423,
          "size": 2333
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 523,
            "mean": 2123,
            "median": 2523,
            "max": 2523
          },
          "approve(address,uint256)": {
            "calls": 3547,
            "min": 28727,
            "mean": 44686,
            "median": 45935,
            "max": 46199
          },
          "balanceOf(address)": {
            "calls": 19583,
            "min": 406,
            "mean": 2402,
            "median": 2406,
            "max": 2406
          },
          "decimals()": {
            "calls": 2436,
            "min": 299,
            "mean": 2257,
            "median": 2299,
            "max": 2299
          },
          "deposit()": {
            "calls": 51,
            "min": 44879,
            "mean": 44879,
            "median": 44879,
            "max": 44879
          },
          "name()": {
            "calls": 16,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "symbol()": {
            "calls": 42,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 46480,
            "mean": 46480,
            "median": 46480,
            "max": 46480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 2020961,
          "size": 9860
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2303,
            "mean": 2303,
            "median": 2303,
            "max": 2303
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 306331,
            "mean": 393614,
            "median": 424127,
            "max": 450384
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 2112605,
          "size": 10345
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 34995,
            "mean": 34995,
            "median": 34995,
            "max": 34995
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 334168,
            "mean": 427233,
            "median": 448398,
            "max": 477971
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1566984,
          "size": 7734
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 306159,
            "mean": 336492,
            "median": 331691,
            "max": 371626
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 4083
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2644132,
            "mean": 2644132,
            "median": 2644132,
            "max": 2644132
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2389,
            "mean": 2389,
            "median": 2389,
            "max": 2389
          },
          "initialize()": {
            "calls": 795,
            "min": 23430,
            "mean": 23568,
            "median": 23572,
            "max": 23572
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 38990
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 5276,
            "mean": 5276,
            "median": 5276,
            "max": 5276
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "aToken()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 2580,
            "mean": 2580,
            "median": 2580,
            "max": 2580
          },
          "asset()": {
            "calls": 1,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2476,
            "mean": 2476,
            "median": 2476,
            "max": 2476
          },
          "canPause(address)": {
            "calls": 257,
            "min": 10757,
            "mean": 10757,
            "median": 10757,
            "max": 10757
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 312600,
            "mean": 312600,
            "median": 312600,
            "max": 312600
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 2784,
            "mean": 2784,
            "median": 2784,
            "max": 2784
          },
          "decimals()": {
            "calls": 1,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 246890,
            "mean": 255369,
            "median": 255369,
            "max": 263848
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 146112,
            "mean": 147062,
            "median": 146112,
            "max": 187635
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 5521,
            "mean": 112719,
            "median": 113326,
            "max": 134996
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25059,
            "mean": 225329,
            "median": 226074,
            "max": 233074
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 24100,
            "mean": 24100,
            "median": 24100,
            "max": 24100
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 25842,
            "mean": 25842,
            "median": 25842,
            "max": 25842
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 246974,
            "mean": 246974,
            "median": 246974,
            "max": 246974
          },
          "name()": {
            "calls": 1,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "nonces(address)": {
            "calls": 3,
            "min": 2482,
            "mean": 2482,
            "median": 2482,
            "max": 2482
          },
          "paused()": {
            "calls": 2,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 373,
            "mean": 29039,
            "median": 31329,
            "max": 55415
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 15067,
            "mean": 15067,
            "median": 15067,
            "max": 15067
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 28143,
            "mean": 97663,
            "median": 97663,
            "max": 167184
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 122061,
            "mean": 122061,
            "median": 122061,
            "max": 122061
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 151712,
            "mean": 151712,
            "median": 151712,
            "max": 151712
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 10747,
            "mean": 11363,
            "median": 10747,
            "max": 33916
          },
          "symbol()": {
            "calls": 1,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 30016,
            "mean": 30016,
            "median": 30016,
            "max": 30016
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 11561
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 5,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 1,
            "min": 298202,
            "mean": 298202,
            "median": 298202,
            "max": 298202
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 1,
            "min": 1763338,
            "mean": 1763338,
            "median": 1763338,
            "max": 1763338
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 770,
            "min": 1762753,
            "mean": 5102238,
            "median": 5106530,
            "max": 5107238
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 158954,
            "mean": 158954,
            "median": 158954,
            "max": 158954
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 16079,
            "mean": 65017,
            "median": 65017,
            "max": 113956
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 53977,
            "mean": 53977,
            "median": 53977,
            "max": 53977
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 5554,
            "mean": 25471,
            "median": 5574,
            "max": 55338
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 17776,
            "mean": 29826,
            "median": 20314,
            "max": 60901
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 35113,
            "mean": 35113,
            "median": 35113,
            "max": 35113
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 101618,
            "mean": 101618,
            "median": 101618,
            "max": 101618
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 8499
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2594,
            "min": 2506,
            "mean": 5645,
            "median": 4506,
            "max": 28345
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 10768,
            "mean": 10768,
            "median": 10768,
            "max": 10768
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 10785,
            "mean": 10785,
            "median": 10785,
            "max": 10785
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 6,
            "min": 8262,
            "mean": 8262,
            "median": 8262,
            "max": 8262
          },
          "getIsVirtualAccActive(address)": {
            "calls": 8599,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 10773,
            "mean": 10773,
            "median": 10773,
            "max": 10773
          },
          "getPaused(address)": {
            "calls": 8866,
            "min": 10863,
            "mean": 10878,
            "median": 10879,
            "max": 10879
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 10798,
            "mean": 10798,
            "median": 10798,
            "max": 10798
          },
          "getReserveConfigurationData(address)": {
            "calls": 10195,
            "min": 11067,
            "mean": 11082,
            "median": 11083,
            "max": 11083
          },
          "getReserveTokensAddresses(address)": {
            "calls": 8716,
            "min": 13712,
            "mean": 13712,
            "median": 13712,
            "max": 13761
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 10787,
            "mean": 10787,
            "median": 10787,
            "max": 10787
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 4389,
            "mean": 22204,
            "median": 28143,
            "max": 28143
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 61671,
            "mean": 61869,
            "median": 61865,
            "max": 65268
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 10481,
            "mean": 10481,
            "median": 10481,
            "max": 10481
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3835
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 32803,
            "mean": 32803,
            "median": 32803,
            "max": 32803
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 53766,
            "mean": 53766,
            "median": 53766,
            "max": 53766
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32762,
            "mean": 32762,
            "median": 32762,
            "max": 32762
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32755,
            "mean": 32755,
            "median": 32755,
            "max": 32755
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32902,
            "mean": 32902,
            "median": 32902,
            "max": 32902
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 32747,
            "mean": 32747,
            "median": 32747,
            "max": 32747
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 32763,
            "mean": 32763,
            "median": 32763,
            "max": 32763
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32894,
            "mean": 32894,
            "median": 32894,
            "max": 32894
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 32660,
            "mean": 32676,
            "median": 32676,
            "max": 32693
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 2401044,
          "size": 11195
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 153713,
            "mean": 153912,
            "median": 153912,
            "max": 154112
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 125566,
            "mean": 155134,
            "median": 156402,
            "max": 193147
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 5740
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 221154,
            "mean": 224962,
            "median": 224962,
            "max": 228771
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 185858,
            "mean": 222127,
            "median": 226157,
            "max": 226157
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33474,
            "mean": 33474,
            "median": 33474,
            "max": 33474
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52064,
            "mean": 52064,
            "median": 52064,
            "max": 52064
          },
          "fallback()": {
            "calls": 2,
            "min": 21511,
            "mean": 21511,
            "median": 21511,
            "max": 21511
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "owner()": {
            "calls": 2,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "receive()": {
            "calls": 1,
            "min": 21188,
            "mean": 21188,
            "median": 21188,
            "max": 21188
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 141343,
            "mean": 147343,
            "median": 144275,
            "max": 158734
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 203772,
            "mean": 211614,
            "median": 205248,
            "max": 225824
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 216418,
            "mean": 234400,
            "median": 240602,
            "max": 246181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 3150355,
          "size": 15718
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2406,
            "mean": 2410,
            "median": 2406,
            "max": 3044
          },
          "POOL()": {
            "calls": 107,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 11441,
            "min": 269,
            "mean": 269,
            "median": 269,
            "max": 269
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8689,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24347,
            "mean": 24347,
            "median": 24347,
            "max": 24347
          },
          "balanceOf(address)": {
            "calls": 18085,
            "min": 2144,
            "mean": 10916,
            "median": 17144,
            "max": 17338
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 320,
            "mean": 38040,
            "median": 32402,
            "max": 58502
          },
          "decimals()": {
            "calls": 9389,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7394,
            "mean": 7394,
            "median": 7394,
            "max": 7394
          },
          "getIncentivesController()": {
            "calls": 8597,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 2483,
            "mean": 2483,
            "median": 2483,
            "max": 2483
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 559,
            "mean": 4298,
            "median": 4559,
            "max": 4559
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7407,
            "mean": 21397,
            "median": 24507,
            "max": 24507
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44183,
            "min": 121948,
            "mean": 206958,
            "median": 207348,
            "max": 297089
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 417,
            "mean": 56720,
            "median": 60260,
            "max": 67477
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 322,
            "mean": 39607,
            "median": 43072,
            "max": 60172
          },
          "name()": {
            "calls": 8759,
            "min": 2735,
            "mean": 4976,
            "median": 2744,
            "max": 9300
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 355,
            "mean": 23635,
            "median": 8734,
            "max": 52917
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 10751,
            "mean": 23026,
            "median": 12940,
            "max": 45389
          },
          "scaledBalanceOf(address)": {
            "calls": 26198,
            "min": 457,
            "mean": 2206,
            "median": 2457,
            "max": 2457
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 338,
            "mean": 1545,
            "median": 2338,
            "max": 2338
          },
          "symbol()": {
            "calls": 8740,
            "min": 2760,
            "mean": 4958,
            "median": 2769,
            "max": 9325
          },
          "totalSupply()": {
            "calls": 9982,
            "min": 393,
            "mean": 5190,
            "median": 6038,
            "max": 17232
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 330,
            "mean": 94654,
            "median": 100064,
            "max": 165586
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2587,
            "mean": 86540,
            "median": 103208,
            "max": 136099
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 393,
            "mean": 26774,
            "median": 31390,
            "max": 38289
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 292,
            "mean": 27345,
            "median": 32900,
            "max": 32900
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 28821
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 308,
            "mean": 308,
            "median": 308,
            "max": 308
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 2668,
            "mean": 24347,
            "median": 24422,
            "max": 24422
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 177724,
            "mean": 182363,
            "median": 180524,
            "max": 223541
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 180648,
            "mean": 180648,
            "median": 180648,
            "max": 180648
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 5626,
            "mean": 27395,
            "median": 48585,
            "max": 48585
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 23312,
            "mean": 23312,
            "median": 23312,
            "max": 23312
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 6210,
            "mean": 6210,
            "median": 6210,
            "max": 6210
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 5545,
            "mean": 5822,
            "median": 5545,
            "max": 76921
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 331,
            "mean": 331,
            "median": 331,
            "max": 331
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 634,
            "mean": 652,
            "median": 634,
            "max": 2634
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 308,
            "mean": 308,
            "median": 308,
            "max": 308
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2507,
            "mean": 2507,
            "median": 2507,
            "max": 2507
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 317,
            "mean": 317,
            "median": 317,
            "max": 317
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 332,
            "mean": 332,
            "median": 332,
            "max": 332
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 501,
            "mean": 547,
            "median": 501,
            "max": 2501
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 5162,
            "mean": 20194,
            "median": 21162,
            "max": 23662
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 684,
            "mean": 714,
            "median": 684,
            "max": 4684
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 718,
            "mean": 3372,
            "median": 3872,
            "max": 5027
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2507,
            "mean": 2507,
            "median": 2507,
            "max": 2507
          },
          "getReservesList()": {
            "calls": 2,
            "min": 10393,
            "mean": 10393,
            "median": 10393,
            "max": 10393
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 76752,
            "mean": 76752,
            "median": 76752,
            "max": 76752
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 2501,
            "mean": 2501,
            "median": 2501,
            "max": 2501
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 5575,
            "mean": 37996,
            "median": 5575,
            "max": 142701
          },
          "initialize(address)": {
            "calls": 69,
            "min": 44828,
            "mean": 44828,
            "median": 44828,
            "max": 44828
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 327548,
            "mean": 327548,
            "median": 327548,
            "max": 327548
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 70008,
            "mean": 71247,
            "median": 71247,
            "max": 72487
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 208544,
            "mean": 208544,
            "median": 208544,
            "max": 208544
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7237,
            "mean": 7237,
            "median": 7237,
            "max": 7237
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 115705,
            "mean": 115705,
            "median": 115705,
            "max": 115705
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 108921,
            "mean": 108921,
            "median": 108921,
            "max": 108921
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 116297,
            "mean": 116297,
            "median": 116297,
            "max": 116297
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 156083,
            "mean": 159699,
            "median": 159330,
            "max": 161764
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46401,
            "mean": 46401,
            "median": 46401,
            "max": 46401
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 3463,
            "mean": 4770,
            "median": 5552,
            "max": 14463
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 1426,
            "mean": 3748,
            "median": 1426,
            "max": 23566
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 5577,
            "mean": 10490,
            "median": 9934,
            "max": 16092
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 17822,
            "mean": 38145,
            "median": 37344,
            "max": 79577
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2568,
            "mean": 2712,
            "median": 2568,
            "max": 39598
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 9443,
            "mean": 10827,
            "median": 9443,
            "max": 55487
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 24907,
            "mean": 24907,
            "median": 24907,
            "max": 24907
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 2592,
            "mean": 3311,
            "median": 2592,
            "max": 54542
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 144031,
            "mean": 194822,
            "median": 195331,
            "max": 195331
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 197511,
            "mean": 197511,
            "median": 197511,
            "max": 197511
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 245763,
            "mean": 245763,
            "median": 245763,
            "max": 245763
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 6858,
            "mean": 13491,
            "median": 6858,
            "max": 26758
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 11714,
            "mean": 11714,
            "median": 11714,
            "max": 11714
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 5535,
            "mean": 8850,
            "median": 5535,
            "max": 21150
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 110416,
            "mean": 112637,
            "median": 112637,
            "max": 114859
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 4773475,
          "size": 21786
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4619,
            "min": 8839,
            "mean": 21165,
            "median": 15631,
            "max": 77870
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 15624,
            "mean": 26558,
            "median": 28008,
            "max": 37482
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 12839,
            "mean": 13650,
            "median": 12839,
            "max": 98244
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2820,
            "min": 15787,
            "mean": 25046356,
            "median": 1683711,
            "max": 218870197
          },
          "initialize(address)": {
            "calls": 803,
            "min": 71862,
            "mean": 89717,
            "median": 89762,
            "max": 89762
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1810,
            "min": 12957,
            "mean": 76804,
            "median": 76857,
            "max": 88604
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3895,
            "min": 15694,
            "mean": 63113,
            "median": 71544,
            "max": 71574
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2576,
            "min": 8171,
            "mean": 9080,
            "median": 8171,
            "max": 41111
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2327,
            "min": 7831,
            "mean": 8092,
            "median": 7831,
            "max": 40783
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2584,
            "min": 15625,
            "mean": 26532,
            "median": 25185,
            "max": 77323
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3381,
            "min": 15838,
            "mean": 73161,
            "median": 78047,
            "max": 78091
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2318,
            "min": 8160,
            "mean": 8294,
            "median": 8160,
            "max": 41100
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 15624,
            "mean": 15989,
            "median": 15624,
            "max": 78350
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 15648,
            "mean": 53494,
            "median": 47080,
            "max": 92987
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 12865,
            "mean": 15282,
            "median": 12865,
            "max": 74224
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3340,
            "min": 7864,
            "mean": 15615,
            "median": 8004,
            "max": 38664
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2568,
            "min": 15625,
            "mean": 33179,
            "median": 28419,
            "max": 97000
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2823,
            "min": 7865,
            "mean": 13501,
            "median": 7865,
            "max": 40805
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 18425,
            "mean": 45123,
            "median": 49609,
            "max": 69369
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 15777,
            "mean": 26243,
            "median": 15777,
            "max": 87140
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 15665,
            "mean": 27684,
            "median": 39657,
            "max": 39657
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 13005,
            "mean": 35715,
            "median": 42993,
            "max": 45281
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2315,
            "min": 8252,
            "mean": 8390,
            "median": 8252,
            "max": 65916
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2839,
            "min": 8170,
            "mean": 12583,
            "median": 8170,
            "max": 41110
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 12896,
            "mean": 27280,
            "median": 12896,
            "max": 102432
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1059,
            "min": 12840,
            "mean": 24557,
            "median": 28307,
            "max": 33207
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 10399,
            "mean": 13235,
            "median": 12899,
            "max": 101954
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 5803612,
          "size": 27092
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6411,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 749,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 286,
            "mean": 286,
            "median": 286,
            "max": 286
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 287,
            "mean": 287,
            "median": 287,
            "max": 287
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46321,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 2684,
            "mean": 24363,
            "median": 24438,
            "max": 24438
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 16924,
            "mean": 200985,
            "median": 209073,
            "max": 276934
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3112,
            "min": 5582,
            "mean": 44956,
            "median": 48541,
            "max": 48541
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1808,
            "min": 1406,
            "mean": 23271,
            "median": 23306,
            "max": 23306
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3113,
            "min": 1404,
            "mean": 6199,
            "median": 6204,
            "max": 6204
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 25565,
            "mean": 186034,
            "median": 195246,
            "max": 195246
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 5538,
            "mean": 6320,
            "median": 5538,
            "max": 76886
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 5563,
            "mean": 49866,
            "median": 87542,
            "max": 95491
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 6163,
            "mean": 45102,
            "median": 47892,
            "max": 102414
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 24310,
            "mean": 97069,
            "median": 76330,
            "max": 440839
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 21594,
            "mean": 270289,
            "median": 148708,
            "max": 634424
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 286,
            "mean": 286,
            "median": 286,
            "max": 286
          },
          "getConfiguration(address)": {
            "calls": 50292,
            "min": 650,
            "mean": 1788,
            "median": 2650,
            "max": 2650
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1842,
            "min": 481,
            "mean": 2476,
            "median": 2481,
            "max": 2481
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4700,
            "min": 480,
            "mean": 2477,
            "median": 2480,
            "max": 2480
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 123,
            "min": 1101,
            "mean": 3068,
            "median": 3101,
            "max": 3101
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 3476,
            "mean": 4806,
            "median": 5467,
            "max": 5476
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 30,
            "min": 2887,
            "mean": 2887,
            "median": 2887,
            "max": 2887
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 287,
            "mean": 287,
            "median": 287,
            "max": 287
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5628,
            "min": 501,
            "mean": 1211,
            "median": 501,
            "max": 2501
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "getReserveAToken(address)": {
            "calls": 20586,
            "min": 480,
            "mean": 2067,
            "median": 2480,
            "max": 2480
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "getReserveData(address)": {
            "calls": 14593,
            "min": 3172,
            "mean": 16857,
            "median": 21172,
            "max": 23672
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 479,
            "mean": 2327,
            "median": 2479,
            "max": 2479
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42008,
            "min": 694,
            "mean": 2193,
            "median": 694,
            "max": 4888
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4078,
            "min": 690,
            "mean": 2406,
            "median": 690,
            "max": 4999
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 13414,
            "min": 479,
            "mean": 2208,
            "median": 2479,
            "max": 2479
          },
          "getReservesList()": {
            "calls": 3685,
            "min": 2365,
            "mean": 16370,
            "median": 10365,
            "max": 332378
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 2898,
            "mean": 61344,
            "median": 76744,
            "max": 117356
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 649,
            "mean": 1727,
            "median": 2649,
            "max": 2649
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 490,
            "mean": 1281,
            "median": 490,
            "max": 2490
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1939,
            "min": 495,
            "mean": 2222,
            "median": 2495,
            "max": 2495
          },
          "initReserve(address,address,address)": {
            "calls": 44530,
            "min": 5569,
            "mean": 148613,
            "median": 149899,
            "max": 167294
          },
          "initialize(address)": {
            "calls": 740,
            "min": 26220,
            "mean": 44793,
            "median": 44844,
            "max": 44844
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6378,
            "min": 21522,
            "mean": 232259,
            "median": 268160,
            "max": 403447
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 1837,
            "mean": 45925,
            "median": 48486,
            "max": 127202
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 141065,
            "mean": 207122,
            "median": 208354,
            "max": 412704
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7237,
            "mean": 7237,
            "median": 7237,
            "max": 7237
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 12131,
            "mean": 83031,
            "median": 86960,
            "max": 117470
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 68678,
            "mean": 113530,
            "median": 113936,
            "max": 123783
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 106037,
            "mean": 130579,
            "median": 119622,
            "max": 161425
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46411,
            "mean": 46411,
            "median": 46411,
            "max": 46411
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2403,
            "min": 3451,
            "mean": 3683,
            "median": 3451,
            "max": 14451
          },
          "setConfiguration(address,(uint256))": {
            "calls": 71733,
            "min": 1398,
            "mean": 15260,
            "median": 23398,
            "max": 23538
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3491,
            "min": 4132,
            "mean": 11339,
            "median": 11580,
            "max": 16080
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 4536,
            "mean": 42813,
            "median": 37332,
            "max": 103781
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2606,
            "mean": 3461,
            "median": 2606,
            "max": 106079
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 5345,
            "mean": 12179,
            "median": 9345,
            "max": 86124
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 2607,
            "mean": 3602,
            "median": 2607,
            "max": 54551
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 28083,
            "mean": 177015,
            "median": 195245,
            "max": 202462
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 104375,
            "mean": 183981,
            "median": 204092,
            "max": 243478
          },
          "syncIndexesState(address)": {
            "calls": 2190,
            "min": 6830,
            "mean": 13807,
            "median": 6830,
            "max": 45253
          },
          "syncRatesState(address)": {
            "calls": 2190,
            "min": 11692,
            "mean": 11751,
            "median": 11692,
            "max": 16192
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 989,
            "min": 5545,
            "mean": 17102,
            "median": 21160,
            "max": 21160
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 29580,
            "mean": 119511,
            "median": 121715,
            "max": 180506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 2147643,
          "size": 10916
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 8594,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 26805,
            "mean": 26805,
            "median": 26805,
            "max": 26805
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 516,
            "mean": 9215,
            "median": 4113,
            "max": 17450
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 10251,
            "mean": 22041,
            "median": 22051,
            "max": 22063
          },
          "decimals()": {
            "calls": 9366,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 337,
            "mean": 28084,
            "median": 21141,
            "max": 55341
          },
          "getIncentivesController()": {
            "calls": 8594,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44183,
            "min": 121541,
            "mean": 203245,
            "median": 206574,
            "max": 296669
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 22100,
            "mean": 58200,
            "median": 58300,
            "max": 67884
          },
          "name()": {
            "calls": 8681,
            "min": 2713,
            "mean": 4965,
            "median": 2722,
            "max": 9278
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "scaledBalanceOf(address)": {
            "calls": 18693,
            "min": 442,
            "mean": 1720,
            "median": 2442,
            "max": 2442
          },
          "scaledTotalSupply()": {
            "calls": 44910,
            "min": 355,
            "mean": 2246,
            "median": 2355,
            "max": 2355
          },
          "symbol()": {
            "calls": 8674,
            "min": 2759,
            "mean": 5016,
            "median": 4948,
            "max": 9324
          },
          "totalSupply()": {
            "calls": 190,
            "min": 2017,
            "mean": 5183,
            "median": 6017,
            "max": 17326
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 4757
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          },
          "getAssetPrice(address)": {
            "calls": 58318,
            "min": 0,
            "mean": 5422,
            "median": 7621,
            "max": 14848
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5170,
            "mean": 7116,
            "median": 8089,
            "max": 8089
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "getSourceOfAsset(address)": {
            "calls": 1140,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 35617,
            "mean": 56306,
            "median": 58956,
            "max": 60614
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 58174,
            "mean": 58174,
            "median": 58174,
            "max": 58174
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 945623,
          "size": 4361
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42573,
            "min": 0,
            "mean": 3295,
            "median": 3204,
            "max": 3989
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2905,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3192,
            "mean": 3192,
            "median": 3192,
            "max": 3192
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 2867,
            "mean": 2867,
            "median": 2867,
            "max": 2867
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1361,
            "min": 2771,
            "mean": 2771,
            "median": 2771,
            "max": 2771
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2133,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "getVariableRateSlope1(address)": {
            "calls": 2137,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "getVariableRateSlope2(address)": {
            "calls": 1365,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 27366,
            "mean": 28476,
            "median": 27860,
            "max": 35389
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 27842,
            "mean": 31860,
            "median": 28434,
            "max": 35827
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 408200,
          "size": 1760
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2298,
            "mean": 2298,
            "median": 2298,
            "max": 2298
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 9674,
            "mean": 10536,
            "median": 9674,
            "max": 11830
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 9669,
            "mean": 10531,
            "median": 9669,
            "max": 11825
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 34579,
            "mean": 37584,
            "median": 37584,
            "max": 40589
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 31789,
            "mean": 32411,
            "median": 32411,
            "max": 33034
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 515470,
          "size": 2355
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21289,
            "mean": 21289,
            "median": 21289,
            "max": 21289
          },
          "fallback()": {
            "calls": 550946,
            "min": 0,
            "mean": 145825,
            "median": 7304,
            "max": 219990466
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26572,
            "mean": 28502,
            "median": 28502,
            "max": 30432
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28419,
            "mean": 151452,
            "median": 186067,
            "max": 186067
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 597874,
          "size": 2821
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43544,
            "mean": 43544,
            "median": 43544,
            "max": 43544
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43549,
            "mean": 43549,
            "median": 43549,
            "max": 43549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 382539,
          "size": 1824
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43529,
            "mean": 43529,
            "median": 43529,
            "max": 43529
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43549,
            "mean": 43549,
            "median": 43549,
            "max": 43549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 5808566,
          "size": 27018
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 27704,
            "mean": 27704,
            "median": 27704,
            "max": 27704
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 120134,
          "size": 378
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "decimals()": {
            "calls": 80,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "latestAnswer()": {
            "calls": 56474,
            "min": 286,
            "mean": 1753,
            "median": 2286,
            "max": 2286
          },
          "name()": {
            "calls": 80,
            "min": 120,
            "mean": 120,
            "median": 120,
            "max": 120
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 138713,
          "size": 427
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25583,
            "mean": 38877,
            "median": 45519,
            "max": 45531
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 272923,
          "size": 1280
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4464,
            "mean": 4464,
            "median": 4464,
            "max": 4464
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26014,
            "mean": 27210,
            "median": 26014,
            "max": 45926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 478821,
          "size": 2008
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133200,
            "mean": 133200,
            "median": 133200,
            "max": 133200
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133236,
            "mean": 133249,
            "median": 133260,
            "max": 133260
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 97497,
          "size": 377
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1163663,
          "size": 6658
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 543,
            "mean": 1654,
            "median": 2543,
            "max": 2543
          },
          "approve(address,uint256)": {
            "calls": 23006,
            "min": 26021,
            "mean": 45519,
            "median": 46065,
            "max": 46305
          },
          "balanceOf(address)": {
            "calls": 89423,
            "min": 467,
            "mean": 2465,
            "median": 2467,
            "max": 2467
          },
          "decimals()": {
            "calls": 80359,
            "min": 322,
            "mean": 2316,
            "median": 2322,
            "max": 2322
          },
          "mint(address,uint256)": {
            "calls": 6452,
            "min": 36052,
            "mean": 62190,
            "median": 70264,
            "max": 70372
          },
          "name()": {
            "calls": 2080,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 75791,
            "mean": 75850,
            "median": 75839,
            "max": 75995
          },
          "symbol()": {
            "calls": 86,
            "min": 2767,
            "mean": 2767,
            "median": 2767,
            "max": 2767
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46504,
            "mean": 50596,
            "median": 51280,
            "max": 51280
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28293,
            "mean": 28293,
            "median": 28293,
            "max": 28293
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 414,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 657,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 236,
            "mean": 277,
            "median": 280,
            "max": 280
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 206,
            "mean": 248,
            "median": 274,
            "max": 274
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 227378,
          "size": 839
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "HALF_WAD()": {
            "calls": 438,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "RAY()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "WAD()": {
            "calls": 648,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "WAD_RAY_RATIO()": {
            "calls": 1765,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 317,
            "mean": 317,
            "median": 317,
            "max": 317
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 283,
            "mean": 320,
            "median": 328,
            "max": 328
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 250,
            "mean": 291,
            "median": 308,
            "max": 308
          },
          "wadToRay(uint256)": {
            "calls": 488,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 3230874,
          "size": 16092
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 307,
            "mean": 307,
            "median": 307,
            "max": 307
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 54161,
            "mean": 54161,
            "median": 54161,
            "max": 54161
          },
          "name()": {
            "calls": 1,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2442,
            "mean": 2442,
            "median": 2442,
            "max": 2442
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67620,
            "mean": 67620,
            "median": 67620,
            "max": 67620
          },
          "symbol()": {
            "calls": 1,
            "min": 2753,
            "mean": 2753,
            "median": 2753,
            "max": 2753
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 60498,
            "mean": 60498,
            "median": 60498,
            "max": 60498
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 2147643,
          "size": 10916
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 53757,
            "mean": 53757,
            "median": 53757,
            "max": 53757
          },
          "name()": {
            "calls": 1,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2722
          },
          "symbol()": {
            "calls": 1,
            "min": 2768,
            "mean": 2768,
            "median": 2768,
            "max": 2768
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 474473,
          "size": 1883
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 156405,
            "mean": 156405,
            "median": 156405,
            "max": 156405
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5204,
            "mean": 5204,
            "median": 5204,
            "max": 5204
          },
          "text()": {
            "calls": 6,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "value()": {
            "calls": 7,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4467,
            "mean": 4467,
            "median": 4467,
            "max": 4467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 475553,
          "size": 1888
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51014,
            "mean": 51014,
            "median": 51014,
            "max": 51014
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5204,
            "mean": 5204,
            "median": 5204,
            "max": 5204
          },
          "text()": {
            "calls": 2,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "value()": {
            "calls": 4,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4467,
            "mean": 4467,
            "median": 4467,
            "max": 4467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132782,
          "size": 302
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 24624,
            "mean": 24624,
            "median": 24624,
            "max": 24624
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 133646,
          "size": 306
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 7533,
            "mean": 7533,
            "median": 7533,
            "max": 7533
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1575282,
          "size": 7384
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1622,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 801,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 50374,
            "mean": 50374,
            "median": 50374,
            "max": 50374
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 50391,
            "mean": 50391,
            "median": 50391,
            "max": 50391
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50373,
            "mean": 50373,
            "median": 50373,
            "max": 50373
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 39768,
            "mean": 47734,
            "median": 50390,
            "max": 50390
          },
          "addPoolAdmin(address)": {
            "calls": 789,
            "min": 50362,
            "mean": 50373,
            "median": 50374,
            "max": 50374
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 50380,
            "mean": 50380,
            "median": 50380,
            "max": 50380
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 40317,
            "mean": 49724,
            "median": 51068,
            "max": 51068
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2519,
            "mean": 2519,
            "median": 2519,
            "max": 2519
          },
          "isAssetListingAdmin(address)": {
            "calls": 3880,
            "min": 460,
            "mean": 2062,
            "median": 2460,
            "max": 2460
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2455,
            "mean": 2455,
            "median": 2455,
            "max": 2455
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          },
          "isPoolAdmin(address)": {
            "calls": 56584,
            "min": 472,
            "mean": 1563,
            "median": 2472,
            "max": 2472
          },
          "isRiskAdmin(address)": {
            "calls": 41039,
            "min": 455,
            "mean": 1366,
            "median": 455,
            "max": 2455
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 28477,
            "mean": 28477,
            "median": 28477,
            "max": 28477
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 28474,
            "mean": 28474,
            "median": 28474,
            "max": 28474
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 28460,
            "mean": 28460,
            "median": 28460,
            "max": 28460
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 28475,
            "mean": 34121,
            "median": 34121,
            "max": 39767
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 28461,
            "mean": 28461,
            "median": 28461,
            "max": 28461
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28460,
            "mean": 28460,
            "median": 28460,
            "max": 28460
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 38172,
            "mean": 46852,
            "median": 48589,
            "max": 48589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 2238624,
          "size": 11344
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1088,
            "min": 359,
            "mean": 886,
            "median": 359,
            "max": 2359
          },
          "getACLManager()": {
            "calls": 51761,
            "min": 339,
            "mean": 1345,
            "median": 2339,
            "max": 2339
          },
          "getAddress(bytes32)": {
            "calls": 18685,
            "min": 386,
            "mean": 1914,
            "median": 2386,
            "max": 2386
          },
          "getMarketId()": {
            "calls": 6,
            "min": 2747,
            "mean": 2747,
            "median": 2747,
            "max": 2747
          },
          "getPool()": {
            "calls": 2619,
            "min": 343,
            "mean": 1066,
            "median": 343,
            "max": 2343
          },
          "getPoolConfigurator()": {
            "calls": 195753,
            "min": 376,
            "mean": 695,
            "median": 376,
            "max": 2376
          },
          "getPoolDataProvider()": {
            "calls": 2628,
            "min": 361,
            "mean": 1190,
            "median": 361,
            "max": 2361
          },
          "getPriceOracle()": {
            "calls": 33067,
            "min": 379,
            "mean": 2234,
            "median": 2379,
            "max": 2379
          },
          "getPriceOracleSentinel()": {
            "calls": 15831,
            "min": 360,
            "mean": 2359,
            "median": 2360,
            "max": 2360
          },
          "owner()": {
            "calls": 804,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 23867,
            "mean": 46846,
            "median": 47490,
            "max": 47490
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 23906,
            "mean": 37343,
            "median": 38973,
            "max": 47523
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24402,
            "mean": 48035,
            "median": 48154,
            "max": 48430
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24114,
            "mean": 244659,
            "median": 49558,
            "max": 562642
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24173,
            "mean": 27881,
            "median": 27881,
            "max": 31590
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 23831,
            "mean": 313867,
            "median": 321570,
            "max": 588496
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 23906,
            "mean": 37343,
            "median": 38973,
            "max": 47523
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 23831,
            "mean": 300363,
            "median": 308067,
            "max": 561487
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 23889,
            "mean": 37326,
            "median": 38956,
            "max": 47506
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 23906,
            "mean": 40736,
            "median": 47523,
            "max": 47523
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2590
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2501,
            "mean": 4794,
            "median": 4793,
            "max": 7092
          },
          "owner()": {
            "calls": 801,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 23927,
            "mean": 103637,
            "median": 119579,
            "max": 119579
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 25958,
            "mean": 38587,
            "median": 39664,
            "max": 49064
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 872877,
          "size": 4059
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 204914,
            "mean": 278049,
            "median": 278023,
            "max": 283404
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "owner()": {
            "calls": 2,
            "min": 2298,
            "mean": 2298,
            "median": 2298,
            "max": 2298
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 58187,
            "mean": 58187,
            "median": 58187,
            "max": 58187
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43781,
            "mean": 43781,
            "median": 43781,
            "max": 43781
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48303,
            "mean": 48310,
            "median": 48315,
            "max": 48315
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 57403,
            "mean": 57403,
            "median": 57403,
            "max": 57403
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46266,
            "mean": 46266,
            "median": 46266,
            "max": 46266
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28580,
            "mean": 28580,
            "median": 28580,
            "max": 28580
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 43842,
            "mean": 43842,
            "median": 43842,
            "max": 43842
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3518535,
          "size": 16183
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 804,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 86668,
            "mean": 86668,
            "median": 86668,
            "max": 86668
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 88953,
            "mean": 88953,
            "median": 88953,
            "max": 88953
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 86545,
            "mean": 86545,
            "median": 86545,
            "max": 86545
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 749,
            "min": 663,
            "mean": 70738,
            "median": 80400,
            "max": 114573
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 83529,
            "mean": 83529,
            "median": 83529,
            "max": 83529
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 81186,
            "mean": 81186,
            "median": 81186,
            "max": 81186
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 168333,
            "mean": 241482,
            "median": 241466,
            "max": 246823
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 26699,
            "mean": 26699,
            "median": 26699,
            "max": 26699
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getAssetIndex(address,address)": {
            "calls": 9788,
            "min": 2103,
            "mean": 9764,
            "median": 10186,
            "max": 15285
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 2759,
            "mean": 5109,
            "median": 5192,
            "max": 7623
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 3265,
            "mean": 3265,
            "median": 3265,
            "max": 3265
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 4880,
            "mean": 4880,
            "median": 4880,
            "max": 4880
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 6908,
            "mean": 6908,
            "median": 6908,
            "max": 6908
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 2658,
            "mean": 2658,
            "median": 2658,
            "max": 2658
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 10948,
            "mean": 16340,
            "median": 16238,
            "max": 21188
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 517,
            "mean": 2143,
            "median": 2517,
            "max": 36337
          },
          "initialize(address)": {
            "calls": 801,
            "min": 24729,
            "mean": 24730,
            "median": 24729,
            "max": 25882
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24036,
            "mean": 24036,
            "median": 24036,
            "max": 24036
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 9375,
            "mean": 9375,
            "median": 9375,
            "max": 9375
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 21743,
            "mean": 21743,
            "median": 21743,
            "max": 21743
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 12087,
            "mean": 12087,
            "median": 12087,
            "max": 12087
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 9627,
            "mean": 9627,
            "median": 9627,
            "max": 9627
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 340599,
          "size": 1675
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 501266,
          "size": 2910
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25575,
            "mean": 25575,
            "median": 25575,
            "max": 25575
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52081,
            "mean": 52081,
            "median": 52081,
            "max": 52081
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 26596,
            "mean": 26596,
            "median": 26596,
            "max": 26596
          },
          "renewApproval()": {
            "calls": 1,
            "min": 27392,
            "mean": 27392,
            "median": 27392,
            "max": 27392
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1591259,
          "size": 7223
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2469,
            "mean": 15967,
            "median": 15967,
            "max": 29466
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19374,
            "mean": 19418,
            "median": 19418,
            "max": 19462
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7445,
            "mean": 41424,
            "median": 34360,
            "max": 89533
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2446,
            "mean": 121709,
            "median": 205138,
            "max": 205138
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2455,
            "mean": 7538,
            "median": 2455,
            "max": 17706
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7012,
            "mean": 18072,
            "median": 18072,
            "max": 29132
          },
          "initialize(uint256,address)": {
            "calls": 871,
            "min": 94488,
            "mean": 115480,
            "median": 116597,
            "max": 116597
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "receive()": {
            "calls": 4,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2481,
            "mean": 18673,
            "median": 18673,
            "max": 34866
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7467,
            "mean": 34768,
            "median": 19873,
            "max": 86145
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 599993,
          "size": 2825
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23648,
            "mean": 88723,
            "median": 92478,
            "max": 92478
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24119,
            "mean": 129452,
            "median": 132255,
            "max": 132255
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 3604176,
          "size": 27473
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 824,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3159186,
          "size": 19134
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 799,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 7122147,
          "size": 35155
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 774,
            "min": 17612,
            "mean": 17612,
            "median": 17612,
            "max": 17612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 11494525,
          "size": 51401
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 774,
            "min": 8926,
            "mean": 8926,
            "median": 8926,
            "max": 8926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 11075379,
          "size": 51386
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 1085297,
          "size": 6916
        },
        "functions": {
          "getMiscReport()": {
            "calls": 824,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5823438,
          "size": 29962
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 8402076,
          "size": 42259
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 824,
            "min": 17612,
            "mean": 17612,
            "median": 17612,
            "max": 17612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 10700682,
          "size": 49657
        },
        "functions": {
          "getPoolReport()": {
            "calls": 743,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 7735291,
          "size": 40519
        },
        "functions": {
          "getInitialReport()": {
            "calls": 824,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 774,
            "min": 648591,
            "mean": 650854,
            "median": 648591,
            "max": 769395
          },
          "setProtocolDataProvider(address)": {
            "calls": 799,
            "min": 59215,
            "mean": 59226,
            "median": 59227,
            "max": 59227
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 801,
            "min": 2896837,
            "mean": 3443711,
            "median": 3443900,
            "max": 3469477
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 799,
            "min": 46538,
            "mean": 46542,
            "median": 46538,
            "max": 46610
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 5408388,
          "size": 27347
        },
        "functions": {
          "getTokensReport()": {
            "calls": 799,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 2523337,
          "size": 11698
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 55394,
            "mean": 112365,
            "median": 163372,
            "max": 163378
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 33433,
            "mean": 81970,
            "median": 56093,
            "max": 167082
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 54976,
            "mean": 105708,
            "median": 55248,
            "max": 162960
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 45840,
            "mean": 84629,
            "median": 54148,
            "max": 125310
          },
          "getClaimableRewards(address,address)": {
            "calls": 3473,
            "min": 24833,
            "mean": 27600,
            "median": 27657,
            "max": 27660
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 26709,
            "mean": 31953,
            "median": 31999,
            "max": 32002
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1164,
            "min": 2538,
            "mean": 2538,
            "median": 2538,
            "max": 2538
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "mint(address,uint256)": {
            "calls": 2469,
            "min": 53019,
            "mean": 94348,
            "median": 95155,
            "max": 98137
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 78273,
            "mean": 78273,
            "median": 78273,
            "max": 78273
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 113920,
            "mean": 113920,
            "median": 113920,
            "max": 114192
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 4879,
            "mean": 4879,
            "median": 4879,
            "max": 4879
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 56840,
            "mean": 71201,
            "median": 68134,
            "max": 99463
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1182743,
          "size": 6746
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 1000,
            "min": 2541,
            "mean": 3569,
            "median": 4541,
            "max": 4541
          },
          "mint(address,uint256)": {
            "calls": 2469,
            "min": 50874,
            "mean": 67052,
            "median": 68202,
            "max": 68202
          },
          "scaledTotalSupply()": {
            "calls": 12090,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "transfer(address,uint256)": {
            "calls": 2469,
            "min": 29388,
            "mean": 45419,
            "median": 46560,
            "max": 46560
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2989761,
          "size": 13945
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26000,
            "mean": 45544,
            "median": 45948,
            "max": 46044
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 14983,
            "mean": 14983,
            "median": 14983,
            "max": 14983
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 15032,
            "mean": 15032,
            "median": 15032,
            "max": 15032
          },
          "decimals()": {
            "calls": 256,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 56077,
            "mean": 183095,
            "median": 195444,
            "max": 200580
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 71047,
            "mean": 230940,
            "median": 250786,
            "max": 336037
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 20966,
            "mean": 20966,
            "median": 20966,
            "max": 20966
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 34834,
            "mean": 46740,
            "median": 46880,
            "max": 46880
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 35010,
            "mean": 35010,
            "median": 35010,
            "max": 35010
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 12940,
            "mean": 20380,
            "median": 24094,
            "max": 24106
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 64025,
            "mean": 178084,
            "median": 178060,
            "max": 292095
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 130726,
            "mean": 130726,
            "median": 130726,
            "max": 130726
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 15072,
            "mean": 15072,
            "median": 15072,
            "max": 15072
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 15028,
            "mean": 15028,
            "median": 15028,
            "max": 15028
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 14990,
            "mean": 14990,
            "median": 14990,
            "max": 14990
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 15123,
            "mean": 15123,
            "median": 15123,
            "max": 15123
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 153902,
            "mean": 154093,
            "median": 154130,
            "max": 154250
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 39335,
            "mean": 111428,
            "median": 147126,
            "max": 147847
          },
          "totalAssets()": {
            "calls": 258,
            "min": 17069,
            "mean": 17069,
            "median": 17069,
            "max": 17069
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 47626,
            "mean": 101906,
            "median": 101875,
            "max": 156125
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 1073304,
          "size": 5079
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 184480,
            "mean": 184480,
            "median": 184480,
            "max": 184480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 1060859,
          "size": 4938
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 139060,
            "mean": 139060,
            "median": 139060,
            "max": 139060
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 1061507,
          "size": 4941
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 41193,
            "mean": 41193,
            "median": 41193,
            "max": 41193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 1007899,
          "size": 4685
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 78869,
            "mean": 78869,
            "median": 78869,
            "max": 78869
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 1063043,
          "size": 4948
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80443,
            "mean": 80443,
            "median": 80443,
            "max": 80443
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 1063043,
          "size": 4948
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 30668,
            "mean": 30668,
            "median": 30668,
            "max": 30668
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 1063043,
          "size": 4948
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80443,
            "mean": 80443,
            "median": 80443,
            "max": 80443
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 1063907,
          "size": 4952
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 30695,
            "mean": 30695,
            "median": 30695,
            "max": 30695
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 1318273,
          "size": 6339
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 325440,
            "mean": 325440,
            "median": 325440,
            "max": 325440
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 1002856,
          "size": 4590
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 86122,
            "mean": 86122,
            "median": 86122,
            "max": 86122
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 1039655,
          "size": 4760
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 48093,
            "mean": 48093,
            "median": 48093,
            "max": 48093
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 1002916,
          "size": 4590
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 43009,
            "mean": 43009,
            "median": 43009,
            "max": 43009
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 1125383,
          "size": 5319
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1750476,
            "mean": 1750476,
            "median": 1750476,
            "max": 1750476
          },
          "newListings()": {
            "calls": 4,
            "min": 2170,
            "mean": 2170,
            "median": 2170,
            "max": 2170
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 1217927,
          "size": 5915
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1750299,
            "mean": 1750299,
            "median": 1750299,
            "max": 1750299
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2600,
            "mean": 2600,
            "median": 2600,
            "max": 2600
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 1116564,
          "size": 5278
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 59980,
            "mean": 59980,
            "median": 59980,
            "max": 59980
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 1061711,
          "size": 4942
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 126769,
            "mean": 126769,
            "median": 126769,
            "max": 126769
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 1031,
            "mean": 1031,
            "median": 1031,
            "max": 1031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 2153494,
          "size": 10943
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "POOL()": {
            "calls": 2818,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 332,
            "mean": 332,
            "median": 332,
            "max": 332
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21592,
            "mean": 21592,
            "median": 21592,
            "max": 21592
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 26805,
            "mean": 26805,
            "median": 26805,
            "max": 26805
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 26051,
            "mean": 26051,
            "median": 26051,
            "max": 26051
          },
          "decimals()": {
            "calls": 2818,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21599,
            "mean": 21599,
            "median": 21599,
            "max": 21599
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21594,
            "mean": 21594,
            "median": 21594,
            "max": 21594
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 45516,
            "mean": 179357,
            "median": 206566,
            "max": 296661
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 60317,
            "mean": 62713,
            "median": 60317,
            "max": 69901
          },
          "name()": {
            "calls": 2818,
            "min": 2713,
            "mean": 3728,
            "median": 2722,
            "max": 9278
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2442,
            "mean": 2442,
            "median": 2442,
            "max": 2442
          },
          "symbol()": {
            "calls": 2818,
            "min": 2744,
            "mean": 3761,
            "median": 2753,
            "max": 9309
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21594,
            "mean": 21594,
            "median": 21594,
            "max": 21594
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 21753,
            "mean": 21753,
            "median": 21753,
            "max": 21753
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 104130698,
          "size": 518103
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 74568,
            "mean": 74763,
            "median": 74856,
            "max": 74866
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 76710,
            "mean": 76710,
            "median": 76710,
            "max": 76710
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 143947,
            "mean": 143947,
            "median": 143947,
            "max": 143947
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 384649,
            "mean": 692861,
            "median": 746801,
            "max": 748493
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 636453,
            "mean": 636453,
            "median": 636453,
            "max": 636453
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 58563,
            "mean": 74265,
            "median": 74265,
            "max": 89967
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 61316,
            "mean": 72999,
            "median": 74986,
            "max": 74996
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 421110,
            "mean": 632954,
            "median": 632954,
            "max": 844799
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 474183,
            "mean": 494894,
            "median": 494639,
            "max": 515862
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 415979,
            "mean": 521011,
            "median": 546906,
            "max": 610558
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 552681,
            "mean": 590184,
            "median": 590184,
            "max": 627688
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 150989,
            "mean": 150989,
            "median": 150989,
            "max": 150989
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 122191,
            "mean": 130030,
            "median": 133950,
            "max": 133950
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 501714,
            "mean": 534787,
            "median": 523942,
            "max": 572124
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 544630,
            "mean": 544630,
            "median": 544630,
            "max": 544630
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 514627,
            "mean": 526118,
            "median": 514627,
            "max": 560593
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 35690,
            "mean": 35925,
            "median": 36062,
            "max": 36074
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 504648,
            "mean": 504648,
            "median": 504648,
            "max": 504648
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 521852,
            "mean": 521852,
            "median": 521852,
            "max": 521852
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 527713,
            "mean": 583964,
            "median": 532412,
            "max": 691769
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 504675,
            "mean": 540824,
            "median": 533850,
            "max": 597348
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 502194,
            "mean": 552910,
            "median": 549522,
            "max": 607015
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 539402,
            "mean": 539402,
            "median": 539402,
            "max": 539402
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 415319,
            "mean": 554304,
            "median": 611214,
            "max": 611214
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 386823,
            "mean": 491547,
            "median": 534134,
            "max": 553685
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 595897,
            "mean": 1061153,
            "median": 1202635,
            "max": 1209473
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 446967,
            "mean": 446967,
            "median": 446967,
            "max": 446967
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 628792,
            "mean": 628792,
            "median": 628792,
            "max": 628792
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 649415,
            "mean": 649415,
            "median": 649415,
            "max": 649415
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 136370,
          "size": 453
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 270,
            "mean": 1068,
            "median": 270,
            "max": 2270
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 4076612,
          "size": 17240
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 766,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "WBTC_ADDRESS()": {
            "calls": 766,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "execute()": {
            "calls": 769,
            "min": 5020026,
            "mean": 5020076,
            "median": 5020026,
            "max": 5020734
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 84001,
          "size": 174
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 128989,
          "size": 382
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 157,
            "mean": 157,
            "median": 157,
            "max": 157
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 5227280,
          "size": 25342
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24347,
            "mean": 24347,
            "median": 24347,
            "max": 24347
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 17151,
            "mean": 17298,
            "median": 17345,
            "max": 17345
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 44171,
            "mean": 69850,
            "median": 65583,
            "max": 82683
          },
          "delegate(address)": {
            "calls": 26,
            "min": 5729,
            "mean": 63686,
            "median": 66423,
            "max": 86323
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 24770,
            "mean": 43875,
            "median": 46462,
            "max": 58755
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5064,
            "mean": 6219,
            "median": 7225,
            "max": 7237
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5136,
            "mean": 7866,
            "median": 9504,
            "max": 9504
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 4997,
            "mean": 5182,
            "median": 5180,
            "max": 5193
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 5589,
            "mean": 5855,
            "median": 5931,
            "max": 5931
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 54183,
            "mean": 54183,
            "median": 54183,
            "max": 54183
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 28841,
            "mean": 53221,
            "median": 45941,
            "max": 84456
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2463,
            "mean": 2463,
            "median": 2463,
            "max": 2463
          },
          "totalSupply()": {
            "calls": 5,
            "min": 6038,
            "mean": 6038,
            "median": 6038,
            "max": 6038
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 75612,
            "mean": 108880,
            "median": 110148,
            "max": 128967
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 82808,
            "mean": 125023,
            "median": 120649,
            "max": 179692
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 35781,
            "mean": 67611,
            "median": 65004,
            "max": 112804
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 32830,
            "mean": 32830,
            "median": 32830,
            "max": 32830
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 313558,
          "size": 1599
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1226,
            "mean": 1226,
            "median": 1226,
            "max": 1226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 53113,
          "size": 298
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 422,
            "mean": 1731,
            "median": 2922,
            "max": 2922
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1019917,
          "size": 4509
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 4,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "balanceOf(address)": {
            "calls": 8507,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "initialize(string,string,uint8)": {
            "calls": 118,
            "min": 156711,
            "mean": 156711,
            "median": 156711,
            "max": 156711
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1464
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2256,
            "mean": 2256,
            "median": 2256,
            "max": 2256
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 643859,
          "size": 3507
        },
        "functions": {
          "fallback()": {
            "calls": 14167,
            "min": 5041,
            "mean": 26228,
            "median": 7219,
            "max": 2645080
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 521830,
          "size": 2287
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 537,
            "mean": 2137,
            "median": 2537,
            "max": 2537
          },
          "approve(address,uint256)": {
            "calls": 3547,
            "min": 28824,
            "mean": 44783,
            "median": 46032,
            "max": 46296
          },
          "balanceOf(address)": {
            "calls": 19583,
            "min": 421,
            "mean": 2417,
            "median": 2421,
            "max": 2421
          },
          "decimals()": {
            "calls": 2436,
            "min": 283,
            "mean": 2241,
            "median": 2283,
            "max": 2283
          },
          "deposit()": {
            "calls": 51,
            "min": 44887,
            "mean": 44887,
            "median": 44887,
            "max": 44887
          },
          "name()": {
            "calls": 16,
            "min": 2576,
            "mean": 2576,
            "median": 2576,
            "max": 2576
          },
          "symbol()": {
            "calls": 42,
            "min": 2621,
            "mean": 2621,
            "median": 2621,
            "max": 2621
          },
          "transfer(address,uint256)": {
            "calls": 51,
            "min": 46587,
            "mean": 46587,
            "median": 46587,
            "max": 46587
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1827654,
          "size": 8913
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 305701,
            "mean": 392960,
            "median": 423548,
            "max": 449631
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 2100046,
          "size": 10265
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "rescueTokens(address)": {
            "calls": 1,
            "min": 35199,
            "mean": 35199,
            "median": 35199,
            "max": 35199
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 4,
            "min": 333441,
            "mean": 426400,
            "median": 447440,
            "max": 477280
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1551320,
          "size": 7621
        },
        "functions": {
          "owner()": {
            "calls": 2,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 3,
            "min": 305654,
            "mean": 335999,
            "median": 331293,
            "max": 371052
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3791
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 1,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "createStataTokens(address[])": {
            "calls": 22,
            "min": 2617755,
            "mean": 2617755,
            "median": 2617755,
            "max": 2617755
          },
          "getStataToken(address)": {
            "calls": 22,
            "min": 2450,
            "mean": 2450,
            "median": 2450,
            "max": 2450
          },
          "initialize()": {
            "calls": 795,
            "min": 23453,
            "mean": 23600,
            "median": 23604,
            "max": 23604
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 30374
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 3,
            "min": 5257,
            "mean": 5257,
            "median": 5257,
            "max": 5257
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "aToken()": {
            "calls": 1,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 2688,
            "mean": 2688,
            "median": 2688,
            "max": 2688
          },
          "asset()": {
            "calls": 1,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "canPause(address)": {
            "calls": 257,
            "min": 10847,
            "mean": 10847,
            "median": 10847,
            "max": 10847
          },
          "claimRewards(address,address[])": {
            "calls": 1,
            "min": 313290,
            "mean": 313290,
            "median": 313290,
            "max": 313290
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1,
            "min": 2843,
            "mean": 2843,
            "median": 2843,
            "max": 2843
          },
          "decimals()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          },
          "deposit(uint256,address)": {
            "calls": 2,
            "min": 246999,
            "mean": 255532,
            "median": 255532,
            "max": 264065
          },
          "depositATokens(uint256,address)": {
            "calls": 262,
            "min": 146482,
            "mean": 147430,
            "median": 146482,
            "max": 187899
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 259,
            "min": 5582,
            "mean": 112618,
            "median": 113224,
            "max": 134876
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "initialize(address,string,string)": {
            "calls": 67,
            "min": 25167,
            "mean": 224707,
            "median": 225447,
            "max": 232447
          },
          "maxRedeem(address)": {
            "calls": 2,
            "min": 24441,
            "mean": 24441,
            "median": 24441,
            "max": 24441
          },
          "maxWithdraw(address)": {
            "calls": 1,
            "min": 26261,
            "mean": 26261,
            "median": 26261,
            "max": 26261
          },
          "mint(uint256,address)": {
            "calls": 1,
            "min": 247010,
            "mean": 247010,
            "median": 247010,
            "max": 247010
          },
          "name()": {
            "calls": 1,
            "min": 2726,
            "mean": 2726,
            "median": 2726,
            "max": 2726
          },
          "nonces(address)": {
            "calls": 3,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "paused()": {
            "calls": 2,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 543,
            "mean": 29135,
            "median": 31426,
            "max": 55437
          },
          "previewDeposit(uint256)": {
            "calls": 1,
            "min": 15189,
            "mean": 15189,
            "median": 15189,
            "max": 15189
          },
          "redeem(uint256,address,address)": {
            "calls": 2,
            "min": 28591,
            "mean": 97989,
            "median": 97989,
            "max": 167388
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 1,
            "min": 122179,
            "mean": 122179,
            "median": 122179,
            "max": 122179
          },
          "refreshRewardTokens()": {
            "calls": 1,
            "min": 151786,
            "mean": 151786,
            "median": 151786,
            "max": 151786
          },
          "setPaused(bool)": {
            "calls": 263,
            "min": 8347,
            "mean": 11453,
            "median": 10847,
            "max": 33999
          },
          "symbol()": {
            "calls": 1,
            "min": 2730,
            "mean": 2730,
            "median": 2730,
            "max": 2730
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 2601,
            "mean": 2601,
            "median": 2601,
            "max": 2601
          },
          "withdraw(uint256,address,address)": {
            "calls": 1,
            "min": 30472,
            "mean": 30472,
            "median": 30472,
            "max": 30472
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 14790
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 5,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 1,
            "min": 299468,
            "mean": 299468,
            "median": 299468,
            "max": 299468
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 1,
            "min": 1777634,
            "mean": 1777634,
            "median": 1777634,
            "max": 1777634
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 770,
            "min": 1777213,
            "mean": 5145711,
            "median": 5150099,
            "max": 5150099
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 1,
            "min": 159802,
            "mean": 159802,
            "median": 159802,
            "max": 159802
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 2,
            "min": 16073,
            "mean": 65209,
            "median": 65209,
            "max": 114346
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 1,
            "min": 54203,
            "mean": 54203,
            "median": 54203,
            "max": 54203
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 5,
            "min": 5505,
            "mean": 25477,
            "median": 5529,
            "max": 55423
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 4,
            "min": 17652,
            "mean": 29626,
            "median": 20084,
            "max": 60684
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 1,
            "min": 34480,
            "mean": 34480,
            "median": 34480,
            "max": 34480
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 1,
            "min": 101239,
            "mean": 101239,
            "median": 101239,
            "max": 101239
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 9234
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 2594,
            "min": 2740,
            "mean": 5879,
            "median": 4740,
            "max": 28600
          },
          "getDebtCeiling(address)": {
            "calls": 5,
            "min": 10816,
            "mean": 10816,
            "median": 10816,
            "max": 10816
          },
          "getDebtCeilingDecimals()": {
            "calls": 1,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "getFlashLoanEnabled(address)": {
            "calls": 513,
            "min": 10823,
            "mean": 10823,
            "median": 10823,
            "max": 10823
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 6,
            "min": 8353,
            "mean": 8353,
            "median": 8353,
            "max": 8353
          },
          "getIsVirtualAccActive(address)": {
            "calls": 9108,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 10,
            "min": 10832,
            "mean": 10832,
            "median": 10832,
            "max": 10832
          },
          "getPaused(address)": {
            "calls": 9375,
            "min": 10781,
            "mean": 10813,
            "median": 10814,
            "max": 10814
          },
          "getReserveCaps(address)": {
            "calls": 48,
            "min": 10841,
            "mean": 10841,
            "median": 10841,
            "max": 10841
          },
          "getReserveConfigurationData(address)": {
            "calls": 10704,
            "min": 11066,
            "mean": 11098,
            "median": 11099,
            "max": 11099
          },
          "getReserveTokensAddresses(address)": {
            "calls": 9225,
            "min": 14033,
            "mean": 14033,
            "median": 14033,
            "max": 14064
          },
          "getSiloedBorrowing(address)": {
            "calls": 2,
            "min": 10824,
            "mean": 10824,
            "median": 10824,
            "max": 10824
          },
          "getTotalDebt(address)": {
            "calls": 4,
            "min": 4695,
            "mean": 22488,
            "median": 28419,
            "max": 28419
          },
          "getUnbackedMintCap(address)": {
            "calls": 1,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "getUserReserveData(address,address)": {
            "calls": 268,
            "min": 61902,
            "mean": 62102,
            "median": 62098,
            "max": 65524
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1,
            "min": 10680,
            "mean": 10680,
            "median": 10680,
            "max": 10680
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 8677
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 3,
            "min": 32730,
            "mean": 32730,
            "median": 32730,
            "max": 32730
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 1,
            "min": 53627,
            "mean": 53627,
            "median": 53627,
            "max": 53627
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32695,
            "mean": 32695,
            "median": 32695,
            "max": 32695
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 1,
            "min": 32715,
            "mean": 32715,
            "median": 32715,
            "max": 32715
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32962,
            "mean": 32962,
            "median": 32962,
            "max": 32962
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 1,
            "min": 32624,
            "mean": 32624,
            "median": 32624,
            "max": 32624
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 7,
            "min": 32669,
            "mean": 32669,
            "median": 32669,
            "max": 32669
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 32849,
            "mean": 32849,
            "median": 32849,
            "max": 32849
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 2,
            "min": 32626,
            "mean": 32637,
            "median": 32637,
            "max": 32648
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1940939,
          "size": 8958
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 2,
            "min": 152675,
            "mean": 152823,
            "median": 152823,
            "max": 152972
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 1810,
            "min": 124569,
            "mean": 154014,
            "median": 155271,
            "max": 192192
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 6393
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 2,
            "min": 220663,
            "mean": 224441,
            "median": 224441,
            "max": 228220
          },
          "depositETH(address,address,uint16)": {
            "calls": 10,
            "min": 185849,
            "mean": 222065,
            "median": 226089,
            "max": 226089
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 1,
            "min": 33460,
            "mean": 33460,
            "median": 33460,
            "max": 33460
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 52180,
            "mean": 52180,
            "median": 52180,
            "max": 52180
          },
          "fallback()": {
            "calls": 2,
            "min": 21489,
            "mean": 21489,
            "median": 21489,
            "max": 21489
          },
          "getWETHAddress()": {
            "calls": 1,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "owner()": {
            "calls": 2,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "receive()": {
            "calls": 1,
            "min": 21162,
            "mean": 21162,
            "median": 21162,
            "max": 21162
          },
          "repayETH(address,uint256,address)": {
            "calls": 6,
            "min": 141302,
            "mean": 147342,
            "median": 144254,
            "max": 158813
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 3,
            "min": 203561,
            "mean": 211394,
            "median": 204984,
            "max": 225637
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3,
            "min": 215867,
            "mean": 233845,
            "median": 240050,
            "max": 245620
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2973739,
          "size": 14701
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 260,
            "min": 2428,
            "mean": 2430,
            "median": 2428,
            "max": 3027
          },
          "POOL()": {
            "calls": 107,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 11950,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "REWARDS_CONTROLLER()": {
            "calls": 1,
            "min": 252,
            "mean": 252,
            "median": 252,
            "max": 252
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 9198,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "allowance(address,address)": {
            "calls": 26,
            "min": 2636,
            "mean": 2636,
            "median": 2636,
            "max": 2636
          },
          "approve(address,uint256)": {
            "calls": 3108,
            "min": 24445,
            "mean": 24445,
            "median": 24445,
            "max": 24445
          },
          "balanceOf(address)": {
            "calls": 18101,
            "min": 2224,
            "mean": 10991,
            "median": 17224,
            "max": 17420
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 6483,
            "min": 445,
            "mean": 37989,
            "median": 32360,
            "max": 58460
          },
          "decimals()": {
            "calls": 9898,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 7477,
            "mean": 7477,
            "median": 7477,
            "max": 7477
          },
          "getIncentivesController()": {
            "calls": 9106,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "getPreviousIndex(address)": {
            "calls": 16,
            "min": 2572,
            "mean": 2572,
            "median": 2572,
            "max": 2572
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 23,
            "min": 665,
            "mean": 4404,
            "median": 4665,
            "max": 4665
          },
          "increaseAllowance(address,uint256)": {
            "calls": 11,
            "min": 7496,
            "mean": 21486,
            "median": 24596,
            "max": 24596
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44692,
            "min": 121757,
            "mean": 204127,
            "median": 206776,
            "max": 296842
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 18324,
            "min": 456,
            "mean": 56852,
            "median": 60392,
            "max": 67664
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 10,
            "min": 342,
            "mean": 39694,
            "median": 43167,
            "max": 60267
          },
          "name()": {
            "calls": 9268,
            "min": 2659,
            "mean": 4938,
            "median": 4863,
            "max": 9215
          },
          "nonces(address)": {
            "calls": 264,
            "min": 2495,
            "mean": 2495,
            "median": 2495,
            "max": 2495
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 785,
            "min": 512,
            "mean": 23461,
            "median": 8588,
            "max": 52686
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 3,
            "min": 10865,
            "mean": 23124,
            "median": 13015,
            "max": 45494
          },
          "scaledBalanceOf(address)": {
            "calls": 26214,
            "min": 557,
            "mean": 2306,
            "median": 2557,
            "max": 2557
          },
          "scaledTotalSupply()": {
            "calls": 628,
            "min": 339,
            "mean": 1546,
            "median": 2339,
            "max": 2339
          },
          "symbol()": {
            "calls": 9249,
            "min": 2658,
            "mean": 4907,
            "median": 2693,
            "max": 9214
          },
          "totalSupply()": {
            "calls": 9982,
            "min": 411,
            "mean": 5222,
            "median": 6075,
            "max": 17271
          },
          "transfer(address,uint256)": {
            "calls": 1056,
            "min": 428,
            "mean": 94567,
            "median": 99791,
            "max": 165175
          },
          "transferFrom(address,address,uint256)": {
            "calls": 3879,
            "min": 2705,
            "mean": 86370,
            "median": 102947,
            "max": 135615
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 2850,
            "min": 441,
            "mean": 26634,
            "median": 31250,
            "max": 38188
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 7349,
            "min": 397,
            "mean": 27402,
            "median": 32987,
            "max": 32987
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 26377
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 196,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 69,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 220,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "approvePositionManager(address,bool)": {
            "calls": 522,
            "min": 2673,
            "mean": 24358,
            "median": 24433,
            "max": 24433
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 266,
            "min": 174037,
            "mean": 181032,
            "median": 179703,
            "max": 222802
          },
          "borrow(bytes32)": {
            "calls": 3,
            "min": 179840,
            "mean": 179840,
            "median": 179840,
            "max": 179840
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 519,
            "min": 5673,
            "mean": 27380,
            "median": 48510,
            "max": 48510
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 2,
            "min": 23305,
            "mean": 23305,
            "median": 23305,
            "max": 23305
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 526,
            "min": 6206,
            "mean": 6206,
            "median": 6206,
            "max": 6206
          },
          "dropReserve(address)": {
            "calls": 257,
            "min": 5572,
            "mean": 5851,
            "median": 5572,
            "max": 77446
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getConfiguration(address)": {
            "calls": 1666,
            "min": 624,
            "mean": 642,
            "median": 624,
            "max": 2624
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 2,
            "min": 2565,
            "mean": 2565,
            "median": 2565,
            "max": 2565
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 526,
            "min": 2566,
            "mean": 2566,
            "median": 2566,
            "max": 2566
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 256,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 299,
            "mean": 299,
            "median": 299,
            "max": 299
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "getReserveAToken(address)": {
            "calls": 172,
            "min": 576,
            "mean": 622,
            "median": 576,
            "max": 2576
          },
          "getReserveData(address)": {
            "calls": 1234,
            "min": 5083,
            "mean": 20115,
            "median": 21083,
            "max": 23583
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 273,
            "min": 747,
            "mean": 777,
            "median": 747,
            "max": 4747
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4,
            "min": 792,
            "mean": 3457,
            "median": 3957,
            "max": 5123
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 4,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "getReservesList()": {
            "calls": 2,
            "min": 10342,
            "mean": 10342,
            "median": 10342,
            "max": 10342
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "getUserAccountData(address)": {
            "calls": 1,
            "min": 76418,
            "mean": 76418,
            "median": 76418,
            "max": 76418
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 4,
            "min": 2587,
            "mean": 2587,
            "median": 2587,
            "max": 2587
          },
          "initReserve(address,address,address)": {
            "calls": 677,
            "min": 5611,
            "mean": 38035,
            "median": 5611,
            "max": 142716
          },
          "initialize(address)": {
            "calls": 69,
            "min": 44871,
            "mean": 44871,
            "median": 44871,
            "max": 44871
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 1,
            "min": 326551,
            "mean": 326551,
            "median": 326551,
            "max": 326551
          },
          "mintToTreasury(address[])": {
            "calls": 2,
            "min": 70090,
            "mean": 71320,
            "median": 71320,
            "max": 72550
          },
          "multicall(bytes[])": {
            "calls": 259,
            "min": 208050,
            "mean": 208050,
            "median": 208050,
            "max": 208050
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7265,
            "mean": 7265,
            "median": 7265,
            "max": 7265
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 2,
            "min": 115303,
            "mean": 115303,
            "median": 115303,
            "max": 115303
          },
          "repay(bytes32)": {
            "calls": 1,
            "min": 108458,
            "mean": 108458,
            "median": 108458,
            "max": 108458
          },
          "repayWithATokens(bytes32)": {
            "calls": 1,
            "min": 115829,
            "mean": 115829,
            "median": 115829,
            "max": 115829
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 152861,
            "mean": 159199,
            "median": 159051,
            "max": 161407
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46530,
            "mean": 46530,
            "median": 46530,
            "max": 46530
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 423,
            "min": 3563,
            "mean": 4820,
            "median": 5569,
            "max": 14563
          },
          "setConfiguration(address,(uint256))": {
            "calls": 2079,
            "min": 1420,
            "mean": 3746,
            "median": 1420,
            "max": 23565
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 768,
            "min": 5597,
            "mean": 10523,
            "median": 9962,
            "max": 16164
          },
          "setUserEMode(uint8)": {
            "calls": 7,
            "min": 17803,
            "mean": 38072,
            "median": 37285,
            "max": 79379
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 257,
            "min": 2684,
            "mean": 2827,
            "median": 2684,
            "max": 39558
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 276,
            "min": 9274,
            "mean": 10655,
            "median": 9274,
            "max": 55200
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 1,
            "min": 24703,
            "mean": 24703,
            "median": 24703,
            "max": 24703
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 262,
            "min": 2703,
            "mean": 3416,
            "median": 2703,
            "max": 54313
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 543,
            "min": 143739,
            "mean": 194530,
            "median": 195039,
            "max": 195039
          },
          "supply(bytes32)": {
            "calls": 7,
            "min": 197192,
            "mean": 197192,
            "median": 197192,
            "max": 197192
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 245522,
            "mean": 245522,
            "median": 245522,
            "max": 245522
          },
          "syncIndexesState(address)": {
            "calls": 165,
            "min": 6702,
            "mean": 13335,
            "median": 6702,
            "max": 26602
          },
          "syncRatesState(address)": {
            "calls": 165,
            "min": 11487,
            "mean": 11487,
            "median": 11487,
            "max": 11487
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 325,
            "min": 5544,
            "mean": 8851,
            "median": 5544,
            "max": 21125
          },
          "withdraw(bytes32)": {
            "calls": 2,
            "min": 110101,
            "mean": 112322,
            "median": 112322,
            "max": 114544
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 4176406,
          "size": 19020
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 1792,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 4619,
            "min": 8920,
            "mean": 21276,
            "median": 15788,
            "max": 77996
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 514,
            "min": 15778,
            "mean": 26705,
            "median": 28148,
            "max": 37621
          },
          "dropReserve(address)": {
            "calls": 261,
            "min": 12932,
            "mean": 13748,
            "median": 12932,
            "max": 98864
          },
          "getConfiguratorLogic()": {
            "calls": 1,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "getPendingLtv(address)": {
            "calls": 771,
            "min": 2484,
            "mean": 2484,
            "median": 2484,
            "max": 2484
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 2820,
            "min": 15901,
            "mean": 25562161,
            "median": 1697116,
            "max": 220775972
          },
          "initialize(address)": {
            "calls": 803,
            "min": 71895,
            "mean": 89750,
            "median": 89795,
            "max": 89795
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 1810,
            "min": 13251,
            "mean": 77098,
            "median": 77151,
            "max": 88962
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 3895,
            "min": 15858,
            "mean": 63422,
            "median": 71894,
            "max": 71907
          },
          "setBorrowCap(address,uint256)": {
            "calls": 2576,
            "min": 8378,
            "mean": 9290,
            "median": 8387,
            "max": 41332
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 2327,
            "min": 8009,
            "mean": 8279,
            "median": 8018,
            "max": 40963
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 2584,
            "min": 15777,
            "mean": 26896,
            "median": 25575,
            "max": 77586
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 3381,
            "min": 16030,
            "mean": 73159,
            "median": 78029,
            "max": 78069
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 2318,
            "min": 8376,
            "mean": 8519,
            "median": 8385,
            "max": 41330
          },
          "setPoolPause(bool)": {
            "calls": 515,
            "min": 15771,
            "mean": 16140,
            "median": 15771,
            "max": 79152
          },
          "setPoolPause(bool,uint40)": {
            "calls": 513,
            "min": 15801,
            "mean": 53925,
            "median": 47659,
            "max": 94016
          },
          "setReserveActive(address,bool)": {
            "calls": 270,
            "min": 12964,
            "mean": 15386,
            "median": 12964,
            "max": 74403
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 3340,
            "min": 8102,
            "mean": 15856,
            "median": 8256,
            "max": 38911
          },
          "setReserveFactor(address,uint256)": {
            "calls": 2568,
            "min": 15791,
            "mean": 33074,
            "median": 28284,
            "max": 96928
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 2823,
            "min": 8092,
            "mean": 13737,
            "median": 8101,
            "max": 41046
          },
          "setReserveFreeze(address,bool)": {
            "calls": 782,
            "min": 18662,
            "mean": 45285,
            "median": 49725,
            "max": 69574
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 300,
            "min": 15924,
            "mean": 26337,
            "median": 15924,
            "max": 86922
          },
          "setReservePause(address,bool)": {
            "calls": 513,
            "min": 15842,
            "mean": 27893,
            "median": 39899,
            "max": 39899
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 3084,
            "min": 13094,
            "mean": 35962,
            "median": 43234,
            "max": 45524
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 2315,
            "min": 8428,
            "mean": 8575,
            "median": 8437,
            "max": 66312
          },
          "setSupplyCap(address,uint256)": {
            "calls": 2839,
            "min": 8390,
            "mean": 12807,
            "median": 8399,
            "max": 41344
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 305,
            "min": 12975,
            "mean": 27276,
            "median": 12975,
            "max": 101992
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1059,
            "min": 12921,
            "mean": 24684,
            "median": 28449,
            "max": 33349
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 257,
            "min": 12968,
            "mean": 13313,
            "median": 12968,
            "max": 101718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 5388674,
          "size": 25070
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 6411,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 749,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 2,
            "min": 296,
            "mean": 296,
            "median": 296,
            "max": 296
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 514,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 46830,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "approvePositionManager(address,bool)": {
            "calls": 524,
            "min": 2689,
            "mean": 24374,
            "median": 24449,
            "max": 24449
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 7334,
            "min": 16639,
            "mean": 200301,
            "median": 208410,
            "max": 276265
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 3112,
            "min": 5633,
            "mean": 44896,
            "median": 48470,
            "max": 48470
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 1808,
            "min": 1405,
            "mean": 23270,
            "median": 23305,
            "max": 23305
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 3113,
            "min": 1406,
            "mean": 6201,
            "median": 6206,
            "max": 6206
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 10015,
            "min": 25491,
            "mean": 185821,
            "median": 195029,
            "max": 195029
          },
          "dropReserve(address)": {
            "calls": 262,
            "min": 5572,
            "mean": 6360,
            "median": 5572,
            "max": 77419
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 2049,
            "min": 5635,
            "mean": 49834,
            "median": 87454,
            "max": 95405
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 4458,
            "min": 6078,
            "mean": 44976,
            "median": 47689,
            "max": 102073
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 272,
            "min": 23318,
            "mean": 75601,
            "median": 53430,
            "max": 438118
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 13,
            "min": 21490,
            "mean": 270152,
            "median": 148527,
            "max": 633496
          },
          "getBorrowLogic()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "getConfiguration(address)": {
            "calls": 51310,
            "min": 657,
            "mean": 1812,
            "median": 2657,
            "max": 2657
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 1842,
            "min": 565,
            "mean": 2560,
            "median": 2565,
            "max": 2565
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 4700,
            "min": 566,
            "mean": 2563,
            "median": 2566,
            "max": 2566
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 123,
            "min": 1082,
            "mean": 3049,
            "median": 3082,
            "max": 3082
          },
          "getEModeCategoryData(uint8)": {
            "calls": 3,
            "min": 3375,
            "mean": 4700,
            "median": 5351,
            "max": 5375
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 30,
            "min": 2871,
            "mean": 2871,
            "median": 2871,
            "max": 2871
          },
          "getEModeLogic()": {
            "calls": 1,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "getFlashLoanLogic()": {
            "calls": 1,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 5619,
            "min": 604,
            "mean": 1312,
            "median": 604,
            "max": 2604
          },
          "getLiquidationLogic()": {
            "calls": 1,
            "min": 299,
            "mean": 299,
            "median": 299,
            "max": 299
          },
          "getPoolLogic()": {
            "calls": 1,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "getReserveAToken(address)": {
            "calls": 21095,
            "min": 572,
            "mean": 2169,
            "median": 2572,
            "max": 2572
          },
          "getReserveAddressById(uint16)": {
            "calls": 1,
            "min": 2569,
            "mean": 2569,
            "median": 2569,
            "max": 2569
          },
          "getReserveData(address)": {
            "calls": 14593,
            "min": 3096,
            "mean": 16781,
            "median": 21096,
            "max": 23596
          },
          "getReserveDeficit(address)": {
            "calls": 2226,
            "min": 571,
            "mean": 2419,
            "median": 2571,
            "max": 2571
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 42024,
            "min": 763,
            "mean": 2262,
            "median": 763,
            "max": 4959
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 4098,
            "min": 765,
            "mean": 2498,
            "median": 765,
            "max": 5096
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 13923,
            "min": 577,
            "mean": 2316,
            "median": 2577,
            "max": 2577
          },
          "getReservesList()": {
            "calls": 3685,
            "min": 2318,
            "mean": 16694,
            "median": 10318,
            "max": 325329
          },
          "getSupplyLogic()": {
            "calls": 1,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "getUserAccountData(address)": {
            "calls": 5975,
            "min": 2730,
            "mean": 61059,
            "median": 76416,
            "max": 117125
          },
          "getUserConfiguration(address)": {
            "calls": 3378,
            "min": 653,
            "mean": 1731,
            "median": 2653,
            "max": 2653
          },
          "getUserEMode(address)": {
            "calls": 2620,
            "min": 569,
            "mean": 1360,
            "median": 569,
            "max": 2569
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 1939,
            "min": 593,
            "mean": 2320,
            "median": 2593,
            "max": 2593
          },
          "initReserve(address,address,address)": {
            "calls": 45039,
            "min": 5611,
            "mean": 150091,
            "median": 151220,
            "max": 170876
          },
          "initialize(address)": {
            "calls": 740,
            "min": 26287,
            "mean": 44836,
            "median": 44887,
            "max": 44887
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 6,
            "min": 2657,
            "mean": 2657,
            "median": 2657,
            "max": 2657
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 6394,
            "min": 21311,
            "mean": 231144,
            "median": 267049,
            "max": 402467
          },
          "mintToTreasury(address[])": {
            "calls": 9,
            "min": 1824,
            "mean": 45972,
            "median": 48574,
            "max": 127366
          },
          "multicall(bytes[])": {
            "calls": 293,
            "min": 141086,
            "mean": 206848,
            "median": 208050,
            "max": 410911
          },
          "renouncePositionManagerRole(address)": {
            "calls": 1,
            "min": 7265,
            "mean": 7265,
            "median": 7265,
            "max": 7265
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 33,
            "min": 12078,
            "mean": 82765,
            "median": 86647,
            "max": 117292
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 265,
            "min": 68318,
            "mean": 113152,
            "median": 113663,
            "max": 123418
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 105823,
            "mean": 130271,
            "median": 119519,
            "max": 161192
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 256,
            "min": 46546,
            "mean": 46546,
            "median": 46546,
            "max": 46546
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2403,
            "min": 3557,
            "mean": 3780,
            "median": 3557,
            "max": 14557
          },
          "setConfiguration(address,(uint256))": {
            "calls": 72242,
            "min": 1396,
            "mean": 15315,
            "median": 23396,
            "max": 23541
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3497,
            "min": 4213,
            "mean": 11424,
            "median": 11658,
            "max": 16158
          },
          "setUserEMode(uint8)": {
            "calls": 2587,
            "min": 4524,
            "mean": 42672,
            "median": 37279,
            "max": 103666
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 259,
            "min": 2717,
            "mean": 3570,
            "median": 2717,
            "max": 105978
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 330,
            "min": 5274,
            "mean": 12099,
            "median": 9274,
            "max": 85870
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 264,
            "min": 2718,
            "mean": 3704,
            "median": 2718,
            "max": 54328
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 7040,
            "min": 28004,
            "mean": 176821,
            "median": 195039,
            "max": 202311
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 768,
            "min": 104269,
            "mean": 183902,
            "median": 204060,
            "max": 243377
          },
          "syncIndexesState(address)": {
            "calls": 2190,
            "min": 6680,
            "mean": 13657,
            "median": 6680,
            "max": 45162
          },
          "syncRatesState(address)": {
            "calls": 2190,
            "min": 11471,
            "mean": 11530,
            "median": 11471,
            "max": 15971
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 989,
            "min": 5562,
            "mean": 17094,
            "median": 21143,
            "max": 21143
          },
          "withdraw(address,uint256,address)": {
            "calls": 574,
            "min": 29345,
            "mean": 119240,
            "median": 121431,
            "max": 180123
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 2034428,
          "size": 10244
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 9103,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "approveDelegation(address,uint256)": {
            "calls": 5,
            "min": 26842,
            "mean": 26842,
            "median": 26842,
            "max": 26842
          },
          "balanceOf(address)": {
            "calls": 3722,
            "min": 594,
            "mean": 9398,
            "median": 4216,
            "max": 17574
          },
          "borrowAllowance(address,address)": {
            "calls": 5,
            "min": 2669,
            "mean": 2669,
            "median": 2669,
            "max": 2669
          },
          "burn(address,uint256,uint256)": {
            "calls": 5960,
            "min": 10158,
            "mean": 21948,
            "median": 21958,
            "max": 21970
          },
          "decimals()": {
            "calls": 9875,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 7,
            "min": 507,
            "mean": 27982,
            "median": 20917,
            "max": 55117
          },
          "getIncentivesController()": {
            "calls": 9103,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 44692,
            "min": 121546,
            "mean": 205470,
            "median": 206577,
            "max": 296649
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 7333,
            "min": 21971,
            "mean": 58071,
            "median": 58171,
            "max": 67774
          },
          "name()": {
            "calls": 9190,
            "min": 2637,
            "mean": 4903,
            "median": 2672,
            "max": 9193
          },
          "nonces(address)": {
            "calls": 1,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "scaledBalanceOf(address)": {
            "calls": 18725,
            "min": 552,
            "mean": 1829,
            "median": 2552,
            "max": 2552
          },
          "scaledTotalSupply()": {
            "calls": 44926,
            "min": 356,
            "mean": 2248,
            "median": 2356,
            "max": 2356
          },
          "symbol()": {
            "calls": 9183,
            "min": 2657,
            "mean": 4952,
            "median": 4861,
            "max": 9213
          },
          "totalSupply()": {
            "calls": 190,
            "min": 2071,
            "mean": 5249,
            "median": 6071,
            "max": 17402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3742
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 3,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "getAssetPrice(address)": {
            "calls": 58350,
            "min": 0,
            "mean": 5397,
            "median": 7593,
            "max": 14814
          },
          "getAssetsPrices(address[])": {
            "calls": 3,
            "min": 5138,
            "mean": 7106,
            "median": 8091,
            "max": 8091
          },
          "getFallbackOracle()": {
            "calls": 3,
            "min": 2297,
            "mean": 2297,
            "median": 2297,
            "max": 2297
          },
          "getSourceOfAsset(address)": {
            "calls": 1140,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "setAssetSources(address[],address[])": {
            "calls": 26,
            "min": 35760,
            "mean": 55786,
            "median": 58284,
            "max": 60320
          },
          "setFallbackOracle(address)": {
            "calls": 4,
            "min": 58319,
            "mean": 58319,
            "median": 58319,
            "max": 58319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 889389,
          "size": 4048
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1025,
            "min": 199,
            "mean": 199,
            "median": 199,
            "max": 199
          },
          "MAX_BORROW_RATE()": {
            "calls": 5382,
            "min": 213,
            "mean": 213,
            "median": 213,
            "max": 213
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 6918,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 42573,
            "min": 0,
            "mean": 3232,
            "median": 3140,
            "max": 3939
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 2905,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "getInterestRateData(address)": {
            "calls": 256,
            "min": 3040,
            "mean": 3040,
            "median": 3040,
            "max": 3040
          },
          "getInterestRateDataBps(address)": {
            "calls": 256,
            "min": 2816,
            "mean": 2816,
            "median": 2816,
            "max": 2816
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 1361,
            "min": 2785,
            "mean": 2785,
            "median": 2785,
            "max": 2785
          },
          "getOptimalUsageRatio(address)": {
            "calls": 2133,
            "min": 2522,
            "mean": 2522,
            "median": 2522,
            "max": 2522
          },
          "getVariableRateSlope1(address)": {
            "calls": 2137,
            "min": 2540,
            "mean": 2540,
            "median": 2540,
            "max": 2540
          },
          "getVariableRateSlope2(address)": {
            "calls": 1365,
            "min": 2545,
            "mean": 2545,
            "median": 2545,
            "max": 2545
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 2816,
            "min": 27460,
            "mean": 28522,
            "median": 27901,
            "max": 35426
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 6405,
            "min": 27856,
            "mean": 31875,
            "median": 28471,
            "max": 35835
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 450908,
          "size": 1908
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 1,
            "min": 158,
            "mean": 158,
            "median": 158,
            "max": 158
          },
          "getGracePeriod()": {
            "calls": 1,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "getSequencerOracle()": {
            "calls": 1,
            "min": 2290,
            "mean": 2290,
            "median": 2290,
            "max": 2290
          },
          "isBorrowAllowed()": {
            "calls": 5,
            "min": 9661,
            "mean": 10514,
            "median": 9661,
            "max": 11795
          },
          "isLiquidationAllowed()": {
            "calls": 5,
            "min": 9649,
            "mean": 10502,
            "median": 9649,
            "max": 11783
          },
          "setGracePeriod(uint256)": {
            "calls": 2,
            "min": 34814,
            "mean": 37829,
            "median": 37829,
            "max": 40845
          },
          "setSequencerOracle(address)": {
            "calls": 2,
            "min": 31936,
            "mean": 32554,
            "median": 32554,
            "max": 33173
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 522590,
          "size": 2325
        },
        "functions": {
          "admin()": {
            "calls": 8,
            "min": 21344,
            "mean": 21344,
            "median": 21344,
            "max": 21344
          },
          "fallback()": {
            "calls": 559193,
            "min": 0,
            "mean": 146268,
            "median": 7309,
            "max": 222146680
          },
          "upgradeTo(address)": {
            "calls": 2,
            "min": 26602,
            "mean": 28518,
            "median": 28518,
            "max": 30435
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 8,
            "min": 28462,
            "mean": 151551,
            "median": 186177,
            "max": 186177
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 607681,
          "size": 2784
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43547,
            "mean": 43547,
            "median": 43547,
            "max": 43547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 342358,
          "size": 1554
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 1,
            "min": 43536,
            "mean": 43536,
            "median": 43536,
            "max": 43536
          },
          "setSimulateEOA(bool)": {
            "calls": 1,
            "min": 43547,
            "mean": 43547,
            "median": 43547,
            "max": 43547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 5426794,
          "size": 25156
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 27749,
            "mean": 27749,
            "median": 27749,
            "max": 27749
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 112138,
          "size": 308
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 4172,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          },
          "decimals()": {
            "calls": 80,
            "min": 147,
            "mean": 147,
            "median": 147,
            "max": 147
          },
          "latestAnswer()": {
            "calls": 56506,
            "min": 263,
            "mean": 1731,
            "median": 2263,
            "max": 2263
          },
          "name()": {
            "calls": 80,
            "min": 136,
            "mean": 136,
            "median": 136,
            "max": 136
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 140391,
          "size": 436
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 3,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "setAssetPrice(address,uint256)": {
            "calls": 3,
            "min": 25653,
            "mean": 38947,
            "median": 45589,
            "max": 45601
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 306404,
          "size": 1569
        },
        "functions": {
          "latestRoundData()": {
            "calls": 10,
            "min": 4466,
            "mean": 4466,
            "median": 4466,
            "max": 4466
          },
          "setAnswer(bool,uint256)": {
            "calls": 76,
            "min": 26010,
            "mean": 27206,
            "median": 26010,
            "max": 45922
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 554569,
          "size": 2363
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 6,
            "min": 133183,
            "mean": 133183,
            "median": 133183,
            "max": 133183
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 9,
            "min": 133208,
            "mean": 133221,
            "median": 133232,
            "max": 133232
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 97219,
          "size": 329
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 66,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1263236,
          "size": 7302
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 256,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "allowance(address,address)": {
            "calls": 9,
            "min": 611,
            "mean": 1722,
            "median": 2611,
            "max": 2611
          },
          "approve(address,uint256)": {
            "calls": 23006,
            "min": 26133,
            "mean": 45621,
            "median": 46177,
            "max": 46417
          },
          "balanceOf(address)": {
            "calls": 89423,
            "min": 504,
            "mean": 2502,
            "median": 2504,
            "max": 2504
          },
          "decimals()": {
            "calls": 82395,
            "min": 310,
            "mean": 2305,
            "median": 2310,
            "max": 2310
          },
          "mint(address,uint256)": {
            "calls": 6452,
            "min": 36066,
            "mean": 62204,
            "median": 70278,
            "max": 70386
          },
          "name()": {
            "calls": 2080,
            "min": 2663,
            "mean": 2663,
            "median": 2663,
            "max": 2663
          },
          "nonces(address)": {
            "calls": 256,
            "min": 2450,
            "mean": 2450,
            "median": 2450,
            "max": 2450
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 512,
            "min": 75948,
            "mean": 75996,
            "median": 75984,
            "max": 76140
          },
          "symbol()": {
            "calls": 86,
            "min": 2684,
            "mean": 2684,
            "median": 2684,
            "max": 2684
          },
          "totalSupply()": {
            "calls": 11545,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 46585,
            "mean": 50677,
            "median": 51361,
            "max": 51361
          },
          "transferOwnership(address)": {
            "calls": 31,
            "min": 28450,
            "mean": 28450,
            "median": 28450,
            "max": 28450
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 116427,
          "size": 325
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 433,
            "min": 147,
            "mean": 147,
            "median": 147,
            "max": 147
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 674,
            "min": 153,
            "mean": 153,
            "median": 153,
            "max": 153
          },
          "percentDiv(uint256,uint256)": {
            "calls": 259,
            "min": 262,
            "mean": 329,
            "median": 335,
            "max": 335
          },
          "percentMul(uint256,uint256)": {
            "calls": 259,
            "min": 241,
            "mean": 292,
            "median": 314,
            "max": 314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 222160,
          "size": 816
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 1,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "HALF_WAD()": {
            "calls": 418,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "RAY()": {
            "calls": 1,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          },
          "WAD()": {
            "calls": 626,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "WAD_RAY_RATIO()": {
            "calls": 1772,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "rayDiv(uint256,uint256)": {
            "calls": 4,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "rayMul(uint256,uint256)": {
            "calls": 3,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "rayToWad(uint256)": {
            "calls": 515,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "wadDiv(uint256,uint256)": {
            "calls": 260,
            "min": 315,
            "mean": 374,
            "median": 388,
            "max": 388
          },
          "wadMul(uint256,uint256)": {
            "calls": 262,
            "min": 292,
            "mean": 338,
            "median": 365,
            "max": 365
          },
          "wadToRay(uint256)": {
            "calls": 495,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 3072178,
          "size": 15157
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 53923,
            "mean": 53923,
            "median": 53923,
            "max": 53923
          },
          "name()": {
            "calls": 1,
            "min": 2683,
            "mean": 2683,
            "median": 2683,
            "max": 2683
          },
          "scaledBalanceOf(address)": {
            "calls": 4,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 1,
            "min": 67689,
            "mean": 67689,
            "median": 67689,
            "max": 67689
          },
          "symbol()": {
            "calls": 1,
            "min": 2686,
            "mean": 2686,
            "median": 2686,
            "max": 2686
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 1,
            "min": 60459,
            "mean": 60459,
            "median": 60459,
            "max": 60459
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 2034428,
          "size": 10244
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 1,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1,
            "min": 53718,
            "mean": 53718,
            "median": 53718,
            "max": 53718
          },
          "name()": {
            "calls": 1,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "symbol()": {
            "calls": 1,
            "min": 2692,
            "mean": 2692,
            "median": 2692,
            "max": 2692
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 465671,
          "size": 1848
        },
        "functions": {
          "REVISION()": {
            "calls": 6,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 6,
            "min": 156500,
            "mean": 156500,
            "median": 156500,
            "max": 156500
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 5207,
            "mean": 5207,
            "median": 5207,
            "max": 5207
          },
          "text()": {
            "calls": 6,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "upgradeTo(address)": {
            "calls": 1,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "value()": {
            "calls": 7,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "values(uint256)": {
            "calls": 12,
            "min": 4480,
            "mean": 4480,
            "median": 4480,
            "max": 4480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 466535,
          "size": 1852
        },
        "functions": {
          "REVISION()": {
            "calls": 2,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 1,
            "min": 51106,
            "mean": 51106,
            "median": 51106,
            "max": 51106
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 5207,
            "mean": 5207,
            "median": 5207,
            "max": 5207
          },
          "text()": {
            "calls": 2,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "value()": {
            "calls": 4,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "values(uint256)": {
            "calls": 4,
            "min": 4480,
            "mean": 4480,
            "median": 4480,
            "max": 4480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 136159,
          "size": 322
        },
        "functions": {
          "initialize(address)": {
            "calls": 2,
            "min": 24531,
            "mean": 24531,
            "median": 24531,
            "max": 24531
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 137023,
          "size": 326
        },
        "functions": {
          "initialize(address)": {
            "calls": 1,
            "min": 7440,
            "mean": 7440,
            "median": 7440,
            "max": 7440
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1704281,
          "size": 7945
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 1622,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 20,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 801,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "addAssetListingAdmin(address)": {
            "calls": 3,
            "min": 50423,
            "mean": 50423,
            "median": 50423,
            "max": 50423
          },
          "addBridge(address)": {
            "calls": 2,
            "min": 50440,
            "mean": 50440,
            "median": 50440,
            "max": 50440
          },
          "addEmergencyAdmin(address)": {
            "calls": 3,
            "min": 50430,
            "mean": 50430,
            "median": 50430,
            "max": 50430
          },
          "addFlashBorrower(address)": {
            "calls": 4,
            "min": 39099,
            "mean": 47604,
            "median": 50439,
            "max": 50439
          },
          "addPoolAdmin(address)": {
            "calls": 789,
            "min": 50419,
            "mean": 50430,
            "median": 50431,
            "max": 50431
          },
          "addRiskAdmin(address)": {
            "calls": 14,
            "min": 50446,
            "mean": 50446,
            "median": 50446,
            "max": 50446
          },
          "grantRole(bytes32,address)": {
            "calls": 8,
            "min": 39662,
            "mean": 49686,
            "median": 51119,
            "max": 51119
          },
          "hasRole(bytes32,address)": {
            "calls": 19,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "isAssetListingAdmin(address)": {
            "calls": 3880,
            "min": 554,
            "mean": 2156,
            "median": 2554,
            "max": 2554
          },
          "isEmergencyAdmin(address)": {
            "calls": 4365,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "isFlashBorrower(address)": {
            "calls": 273,
            "min": 2578,
            "mean": 2578,
            "median": 2578,
            "max": 2578
          },
          "isPoolAdmin(address)": {
            "calls": 56584,
            "min": 556,
            "mean": 1647,
            "median": 2556,
            "max": 2556
          },
          "isRiskAdmin(address)": {
            "calls": 41039,
            "min": 547,
            "mean": 1458,
            "median": 547,
            "max": 2547
          },
          "removeAssetListingAdmin(address)": {
            "calls": 2,
            "min": 28531,
            "mean": 28531,
            "median": 28531,
            "max": 28531
          },
          "removeBridge(address)": {
            "calls": 1,
            "min": 28538,
            "mean": 28538,
            "median": 28538,
            "max": 28538
          },
          "removeEmergencyAdmin(address)": {
            "calls": 1,
            "min": 28514,
            "mean": 28514,
            "median": 28514,
            "max": 28514
          },
          "removeFlashBorrower(address)": {
            "calls": 2,
            "min": 28537,
            "mean": 33821,
            "median": 33821,
            "max": 39106
          },
          "removePoolAdmin(address)": {
            "calls": 1,
            "min": 28524,
            "mean": 28524,
            "median": 28524,
            "max": 28524
          },
          "removeRiskAdmin(address)": {
            "calls": 1,
            "min": 28520,
            "mean": 28520,
            "median": 28520,
            "max": 28520
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 6,
            "min": 37605,
            "mean": 46878,
            "median": 48733,
            "max": 48733
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 2131112,
          "size": 10847
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 1088,
            "min": 363,
            "mean": 890,
            "median": 363,
            "max": 2363
          },
          "getACLManager()": {
            "calls": 51761,
            "min": 341,
            "mean": 1347,
            "median": 2341,
            "max": 2341
          },
          "getAddress(bytes32)": {
            "calls": 18685,
            "min": 419,
            "mean": 1947,
            "median": 2419,
            "max": 2419
          },
          "getMarketId()": {
            "calls": 6,
            "min": 2693,
            "mean": 2693,
            "median": 2693,
            "max": 2693
          },
          "getPool()": {
            "calls": 2619,
            "min": 347,
            "mean": 1070,
            "median": 347,
            "max": 2347
          },
          "getPoolConfigurator()": {
            "calls": 197286,
            "min": 378,
            "mean": 695,
            "median": 378,
            "max": 2378
          },
          "getPoolDataProvider()": {
            "calls": 2628,
            "min": 352,
            "mean": 1181,
            "median": 352,
            "max": 2352
          },
          "getPriceOracle()": {
            "calls": 33083,
            "min": 369,
            "mean": 2224,
            "median": 2369,
            "max": 2369
          },
          "getPriceOracleSentinel()": {
            "calls": 15847,
            "min": 362,
            "mean": 2361,
            "median": 2362,
            "max": 2362
          },
          "owner()": {
            "calls": 804,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "setACLAdmin(address)": {
            "calls": 68,
            "min": 23928,
            "mean": 46854,
            "median": 47497,
            "max": 47497
          },
          "setACLManager(address)": {
            "calls": 4,
            "min": 23965,
            "mean": 37362,
            "median": 38978,
            "max": 47528
          },
          "setAddress(bytes32,address)": {
            "calls": 1815,
            "min": 24474,
            "mean": 48062,
            "median": 48178,
            "max": 48454
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 5,
            "min": 24239,
            "mean": 247345,
            "median": 49388,
            "max": 569317
          },
          "setMarketId(string)": {
            "calls": 2,
            "min": 24232,
            "mean": 27796,
            "median": 27796,
            "max": 31360
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 4,
            "min": 23931,
            "mean": 317428,
            "median": 325131,
            "max": 595520
          },
          "setPoolDataProvider(address)": {
            "calls": 4,
            "min": 23967,
            "mean": 37364,
            "median": 38980,
            "max": 47530
          },
          "setPoolImpl(address)": {
            "calls": 4,
            "min": 23933,
            "mean": 303934,
            "median": 311639,
            "max": 568526
          },
          "setPriceOracle(address)": {
            "calls": 4,
            "min": 23961,
            "mean": 37358,
            "median": 38974,
            "max": 47524
          },
          "setPriceOracleSentinel(address)": {
            "calls": 6,
            "min": 23976,
            "mean": 40761,
            "median": 47539,
            "max": 47539
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2858
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 4,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 6,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          },
          "getAddressesProvidersList()": {
            "calls": 5,
            "min": 2431,
            "mean": 4688,
            "median": 4685,
            "max": 6956
          },
          "owner()": {
            "calls": 801,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 6,
            "min": 24009,
            "mean": 103583,
            "median": 119498,
            "max": 119498
          },
          "unregisterAddressesProvider(address)": {
            "calls": 4,
            "min": 26034,
            "mean": 38535,
            "median": 39569,
            "max": 48969
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 1055942,
          "size": 5045
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 205497,
            "mean": 278588,
            "median": 278560,
            "max": 283999
          },
          "getEmissionAdmin(address)": {
            "calls": 6,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "getRewardsController()": {
            "calls": 2,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "owner()": {
            "calls": 2,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 58239,
            "mean": 58239,
            "median": 58239,
            "max": 58239
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 43799,
            "mean": 43799,
            "median": 43799,
            "max": 43799
          },
          "setEmissionAdmin(address,address)": {
            "calls": 47,
            "min": 48336,
            "mean": 48343,
            "median": 48348,
            "max": 48348
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 57436,
            "mean": 57436,
            "median": 57436,
            "max": 57436
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 46169,
            "mean": 46169,
            "median": 46169,
            "max": 46169
          },
          "setRewardsController(address)": {
            "calls": 1,
            "min": 28598,
            "mean": 28598,
            "median": 28598,
            "max": 28598
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 43814,
            "mean": 43814,
            "median": 43814,
            "max": 43814
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3902443,
          "size": 17913
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 804,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "claimAllRewards(address[],address)": {
            "calls": 1,
            "min": 86510,
            "mean": 86510,
            "median": 86510,
            "max": 86510
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 1,
            "min": 88757,
            "mean": 88757,
            "median": 88757,
            "max": 88757
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 1,
            "min": 86395,
            "mean": 86395,
            "median": 86395,
            "max": 86395
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 709,
            "min": 701,
            "mean": 71906,
            "median": 80423,
            "max": 114487
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 1,
            "min": 83529,
            "mean": 83529,
            "median": 83529,
            "max": 83529
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 1,
            "min": 81227,
            "mean": 81227,
            "median": 81227,
            "max": 81227
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 2329,
            "min": 168952,
            "mean": 242056,
            "median": 242039,
            "max": 247454
          },
          "getAllUserRewards(address[],address)": {
            "calls": 1,
            "min": 26357,
            "mean": 26357,
            "median": 26357,
            "max": 26357
          },
          "getAssetDecimals(address)": {
            "calls": 2,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "getAssetIndex(address,address)": {
            "calls": 9768,
            "min": 2202,
            "mean": 9830,
            "median": 10257,
            "max": 15380
          },
          "getClaimer(address)": {
            "calls": 514,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "getDistributionEnd(address,address)": {
            "calls": 1,
            "min": 2624,
            "mean": 2624,
            "median": 2624,
            "max": 2624
          },
          "getEmissionManager()": {
            "calls": 4,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getRewardOracle(address)": {
            "calls": 1,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          },
          "getRewardsByAsset(address)": {
            "calls": 2421,
            "min": 2709,
            "mean": 5073,
            "median": 5156,
            "max": 7610
          },
          "getRewardsData(address,address)": {
            "calls": 3,
            "min": 3424,
            "mean": 3424,
            "median": 3424,
            "max": 3424
          },
          "getRewardsList()": {
            "calls": 30,
            "min": 4767,
            "mean": 4767,
            "median": 4767,
            "max": 4767
          },
          "getTransferStrategy(address)": {
            "calls": 1,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 1,
            "min": 7070,
            "mean": 7070,
            "median": 7070,
            "max": 7070
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 1,
            "min": 2751,
            "mean": 2751,
            "median": 2751,
            "max": 2751
          },
          "getUserRewards(address[],address,address)": {
            "calls": 267,
            "min": 11017,
            "mean": 16407,
            "median": 16304,
            "max": 21254
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 54340,
            "min": 564,
            "mean": 2190,
            "median": 2564,
            "max": 36306
          },
          "initialize(address)": {
            "calls": 801,
            "min": 24673,
            "mean": 24674,
            "median": 24673,
            "max": 25974
          },
          "setClaimer(address,address)": {
            "calls": 260,
            "min": 24080,
            "mean": 24080,
            "median": 24080,
            "max": 24080
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 2,
            "min": 9389,
            "mean": 9389,
            "median": 9389,
            "max": 9389
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 2,
            "min": 21746,
            "mean": 21746,
            "median": 21746,
            "max": 21746
          },
          "setRewardOracle(address,address)": {
            "calls": 2,
            "min": 11997,
            "mean": 11997,
            "median": 11997,
            "max": 11997
          },
          "setTransferStrategy(address,address)": {
            "calls": 2,
            "min": 9612,
            "mean": 9612,
            "median": 9612,
            "max": 9612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 354199,
          "size": 1673
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 1,
            "min": 192,
            "mean": 192,
            "median": 192,
            "max": 192
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 525301,
          "size": 2842
        },
        "functions": {
          "dropApproval()": {
            "calls": 1,
            "min": 25657,
            "mean": 25657,
            "median": 25657,
            "max": 25657
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 1,
            "min": 52234,
            "mean": 52234,
            "median": 52234,
            "max": 52234
          },
          "getIncentivesController()": {
            "calls": 1,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          },
          "getRewardsAdmin()": {
            "calls": 1,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "getStakeContract()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "getUnderlyingToken()": {
            "calls": 1,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "performTransfer(address,address,uint256)": {
            "calls": 1,
            "min": 26752,
            "mean": 26752,
            "median": 26752,
            "max": 26752
          },
          "renewApproval()": {
            "calls": 1,
            "min": 27513,
            "mean": 27513,
            "median": 27513,
            "max": 27513
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1910109,
          "size": 8729
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 89,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "approve(address,address,uint256)": {
            "calls": 8,
            "min": 2588,
            "mean": 16180,
            "median": 16180,
            "max": 29773
          },
          "balanceOf(uint256,address)": {
            "calls": 4,
            "min": 19336,
            "mean": 19391,
            "median": 19391,
            "max": 19446
          },
          "cancelStream(uint256)": {
            "calls": 4,
            "min": 7507,
            "mean": 41605,
            "median": 34538,
            "max": 89837
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 17,
            "min": 2582,
            "mean": 121910,
            "median": 205391,
            "max": 205391
          },
          "getNextStreamId()": {
            "calls": 1,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "getStream(uint256)": {
            "calls": 6,
            "min": 2515,
            "mean": 7635,
            "median": 2515,
            "max": 17877
          },
          "grantRole(bytes32,address)": {
            "calls": 88,
            "min": 7017,
            "mean": 18075,
            "median": 18075,
            "max": 29133
          },
          "initialize(uint256,address)": {
            "calls": 871,
            "min": 94512,
            "mean": 115507,
            "median": 116625,
            "max": 116625
          },
          "isFundsAdmin(address)": {
            "calls": 3,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "receive()": {
            "calls": 4,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "transfer(address,address,uint256)": {
            "calls": 8,
            "min": 2614,
            "mean": 18806,
            "median": 18806,
            "max": 34999
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 6,
            "min": 7543,
            "mean": 34912,
            "median": 19950,
            "max": 86585
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 524974,
          "size": 2418
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 258,
            "min": 154,
            "mean": 154,
            "median": 154,
            "max": 154
          },
          "RECIPIENT_B()": {
            "calls": 258,
            "min": 192,
            "mean": 192,
            "median": 192,
            "max": 192
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 2313,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "receive()": {
            "calls": 258,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 259,
            "min": 23591,
            "mean": 91418,
            "median": 92414,
            "max": 92414
          },
          "splitRevenue(address[])": {
            "calls": 518,
            "min": 24118,
            "mean": 129704,
            "median": 132460,
            "max": 132460
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 3768715,
          "size": 26935
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 824,
            "min": 6698,
            "mean": 6698,
            "median": 6698,
            "max": 6698
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3555989,
          "size": 25334
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 799,
            "min": 6698,
            "mean": 6698,
            "median": 6698,
            "max": 6698
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 7391884,
          "size": 36718
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 774,
            "min": 17574,
            "mean": 17574,
            "median": 17574,
            "max": 17574
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 9621319,
          "size": 42493
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 774,
            "min": 8873,
            "mean": 8873,
            "median": 8873,
            "max": 8873
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 9973043,
          "size": 46128
        },
        "functions": {
          "getPoolReport()": {
            "calls": 81,
            "min": 4523,
            "mean": 4523,
            "median": 4523,
            "max": 4523
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 1033903,
          "size": 6728
        },
        "functions": {
          "getMiscReport()": {
            "calls": 824,
            "min": 4523,
            "mean": 4523,
            "median": 4523,
            "max": 4523
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5607314,
          "size": 28719
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 33,
            "min": 6698,
            "mean": 6698,
            "median": 6698,
            "max": 6698
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 9092079,
          "size": 45041
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 824,
            "min": 17574,
            "mean": 17574,
            "median": 17574,
            "max": 17574
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 9689855,
          "size": 44821
        },
        "functions": {
          "getPoolReport()": {
            "calls": 743,
            "min": 4523,
            "mean": 4523,
            "median": 4523,
            "max": 4523
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 7567022,
          "size": 39818
        },
        "functions": {
          "getInitialReport()": {
            "calls": 824,
            "min": 6762,
            "mean": 6762,
            "median": 6762,
            "max": 6762
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 774,
            "min": 648786,
            "mean": 651049,
            "median": 648786,
            "max": 769590
          },
          "setProtocolDataProvider(address)": {
            "calls": 799,
            "min": 59128,
            "mean": 59139,
            "median": 59140,
            "max": 59140
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 801,
            "min": 3030179,
            "mean": 3583928,
            "median": 3584126,
            "max": 3609715
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 799,
            "min": 46528,
            "mean": 46532,
            "median": 46528,
            "max": 46600
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 5120514,
          "size": 25614
        },
        "functions": {
          "getTokensReport()": {
            "calls": 799,
            "min": 4523,
            "mean": 4523,
            "median": 4523,
            "max": 4523
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 2327708,
          "size": 10749
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 256,
            "min": 55358,
            "mean": 98061,
            "median": 55629,
            "max": 163450
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 768,
            "min": 33509,
            "mean": 80915,
            "median": 56080,
            "max": 167232
          },
          "claimRewardsToSelf(address[])": {
            "calls": 256,
            "min": 54929,
            "mean": 106511,
            "median": 55200,
            "max": 163021
          },
          "collectAndUpdateRewards(address)": {
            "calls": 257,
            "min": 45910,
            "mean": 89379,
            "median": 54267,
            "max": 125361
          },
          "getClaimableRewards(address,address)": {
            "calls": 3457,
            "min": 24859,
            "mean": 27631,
            "median": 27674,
            "max": 27688
          },
          "getReferenceAsset()": {
            "calls": 1,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "getTotalClaimableRewards(address)": {
            "calls": 257,
            "min": 26837,
            "mean": 32079,
            "median": 32124,
            "max": 32137
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 1148,
            "min": 2656,
            "mean": 2656,
            "median": 2656,
            "max": 2656
          },
          "isRegisteredRewardToken(address)": {
            "calls": 3,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "mint(address,uint256)": {
            "calls": 2465,
            "min": 53201,
            "mean": 94801,
            "median": 95509,
            "max": 98487
          },
          "mockInit(address)": {
            "calls": 17,
            "min": 78313,
            "mean": 78313,
            "median": 78313,
            "max": 78313
          },
          "refreshRewardTokens()": {
            "calls": 2307,
            "min": 113876,
            "mean": 113876,
            "median": 113876,
            "max": 114147
          },
          "rewardTokens()": {
            "calls": 1,
            "min": 4777,
            "mean": 4777,
            "median": 4777,
            "max": 4777
          },
          "transfer(address,uint256)": {
            "calls": 512,
            "min": 56975,
            "mean": 71912,
            "median": 68347,
            "max": 99718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1272815,
          "size": 7346
        },
        "functions": {
          "decimals()": {
            "calls": 2307,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 960,
            "min": 2664,
            "mean": 3734,
            "median": 4664,
            "max": 4664
          },
          "mint(address,uint256)": {
            "calls": 2465,
            "min": 50914,
            "mean": 67119,
            "median": 68242,
            "max": 68242
          },
          "scaledTotalSupply()": {
            "calls": 12070,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "transfer(address,uint256)": {
            "calls": 2465,
            "min": 29470,
            "mean": 45527,
            "median": 46642,
            "max": 46642
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 3097246,
          "size": 14394
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 512,
            "min": 26117,
            "mean": 45740,
            "median": 46065,
            "max": 46161
          },
          "balanceOf(address)": {
            "calls": 2561,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "convertToAssets(uint256)": {
            "calls": 256,
            "min": 15112,
            "mean": 15112,
            "median": 15112,
            "max": 15112
          },
          "convertToShares(uint256)": {
            "calls": 256,
            "min": 15149,
            "mean": 15149,
            "median": 15149,
            "max": 15149
          },
          "decimals()": {
            "calls": 256,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "depositATokens(uint256,address)": {
            "calls": 2817,
            "min": 56500,
            "mean": 183213,
            "median": 195511,
            "max": 200660
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 1280,
            "min": 71334,
            "mean": 231221,
            "median": 250510,
            "max": 336264
          },
          "latestAnswer()": {
            "calls": 257,
            "min": 20860,
            "mean": 20860,
            "median": 20860,
            "max": 20860
          },
          "maxDeposit(address)": {
            "calls": 259,
            "min": 34800,
            "mean": 46743,
            "median": 46883,
            "max": 46883
          },
          "maxMint(address)": {
            "calls": 1,
            "min": 35072,
            "mean": 35072,
            "median": 35072,
            "max": 35072
          },
          "maxRedeem(address)": {
            "calls": 768,
            "min": 12960,
            "mean": 20600,
            "median": 24415,
            "max": 24427
          },
          "mint(uint256,address)": {
            "calls": 512,
            "min": 64128,
            "mean": 178128,
            "median": 178093,
            "max": 292058
          },
          "mockInit(address)": {
            "calls": 28,
            "min": 130889,
            "mean": 130889,
            "median": 130889,
            "max": 130889
          },
          "previewDeposit(uint256)": {
            "calls": 768,
            "min": 15186,
            "mean": 15186,
            "median": 15186,
            "max": 15186
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 15140,
            "mean": 15140,
            "median": 15140,
            "max": 15140
          },
          "previewRedeem(uint256)": {
            "calls": 512,
            "min": 15128,
            "mean": 15128,
            "median": 15128,
            "max": 15128
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 15221,
            "mean": 15221,
            "median": 15221,
            "max": 15221
          },
          "redeem(uint256,address,address)": {
            "calls": 256,
            "min": 154017,
            "mean": 154225,
            "median": 154257,
            "max": 154377
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 768,
            "min": 39625,
            "mean": 111458,
            "median": 147084,
            "max": 147731
          },
          "totalAssets()": {
            "calls": 258,
            "min": 17175,
            "mean": 17175,
            "median": 17175,
            "max": 17175
          },
          "withdraw(uint256,address,address)": {
            "calls": 512,
            "min": 48068,
            "mean": 102195,
            "median": 102164,
            "max": 156260
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 1586710,
          "size": 7383
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 185303,
            "mean": 185303,
            "median": 185303,
            "max": 185303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 1587352,
          "size": 7307
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 139413,
            "mean": 139413,
            "median": 139413,
            "max": 139413
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 1588648,
          "size": 7313
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 41150,
            "mean": 41150,
            "median": 41150,
            "max": 41150
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 1557825,
          "size": 7164
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 79040,
            "mean": 79040,
            "median": 79040,
            "max": 79040
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 1587328,
          "size": 7307
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80491,
            "mean": 80491,
            "median": 80491,
            "max": 80491
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 1587328,
          "size": 7307
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 30582,
            "mean": 30582,
            "median": 30582,
            "max": 30582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 1587328,
          "size": 7307
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 80491,
            "mean": 80491,
            "median": 80491,
            "max": 80491
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 1589951,
          "size": 7319
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 30506,
            "mean": 30506,
            "median": 30506,
            "max": 30506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 1615399,
          "size": 7650
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 326692,
            "mean": 326692,
            "median": 326692,
            "max": 326692
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 1562235,
          "size": 7126
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 85831,
            "mean": 85831,
            "median": 85831,
            "max": 85831
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 1561052,
          "size": 7120
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 47573,
            "mean": 47573,
            "median": 47573,
            "max": 47573
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 1561472,
          "size": 7122
        },
        "functions": {
          "execute()": {
            "calls": 2,
            "min": 42808,
            "mean": 42808,
            "median": 42808,
            "max": 42808
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 1634892,
          "size": 7606
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1764700,
            "mean": 1764700,
            "median": 1764700,
            "max": 1764700
          },
          "newListings()": {
            "calls": 4,
            "min": 2016,
            "mean": 2016,
            "median": 2016,
            "max": 2016
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 1700772,
          "size": 8077
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 1764605,
            "mean": 1764605,
            "median": 1764605,
            "max": 1764605
          },
          "newListingsCustom()": {
            "calls": 4,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 1603420,
          "size": 7473
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 59265,
            "mean": 59265,
            "median": 59265,
            "max": 59265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 1548744,
          "size": 7122
        },
        "functions": {
          "execute()": {
            "calls": 1,
            "min": 126329,
            "mean": 126329,
            "median": 126329,
            "max": 126329
          },
          "rateStrategiesUpdates()": {
            "calls": 4,
            "min": 885,
            "mean": 885,
            "median": 885,
            "max": 885
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 2039655,
          "size": 10268
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 2818,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "POOL()": {
            "calls": 2818,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 3842,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "allowance(address,address)": {
            "calls": 1,
            "min": 365,
            "mean": 365,
            "median": 365,
            "max": 365
          },
          "approve(address,uint256)": {
            "calls": 1,
            "min": 21660,
            "mean": 21660,
            "median": 21660,
            "max": 21660
          },
          "approveDelegation(address,uint256)": {
            "calls": 256,
            "min": 26842,
            "mean": 26842,
            "median": 26842,
            "max": 26842
          },
          "burn(address,uint256,uint256)": {
            "calls": 512,
            "min": 25958,
            "mean": 25958,
            "median": 25958,
            "max": 25958
          },
          "decimals()": {
            "calls": 2818,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21670,
            "mean": 21670,
            "median": 21670,
            "max": 21670
          },
          "getIncentivesController()": {
            "calls": 2818,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "increaseAllowance(address,uint256)": {
            "calls": 1,
            "min": 21663,
            "mean": 21663,
            "median": 21663,
            "max": 21663
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 1536,
            "min": 45510,
            "mean": 181189,
            "median": 206569,
            "max": 296641
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 1024,
            "min": 60188,
            "mean": 62588,
            "median": 60188,
            "max": 69791
          },
          "name()": {
            "calls": 2818,
            "min": 2626,
            "mean": 3699,
            "median": 2661,
            "max": 9182
          },
          "scaledBalanceOf(address)": {
            "calls": 1024,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "symbol()": {
            "calls": 2818,
            "min": 2653,
            "mean": 3742,
            "median": 2688,
            "max": 9209
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 21652,
            "mean": 21652,
            "median": 21652,
            "max": 21652
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 21784,
            "mean": 21784,
            "median": 21784,
            "max": 21784
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 100900058,
          "size": 501659
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 3,
            "min": 74664,
            "mean": 74859,
            "median": 74952,
            "max": 74962
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 2,
            "min": 76819,
            "mean": 76819,
            "median": 76819,
            "max": 76819
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 1,
            "min": 143865,
            "mean": 143865,
            "median": 143865,
            "max": 143865
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 22,
            "min": 385153,
            "mean": 693489,
            "median": 747446,
            "max": 749321
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 1,
            "min": 637870,
            "mean": 637870,
            "median": 637870,
            "max": 637870
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 2,
            "min": 58677,
            "mean": 74393,
            "median": 74393,
            "max": 90110
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 7,
            "min": 61401,
            "mean": 73084,
            "median": 75072,
            "max": 75081
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 2,
            "min": 421568,
            "mean": 633604,
            "median": 633604,
            "max": 845641
          },
          "mintToTreasury(uint8)": {
            "calls": 3,
            "min": 475849,
            "mean": 496488,
            "median": 496305,
            "max": 517311
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 416646,
            "mean": 521780,
            "median": 547837,
            "max": 611636
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 2,
            "min": 553568,
            "mean": 591212,
            "median": 591212,
            "max": 628856
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 151521,
            "mean": 151521,
            "median": 151521,
            "max": 151521
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 3,
            "min": 122661,
            "mean": 130543,
            "median": 134484,
            "max": 134484
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 5,
            "min": 503697,
            "mean": 536510,
            "median": 525509,
            "max": 573692
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 1,
            "min": 546235,
            "mean": 546235,
            "median": 546235,
            "max": 546235
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 4,
            "min": 516237,
            "mean": 527769,
            "median": 516237,
            "max": 562366
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 5,
            "min": 35884,
            "mean": 36119,
            "median": 36256,
            "max": 36268
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 1,
            "min": 506638,
            "mean": 506638,
            "median": 506638,
            "max": 506638
          },
          "setPoolPause(bool,uint40)": {
            "calls": 1,
            "min": 524221,
            "mean": 524221,
            "median": 524221,
            "max": 524221
          },
          "setReserveActive(bool,uint8)": {
            "calls": 3,
            "min": 529724,
            "mean": 585643,
            "median": 533961,
            "max": 693245
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 6,
            "min": 506733,
            "mean": 542767,
            "median": 535634,
            "max": 599359
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 3,
            "min": 504165,
            "mean": 554809,
            "median": 551309,
            "max": 608955
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 1,
            "min": 541040,
            "mean": 541040,
            "median": 541040,
            "max": 541040
          },
          "setUserEMode(uint8)": {
            "calls": 5,
            "min": 416858,
            "mean": 555787,
            "median": 612562,
            "max": 612562
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 3,
            "min": 387346,
            "mean": 492673,
            "median": 535813,
            "max": 554860
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 23,
            "min": 596829,
            "mean": 1062243,
            "median": 1203675,
            "max": 1210789
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 448438,
            "mean": 448438,
            "median": 448438,
            "max": 448438
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 1,
            "min": 629858,
            "mean": 629858,
            "median": 629858,
            "max": 629858
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 1,
            "min": 650744,
            "mean": 650744,
            "median": 650744,
            "max": 650744
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 130507,
          "size": 393
        },
        "functions": {
          "latestAnswer()": {
            "calls": 293,
            "min": 247,
            "mean": 1045,
            "median": 247,
            "max": 2247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 4601179,
          "size": 19279
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 766,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "WBTC_ADDRESS()": {
            "calls": 766,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "execute()": {
            "calls": 769,
            "min": 5063281,
            "mean": 5063367,
            "median": 5063374,
            "max": 5063374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 84623,
          "size": 178
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 105,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 138039,
          "size": 425
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 5,
            "min": 140,
            "mean": 140,
            "median": 140,
            "max": 140
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 4106363,
          "size": 19962
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 246,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "approve(address,uint256)": {
            "calls": 20,
            "min": 24434,
            "mean": 24434,
            "median": 24434,
            "max": 24434
          },
          "balanceOf(address)": {
            "calls": 253,
            "min": 17231,
            "mean": 17380,
            "median": 17427,
            "max": 17427
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 10,
            "min": 44392,
            "mean": 70412,
            "median": 66230,
            "max": 83330
          },
          "delegate(address)": {
            "calls": 26,
            "min": 6165,
            "mean": 64611,
            "median": 67428,
            "max": 87328
          },
          "delegateByType(address,uint8)": {
            "calls": 37,
            "min": 25163,
            "mean": 44415,
            "median": 47114,
            "max": 59196
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 30,
            "min": 5174,
            "mean": 6337,
            "median": 7350,
            "max": 7360
          },
          "getDelegates(address)": {
            "calls": 124,
            "min": 5220,
            "mean": 7951,
            "median": 9591,
            "max": 9591
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 518,
            "min": 5238,
            "mean": 5388,
            "median": 5391,
            "max": 5394
          },
          "getPowersCurrent(address)": {
            "calls": 9,
            "min": 6079,
            "mean": 6317,
            "median": 6385,
            "max": 6385
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 48,
            "min": 53945,
            "mean": 53945,
            "median": 53945,
            "max": 53945
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 47,
            "min": 29255,
            "mean": 53666,
            "median": 46355,
            "max": 85239
          },
          "scaledBalanceOf(address)": {
            "calls": 265,
            "min": 2563,
            "mean": 2563,
            "median": 2563,
            "max": 2563
          },
          "totalSupply()": {
            "calls": 5,
            "min": 6086,
            "mean": 6086,
            "median": 6086,
            "max": 6086
          },
          "transfer(address,uint256)": {
            "calls": 16,
            "min": 75702,
            "mean": 109454,
            "median": 110819,
            "max": 129357
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 82910,
            "mean": 125649,
            "median": 121588,
            "max": 180485
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 15,
            "min": 35922,
            "mean": 68338,
            "median": 65945,
            "max": 113745
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 5,
            "min": 32945,
            "mean": 32945,
            "median": 32945,
            "max": 32945
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 451100,
          "size": 2315
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 2,
            "min": 1132,
            "mean": 1132,
            "median": 1132,
            "max": 1132
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 66131,
          "size": 392
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 21,
            "min": 502,
            "mean": 1811,
            "median": 3002,
            "max": 3002
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "art-gobblers": {
    "solc": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 11014365,
          "size": 51684
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 3,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "governorWallet()": {
            "calls": 1,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "pages()": {
            "calls": 4,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 1,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "run()": {
            "calls": 7,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 11024851,
          "size": 51751
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 3,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "mintStart()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "pages()": {
            "calls": 4,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 1,
            "min": 494,
            "mean": 494,
            "median": 494,
            "max": 494
          },
          "run()": {
            "calls": 5,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4611156,
          "size": 23380
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 8275,
            "mean": 8275,
            "median": 8275,
            "max": 8275
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 1455,
            "mean": 1455,
            "median": 1455,
            "max": 1455
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 1125,
            "mean": 1125,
            "median": 1125,
            "max": 1125
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7717,
            "mean": 7717,
            "median": 7717,
            "max": 7717
          },
          "balanceOf(address)": {
            "calls": 2,
            "min": 3166,
            "mean": 3166,
            "median": 3166,
            "max": 3166
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 22611,
            "mean": 51621,
            "median": 25166,
            "max": 115686
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 984,
            "mean": 1433,
            "median": 1658,
            "max": 1658
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 1628,
            "mean": 2702,
            "median": 2908,
            "max": 2908
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3484,
            "mean": 3921,
            "median": 3938,
            "max": 3938
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2603,
            "mean": 2603,
            "median": 2603,
            "max": 2603
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 29625,
            "mean": 29758,
            "median": 29758,
            "max": 29891
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26550,
            "mean": 26550,
            "median": 26550,
            "max": 26550
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 46214,
            "mean": 46214,
            "median": 46214,
            "max": 46214
          },
          "mintStart()": {
            "calls": 1,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "owner()": {
            "calls": 1,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 29974,
            "mean": 29974,
            "median": 29974,
            "max": 29974
          },
          "targetPrice()": {
            "calls": 1,
            "min": 1320,
            "mean": 1320,
            "median": 1320,
            "max": 1320
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 5592,
            "mean": 7076,
            "median": 7819,
            "max": 7819
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 1038342,
          "size": 5575
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2569,
            "mean": 2569,
            "median": 2569,
            "max": 2569
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24227,
            "mean": 29060,
            "median": 29060,
            "max": 33893
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 34015,
            "mean": 34015,
            "median": 34015,
            "max": 34015
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13041,
            "min": 22010,
            "mean": 42060,
            "median": 28299,
            "max": 68195
          },
          "pages()": {
            "calls": 2,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 2046045,
          "size": 11172
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7602,
            "mean": 7602,
            "median": 7602,
            "max": 7602
          },
          "artGobblers()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "currentId()": {
            "calls": 2,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 468,
            "mean": 778,
            "median": 1012,
            "max": 1012
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 997,
            "mean": 1828,
            "median": 1842,
            "max": 1842
          },
          "goo()": {
            "calls": 2,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26880,
            "mean": 70865,
            "median": 58057,
            "max": 292408
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 12983,
            "min": 0,
            "mean": 67531,
            "median": 68821,
            "max": 103021
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "pagePrice()": {
            "calls": 12983,
            "min": 2909,
            "mean": 3521,
            "median": 3453,
            "max": 3754
          },
          "targetPrice()": {
            "calls": 3,
            "min": 642,
            "mean": 642,
            "median": 642,
            "max": 642
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 294021,
          "size": 1277
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 378808,
          "size": 1929
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21280,
            "mean": 21280,
            "median": 21280,
            "max": 21280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 825912,
          "size": 3578
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 36965,
            "mean": 36965,
            "median": 36965,
            "max": 36965
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 25131,
            "mean": 25131,
            "median": 25131,
            "max": 25131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 10349425,
          "size": 48142
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "coldWallet()": {
            "calls": 1,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 477,
            "mean": 477,
            "median": 477,
            "max": 477
          },
          "goo()": {
            "calls": 3,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "governorWallet()": {
            "calls": 1,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "pages()": {
            "calls": 4,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "root()": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "run()": {
            "calls": 7,
            "min": 8037032,
            "mean": 8037032,
            "median": 8037032,
            "max": 8037032
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 10347863,
          "size": 48174
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "coldWallet()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 477,
            "mean": 477,
            "median": 477,
            "max": 477
          },
          "goo()": {
            "calls": 3,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mintStart()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "pages()": {
            "calls": 4,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "root()": {
            "calls": 1,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "run()": {
            "calls": 5,
            "min": 8037032,
            "mean": 8037032,
            "median": 8037032,
            "max": 8037032
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4362762,
          "size": 22029
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7427,
            "mean": 7427,
            "median": 7427,
            "max": 7427
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 847,
            "mean": 847,
            "median": 847,
            "max": 847
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 758,
            "mean": 758,
            "median": 758,
            "max": 758
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7361,
            "mean": 7361,
            "median": 7361,
            "max": 7361
          },
          "balanceOf(address)": {
            "calls": 3,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21923,
            "mean": 76553,
            "median": 114627,
            "max": 121612
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 520,
            "mean": 902,
            "median": 1094,
            "max": 1094
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 569,
            "mean": 1521,
            "median": 1691,
            "max": 1691
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3498,
            "mean": 3828,
            "median": 3841,
            "max": 3841
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2616,
            "mean": 2616,
            "median": 2616,
            "max": 2616
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 29020,
            "mean": 29051,
            "median": 29051,
            "max": 29083
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26664,
            "mean": 26664,
            "median": 26664,
            "max": 26664
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45856,
            "mean": 45856,
            "median": 45856,
            "max": 45856
          },
          "mintStart()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "owner()": {
            "calls": 1,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "ownerOf(uint256)": {
            "calls": 2,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28847,
            "mean": 28847,
            "median": 28847,
            "max": 28847
          },
          "targetPrice()": {
            "calls": 1,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4868,
            "mean": 6447,
            "median": 7237,
            "max": 7237
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 24042,
            "mean": 24042,
            "median": 24042,
            "max": 24042
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 964891,
          "size": 4967
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24320,
            "mean": 29196,
            "median": 29196,
            "max": 34072
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 34040,
            "mean": 34040,
            "median": 34040,
            "max": 34040
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13037,
            "min": 0,
            "mean": 42151,
            "median": 28404,
            "max": 68300
          },
          "pages()": {
            "calls": 2,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1931435,
          "size": 10549
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7360,
            "mean": 7360,
            "median": 7360,
            "max": 7360
          },
          "artGobblers()": {
            "calls": 2,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "currentId()": {
            "calls": 2,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 410,
            "mean": 799,
            "median": 1092,
            "max": 1092
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 729,
            "mean": 1737,
            "median": 1754,
            "max": 1754
          },
          "goo()": {
            "calls": 2,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26637,
            "mean": 70754,
            "median": 57954,
            "max": 292611
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 12978,
            "min": 22197,
            "mean": 67702,
            "median": 68981,
            "max": 103181
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "pagePrice()": {
            "calls": 12979,
            "min": 2916,
            "mean": 3672,
            "median": 3598,
            "max": 3941
          },
          "targetPrice()": {
            "calls": 3,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 318671,
          "size": 1419
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 374024,
          "size": 1918
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21294,
            "mean": 21294,
            "median": 21294,
            "max": 21294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 805130,
          "size": 3473
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 36851,
            "mean": 36851,
            "median": 36851,
            "max": 36851
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 25264,
            "mean": 25264,
            "median": 25264,
            "max": 25264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 9967247,
          "size": 46596
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "coldWallet()": {
            "calls": 1,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 377,
            "mean": 377,
            "median": 377,
            "max": 377
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "goo()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "governorWallet()": {
            "calls": 1,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "pages()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "root()": {
            "calls": 1,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "run()": {
            "calls": 7,
            "min": 7416064,
            "mean": 7416064,
            "median": 7416064,
            "max": 7416064
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 9971705,
          "size": 46576
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "coldWallet()": {
            "calls": 1,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "goo()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "mintStart()": {
            "calls": 1,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "pages()": {
            "calls": 4,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "root()": {
            "calls": 1,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "run()": {
            "calls": 5,
            "min": 7416064,
            "mean": 7416064,
            "median": 7416064,
            "max": 7416064
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4229818,
          "size": 22054
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7156,
            "mean": 7156,
            "median": 7156,
            "max": 7156
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7130,
            "mean": 7130,
            "median": 7130,
            "max": 7130
          },
          "balanceOf(address)": {
            "calls": 2,
            "min": 2485,
            "mean": 2485,
            "median": 2485,
            "max": 2485
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21799,
            "mean": 50551,
            "median": 24155,
            "max": 114301
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 494,
            "mean": 818,
            "median": 980,
            "max": 980
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 519,
            "mean": 1435,
            "median": 1617,
            "max": 1617
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3383,
            "mean": 3781,
            "median": 3797,
            "max": 3797
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 28669,
            "mean": 28807,
            "median": 28807,
            "max": 28946
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26074,
            "mean": 26074,
            "median": 26074,
            "max": 26074
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45743,
            "mean": 45743,
            "median": 45743,
            "max": 45743
          },
          "mintStart()": {
            "calls": 1,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "owner()": {
            "calls": 1,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "ownerOf(uint256)": {
            "calls": 1,
            "min": 2480,
            "mean": 2480,
            "median": 2480,
            "max": 2480
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28602,
            "mean": 28602,
            "median": 28602,
            "max": 28602
          },
          "targetPrice()": {
            "calls": 1,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4703,
            "mean": 6127,
            "median": 6840,
            "max": 6840
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 23906,
            "mean": 23906,
            "median": 23906,
            "max": 23906
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 891691,
          "size": 5318
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24090,
            "mean": 28925,
            "median": 28925,
            "max": 33760
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 33767,
            "mean": 33767,
            "median": 33767,
            "max": 33767
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13126,
            "min": 21816,
            "mean": 42045,
            "median": 28115,
            "max": 68011
          },
          "pages()": {
            "calls": 2,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1771686,
          "size": 10085
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7098,
            "mean": 7098,
            "median": 7098,
            "max": 7098
          },
          "artGobblers()": {
            "calls": 2,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "currentId()": {
            "calls": 2,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 431,
            "mean": 754,
            "median": 997,
            "max": 997
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 673,
            "mean": 1636,
            "median": 1653,
            "max": 1653
          },
          "goo()": {
            "calls": 2,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26511,
            "mean": 70484,
            "median": 57677,
            "max": 291992
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 13068,
            "min": 0,
            "mean": 66952,
            "median": 68223,
            "max": 102423
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "pagePrice()": {
            "calls": 13068,
            "min": 2853,
            "mean": 3524,
            "median": 3419,
            "max": 3833
          },
          "targetPrice()": {
            "calls": 3,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 270791,
          "size": 1214
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 309216,
          "size": 1627
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21265,
            "mean": 21265,
            "median": 21265,
            "max": 21265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 558355,
          "size": 2263
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 35285,
            "mean": 35285,
            "median": 35285,
            "max": 35285
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 24870,
            "mean": 24870,
            "median": 24870,
            "max": 24870
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 9620047,
          "size": 45318
        },
        "functions": {
          "artGobblers()": {
            "calls": 6,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "coldWallet()": {
            "calls": 1,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "goo()": {
            "calls": 3,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "governorWallet()": {
            "calls": 1,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "pages()": {
            "calls": 4,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "root()": {
            "calls": 1,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "run()": {
            "calls": 7,
            "min": 7391348,
            "mean": 7391348,
            "median": 7391348,
            "max": 7391348
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 9622120,
          "size": 45170
        },
        "functions": {
          "artGobblers()": {
            "calls": 4,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "coldWallet()": {
            "calls": 1,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "communityReserve()": {
            "calls": 1,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "gobblerBaseUri()": {
            "calls": 1,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "gobblerUnrevealedUri()": {
            "calls": 1,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "goo()": {
            "calls": 3,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "mintStart()": {
            "calls": 1,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "pages()": {
            "calls": 4,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "pagesBaseUri()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "root()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "run()": {
            "calls": 5,
            "min": 7391348,
            "mean": 7391348,
            "median": 7391348,
            "max": 7391348
          },
          "teamReserve()": {
            "calls": 1,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4046896,
          "size": 21084
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 7017,
            "mean": 7017,
            "median": 7017,
            "max": 7017
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 1,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 17,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "MAX_MINTABLE()": {
            "calls": 2,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "UNREVEALED_URI()": {
            "calls": 2,
            "min": 7008,
            "mean": 7008,
            "median": 7008,
            "max": 7008
          },
          "balanceOf(address)": {
            "calls": 3,
            "min": 2583,
            "mean": 2583,
            "median": 2583,
            "max": 2583
          },
          "claimGobbler(bytes32[])": {
            "calls": 7,
            "min": 21866,
            "mean": 76374,
            "median": 114365,
            "max": 121369
          },
          "getTargetSaleTime(int256)": {
            "calls": 3,
            "min": 543,
            "mean": 877,
            "median": 1044,
            "max": 1044
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 2499,
            "min": 559,
            "mean": 1483,
            "median": 1666,
            "max": 1666
          },
          "gobblerPrice()": {
            "calls": 55,
            "min": 3401,
            "mean": 3797,
            "median": 3812,
            "max": 3812
          },
          "gobblerRevealsData()": {
            "calls": 1,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "merkleRoot()": {
            "calls": 1,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 2,
            "min": 28849,
            "mean": 28903,
            "median": 28903,
            "max": 28957
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 1,
            "min": 26173,
            "mean": 26173,
            "median": 26173,
            "max": 26173
          },
          "mintReservedGobblers(uint256)": {
            "calls": 1,
            "min": 45834,
            "mean": 45834,
            "median": 45834,
            "max": 45834
          },
          "mintStart()": {
            "calls": 1,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "owner()": {
            "calls": 1,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "ownerOf(uint256)": {
            "calls": 2,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "requestRandomSeed()": {
            "calls": 1,
            "min": 28652,
            "mean": 28652,
            "median": 28652,
            "max": 28652
          },
          "targetPrice()": {
            "calls": 1,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "tokenURI(uint256)": {
            "calls": 3,
            "min": 4707,
            "mean": 6131,
            "median": 6844,
            "max": 6844
          },
          "upgradeRandProvider(address)": {
            "calls": 1,
            "min": 23991,
            "mean": 23991,
            "median": 23991,
            "max": 23991
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 919685,
          "size": 5296
        },
        "functions": {
          "artGobblers()": {
            "calls": 2,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "balanceOf(address)": {
            "calls": 1,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "burnForGobblers(address,uint256)": {
            "calls": 2,
            "min": 24155,
            "mean": 29000,
            "median": 29000,
            "max": 33846
          },
          "burnForPages(address,uint256)": {
            "calls": 1,
            "min": 33834,
            "mean": 33834,
            "median": 33834,
            "max": 33834
          },
          "mintForGobblers(address,uint256)": {
            "calls": 13113,
            "min": 0,
            "mean": 42089,
            "median": 28190,
            "max": 68086
          },
          "pages()": {
            "calls": 2,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "totalSupply()": {
            "calls": 4,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1789558,
          "size": 10053
        },
        "functions": {
          "BASE_URI()": {
            "calls": 2,
            "min": 6968,
            "mean": 6968,
            "median": 6968,
            "max": 6968
          },
          "artGobblers()": {
            "calls": 2,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "currentId()": {
            "calls": 2,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "getTargetSaleTime(int256)": {
            "calls": 7,
            "min": 477,
            "mean": 801,
            "median": 1045,
            "max": 1045
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 8722,
            "min": 1124,
            "mean": 1676,
            "median": 1692,
            "max": 1692
          },
          "goo()": {
            "calls": 2,
            "min": 252,
            "mean": 252,
            "median": 252,
            "max": 252
          },
          "mintCommunityPages(uint256)": {
            "calls": 15,
            "min": 26589,
            "mean": 70568,
            "median": 57763,
            "max": 292060
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 13054,
            "min": 22078,
            "mean": 67114,
            "median": 68378,
            "max": 102578
          },
          "numMintedForCommunity()": {
            "calls": 1,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2512,
            "mean": 2512,
            "median": 2512,
            "max": 2512
          },
          "pagePrice()": {
            "calls": 13055,
            "min": 2867,
            "mean": 3539,
            "median": 3435,
            "max": 3846
          },
          "targetPrice()": {
            "calls": 3,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 284187,
          "size": 1240
        },
        "functions": {
          "owner()": {
            "calls": 4,
            "min": 2253,
            "mean": 2253,
            "median": 2253,
            "max": 2253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 315354,
          "size": 1598
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 1,
            "min": 21290,
            "mean": 21290,
            "median": 21290,
            "max": 21290
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 510206,
          "size": 2095
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 97,
            "min": 35607,
            "mean": 35607,
            "median": 35607,
            "max": 35607
          },
          "predictContractAddress(address,uint256)": {
            "calls": 312,
            "min": 24920,
            "mean": 24920,
            "median": 24920,
            "max": 24920
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "balance-snapshot": {
    "solc": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 818597,
          "size": 3787
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 3230,
            "mean": 3230,
            "median": 3230,
            "max": 3230
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 850988,
          "size": 4294
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2824,
            "mean": 2824,
            "median": 2824,
            "max": 2824
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 508516,
          "size": 2201
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 533456,
          "size": 2347
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 17,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "beefy": {
    "solc": [
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 629444,
          "size": 3252
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 794797,
          "size": 3455
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "initialize()": {
            "calls": 10,
            "min": 68917,
            "mean": 68917,
            "median": 68917,
            "max": 68917
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28688,
            "mean": 31519,
            "median": 31428,
            "max": 34992
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 34373,
            "mean": 34373,
            "median": 34373,
            "max": 34373
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 239129,
          "size": 890
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 806,
            "mean": 3028,
            "median": 3306,
            "max": 3306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1065587,
          "size": 4709
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 6426090,
          "size": 29492
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 827610,
            "mean": 827610,
            "median": 827610,
            "max": 827610
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4004861,
          "size": 18301
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24387,
            "mean": 24387,
            "median": 24387,
            "max": 24387
          },
          "vault()": {
            "calls": 1,
            "min": 3846,
            "mean": 3846,
            "median": 3846,
            "max": 3846
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 3977628,
          "size": 18174
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24387,
            "mean": 24387,
            "median": 24387,
            "max": 24387
          },
          "vault()": {
            "calls": 1,
            "min": 3802,
            "mean": 3802,
            "median": 3802,
            "max": 3802
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 3379070,
          "size": 15405
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24525,
            "mean": 24525,
            "median": 24525,
            "max": 24525
          },
          "vault()": {
            "calls": 1,
            "min": 3867,
            "mean": 3867,
            "median": 3867,
            "max": 3867
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 3485847,
          "size": 15900
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          },
          "vault()": {
            "calls": 1,
            "min": 3707,
            "mean": 3707,
            "median": 3707,
            "max": 3707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 3346561,
          "size": 15254
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24503,
            "mean": 24503,
            "median": 24503,
            "max": 24503
          },
          "vault()": {
            "calls": 1,
            "min": 3801,
            "mean": 3801,
            "median": 3801,
            "max": 3801
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 3446237,
          "size": 15716
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24452,
            "mean": 24452,
            "median": 24452,
            "max": 24452
          },
          "vault()": {
            "calls": 1,
            "min": 3663,
            "mean": 3663,
            "median": 3663,
            "max": 3663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 3251882,
          "size": 14816
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24459,
            "mean": 24459,
            "median": 24459,
            "max": 24459
          },
          "vault()": {
            "calls": 1,
            "min": 3823,
            "mean": 3823,
            "median": 3823,
            "max": 3823
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 3893113,
          "size": 17782
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24563,
            "mean": 24563,
            "median": 24563,
            "max": 24563
          },
          "vault()": {
            "calls": 1,
            "min": 3802,
            "mean": 3802,
            "median": 3802,
            "max": 3802
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 2796289,
          "size": 12711
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24386,
            "mean": 24386,
            "median": 24386,
            "max": 24386
          },
          "vault()": {
            "calls": 1,
            "min": 3443,
            "mean": 3443,
            "median": 3443,
            "max": 3443
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 4307554,
          "size": 19633
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24409,
            "mean": 24409,
            "median": 24409,
            "max": 24409
          },
          "vault()": {
            "calls": 1,
            "min": 3648,
            "mean": 3648,
            "median": 3648,
            "max": 3648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2827107,
          "size": 12854
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24408,
            "mean": 24408,
            "median": 24408,
            "max": 24408
          },
          "vault()": {
            "calls": 1,
            "min": 3443,
            "mean": 3443,
            "median": 3443,
            "max": 3443
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3553343,
          "size": 16212
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24452,
            "mean": 24452,
            "median": 24452,
            "max": 24452
          },
          "vault()": {
            "calls": 1,
            "min": 3688,
            "mean": 3688,
            "median": 3688,
            "max": 3688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 3220455,
          "size": 14672
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24540,
            "mean": 24540,
            "median": 24540,
            "max": 24540
          },
          "vault()": {
            "calls": 1,
            "min": 3619,
            "mean": 3619,
            "median": 3619,
            "max": 3619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 4890893,
          "size": 22397
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24404,
            "mean": 24404,
            "median": 24404,
            "max": 24404
          },
          "vault()": {
            "calls": 1,
            "min": 3509,
            "mean": 3509,
            "median": 3509,
            "max": 3509
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 4530210,
          "size": 20729
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24437,
            "mean": 24437,
            "median": 24437,
            "max": 24437
          },
          "vault()": {
            "calls": 1,
            "min": 3603,
            "mean": 3603,
            "median": 3603,
            "max": 3603
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 2385190,
          "size": 10809
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24316,
            "mean": 24316,
            "median": 24316,
            "max": 24316
          },
          "vault()": {
            "calls": 1,
            "min": 3328,
            "mean": 3328,
            "median": 3328,
            "max": 3328
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 3754058,
          "size": 17139
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24453,
            "mean": 24453,
            "median": 24453,
            "max": 24453
          },
          "vault()": {
            "calls": 1,
            "min": 3692,
            "mean": 3692,
            "median": 3692,
            "max": 3692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 1835837,
          "size": 8269
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 162802,
            "mean": 162847,
            "median": 162850,
            "max": 162850
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2008827,
          "size": 9031
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65629,
            "mean": 65629,
            "median": 65629,
            "max": 65629
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 238497,
          "size": 1221
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 6679,
            "mean": 6679,
            "median": 6679,
            "max": 6679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 428247,
          "size": 1760
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 29552,
            "mean": 29582,
            "median": 29582,
            "max": 29612
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 615505,
          "size": 2977
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 852921,
          "size": 3726
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2546,
            "mean": 2546,
            "median": 2546,
            "max": 2546
          },
          "initialize()": {
            "calls": 10,
            "min": 69267,
            "mean": 69267,
            "median": 69267,
            "max": 69267
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28955,
            "mean": 31849,
            "median": 31695,
            "max": 35825
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 34907,
            "mean": 34907,
            "median": 34907,
            "max": 34907
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 327245,
          "size": 1318
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 821,
            "mean": 3043,
            "median": 3321,
            "max": 3321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1329397,
          "size": 5931
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 4720708,
          "size": 21610
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 829167,
            "mean": 829167,
            "median": 829167,
            "max": 829167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4167834,
          "size": 19055
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24081,
            "mean": 24081,
            "median": 24081,
            "max": 24081
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 4103421,
          "size": 18756
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 2864538,
          "size": 13029
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 2951233,
          "size": 13429
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24058,
            "mean": 24058,
            "median": 24058,
            "max": 24058
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 2835830,
          "size": 12896
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 2896760,
          "size": 13177
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 2866914,
          "size": 13039
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24059,
            "mean": 24059,
            "median": 24059,
            "max": 24059
          },
          "vault()": {
            "calls": 1,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 3819635,
          "size": 17444
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24086,
            "mean": 24086,
            "median": 24086,
            "max": 24086
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 2505329,
          "size": 11367
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24058,
            "mean": 24058,
            "median": 24058,
            "max": 24058
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 4034230,
          "size": 18371
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24059,
            "mean": 24059,
            "median": 24059,
            "max": 24059
          },
          "vault()": {
            "calls": 1,
            "min": 2446,
            "mean": 2446,
            "median": 2446,
            "max": 2446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2526585,
          "size": 11465
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24080,
            "mean": 24080,
            "median": 24080,
            "max": 24080
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3213046,
          "size": 14639
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 2913085,
          "size": 13252
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24124,
            "mean": 24124,
            "median": 24124,
            "max": 24124
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 3527383,
          "size": 16094
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24125,
            "mean": 24125,
            "median": 24125,
            "max": 24125
          },
          "vault()": {
            "calls": 1,
            "min": 2446,
            "mean": 2446,
            "median": 2446,
            "max": 2446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 3634587,
          "size": 16589
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24125,
            "mean": 24125,
            "median": 24125,
            "max": 24125
          },
          "vault()": {
            "calls": 1,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 2160608,
          "size": 9773
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24086,
            "mean": 24086,
            "median": 24086,
            "max": 24086
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 3790408,
          "size": 17309
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 1,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 1870786,
          "size": 8433
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 163762,
            "mean": 163807,
            "median": 163810,
            "max": 163810
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2157534,
          "size": 9704
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65732,
            "mean": 65732,
            "median": 65732,
            "max": 65732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 332994,
          "size": 1715
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 7145,
            "mean": 7145,
            "median": 7145,
            "max": 7145
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 489893,
          "size": 2047
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 29103,
            "mean": 29133,
            "median": 29133,
            "max": 29163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 690094,
          "size": 3925
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2417,
            "mean": 2417,
            "median": 2417,
            "max": 2417
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 960177,
          "size": 4235
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "initialize()": {
            "calls": 10,
            "min": 68453,
            "mean": 68453,
            "median": 68453,
            "max": 68453
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28292,
            "mean": 31085,
            "median": 31032,
            "max": 34254
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 33786,
            "mean": 33786,
            "median": 33786,
            "max": 33786
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 240775,
          "size": 900
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 572,
            "mean": 2794,
            "median": 3072,
            "max": 3072
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1128491,
          "size": 5008
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 4494,
            "mean": 4494,
            "median": 4494,
            "max": 4494
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 9134621,
          "size": 42066
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 823071,
            "mean": 823071,
            "median": 823071,
            "max": 823071
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 5951098,
          "size": 27344
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23943,
            "mean": 23943,
            "median": 23943,
            "max": 23943
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 5872170,
          "size": 26981
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23928,
            "mean": 23928,
            "median": 23928,
            "max": 23928
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 4913060,
          "size": 22549
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 5769617,
          "size": 26515
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 4856838,
          "size": 22289
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 5776120,
          "size": 26543
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 4534893,
          "size": 20796
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23913,
            "mean": 23913,
            "median": 23913,
            "max": 23913
          },
          "vault()": {
            "calls": 1,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 7019117,
          "size": 32293
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23944,
            "mean": 23944,
            "median": 23944,
            "max": 23944
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 4368549,
          "size": 20026
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 6761116,
          "size": 31053
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23927,
            "mean": 23927,
            "median": 23927,
            "max": 23927
          },
          "vault()": {
            "calls": 1,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 4332329,
          "size": 19853
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 5486955,
          "size": 25205
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 4770214,
          "size": 21878
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23931,
            "mean": 23931,
            "median": 23931,
            "max": 23931
          },
          "vault()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 7008533,
          "size": 32244
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 7185257,
          "size": 33070
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 1,
            "min": 2398,
            "mean": 2398,
            "median": 2398,
            "max": 2398
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 3152873,
          "size": 14396
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23929,
            "mean": 23929,
            "median": 23929,
            "max": 23929
          },
          "vault()": {
            "calls": 1,
            "min": 2398,
            "mean": 2398,
            "median": 2398,
            "max": 2398
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 6384493,
          "size": 29361
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23928,
            "mean": 23928,
            "median": 23928,
            "max": 23928
          },
          "vault()": {
            "calls": 1,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 2463332,
          "size": 11193
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 162017,
            "mean": 162062,
            "median": 162065,
            "max": 162065
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2710787,
          "size": 12305
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65548,
            "mean": 65548,
            "median": 65548,
            "max": 65548
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 289539,
          "size": 1479
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 4470,
            "mean": 4470,
            "median": 4470,
            "max": 4470
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 503094,
          "size": 2117
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 28457,
            "mean": 28487,
            "median": 28487,
            "max": 28517
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BIFI.sol:BIFI",
        "deployment": {
          "gas": 690574,
          "size": 3883
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2286,
            "mean": 2286,
            "median": 2286,
            "max": 2286
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 1001816,
          "size": 4430
        },
        "functions": {
          "getPrice(address)": {
            "calls": 1,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "initialize()": {
            "calls": 10,
            "min": 68426,
            "mean": 68426,
            "median": 68426,
            "max": 68426
          },
          "setOracle(address,address,bytes)": {
            "calls": 9,
            "min": 28373,
            "mean": 31162,
            "median": 31113,
            "max": 34295
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 1,
            "min": 33858,
            "mean": 33858,
            "median": 33858,
            "max": 33858
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 279414,
          "size": 1108
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 9,
            "min": 603,
            "mean": 2825,
            "median": 3103,
            "max": 3103
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1212422,
          "size": 5407
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 1,
            "min": 4485,
            "mean": 4485,
            "median": 4485,
            "max": 4485
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Balancer/StrategyAuraGyroMainnet.sol:StrategyAuraGyroMainnet",
        "deployment": {
          "gas": 6764944,
          "size": 31129
        },
        "functions": {
          "initialize(address,(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],(bytes32,uint256,uint256)[],address,uint256,address[],address[],address[],(address,address,address,address,address,address))": {
            "calls": 1,
            "min": 823060,
            "mean": 823060,
            "median": 823060,
            "max": 823060
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 5259285,
          "size": 24139
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24010,
            "mean": 24010,
            "median": 24010,
            "max": 24010
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 5199511,
          "size": 23866
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23995,
            "mean": 23995,
            "median": 23995,
            "max": 23995
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvex.sol:StrategyCurveConvex",
        "deployment": {
          "gas": 4609169,
          "size": 21143
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23999,
            "mean": 23999,
            "median": 23999,
            "max": 23999
          },
          "vault()": {
            "calls": 1,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 4419237,
          "size": 20259
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23984,
            "mean": 23984,
            "median": 23984,
            "max": 23984
          },
          "vault()": {
            "calls": 1,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2.sol:StrategyCurveConvexL2",
        "deployment": {
          "gas": 4615060,
          "size": 21170
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23999,
            "mean": 23999,
            "median": 23999,
            "max": 23999
          },
          "vault()": {
            "calls": 1,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 4377272,
          "size": 20064
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23992,
            "mean": 23992,
            "median": 23992,
            "max": 23992
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 4612348,
          "size": 21156
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23998,
            "mean": 23998,
            "median": 23998,
            "max": 23998
          },
          "vault()": {
            "calls": 1,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyPrisma.sol:StrategyPrisma",
        "deployment": {
          "gas": 5467263,
          "size": 25113
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24007,
            "mean": 24007,
            "median": 24007,
            "max": 24007
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 3767524,
          "size": 17240
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23984,
            "mean": 23984,
            "median": 23984,
            "max": 23984
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Gamma/StrategyThenaGamma.sol:StrategyThenaGamma",
        "deployment": {
          "gas": 5396482,
          "size": 24741
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23998,
            "mean": 23998,
            "median": 23998,
            "max": 23998
          },
          "vault()": {
            "calls": 1,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 3737987,
          "size": 17103
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24000,
            "mean": 24000,
            "median": 24000,
            "max": 24000
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 4783639,
          "size": 21945
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23992,
            "mean": 23992,
            "median": 23992,
            "max": 23992
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 4262049,
          "size": 19528
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24010,
            "mean": 24010,
            "median": 24010,
            "max": 24010
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 5450573,
          "size": 25051
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24015,
            "mean": 24015,
            "median": 24015,
            "max": 24015
          },
          "vault()": {
            "calls": 1,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeUsdPlus.sol:StrategyVelodromeUsdPlus",
        "deployment": {
          "gas": 5889456,
          "size": 27091
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 24018,
            "mean": 24018,
            "median": 24018,
            "max": 24018
          },
          "vault()": {
            "calls": 1,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyApeStaking.sol:StrategyApeStaking",
        "deployment": {
          "gas": 3139249,
          "size": 14334
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23999,
            "mean": 23999,
            "median": 23999,
            "max": 23999
          },
          "vault()": {
            "calls": 1,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/degens/StrategyPearlTrident.sol:StrategyPearlTrident",
        "deployment": {
          "gas": 5424057,
          "size": 24907
        },
        "functions": {
          "setVault(address)": {
            "calls": 1,
            "min": 23992,
            "mean": 23992,
            "median": 23992,
            "max": 23992
          },
          "vault()": {
            "calls": 1,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 2466358,
          "size": 11209
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 19,
            "min": 161761,
            "mean": 161806,
            "median": 161809,
            "max": 161809
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2644184,
          "size": 11972
        },
        "functions": {
          "clone(address)": {
            "calls": 1,
            "min": 65536,
            "mean": 65536,
            "median": 65536,
            "max": 65536
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "forge/test/utils/Utils.sol:Utils",
        "deployment": {
          "gas": 287342,
          "size": 1497
        },
        "functions": {
          "print(address[11])": {
            "calls": 1,
            "min": 4632,
            "mean": 4632,
            "median": 4632,
            "max": 4632
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 505803,
          "size": 2132
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 2,
            "min": 28396,
            "mean": 28426,
            "median": 28426,
            "max": 28456
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "diamond-foundry": {
    "solc": [],
    "solx": []
  },
  "forge-std": {
    "solc": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1288751,
          "size": 6463
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 46118,
            "mean": 53064,
            "median": 51240,
            "max": 65183
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 183004,
          "size": 1047
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25578,
            "mean": 29296,
            "median": 27908,
            "max": 35781
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3753777,
          "size": 16965
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22643,
            "mean": 3559645,
            "median": 5905860,
            "max": 5907443
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 22121,
            "mean": 4436985,
            "median": 5907889,
            "max": 5910040
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 24003,
            "mean": 2995052,
            "median": 2967194,
            "max": 6014073
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21767,
            "mean": 21767,
            "median": 21767,
            "max": 21767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 195803,
          "size": 508
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2471,
            "mean": 2471,
            "median": 2471,
            "max": 2471
          },
          "bar(address)": {
            "calls": 8,
            "min": 21511,
            "mean": 21565,
            "median": 21511,
            "max": 21727
          },
          "origin(address)": {
            "calls": 3,
            "min": 21537,
            "mean": 21537,
            "median": 21537,
            "max": 21537
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21807,
            "mean": 21807,
            "median": 21807,
            "max": 21807
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 144252,
          "size": 320
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 212270,
          "size": 419
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 415237,
          "size": 1701
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 3025,
            "mean": 7268,
            "median": 8907,
            "max": 9872
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 33533,
            "mean": 208023094,
            "median": 60741,
            "max": 1039924527
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 33490,
            "mean": 208022411,
            "median": 60882,
            "max": 1039920900
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10576867,
          "size": 52639
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 27286,
            "mean": 27286,
            "median": 27286,
            "max": 27286
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 58554,
            "mean": 58554,
            "median": 58554,
            "max": 58554
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 213952,
          "size": 770
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "assertionError()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43395,
            "mean": 43395,
            "median": 43395,
            "max": 43395
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 390,
            "mean": 390,
            "median": 390,
            "max": 390
          },
          "intern()": {
            "calls": 1,
            "min": 21235,
            "mean": 21235,
            "median": 21235,
            "max": 21235
          },
          "mem()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 349,
            "mean": 349,
            "median": 349,
            "max": 349
          },
          "pop()": {
            "calls": 1,
            "min": 23445,
            "mean": 23445,
            "median": 23445,
            "max": 23445
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 942916,
          "size": 3961
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 934,
            "mean": 934,
            "median": 934,
            "max": 934
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 7090279,
          "size": 35237
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 179351,
            "mean": 179351,
            "median": 179351,
            "max": 179351
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 931527,
          "size": 2923
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4434,
            "mean": 4434,
            "median": 4434,
            "max": 4434
          },
          "const()": {
            "calls": 1,
            "min": 298,
            "mean": 298,
            "median": 298,
            "max": 298
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2963,
            "mean": 2963,
            "median": 2963,
            "max": 2963
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4738,
            "mean": 4738,
            "median": 4738,
            "max": 4738
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4956,
            "mean": 4956,
            "median": 4956,
            "max": 4956
          },
          "exists()": {
            "calls": 11,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4874,
            "mean": 4874,
            "median": 4874,
            "max": 4874
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 666610,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3816,
            "mean": 4500,
            "median": 4500,
            "max": 5184
          },
          "hidden()": {
            "calls": 13,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2722
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2828,
            "mean": 2828,
            "median": 2828,
            "max": 2828
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2674,
            "mean": 2674,
            "median": 2674,
            "max": 2674
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4808,
            "mean": 4808,
            "median": 4808,
            "max": 4808
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2570,
            "mean": 2570,
            "median": 2570,
            "max": 2570
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23975,
            "mean": 29052,
            "median": 24131,
            "max": 44259
          },
          "tA()": {
            "calls": 3840,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "tB()": {
            "calls": 65283,
            "min": 2514,
            "mean": 2514,
            "median": 2514,
            "max": 2514
          },
          "tC()": {
            "calls": 65280,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "tD()": {
            "calls": 3840,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "tE()": {
            "calls": 6,
            "min": 744,
            "mean": 2077,
            "median": 2744,
            "max": 2744
          },
          "tF()": {
            "calls": 3,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "tG()": {
            "calls": 8,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "tH()": {
            "calls": 3,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 974022,
          "size": 4316
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 94144,
            "mean": 94144,
            "median": 94144,
            "max": 94144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 728643,
          "size": 3149
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25496,
            "mean": 28451,
            "median": 28451,
            "max": 31406
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1216259,
          "size": 6103
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 46822,
            "mean": 54372,
            "median": 52971,
            "max": 64136
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 190234,
          "size": 1046
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25915,
            "mean": 29488,
            "median": 28128,
            "max": 35991
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3608692,
          "size": 16297
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22452,
            "mean": 3548168,
            "median": 5886797,
            "max": 5888124
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21838,
            "mean": 4422454,
            "median": 5888672,
            "max": 5890636
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 24123,
            "mean": 2985506,
            "median": 2957610,
            "max": 5994894
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21688,
            "mean": 21688,
            "median": 21688,
            "max": 21688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 233643,
          "size": 678
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "bar(address)": {
            "calls": 8,
            "min": 21556,
            "mean": 21610,
            "median": 21556,
            "max": 21772
          },
          "origin(address)": {
            "calls": 3,
            "min": 21574,
            "mean": 21574,
            "median": 21574,
            "max": 21574
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21895,
            "mean": 21895,
            "median": 21895,
            "max": 21895
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 157662,
          "size": 383
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 229155,
          "size": 499
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 457357,
          "size": 1897
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 3180,
            "mean": 7478,
            "median": 9149,
            "max": 10106
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 33037,
            "mean": 208014852,
            "median": 60423,
            "max": 1039884927
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 33065,
            "mean": 208014172,
            "median": 60457,
            "max": 1039881356
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10117770,
          "size": 50353
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 26363,
            "mean": 26363,
            "median": 26363,
            "max": 26363
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 58482,
            "mean": 58482,
            "median": 58482,
            "max": 58482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 286297,
          "size": 1106
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "assertionError()": {
            "calls": 1,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 380,
            "mean": 380,
            "median": 380,
            "max": 380
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43616,
            "mean": 43616,
            "median": 43616,
            "max": 43616
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 319,
            "mean": 319,
            "median": 319,
            "max": 319
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 353
          },
          "intern()": {
            "calls": 1,
            "min": 21293,
            "mean": 21293,
            "median": 21293,
            "max": 21293
          },
          "mem()": {
            "calls": 1,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "pop()": {
            "calls": 1,
            "min": 23362,
            "mean": 23362,
            "median": 23362,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 934124,
          "size": 3924
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 1109,
            "mean": 1109,
            "median": 1109,
            "max": 1109
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 637,
            "mean": 637,
            "median": 637,
            "max": 637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 5941894,
          "size": 29509
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 181163,
            "mean": 181163,
            "median": 181163,
            "max": 181163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 864361,
          "size": 2534
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4484,
            "mean": 4484,
            "median": 4484,
            "max": 4484
          },
          "const()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2756,
            "mean": 2756,
            "median": 2756,
            "max": 2756
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4841,
            "mean": 4841,
            "median": 4841,
            "max": 4841
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "exists()": {
            "calls": 11,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4614,
            "mean": 4614,
            "median": 4614,
            "max": 4614
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 607168,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3698,
            "mean": 4271,
            "median": 4271,
            "max": 4844
          },
          "hidden()": {
            "calls": 13,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4711,
            "mean": 4711,
            "median": 4711,
            "max": 4711
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23647,
            "mean": 28705,
            "median": 23851,
            "max": 43931
          },
          "tA()": {
            "calls": 3840,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "tB()": {
            "calls": 65283,
            "min": 2415,
            "mean": 2415,
            "median": 2415,
            "max": 2415
          },
          "tC()": {
            "calls": 65280,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "tD()": {
            "calls": 3840,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "tE()": {
            "calls": 6,
            "min": 383,
            "mean": 1716,
            "median": 2383,
            "max": 2383
          },
          "tF()": {
            "calls": 3,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "tG()": {
            "calls": 8,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "tH()": {
            "calls": 3,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1088965,
          "size": 4844
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 96208,
            "mean": 96208,
            "median": 96208,
            "max": 96208
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 884029,
          "size": 3871
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 446,
            "mean": 446,
            "median": 446,
            "max": 446
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 821,
            "mean": 821,
            "median": 821,
            "max": 821
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25745,
            "mean": 28534,
            "median": 28534,
            "max": 31324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 2021355,
          "size": 10129
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 45734,
            "mean": 53269,
            "median": 51530,
            "max": 64530
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 277931,
          "size": 1377
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25484,
            "mean": 29278,
            "median": 27816,
            "max": 35808
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 5030738,
          "size": 22934
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22268,
            "mean": 3501477,
            "median": 5809868,
            "max": 5813432
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21780,
            "mean": 4365781,
            "median": 5812803,
            "max": 5815739
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 23676,
            "mean": 2947328,
            "median": 2919449,
            "max": 5918992
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21630,
            "mean": 21630,
            "median": 21630,
            "max": 21630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 211707,
          "size": 586
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "bar(address)": {
            "calls": 8,
            "min": 21422,
            "mean": 21476,
            "median": 21422,
            "max": 21638
          },
          "origin(address)": {
            "calls": 3,
            "min": 21497,
            "mean": 21497,
            "median": 21497,
            "max": 21497
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21698,
            "mean": 21698,
            "median": 21698,
            "max": 21698
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 148050,
          "size": 350
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 223529,
          "size": 660
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 114057,
          "size": 313
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 98,
            "mean": 98,
            "median": 98,
            "max": 98
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 98,
            "mean": 98,
            "median": 98,
            "max": 98
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 480993,
          "size": 2012
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 2898,
            "mean": 6846,
            "median": 8462,
            "max": 9180
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 32642,
            "mean": 208010081,
            "median": 59909,
            "max": 1039862911
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 32606,
            "mean": 208009467,
            "median": 59998,
            "max": 1039859650
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 14358672,
          "size": 71515
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 25434,
            "mean": 25434,
            "median": 25434,
            "max": 25434
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 57814,
            "mean": 57814,
            "median": 57814,
            "max": 57814
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 214618,
          "size": 778
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "assertionError()": {
            "calls": 1,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43396,
            "mean": 43396,
            "median": 43396,
            "max": 43396
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "intern()": {
            "calls": 1,
            "min": 21270,
            "mean": 21270,
            "median": 21270,
            "max": 21270
          },
          "mem()": {
            "calls": 1,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "pop()": {
            "calls": 1,
            "min": 23386,
            "mean": 23386,
            "median": 23386,
            "max": 23386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1291702,
          "size": 5580
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 634,
            "mean": 634,
            "median": 634,
            "max": 634
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 11555205,
          "size": 57528
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 165416,
            "mean": 165416,
            "median": 165416,
            "max": 165416
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 996071,
          "size": 3346
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4475,
            "mean": 4475,
            "median": 4475,
            "max": 4475
          },
          "const()": {
            "calls": 1,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2541,
            "mean": 2541,
            "median": 2541,
            "max": 2541
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4622,
            "mean": 4622,
            "median": 4622,
            "max": 4622
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4491,
            "mean": 4491,
            "median": 4491,
            "max": 4491
          },
          "exists()": {
            "calls": 11,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4562,
            "mean": 4562,
            "median": 4562,
            "max": 4562
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 648824,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3250,
            "mean": 3656,
            "median": 3656,
            "max": 4063
          },
          "hidden()": {
            "calls": 13,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2453,
            "mean": 2453,
            "median": 2453,
            "max": 2453
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2450,
            "mean": 2450,
            "median": 2450,
            "max": 2450
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2453,
            "mean": 2453,
            "median": 2453,
            "max": 2453
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4573,
            "mean": 4573,
            "median": 4573,
            "max": 4573
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23590,
            "mean": 28653,
            "median": 23740,
            "max": 43874
          },
          "tA()": {
            "calls": 3840,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "tB()": {
            "calls": 65283,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "tC()": {
            "calls": 65280,
            "min": 2376,
            "mean": 2376,
            "median": 2376,
            "max": 2376
          },
          "tD()": {
            "calls": 3840,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "tE()": {
            "calls": 6,
            "min": 366,
            "mean": 1699,
            "median": 2366,
            "max": 2366
          },
          "tF()": {
            "calls": 3,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "tG()": {
            "calls": 8,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "tH()": {
            "calls": 3,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1668851,
          "size": 7577
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 91158,
            "mean": 91158,
            "median": 91158,
            "max": 91158
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 874458,
          "size": 3834
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 546,
            "mean": 546,
            "median": 546,
            "max": 546
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25332,
            "mean": 28040,
            "median": 28040,
            "max": 30748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1912009,
          "size": 9584
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 512,
            "min": 45134,
            "mean": 52413,
            "median": 50430,
            "max": 63550
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 240502,
          "size": 1206
        },
        "functions": {
          "fallback()": {
            "calls": 2048,
            "min": 25445,
            "mean": 29039,
            "median": 27775,
            "max": 35698
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 4454107,
          "size": 20277
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 5,
            "min": 22156,
            "mean": 3494183,
            "median": 5797987,
            "max": 5801543
          },
          "exposed_getChain(uint256)": {
            "calls": 4,
            "min": 21758,
            "mean": 4356829,
            "median": 5800877,
            "max": 5803804
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 6,
            "min": 23580,
            "mean": 2941526,
            "median": 2913552,
            "max": 5907542
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 1,
            "min": 21646,
            "mean": 21646,
            "median": 21646,
            "max": 21646
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 255490,
          "size": 811
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 15,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "bar(address)": {
            "calls": 8,
            "min": 21437,
            "mean": 21491,
            "median": 21437,
            "max": 21653
          },
          "origin(address)": {
            "calls": 3,
            "min": 21487,
            "mean": 21487,
            "median": 21487,
            "max": 21487
          },
          "origin(address,address)": {
            "calls": 4,
            "min": 21691,
            "mean": 21691,
            "median": 21691,
            "max": 21691
          },
          "totalSupply()": {
            "calls": 9,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 160954,
          "size": 432
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 15,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "totalSupply(uint256)": {
            "calls": 9,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 223524,
          "size": 662
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 21,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 123335,
          "size": 357
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 512,
            "min": 114,
            "mean": 114,
            "median": 114,
            "max": 114
          },
          "isBlacklisted(address)": {
            "calls": 769,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43987,
            "mean": 43987,
            "median": 43987,
            "max": 43987
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 123335,
          "size": 357
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 769,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "isBlacklisted(address)": {
            "calls": 513,
            "min": 114,
            "mean": 114,
            "median": 114,
            "max": 114
          },
          "setBlacklisted(address,bool)": {
            "calls": 6,
            "min": 43987,
            "mean": 43987,
            "median": 43987,
            "max": 43987
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 458081,
          "size": 1906
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 3,
            "min": 2998,
            "mean": 6993,
            "median": 8612,
            "max": 9371
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 5,
            "min": 32509,
            "mean": 208014512,
            "median": 59901,
            "max": 1039885237
          },
          "exposed_assumePayable(address)": {
            "calls": 5,
            "min": 32564,
            "mean": 208013867,
            "median": 59956,
            "max": 1039881841
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 15318072,
          "size": 76302
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 1,
            "min": 25523,
            "mean": 25523,
            "median": 25523,
            "max": 25523
          },
          "deployCodeHelper(string)": {
            "calls": 1,
            "min": 57924,
            "mean": 57924,
            "median": 57924,
            "max": 57924
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 199419,
          "size": 709
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "assertionError()": {
            "calls": 1,
            "min": 187,
            "mean": 187,
            "median": 187,
            "max": 187
          },
          "divError(uint256)": {
            "calls": 1,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "encodeStgError()": {
            "calls": 1,
            "min": 43382,
            "mean": 43382,
            "median": 43382,
            "max": 43382
          },
          "enumConversion(uint256)": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "indexOOBError(uint256)": {
            "calls": 1,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "intern()": {
            "calls": 1,
            "min": 21255,
            "mean": 21255,
            "median": 21255,
            "max": 21255
          },
          "mem()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "modError(uint256)": {
            "calls": 1,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "pop()": {
            "calls": 1,
            "min": 23377,
            "mean": 23377,
            "median": 23377,
            "max": 23377
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1207833,
          "size": 5192
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 1,
            "min": 443,
            "mean": 443,
            "median": 443,
            "max": 443
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 1,
            "min": 359,
            "mean": 359,
            "median": 359,
            "max": 359
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 8759855,
          "size": 43579
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 1,
            "min": 156849,
            "mean": 156849,
            "median": 156849,
            "max": 156849
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 878457,
          "size": 2799
        },
        "functions": {
          "basic()": {
            "calls": 20,
            "min": 4454,
            "mean": 4454,
            "median": 4454,
            "max": 4454
          },
          "const()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "deep_map(address,address)": {
            "calls": 8,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "deep_map_struct(address,address)": {
            "calls": 20,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "edgeCaseArray(uint256)": {
            "calls": 5,
            "min": 4525,
            "mean": 4525,
            "median": 4525,
            "max": 4525
          },
          "exists()": {
            "calls": 11,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "extra_sload()": {
            "calls": 3,
            "min": 4581,
            "mean": 4581,
            "median": 4581,
            "max": 4581
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 681299,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 259072,
            "min": 3273,
            "mean": 3660,
            "median": 3660,
            "max": 4047
          },
          "hidden()": {
            "calls": 13,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "map_addr(address)": {
            "calls": 11,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          },
          "map_bool(address)": {
            "calls": 5,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          },
          "map_packed(address)": {
            "calls": 5,
            "min": 2506,
            "mean": 2506,
            "median": 2506,
            "max": 2506
          },
          "map_struct(address)": {
            "calls": 20,
            "min": 4610,
            "mean": 4610,
            "median": 4610,
            "max": 4610
          },
          "map_uint(uint256)": {
            "calls": 8,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "read_struct_lower(address)": {
            "calls": 34561,
            "min": 2548,
            "mean": 2548,
            "median": 2548,
            "max": 2548
          },
          "read_struct_upper(address)": {
            "calls": 34560,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "setRandomPacking(uint256)": {
            "calls": 1024,
            "min": 23614,
            "mean": 28702,
            "median": 23842,
            "max": 43898
          },
          "tA()": {
            "calls": 3840,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "tB()": {
            "calls": 65283,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "tC()": {
            "calls": 65280,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "tD()": {
            "calls": 3840,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "tE()": {
            "calls": 6,
            "min": 355,
            "mean": 1688,
            "median": 2355,
            "max": 2355
          },
          "tF()": {
            "calls": 3,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "tG()": {
            "calls": 8,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "tH()": {
            "calls": 3,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1410604,
          "size": 6341
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 1,
            "min": 87955,
            "mean": 87955,
            "median": 87955,
            "max": 87955
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 842164,
          "size": 3690
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 257,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 353
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 1,
            "min": 584,
            "mean": 584,
            "median": 584,
            "max": 584
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 2,
            "min": 25393,
            "mean": 28019,
            "median": 28019,
            "max": 30646
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "foundry-upgrades": {
    "solc": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1244
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3296649,
          "size": 15067
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "deploy(address)": {
            "calls": 2,
            "min": 330469,
            "mean": 384199,
            "median": 384199,
            "max": 437930
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 609017,
            "mean": 609017,
            "median": 609017,
            "max": 609017
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "setType(string)": {
            "calls": 4,
            "min": 26943,
            "mean": 37102,
            "median": 37027,
            "max": 47411
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 48550,
            "mean": 48550,
            "median": 48550,
            "max": 48550
          },
          "uups()": {
            "calls": 2,
            "min": 2623,
            "mean": 2623,
            "median": 2623,
            "max": 2623
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1456
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3578813,
          "size": 16370
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "deploy(address)": {
            "calls": 2,
            "min": 364111,
            "mean": 418573,
            "median": 418573,
            "max": 473035
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 579538,
            "mean": 579538,
            "median": 579538,
            "max": 579538
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "setType(string)": {
            "calls": 4,
            "min": 26640,
            "mean": 36722,
            "median": 36674,
            "max": 46900
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 48228,
            "mean": 48228,
            "median": 48228,
            "max": 48228
          },
          "uups()": {
            "calls": 2,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1498
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3931276,
          "size": 18020
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "deploy(address)": {
            "calls": 2,
            "min": 365816,
            "mean": 428560,
            "median": 428560,
            "max": 491305
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 727955,
            "mean": 727955,
            "median": 727955,
            "max": 727955
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setType(string)": {
            "calls": 4,
            "min": 26595,
            "mean": 36714,
            "median": 36655,
            "max": 46954
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 47372,
            "mean": 47372,
            "median": 47372,
            "max": 47372
          },
          "uups()": {
            "calls": 2,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1628
        },
        "functions": {
          "implementation()": {
            "calls": 2,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3598935,
          "size": 16479
        },
        "functions": {
          "beacon()": {
            "calls": 2,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "beaconAddress()": {
            "calls": 1,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "deploy(address)": {
            "calls": 2,
            "min": 391286,
            "mean": 398382,
            "median": 398382,
            "max": 405478
          },
          "deploy(address,address)": {
            "calls": 2,
            "min": 717752,
            "mean": 717752,
            "median": 717752,
            "max": 717752
          },
          "proxyAddress()": {
            "calls": 3,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "setType(string)": {
            "calls": 4,
            "min": 26527,
            "mean": 36637,
            "median": 36583,
            "max": 46854
          },
          "upgrade(address,address,address)": {
            "calls": 1,
            "min": 47535,
            "mean": 47535,
            "median": 47535,
            "max": 47535
          },
          "uups()": {
            "calls": 2,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "gov-of-venice": {
    "solc": [
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4081141,
          "size": 18919
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 3007,
            "mean": 3007,
            "median": 3007,
            "max": 3007
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 7703,
            "mean": 7709,
            "median": 7703,
            "max": 7721
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2944,
            "mean": 2944,
            "median": 2944,
            "max": 2944
          },
          "guildMasterRewardMultiplier()": {
            "calls": 1,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "guildMemberSlash()": {
            "calls": 2,
            "min": 2634,
            "mean": 2634,
            "median": 2634,
            "max": 2634
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 3550,
            "mean": 3551,
            "median": 3552,
            "max": 3552
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 5717,
            "mean": 5717,
            "median": 5717,
            "max": 5717
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 3915186,
          "size": 18001
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2986,
            "mean": 2986,
            "median": 2986,
            "max": 2986
          },
          "state(uint48)": {
            "calls": 30,
            "min": 7120,
            "mean": 11759,
            "median": 10329,
            "max": 17841
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2506,
            "mean": 2506,
            "median": 2506,
            "max": 2506
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1583771,
          "size": 8755
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2682,
            "mean": 2682,
            "median": 2682,
            "max": 2682
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5157,
            "mean": 5157,
            "median": 5157,
            "max": 5157
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 100129,
            "mean": 101475,
            "median": 100141,
            "max": 117229
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1831138,
          "size": 8219
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 68211,
            "mean": 68921,
            "median": 68233,
            "max": 79557
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 34674,
            "mean": 68378,
            "median": 68789,
            "max": 79946
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29635,
            "mean": 41470,
            "median": 41470,
            "max": 53305
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 30702,
            "mean": 50734,
            "median": 35037,
            "max": 76447
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 1,
            "min": 29459,
            "mean": 29459,
            "median": 29459,
            "max": 29459
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 1,
            "min": 30361,
            "mean": 30361,
            "median": 30361,
            "max": 30361
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29591,
            "mean": 48587,
            "median": 40844,
            "max": 75327
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 1,
            "min": 29547,
            "mean": 29547,
            "median": 29547,
            "max": 29547
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 85720,
            "mean": 94480,
            "median": 85720,
            "max": 107623
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 29735,
            "mean": 29735,
            "median": 29735,
            "max": 29735
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 35761,
            "mean": 35761,
            "median": 35761,
            "max": 35761
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 35606,
            "mean": 35606,
            "median": 35606,
            "max": 35606
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 35671,
            "mean": 35671,
            "median": 35671,
            "max": 35671
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 92703,
            "mean": 92703,
            "median": 92703,
            "max": 92703
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 79126,
            "mean": 79696,
            "median": 79126,
            "max": 96226
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 438776,
            "mean": 454101,
            "median": 455804,
            "max": 455804
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 53378,
            "mean": 53378,
            "median": 53378,
            "max": 53378
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35469,
            "mean": 35469,
            "median": 35469,
            "max": 35469
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35363,
            "mean": 35363,
            "median": 35363,
            "max": 35363
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35512,
            "mean": 35512,
            "median": 35512,
            "max": 35512
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 34970,
            "mean": 94870,
            "median": 78478,
            "max": 183544
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 35776,
            "mean": 35776,
            "median": 35776,
            "max": 35776
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111429,
            "mean": 111430,
            "median": 111429,
            "max": 111441
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 210176,
            "mean": 210182,
            "median": 210182,
            "max": 210188
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 30229,
            "mean": 30238,
            "median": 30241,
            "max": 30241
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 35282,
            "mean": 35282,
            "median": 35282,
            "max": 35282
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 123177,
            "mean": 123177,
            "median": 123177,
            "max": 123177
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 107951,
            "mean": 110282,
            "median": 107951,
            "max": 125051
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44809,
            "mean": 44814,
            "median": 44809,
            "max": 44821
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 54521,
            "mean": 65619,
            "median": 74421,
            "max": 74433
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 54533,
            "mean": 54533,
            "median": 54533,
            "max": 54533
          },
          "silverBalance()": {
            "calls": 2,
            "min": 29807,
            "mean": 29807,
            "median": 29807,
            "max": 29807
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 54202,
            "mean": 54202,
            "median": 54202,
            "max": 54202
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 75396,
            "mean": 75396,
            "median": 75396,
            "max": 75396
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 74689,
            "mean": 74689,
            "median": 74689,
            "max": 74689
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1361874,
          "size": 6051
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 447,
            "mean": 447,
            "median": 447,
            "max": 447
          },
          "delay()": {
            "calls": 8,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34712,
            "mean": 34712,
            "median": 34712,
            "max": 34712
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 83557,
            "mean": 94649,
            "median": 103445,
            "max": 103457
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66637,
            "mean": 66637,
            "median": 66637,
            "max": 66637
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71179,
            "mean": 71179,
            "median": 71179,
            "max": 71179
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1732511,
          "size": 7621
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 5380,
            "mean": 8761,
            "median": 10136,
            "max": 12514
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 33335,
            "mean": 33335,
            "median": 33335,
            "max": 33335
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94696,
            "mean": 94696,
            "median": 94696,
            "max": 94696
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2668,
            "mean": 2668,
            "median": 2668,
            "max": 2668
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 171560,
          "size": 481
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "flag()": {
            "calls": 10,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4387491,
          "size": 20580
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 7629,
            "mean": 7638,
            "median": 7629,
            "max": 7658
          },
          "gravitasThreshold()": {
            "calls": 1,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "guildMasterRewardMultiplier()": {
            "calls": 2,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "guildMemberSlash()": {
            "calls": 3,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 2732,
            "mean": 2733,
            "median": 2734,
            "max": 2734
          },
          "memberRewardPerSecond()": {
            "calls": 1,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 4964,
            "mean": 4964,
            "median": 4964,
            "max": 4964
          },
          "slashForCashReward()": {
            "calls": 1,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4592402,
          "size": 21124
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "state(uint48)": {
            "calls": 30,
            "min": 7162,
            "mean": 11956,
            "median": 10525,
            "max": 18236
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1724042,
          "size": 9685
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5321,
            "mean": 5321,
            "median": 5321,
            "max": 5321
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 100205,
            "mean": 101551,
            "median": 100217,
            "max": 117305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 2075637,
          "size": 9346
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 68145,
            "mean": 68832,
            "median": 68148,
            "max": 79043
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 33870,
            "mean": 67737,
            "median": 68184,
            "max": 79323
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29295,
            "mean": 41086,
            "median": 41086,
            "max": 52878
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 29481,
            "mean": 50888,
            "median": 40803,
            "max": 75103
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 2,
            "min": 29317,
            "mean": 41108,
            "median": 41108,
            "max": 52900
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 2,
            "min": 29294,
            "mean": 41085,
            "median": 41085,
            "max": 52877
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29414,
            "mean": 48380,
            "median": 40693,
            "max": 75033
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 3,
            "min": 29284,
            "mean": 49840,
            "median": 57776,
            "max": 62460
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 85777,
            "mean": 94538,
            "median": 85777,
            "max": 107684
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 29311,
            "mean": 29311,
            "median": 29311,
            "max": 29311
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 35193,
            "mean": 35193,
            "median": 35193,
            "max": 35193
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 35182,
            "mean": 35182,
            "median": 35182,
            "max": 35182
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 34717,
            "mean": 34717,
            "median": 34717,
            "max": 34717
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 92286,
            "mean": 92286,
            "median": 92286,
            "max": 92286
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 79310,
            "mean": 79880,
            "median": 79310,
            "max": 96410
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 439516,
            "mean": 454841,
            "median": 456544,
            "max": 456544
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 52803,
            "mean": 52803,
            "median": 52803,
            "max": 52803
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35401,
            "mean": 35401,
            "median": 35401,
            "max": 35401
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35311,
            "mean": 35311,
            "median": 35311,
            "max": 35311
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35280,
            "mean": 35280,
            "median": 35280,
            "max": 35280
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 34230,
            "mean": 93911,
            "median": 77453,
            "max": 182412
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 34225,
            "mean": 34225,
            "median": 34225,
            "max": 34225
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111660,
            "mean": 111661,
            "median": 111660,
            "max": 111672
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 209625,
            "mean": 209631,
            "median": 209631,
            "max": 209637
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 29466,
            "mean": 29475,
            "median": 29478,
            "max": 29478
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 34043,
            "mean": 34043,
            "median": 34043,
            "max": 34043
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 123120,
            "mean": 123120,
            "median": 123120,
            "max": 123120
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 108118,
            "mean": 110449,
            "median": 108118,
            "max": 125218
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44198,
            "mean": 44203,
            "median": 44198,
            "max": 44210
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 54026,
            "mean": 65124,
            "median": 73926,
            "max": 73938
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 54208,
            "mean": 54208,
            "median": 54208,
            "max": 54208
          },
          "silverBalance()": {
            "calls": 2,
            "min": 28733,
            "mean": 28733,
            "median": 28733,
            "max": 28733
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 53395,
            "mean": 53395,
            "median": 53395,
            "max": 53395
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 74152,
            "mean": 74152,
            "median": 74152,
            "max": 74152
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 74143,
            "mean": 74143,
            "median": 74143,
            "max": 74143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1504242,
          "size": 6705
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "delay()": {
            "calls": 8,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34718,
            "mean": 34718,
            "median": 34718,
            "max": 34718
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 83838,
            "mean": 94930,
            "median": 103726,
            "max": 103738
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66479,
            "mean": 66479,
            "median": 66479,
            "max": 66479
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71408,
            "mean": 71408,
            "median": 71408,
            "max": 71408
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 2109044,
          "size": 9360
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 5319,
            "mean": 8910,
            "median": 10371,
            "max": 12897
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 32488,
            "mean": 32488,
            "median": 32488,
            "max": 32488
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94109,
            "mean": 94109,
            "median": 94109,
            "max": 94109
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2571,
            "mean": 2571,
            "median": 2571,
            "max": 2571
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 134758,
          "size": 313
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "flag()": {
            "calls": 10,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4284191,
          "size": 20079
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 7120,
            "mean": 7121,
            "median": 7120,
            "max": 7125
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2393,
            "mean": 2393,
            "median": 2393,
            "max": 2393
          },
          "guildMasterRewardMultiplier()": {
            "calls": 1,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "guildMemberSlash()": {
            "calls": 2,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 2526,
            "mean": 2526,
            "median": 2526,
            "max": 2526
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 5004,
            "mean": 5004,
            "median": 5004,
            "max": 5004
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4282025,
          "size": 19687
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "state(uint48)": {
            "calls": 30,
            "min": 6852,
            "mean": 11493,
            "median": 10085,
            "max": 17552
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1529635,
          "size": 9172
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5048,
            "mean": 5048,
            "median": 5048,
            "max": 5048
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 99520,
            "mean": 100866,
            "median": 99532,
            "max": 116620
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1676020,
          "size": 7452
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 66834,
            "mean": 67493,
            "median": 66837,
            "max": 77236
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 33408,
            "mean": 66448,
            "median": 66861,
            "max": 77618
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29088,
            "mean": 40921,
            "median": 40921,
            "max": 52755
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 29162,
            "mean": 49132,
            "median": 33504,
            "max": 74745
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 1,
            "min": 29104,
            "mean": 29104,
            "median": 29104,
            "max": 29104
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 1,
            "min": 29089,
            "mean": 29089,
            "median": 29089,
            "max": 29089
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29134,
            "mean": 48051,
            "median": 40308,
            "max": 74711
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 1,
            "min": 29061,
            "mean": 29061,
            "median": 29061,
            "max": 29061
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 83239,
            "mean": 91997,
            "median": 83239,
            "max": 105139
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 28884,
            "mean": 28884,
            "median": 28884,
            "max": 28884
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 34235,
            "mean": 34235,
            "median": 34235,
            "max": 34235
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 34215,
            "mean": 34215,
            "median": 34215,
            "max": 34215
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 34332,
            "mean": 34332,
            "median": 34332,
            "max": 34332
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 90887,
            "mean": 90887,
            "median": 90887,
            "max": 90887
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 78186,
            "mean": 78756,
            "median": 78186,
            "max": 95286
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 432093,
            "mean": 447418,
            "median": 449121,
            "max": 449121
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 52522,
            "mean": 52522,
            "median": 52522,
            "max": 52522
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35159,
            "mean": 35159,
            "median": 35159,
            "max": 35159
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35070,
            "mean": 35070,
            "median": 35070,
            "max": 35070
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35041,
            "mean": 35041,
            "median": 35041,
            "max": 35041
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 33645,
            "mean": 92387,
            "median": 76122,
            "max": 180143
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 33851,
            "mean": 33851,
            "median": 33851,
            "max": 33851
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111341,
            "mean": 111342,
            "median": 111341,
            "max": 111353
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 208493,
            "mean": 208499,
            "median": 208499,
            "max": 208505
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 28934,
            "mean": 28943,
            "median": 28946,
            "max": 28946
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 33684,
            "mean": 33684,
            "median": 33684,
            "max": 33684
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 120722,
            "mean": 120722,
            "median": 120722,
            "max": 120722
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 106034,
            "mean": 108365,
            "median": 106034,
            "max": 123134
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44023,
            "mean": 44028,
            "median": 44023,
            "max": 44035
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 53556,
            "mean": 64654,
            "median": 73456,
            "max": 73468
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 53863,
            "mean": 53863,
            "median": 53863,
            "max": 53863
          },
          "silverBalance()": {
            "calls": 2,
            "min": 28585,
            "mean": 28585,
            "median": 28585,
            "max": 28585
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 53303,
            "mean": 53303,
            "median": 53303,
            "max": 53303
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 73508,
            "mean": 73508,
            "median": 73508,
            "max": 73508
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 73517,
            "mean": 73517,
            "median": 73517,
            "max": 73517
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1271047,
          "size": 5684
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "delay()": {
            "calls": 8,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34473,
            "mean": 34473,
            "median": 34473,
            "max": 34473
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 82644,
            "mean": 93736,
            "median": 102532,
            "max": 102544
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66305,
            "mean": 66305,
            "median": 66305,
            "max": 66305
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71178,
            "mean": 71178,
            "median": 71178,
            "max": 71178
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1615970,
          "size": 7169
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 4850,
            "mean": 8197,
            "median": 9558,
            "max": 11912
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 32175,
            "mean": 32175,
            "median": 32175,
            "max": 32175
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94089,
            "mean": 94089,
            "median": 94089,
            "max": 94089
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 134600,
          "size": 316
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          },
          "flag()": {
            "calls": 10,
            "min": 2274,
            "mean": 2274,
            "median": 2274,
            "max": 2274
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4038213,
          "size": 18840
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 4,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 6,
            "min": 7151,
            "mean": 7154,
            "median": 7156,
            "max": 7156
          },
          "gravitasThreshold()": {
            "calls": 1,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "guildMasterAddress()": {
            "calls": 3,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          },
          "guildMasterRewardMultiplier()": {
            "calls": 2,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "guildMemberSlash()": {
            "calls": 3,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "isGuildMember(address)": {
            "calls": 101,
            "min": 2589,
            "mean": 2589,
            "median": 2589,
            "max": 2589
          },
          "memberRewardPerSecond()": {
            "calls": 1,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "requestGuildBook()": {
            "calls": 1,
            "min": 4905,
            "mean": 4905,
            "median": 4905,
            "max": 4905
          },
          "slashForCashReward()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4640953,
          "size": 21323
        },
        "functions": {
          "doge()": {
            "calls": 1,
            "min": 2364,
            "mean": 2364,
            "median": 2364,
            "max": 2364
          },
          "proposalThreshold()": {
            "calls": 1,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "silverBalance()": {
            "calls": 2,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "state(uint48)": {
            "calls": 30,
            "min": 6926,
            "mean": 11556,
            "median": 10143,
            "max": 17609
          },
          "votingDelay()": {
            "calls": 1,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1540335,
          "size": 9064
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "getPastVotes(address,uint256)": {
            "calls": 160,
            "min": 5131,
            "mean": 5131,
            "median": 5131,
            "max": 5131
          },
          "mint(address,uint256)": {
            "calls": 650,
            "min": 99568,
            "mean": 100914,
            "median": 99580,
            "max": 116668
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 2116645,
          "size": 9499
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 30,
            "min": 67015,
            "mean": 67688,
            "median": 67040,
            "max": 77501
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 63,
            "min": 33571,
            "mean": 66660,
            "median": 67080,
            "max": 77848
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 2,
            "min": 29194,
            "mean": 40972,
            "median": 40972,
            "max": 52750
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 5,
            "min": 29283,
            "mean": 50558,
            "median": 40413,
            "max": 74753
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 2,
            "min": 29212,
            "mean": 40990,
            "median": 40990,
            "max": 52768
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 2,
            "min": 29181,
            "mean": 40959,
            "median": 40959,
            "max": 52737
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 3,
            "min": 29270,
            "mean": 48113,
            "median": 40346,
            "max": 74725
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 3,
            "min": 29203,
            "mean": 49644,
            "median": 57552,
            "max": 62179
          },
          "executeProposal(uint48)": {
            "calls": 5,
            "min": 83192,
            "mean": 91948,
            "median": 83192,
            "max": 105092
          },
          "getGravitas(uint48)": {
            "calls": 4,
            "min": 29093,
            "mean": 29093,
            "median": 29093,
            "max": 29093
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 2,
            "min": 34146,
            "mean": 34146,
            "median": 34146,
            "max": 34146
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 4,
            "min": 34157,
            "mean": 34157,
            "median": 34157,
            "max": 34157
          },
          "govAcceptDoge()": {
            "calls": 1,
            "min": 34500,
            "mean": 34500,
            "median": 34500,
            "max": 34500
          },
          "govCancel(uint48)": {
            "calls": 1,
            "min": 90903,
            "mean": 90903,
            "median": 90903,
            "max": 90903
          },
          "govCastVote(uint48,uint8)": {
            "calls": 150,
            "min": 78208,
            "mean": 78778,
            "median": 78208,
            "max": 95308
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 10,
            "min": 432183,
            "mean": 447508,
            "median": 449211,
            "max": 449211
          },
          "govSetPendingDoge(address)": {
            "calls": 1,
            "min": 52594,
            "mean": 52594,
            "median": 52594,
            "max": 52594
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 1,
            "min": 35289,
            "mean": 35289,
            "median": 35289,
            "max": 35289
          },
          "govSetVotingDelay(uint256)": {
            "calls": 1,
            "min": 35204,
            "mean": 35204,
            "median": 35204,
            "max": 35204
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 1,
            "min": 35182,
            "mean": 35182,
            "median": 35182,
            "max": 35182
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 28,
            "min": 33880,
            "mean": 92697,
            "median": 76416,
            "max": 180553
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 3,
            "min": 34016,
            "mean": 34016,
            "median": 34016,
            "max": 34016
          },
          "init(address,address,address,address)": {
            "calls": 650,
            "min": 111399,
            "mean": 111400,
            "median": 111399,
            "max": 111411
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 50,
            "min": 208715,
            "mean": 208721,
            "median": 208721,
            "max": 208727
          },
          "isGuildMember(uint48)": {
            "calls": 101,
            "min": 29135,
            "mean": 29144,
            "median": 29147,
            "max": 29147
          },
          "joinGuild(uint48)": {
            "calls": 1,
            "min": 33662,
            "mean": 33662,
            "median": 33662,
            "max": 33662
          },
          "queueProposal(uint48)": {
            "calls": 5,
            "min": 120399,
            "mean": 120399,
            "median": 120399,
            "max": 120399
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 22,
            "min": 106330,
            "mean": 108661,
            "median": 106330,
            "max": 123430
          },
          "setGuild(address,uint48)": {
            "calls": 1491,
            "min": 44074,
            "mean": 44079,
            "median": 44074,
            "max": 44086
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 113,
            "min": 53616,
            "mean": 64714,
            "median": 73516,
            "max": 73528
          },
          "setSilverSeason()": {
            "calls": 50,
            "min": 54033,
            "mean": 54033,
            "median": 54033,
            "max": 54033
          },
          "silverBalance()": {
            "calls": 2,
            "min": 28666,
            "mean": 28666,
            "median": 28666,
            "max": 28666
          },
          "startApprentiship(uint48)": {
            "calls": 1,
            "min": 53266,
            "mean": 53266,
            "median": 53266,
            "max": 53266
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 2,
            "min": 73705,
            "mean": 73705,
            "median": 73705,
            "max": 73705
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 6,
            "min": 73735,
            "mean": 73735,
            "median": 73735,
            "max": 73735
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1529669,
          "size": 6862
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 5,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "delay()": {
            "calls": 8,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 1,
            "min": 34486,
            "mean": 34486,
            "median": 34486,
            "max": 34486
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 113,
            "min": 82982,
            "mean": 94074,
            "median": 102870,
            "max": 102882
          },
          "mockProposals(address,address)": {
            "calls": 50,
            "min": 66332,
            "mean": 66332,
            "median": 66332,
            "max": 66332
          },
          "signTheConstitution(address,uint256)": {
            "calls": 50,
            "min": 71211,
            "mean": 71211,
            "median": 71211,
            "max": 71211
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1821420,
          "size": 8077
        },
        "functions": {
          "availableGuilds()": {
            "calls": 64,
            "min": 4865,
            "mean": 8230,
            "median": 9599,
            "max": 11966
          },
          "guildInformation(uint48)": {
            "calls": 1,
            "min": 31987,
            "mean": 31987,
            "median": 31987,
            "max": 31987
          },
          "merchantRepublicAddress()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 1,
            "min": 94255,
            "mean": 94255,
            "median": 94255,
            "max": 94255
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 6,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 125674,
          "size": 276
        },
        "functions": {
          "anotherFlag()": {
            "calls": 1,
            "min": 2267,
            "mean": 2267,
            "median": 2267,
            "max": 2267
          },
          "flag()": {
            "calls": 10,
            "min": 2262,
            "mean": 2262,
            "median": 2262,
            "max": 2262
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "lil-web3": {
    "solc": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 214636,
          "size": 777
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "register(string)": {
            "calls": 5,
            "min": 24231,
            "mean": 40403,
            "median": 44447,
            "max": 44447
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24628,
            "mean": 26195,
            "median": 26195,
            "max": 27762
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 414609,
          "size": 1723
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30853,
            "mean": 60965,
            "median": 65265,
            "max": 72679
          },
          "fees(address)": {
            "calls": 6,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2494,
            "mean": 2567,
            "median": 2494,
            "max": 2714
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21889,
            "mean": 36049,
            "median": 45485,
            "max": 45485
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21985,
            "mean": 36564,
            "median": 36564,
            "max": 51143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1313690,
          "size": 5771
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8794,
            "mean": 8794,
            "median": 8794,
            "max": 8794
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30048,
            "mean": 52191,
            "median": 49512,
            "max": 79695
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 801444,
            "mean": 829614,
            "median": 836657,
            "max": 836657
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4374
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2530,
            "mean": 2530,
            "median": 2530,
            "max": 2530
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51225,
            "mean": 51225,
            "median": 51225,
            "max": 51225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 810087,
          "size": 3507
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44596,
            "mean": 76878,
            "median": 85813,
            "max": 98272
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "nonce()": {
            "calls": 1914,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "quorum()": {
            "calls": 256,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43555,
            "mean": 82640,
            "median": 82988,
            "max": 83276
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 44049,
            "mean": 68446,
            "median": 67593,
            "max": 103060
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1186062,
          "size": 6547
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23535,
            "mean": 64326,
            "median": 74524,
            "max": 74524
          },
          "getState()": {
            "calls": 4,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "manager()": {
            "calls": 4,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23649,
            "mean": 30771,
            "median": 30706,
            "max": 37960
          },
          "renounce()": {
            "calls": 2,
            "min": 23447,
            "mean": 25274,
            "median": 25274,
            "max": 27102
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23585,
            "mean": 26811,
            "median": 27612,
            "max": 27624
          },
          "token()": {
            "calls": 11,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "withdraw()": {
            "calls": 2,
            "min": 23378,
            "mean": 27354,
            "median": 27354,
            "max": 31330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4462
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 459643,
          "size": 1814
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30162,
            "mean": 45206,
            "median": 30198,
            "max": 75259
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30139,
            "mean": 48753,
            "median": 48753,
            "max": 67367
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8706,
            "mean": 8706,
            "median": 8706,
            "max": 8706
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120702,
            "mean": 146576,
            "median": 156001,
            "max": 156001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 787688,
          "size": 3473
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17971,
            "mean": 18049,
            "median": 18065,
            "max": 18092
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17544,
            "mean": 17544,
            "median": 17544,
            "max": 17544
          },
          "nonce()": {
            "calls": 2,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23739,
            "mean": 32557,
            "median": 23799,
            "max": 50135
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23561,
            "mean": 25019,
            "median": 25749,
            "max": 25749
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 218530,
            "mean": 220660,
            "median": 218530,
            "max": 223330
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49906,
            "mean": 53850,
            "median": 53850,
            "max": 57795
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23589,
            "mean": 70324,
            "median": 93692,
            "max": 93692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 509813,
          "size": 1971
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26465,
            "mean": 26465,
            "median": 26465,
            "max": 26465
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44128,
            "mean": 44128,
            "median": 44128,
            "max": 44128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 695451,
          "size": 3800
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 552,
            "mean": 2097,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68080,
            "mean": 68087,
            "median": 68092,
            "max": 68092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 865233,
          "size": 4192
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72961,
            "mean": 72961,
            "median": 72961,
            "max": 72961
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 46126,
            "mean": 46126,
            "median": 46126,
            "max": 46126
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 554804,
          "size": 2262
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44179,
            "mean": 44179,
            "median": 44179,
            "max": 44179
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43480,
            "mean": 43480,
            "median": 43480,
            "max": 43480
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43564,
            "mean": 43564,
            "median": 43564,
            "max": 43564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 864153,
          "size": 4187
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72946,
            "mean": 72946,
            "median": 72946,
            "max": 72946
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24214,
            "mean": 44837,
            "median": 46126,
            "max": 46126
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54441,
            "mean": 54441,
            "median": 54441,
            "max": 54441
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 695399,
          "size": 3799
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33880,
            "mean": 62380,
            "median": 68080,
            "max": 68080
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 259012,
          "size": 984
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2865,
            "mean": 2865,
            "median": 2865,
            "max": 2865
          },
          "register(string)": {
            "calls": 5,
            "min": 24425,
            "mean": 40673,
            "median": 44735,
            "max": 44735
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24830,
            "mean": 26436,
            "median": 26436,
            "max": 28043
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 489958,
          "size": 2073
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 31025,
            "mean": 61491,
            "median": 65920,
            "max": 73328
          },
          "fees(address)": {
            "calls": 6,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2631,
            "mean": 2744,
            "median": 2631,
            "max": 2970
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 22000,
            "mean": 36192,
            "median": 45648,
            "max": 45648
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 22025,
            "mean": 36623,
            "median": 36623,
            "max": 51222
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1399400,
          "size": 6170
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8931,
            "mean": 8931,
            "median": 8931,
            "max": 8931
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30065,
            "mean": 52412,
            "median": 49819,
            "max": 79945
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 862854,
            "mean": 891008,
            "median": 898047,
            "max": 898047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4495
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51315,
            "mean": 51315,
            "median": 51315,
            "max": 51315
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 989853,
          "size": 4531
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44791,
            "mean": 78028,
            "median": 87278,
            "max": 99922
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "nonce()": {
            "calls": 1914,
            "min": 2304,
            "mean": 2304,
            "median": 2304,
            "max": 2304
          },
          "quorum()": {
            "calls": 256,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43672,
            "mean": 83859,
            "median": 84212,
            "max": 84536
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 44197,
            "mean": 69222,
            "median": 68421,
            "max": 104413
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1287947,
          "size": 6881
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23433,
            "mean": 64286,
            "median": 74500,
            "max": 74500
          },
          "getState()": {
            "calls": 4,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "manager()": {
            "calls": 4,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23712,
            "mean": 30766,
            "median": 30676,
            "max": 37911
          },
          "renounce()": {
            "calls": 2,
            "min": 23408,
            "mean": 25278,
            "median": 25278,
            "max": 27148
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23618,
            "mean": 26941,
            "median": 27766,
            "max": 27778
          },
          "token()": {
            "calls": 11,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "withdraw()": {
            "calls": 2,
            "min": 23408,
            "mean": 27386,
            "median": 27386,
            "max": 31364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4570
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 462002,
          "size": 1828
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30109,
            "mean": 45193,
            "median": 30140,
            "max": 75332
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30092,
            "mean": 48764,
            "median": 48764,
            "max": 67437
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8908,
            "mean": 8908,
            "median": 8908,
            "max": 8908
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120600,
            "mean": 146386,
            "median": 155787,
            "max": 155787
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 920742,
          "size": 4025
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "balanceOf(uint256,address)": {
            "calls": 22,
            "min": 18009,
            "mean": 18130,
            "median": 18135,
            "max": 18205
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17659,
            "mean": 17659,
            "median": 17659,
            "max": 17659
          },
          "nonce()": {
            "calls": 2,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23840,
            "mean": 32742,
            "median": 23900,
            "max": 50486
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23691,
            "mean": 34897,
            "median": 25881,
            "max": 55121
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 219146,
            "mean": 221276,
            "median": 219146,
            "max": 223946
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49934,
            "mean": 53924,
            "median": 53924,
            "max": 57915
          },
          "withdraw(uint256)": {
            "calls": 4,
            "min": 23674,
            "mean": 66489,
            "median": 74259,
            "max": 93766
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 578775,
          "size": 2291
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26522,
            "mean": 26522,
            "median": 26522,
            "max": 26522
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26513,
            "mean": 26513,
            "median": 26513,
            "max": 26513
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44280,
            "mean": 44280,
            "median": 44280,
            "max": 44280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 755165,
          "size": 3772
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 561,
            "mean": 2106,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68199,
            "mean": 68206,
            "median": 68211,
            "max": 68211
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 922041,
          "size": 4159
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 73074,
            "mean": 73074,
            "median": 73074,
            "max": 73074
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 46075,
            "mean": 46075,
            "median": 46075,
            "max": 46075
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 590096,
          "size": 2429
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44359,
            "mean": 44359,
            "median": 44359,
            "max": 44359
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43633,
            "mean": 43633,
            "median": 43633,
            "max": 43633
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 955767,
          "size": 4315
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 73050,
            "mean": 73050,
            "median": 73050,
            "max": 73050
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24163,
            "mean": 44786,
            "median": 46075,
            "max": 46075
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54549,
            "mean": 54549,
            "median": 54549,
            "max": 54549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 755149,
          "size": 3771
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 14,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33999,
            "mean": 62499,
            "median": 68199,
            "max": 68199
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 266419,
          "size": 1020
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "register(string)": {
            "calls": 5,
            "min": 24145,
            "mean": 40309,
            "median": 44350,
            "max": 44350
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24502,
            "mean": 26053,
            "median": 26053,
            "max": 27605
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 445312,
          "size": 1862
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30298,
            "mean": 59744,
            "median": 63806,
            "max": 71311
          },
          "fees(address)": {
            "calls": 6,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2449,
            "mean": 2516,
            "median": 2449,
            "max": 2650
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21831,
            "mean": 35987,
            "median": 45420,
            "max": 45420
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21869,
            "mean": 36295,
            "median": 36295,
            "max": 50721
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1553991,
          "size": 6886
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8690,
            "mean": 8690,
            "median": 8690,
            "max": 8690
          },
          "join(uint256)": {
            "calls": 4,
            "min": 29935,
            "mean": 51828,
            "median": 49153,
            "max": 79072
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 871020,
            "mean": 898996,
            "median": 905991,
            "max": 905991
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 5285
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46206,
            "mean": 46206,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 50997,
            "mean": 50997,
            "median": 50997,
            "max": 50997
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 872003,
          "size": 3999
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 43910,
            "mean": 74605,
            "median": 82994,
            "max": 95336
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "nonce()": {
            "calls": 1914,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "quorum()": {
            "calls": 256,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 42953,
            "mean": 80013,
            "median": 80341,
            "max": 80683
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 43389,
            "mean": 66649,
            "median": 65641,
            "max": 100403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1256197,
          "size": 7600
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23425,
            "mean": 63965,
            "median": 74100,
            "max": 74100
          },
          "getState()": {
            "calls": 4,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "manager()": {
            "calls": 4,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23627,
            "mean": 30522,
            "median": 30358,
            "max": 37581
          },
          "renounce()": {
            "calls": 2,
            "min": 23401,
            "mean": 25222,
            "median": 25222,
            "max": 27043
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23539,
            "mean": 26740,
            "median": 27535,
            "max": 27547
          },
          "token()": {
            "calls": 11,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "withdraw()": {
            "calls": 2,
            "min": 23369,
            "mean": 27339,
            "median": 27339,
            "max": 31309
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 5378
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 422467,
          "size": 1644
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 29964,
            "mean": 44836,
            "median": 29985,
            "max": 74561
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 29965,
            "mean": 48362,
            "median": 48362,
            "max": 66759
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120011,
            "mean": 145634,
            "median": 154985,
            "max": 154985
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 881058,
          "size": 3878
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 17675,
            "mean": 17745,
            "median": 17762,
            "max": 17781
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17385,
            "mean": 17385,
            "median": 17385,
            "max": 17385
          },
          "nonce()": {
            "calls": 2,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23725,
            "mean": 32468,
            "median": 23785,
            "max": 49894
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23590,
            "mean": 25032,
            "median": 25753,
            "max": 25753
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 217801,
            "mean": 219931,
            "median": 217801,
            "max": 222601
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49089,
            "mean": 53097,
            "median": 53097,
            "max": 57105
          },
          "withdraw(uint256)": {
            "calls": 3,
            "min": 23581,
            "mean": 69925,
            "median": 93098,
            "max": 93098
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 533543,
          "size": 2075
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26422,
            "mean": 26422,
            "median": 26422,
            "max": 26422
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44187,
            "mean": 44187,
            "median": 44187,
            "max": 44187
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 760604,
          "size": 3908
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 419,
            "mean": 1964,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 67924,
            "mean": 67931,
            "median": 67936,
            "max": 67936
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 951243,
          "size": 4264
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72873,
            "mean": 72873,
            "median": 72873,
            "max": 72873
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 45865,
            "mean": 45865,
            "median": 45865,
            "max": 45865
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 593170,
          "size": 2443
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44070,
            "mean": 44070,
            "median": 44070,
            "max": 44070
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43518,
            "mean": 43518,
            "median": 43518,
            "max": 43518
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43535,
            "mean": 43535,
            "median": 43535,
            "max": 43535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 950175,
          "size": 4259
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72860,
            "mean": 72860,
            "median": 72860,
            "max": 72860
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 23953,
            "mean": 44576,
            "median": 45865,
            "max": 45865
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54238,
            "mean": 54238,
            "median": 54238,
            "max": 54238
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 760576,
          "size": 3907
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46206,
            "mean": 46206,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 11,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33724,
            "mean": 62224,
            "median": 67924,
            "max": 67924
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 279681,
          "size": 1085
        },
        "functions": {
          "lookup(string)": {
            "calls": 8,
            "min": 2634,
            "mean": 2634,
            "median": 2634,
            "max": 2634
          },
          "register(string)": {
            "calls": 5,
            "min": 24201,
            "mean": 40343,
            "median": 44379,
            "max": 44379
          },
          "update(string,address)": {
            "calls": 2,
            "min": 24597,
            "mean": 26144,
            "median": 26144,
            "max": 27692
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 447868,
          "size": 1894
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 6,
            "min": 30469,
            "mean": 59869,
            "median": 63954,
            "max": 71323
          },
          "fees(address)": {
            "calls": 6,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "getFee(address,uint256)": {
            "calls": 3,
            "min": 2478,
            "mean": 2545,
            "median": 2478,
            "max": 2679
          },
          "setFees(address,uint256)": {
            "calls": 5,
            "min": 21898,
            "mean": 36046,
            "median": 45468,
            "max": 45468
          },
          "withdraw(address,uint256)": {
            "calls": 2,
            "min": 21933,
            "mean": 36359,
            "median": 36359,
            "max": 50786
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1554862,
          "size": 6897
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 5,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "join(uint256)": {
            "calls": 4,
            "min": 30020,
            "mean": 52107,
            "median": 49536,
            "max": 79338
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 5,
            "min": 857440,
            "mean": 885415,
            "median": 892409,
            "max": 892409
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 5133
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 3,
            "min": 46303,
            "mean": 46303,
            "median": 46303,
            "max": 46303
          },
          "balanceOf(address)": {
            "calls": 7,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 51113,
            "mean": 51113,
            "median": 51113,
            "max": 51113
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 871435,
          "size": 3895
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 57,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          },
          "QUORUM_HASH()": {
            "calls": 1821,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "SIGNER_HASH()": {
            "calls": 36,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "domainSeparator()": {
            "calls": 1914,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 8,
            "min": 44059,
            "mean": 75546,
            "median": 84228,
            "max": 96615
          },
          "isSigner(address)": {
            "calls": 2,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "nonce()": {
            "calls": 1914,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "quorum()": {
            "calls": 256,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 260,
            "min": 43150,
            "mean": 81210,
            "median": 81614,
            "max": 81938
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 5,
            "min": 43626,
            "mean": 67489,
            "median": 66542,
            "max": 101729
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1292691,
          "size": 7632
        },
        "functions": {
          "contribute()": {
            "calls": 5,
            "min": 23440,
            "mean": 64039,
            "median": 74189,
            "max": 74189
          },
          "getState()": {
            "calls": 4,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "manager()": {
            "calls": 4,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23702,
            "mean": 30619,
            "median": 30495,
            "max": 37660
          },
          "renounce()": {
            "calls": 2,
            "min": 23407,
            "mean": 25273,
            "median": 25273,
            "max": 27139
          },
          "setState(uint8)": {
            "calls": 5,
            "min": 23587,
            "mean": 26754,
            "median": 27540,
            "max": 27552
          },
          "token()": {
            "calls": 11,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "withdraw()": {
            "calls": 2,
            "min": 23397,
            "mean": 27350,
            "median": 27350,
            "max": 31303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 5339
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 509145,
          "size": 2050
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 3,
            "min": 30048,
            "mean": 44982,
            "median": 30053,
            "max": 74845
          },
          "cancelListing(uint256)": {
            "calls": 2,
            "min": 30044,
            "mean": 48532,
            "median": 48532,
            "max": 67021
          },
          "getListing(uint256)": {
            "calls": 6,
            "min": 8688,
            "mean": 8688,
            "median": 8688,
            "max": 8688
          },
          "list(address,uint256,uint256)": {
            "calls": 7,
            "min": 120178,
            "mean": 145790,
            "median": 155135,
            "max": 155135
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 911522,
          "size": 3963
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 2,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "balanceOf(uint256,address)": {
            "calls": 22,
            "min": 17660,
            "mean": 17734,
            "median": 17751,
            "max": 17777
          },
          "domainSeparator()": {
            "calls": 2,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "getStream(uint256)": {
            "calls": 9,
            "min": 17257,
            "mean": 17257,
            "median": 17257,
            "max": 17257
          },
          "nonce()": {
            "calls": 2,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "refuel(uint256,uint256)": {
            "calls": 3,
            "min": 23794,
            "mean": 32517,
            "median": 23854,
            "max": 49904
          },
          "refund(uint256)": {
            "calls": 3,
            "min": 23652,
            "mean": 34607,
            "median": 25837,
            "max": 54334
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 9,
            "min": 218044,
            "mean": 220174,
            "median": 218044,
            "max": 222844
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 2,
            "min": 49280,
            "mean": 53266,
            "median": 53266,
            "max": 57252
          },
          "withdraw(uint256)": {
            "calls": 4,
            "min": 23642,
            "mean": 65995,
            "median": 73609,
            "max": 93122
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 477722,
          "size": 1820
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 1,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 1,
            "min": 26422,
            "mean": 26422,
            "median": 26422,
            "max": 26422
          },
          "setTestData(bytes)": {
            "calls": 1,
            "min": 44130,
            "mean": 44130,
            "median": 44130,
            "max": 44130
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 747054,
          "size": 3765
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 22,
            "min": 442,
            "mean": 1987,
            "median": 2442,
            "max": 2442
          },
          "mintTo(address,uint256)": {
            "calls": 8,
            "min": 68013,
            "mean": 68020,
            "median": 68025,
            "max": 68025
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 964705,
          "size": 4328
        },
        "functions": {
          "mint()": {
            "calls": 6,
            "min": 72937,
            "mean": 72937,
            "median": 72937,
            "max": 72937
          },
          "ownerOf(uint256)": {
            "calls": 10,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          },
          "setApprovalForAll(address,bool)": {
            "calls": 12,
            "min": 45958,
            "mean": 45958,
            "median": 45958,
            "max": 45958
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 589948,
          "size": 2430
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 1,
            "min": 44132,
            "mean": 44132,
            "median": 44132,
            "max": 44132
          },
          "expectValue(uint256)": {
            "calls": 1,
            "min": 43503,
            "mean": 43503,
            "median": 43503,
            "max": 43503
          },
          "shouldRevert(bool)": {
            "calls": 1,
            "min": 43525,
            "mean": 43525,
            "median": 43525,
            "max": 43525
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 973329,
          "size": 4368
        },
        "functions": {
          "mint()": {
            "calls": 8,
            "min": 72922,
            "mean": 72922,
            "median": 72922,
            "max": 72922
          },
          "ownerOf(uint256)": {
            "calls": 13,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          },
          "setApprovalForAll(address,bool)": {
            "calls": 17,
            "min": 24039,
            "mean": 44662,
            "median": 45951,
            "max": 45951
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1,
            "min": 54219,
            "mean": 54219,
            "median": 54219,
            "max": 54219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 747026,
          "size": 3764
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46303,
            "mean": 46303,
            "median": 46303,
            "max": 46303
          },
          "balanceOf(address)": {
            "calls": 14,
            "min": 2442,
            "mean": 2442,
            "median": 2442,
            "max": 2442
          },
          "mintTo(address,uint256)": {
            "calls": 12,
            "min": 33813,
            "mean": 62313,
            "median": 68013,
            "max": 68013
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "maple-erc20": {
    "solc": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 693522,
          "size": 3836
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 3220,
            "mean": 3220,
            "median": 3220,
            "max": 3220
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2870,
            "mean": 2870,
            "median": 2870,
            "max": 2870
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1040396,
          "size": 5145
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25940,
            "min": 31058,
            "mean": 50867,
            "median": 51294,
            "max": 51570
          },
          "burn(address,uint256)": {
            "calls": 462,
            "min": 35830,
            "mean": 38618,
            "median": 36058,
            "max": 44770
          },
          "mint(address,uint256)": {
            "calls": 22916,
            "min": 35699,
            "mean": 61366,
            "median": 61511,
            "max": 95999
          },
          "sum()": {
            "calls": 1,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "token()": {
            "calls": 1,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "transfer(address,uint256)": {
            "calls": 428,
            "min": 33790,
            "mean": 38804,
            "median": 34006,
            "max": 57090
          },
          "transferFrom(address,address,uint256)": {
            "calls": 276,
            "min": 38241,
            "mean": 38662,
            "median": 38673,
            "max": 38673
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 259901,
          "size": 982
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29695,
            "mean": 46260,
            "median": 49643,
            "max": 49979
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27800,
            "mean": 51227,
            "median": 47155,
            "max": 81367
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27661,
            "mean": 39084,
            "median": 39128,
            "max": 50596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 750735,
          "size": 4101
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2914,
            "mean": 2914,
            "median": 2914,
            "max": 2914
          },
          "approve(address,uint256)": {
            "calls": 43075,
            "min": 4450,
            "mean": 37558,
            "median": 45742,
            "max": 46294
          },
          "balanceOf(address)": {
            "calls": 2948,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          },
          "burn(address,uint256)": {
            "calls": 836,
            "min": 6819,
            "mean": 24218,
            "median": 28379,
            "max": 34363
          },
          "decimals()": {
            "calls": 257,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 720,
            "min": 5035,
            "mean": 20548,
            "median": 24551,
            "max": 29719
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16237,
            "min": 4785,
            "mean": 24486,
            "median": 24685,
            "max": 46461
          },
          "mint(address,uint256)": {
            "calls": 40423,
            "min": 6731,
            "mean": 43384,
            "median": 50823,
            "max": 68475
          },
          "name()": {
            "calls": 257,
            "min": 2756,
            "mean": 5006,
            "median": 2765,
            "max": 9344
          },
          "symbol()": {
            "calls": 257,
            "min": 2999,
            "mean": 5361,
            "median": 7392,
            "max": 9590
          },
          "totalSupply()": {
            "calls": 1413,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 971,
            "min": 6998,
            "mean": 30500,
            "median": 28558,
            "max": 51642
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2024,
            "min": 11354,
            "mean": 38241,
            "median": 41036,
            "max": 54366
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 700698,
          "size": 3661
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2973,
            "mean": 2973,
            "median": 2973,
            "max": 2973
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2777,
            "mean": 2777,
            "median": 2777,
            "max": 2777
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2583,
            "mean": 2583,
            "median": 2583,
            "max": 2583
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1064513,
          "size": 5040
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25502,
            "min": 29592,
            "mean": 51154,
            "median": 51600,
            "max": 51876
          },
          "burn(address,uint256)": {
            "calls": 439,
            "min": 35823,
            "mean": 38581,
            "median": 36039,
            "max": 44679
          },
          "mint(address,uint256)": {
            "calls": 23442,
            "min": 35791,
            "mean": 61468,
            "median": 61615,
            "max": 96103
          },
          "sum()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "token()": {
            "calls": 1,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "transfer(address,uint256)": {
            "calls": 306,
            "min": 33796,
            "mean": 34767,
            "median": 34012,
            "max": 56832
          },
          "transferFrom(address,address,uint256)": {
            "calls": 313,
            "min": 38701,
            "mean": 39128,
            "median": 39133,
            "max": 39133
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 283357,
          "size": 1092
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29959,
            "mean": 46611,
            "median": 49919,
            "max": 50243
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 28026,
            "mean": 51267,
            "median": 47159,
            "max": 81371
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27650,
            "mean": 39109,
            "median": 39170,
            "max": 50690
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 766526,
          "size": 3971
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 42663,
            "min": 4669,
            "mean": 37672,
            "median": 45961,
            "max": 46513
          },
          "balanceOf(address)": {
            "calls": 2947,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "burn(address,uint256)": {
            "calls": 811,
            "min": 6835,
            "mean": 24077,
            "median": 28395,
            "max": 34319
          },
          "decimals()": {
            "calls": 257,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 681,
            "min": 4971,
            "mean": 21402,
            "median": 24543,
            "max": 29715
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16068,
            "min": 4955,
            "mean": 24680,
            "median": 24855,
            "max": 46799
          },
          "mint(address,uint256)": {
            "calls": 41014,
            "min": 6792,
            "mean": 43536,
            "median": 50932,
            "max": 68536
          },
          "name()": {
            "calls": 257,
            "min": 2921,
            "mean": 5097,
            "median": 3100,
            "max": 9478
          },
          "symbol()": {
            "calls": 257,
            "min": 2987,
            "mean": 5402,
            "median": 7385,
            "max": 9544
          },
          "totalSupply()": {
            "calls": 1412,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 820,
            "min": 7035,
            "mean": 29789,
            "median": 28595,
            "max": 51415
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2040,
            "min": 11691,
            "mean": 38742,
            "median": 33619,
            "max": 54703
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 831838,
          "size": 4950
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2986,
            "mean": 2986,
            "median": 2986,
            "max": 2986
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2431,
            "mean": 2431,
            "median": 2431,
            "max": 2431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1195148,
          "size": 6367
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25821,
            "min": 30904,
            "mean": 50697,
            "median": 51116,
            "max": 51404
          },
          "burn(address,uint256)": {
            "calls": 368,
            "min": 35263,
            "mean": 38467,
            "median": 35479,
            "max": 44119
          },
          "mint(address,uint256)": {
            "calls": 23622,
            "min": 35265,
            "mean": 60936,
            "median": 61065,
            "max": 95565
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "token()": {
            "calls": 1,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 347,
            "min": 30963,
            "mean": 35183,
            "median": 33463,
            "max": 56199
          },
          "transferFrom(address,address,uint256)": {
            "calls": 302,
            "min": 38016,
            "mean": 38238,
            "median": 38244,
            "max": 38244
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 255911,
          "size": 969
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29493,
            "mean": 46081,
            "median": 49465,
            "max": 49777
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27174,
            "mean": 50161,
            "median": 46031,
            "max": 80231
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27100,
            "mean": 38497,
            "median": 38556,
            "max": 50013
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 893619,
          "size": 5236
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "approve(address,uint256)": {
            "calls": 42816,
            "min": 4424,
            "mean": 37551,
            "median": 45716,
            "max": 46268
          },
          "balanceOf(address)": {
            "calls": 2962,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(address,uint256)": {
            "calls": 768,
            "min": 6536,
            "mean": 23272,
            "median": 28096,
            "max": 34080
          },
          "decimals()": {
            "calls": 257,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 701,
            "min": 4605,
            "mean": 20581,
            "median": 24291,
            "max": 29349
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16283,
            "min": 4577,
            "mean": 24306,
            "median": 24477,
            "max": 46409
          },
          "mint(address,uint256)": {
            "calls": 41425,
            "min": 6539,
            "mean": 43245,
            "median": 50631,
            "max": 68283
          },
          "name()": {
            "calls": 257,
            "min": 2692,
            "mean": 4692,
            "median": 2704,
            "max": 9247
          },
          "symbol()": {
            "calls": 257,
            "min": 2721,
            "mean": 5153,
            "median": 7083,
            "max": 9276
          },
          "totalSupply()": {
            "calls": 1427,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 843,
            "min": 6667,
            "mean": 29510,
            "median": 28227,
            "max": 50963
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2033,
            "min": 11053,
            "mean": 38172,
            "median": 32981,
            "max": 54017
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 847183,
          "size": 4932
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 2827,
            "min": 2885,
            "mean": 2885,
            "median": 2885,
            "max": 2885
          },
          "PERMIT_TYPEHASH()": {
            "calls": 2827,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "allowance(address,address)": {
            "calls": 2819,
            "min": 2563,
            "mean": 2563,
            "median": 2563,
            "max": 2563
          },
          "nonces(address)": {
            "calls": 5635,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1262712,
          "size": 6565
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25705,
            "min": 30972,
            "mean": 50791,
            "median": 51196,
            "max": 51472
          },
          "burn(address,uint256)": {
            "calls": 437,
            "min": 35393,
            "mean": 38176,
            "median": 35621,
            "max": 44405
          },
          "mint(address,uint256)": {
            "calls": 23436,
            "min": 35418,
            "mean": 61064,
            "median": 61218,
            "max": 95718
          },
          "sum()": {
            "calls": 1,
            "min": 2266,
            "mean": 2266,
            "median": 2266,
            "max": 2266
          },
          "token()": {
            "calls": 1,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "transfer(address,uint256)": {
            "calls": 332,
            "min": 33236,
            "mean": 35636,
            "median": 33464,
            "max": 56500
          },
          "transferFrom(address,address,uint256)": {
            "calls": 301,
            "min": 37797,
            "mean": 38243,
            "median": 38253,
            "max": 38253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 314893,
          "size": 1243
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 1280,
            "min": 29498,
            "mean": 46131,
            "median": 49458,
            "max": 49782
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3080,
            "min": 27494,
            "mean": 50270,
            "median": 46144,
            "max": 80344
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 512,
            "min": 27217,
            "mean": 38594,
            "median": 38642,
            "max": 50068
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 929933,
          "size": 5316
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 2560,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "approve(address,uint256)": {
            "calls": 42796,
            "min": 4491,
            "mean": 37592,
            "median": 45783,
            "max": 46335
          },
          "balanceOf(address)": {
            "calls": 2935,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "burn(address,uint256)": {
            "calls": 813,
            "min": 6612,
            "mean": 23321,
            "median": 28172,
            "max": 34156
          },
          "decimals()": {
            "calls": 257,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 727,
            "min": 4676,
            "mean": 20102,
            "median": 24296,
            "max": 29408
          },
          "increaseAllowance(address,uint256)": {
            "calls": 16543,
            "min": 4661,
            "mean": 24379,
            "median": 24561,
            "max": 46397
          },
          "mint(address,uint256)": {
            "calls": 40368,
            "min": 6618,
            "mean": 43549,
            "median": 50710,
            "max": 68362
          },
          "name()": {
            "calls": 257,
            "min": 2562,
            "mean": 5083,
            "median": 6939,
            "max": 9115
          },
          "symbol()": {
            "calls": 257,
            "min": 2577,
            "mean": 4712,
            "median": 2624,
            "max": 9131
          },
          "totalSupply()": {
            "calls": 1400,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transfer(address,uint256)": {
            "calls": 858,
            "min": 6741,
            "mean": 29510,
            "median": 28301,
            "max": 51337
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2061,
            "min": 11109,
            "mean": 37821,
            "median": 33037,
            "max": 54097
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "openzeppelin": {
    "solc": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 298147,
          "size": 1190
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3191,
            "min": 487,
            "mean": 1382,
            "median": 487,
            "max": 2487
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 513368,
          "size": 2656
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 25985,
            "mean": 35917,
            "median": 25985,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 39443,
            "min": 537,
            "mean": 2451,
            "median": 2537,
            "max": 2537
          },
          "burn(address,uint256)": {
            "calls": 1355,
            "min": 33957,
            "mean": 34100,
            "median": 34089,
            "max": 34329
          },
          "decimals()": {
            "calls": 283,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "mint(address,uint256)": {
            "calls": 58549,
            "min": 27997,
            "mean": 51123,
            "median": 50781,
            "max": 68409
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 961671,
          "size": 5032
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 3115,
            "mean": 3115,
            "median": 3115,
            "max": 3115
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25793,
            "mean": 32623,
            "median": 26021,
            "max": 46305
          },
          "asset()": {
            "calls": 256,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29378,
            "mean": 29586,
            "median": 29426,
            "max": 30011
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29818,
            "mean": 30003,
            "median": 29842,
            "max": 30451
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 44203,
            "mean": 73408,
            "median": 66142,
            "max": 100630
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2951,
            "mean": 2951,
            "median": 2951,
            "max": 2951
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10908,
            "mean": 10995,
            "median": 10908,
            "max": 11157
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 44108,
            "mean": 55859,
            "median": 55560,
            "max": 75803
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29903,
            "mean": 30050,
            "median": 29927,
            "max": 30512
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29783,
            "mean": 29934,
            "median": 29807,
            "max": 30392
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29576,
            "mean": 29712,
            "median": 29600,
            "max": 30197
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29475,
            "mean": 29612,
            "median": 29499,
            "max": 30036
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24490,
            "mean": 51815,
            "median": 54484,
            "max": 77504
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5587,
            "mean": 5587,
            "median": 5587,
            "max": 5587
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 32461,
            "mean": 54040,
            "median": 56254,
            "max": 79298
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4416101,
          "size": 22241
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 572,
            "mean": 747,
            "median": 826,
            "max": 826
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 1042,
            "mean": 1049,
            "median": 1049,
            "max": 1056
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 1178,
            "mean": 1298,
            "median": 1298,
            "max": 1419
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 6514,
            "mean": 6536,
            "median": 6514,
            "max": 6580
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3368759,
          "size": 17991
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2509,
            "min": 19278,
            "mean": 21498,
            "median": 22078,
            "max": 22078
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2314,
            "min": 19374,
            "mean": 21872,
            "median": 22174,
            "max": 22174
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 5176,
            "mean": 5176,
            "median": 5176,
            "max": 5176
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4736,
            "mean": 4736,
            "median": 4736,
            "max": 4736
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1725428,
          "size": 9209
        },
        "functions": {
          "clock()": {
            "calls": 4825,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 892868,
          "size": 5067
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 34847,
            "mean": 52807,
            "median": 50356,
            "max": 68817
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 69681,
            "mean": 118537,
            "median": 86661,
            "max": 295328
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4061,
            "min": 1802,
            "mean": 1802,
            "median": 1802,
            "max": 1802
          },
          "nonces(address)": {
            "calls": 1158,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 10370,
            "mean": 12955,
            "median": 13754,
            "max": 13754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1344400,
          "size": 6546
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 524,
            "mean": 524,
            "median": 524,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 970520,
          "size": 5180
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1104631,
          "size": 7105
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2605,
            "mean": 2605,
            "median": 2605,
            "max": 2605
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 61467,
            "mean": 76151,
            "median": 77252,
            "max": 79655
          },
          "ownerOf(uint256)": {
            "calls": 2816,
            "min": 2692,
            "mean": 10603,
            "median": 11888,
            "max": 25833
          },
          "totalMinted()": {
            "calls": 1536,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 64031,
            "mean": 68720,
            "median": 68843,
            "max": 85974
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1597876,
          "size": 7812
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 955,
            "mean": 965,
            "median": 964,
            "max": 976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1853957,
          "size": 9091
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 27130,
            "mean": 27397,
            "median": 27514,
            "max": 27526
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 1637918,
          "size": 8012
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1644,
            "mean": 1685,
            "median": 1688,
            "max": 1688
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1239,
            "mean": 1252,
            "median": 1251,
            "max": 1275
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1650,
            "mean": 1691,
            "median": 1694,
            "max": 1694
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1318,
            "mean": 1331,
            "median": 1330,
            "max": 1354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1678567,
          "size": 8215
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 26329,
            "mean": 26432,
            "median": 26389,
            "max": 26581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1669553,
          "size": 8170
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26283,
            "mean": 26392,
            "median": 26331,
            "max": 26595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1643525,
          "size": 8040
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26215,
            "mean": 26334,
            "median": 26263,
            "max": 26575
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1537006,
          "size": 7508
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 28262,
            "mean": 28409,
            "median": 28346,
            "max": 28658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 319731,
          "size": 1287
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3328,
            "min": 477,
            "mean": 1339,
            "median": 477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 527833,
          "size": 2420
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2832,
            "mean": 2832,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 26394,
            "mean": 36339,
            "median": 26394,
            "max": 46678
          },
          "balanceOf(address)": {
            "calls": 39404,
            "min": 559,
            "mean": 2474,
            "median": 2559,
            "max": 2559
          },
          "burn(address,uint256)": {
            "calls": 1295,
            "min": 34258,
            "mean": 34399,
            "median": 34402,
            "max": 34630
          },
          "decimals()": {
            "calls": 283,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "mint(address,uint256)": {
            "calls": 58609,
            "min": 28327,
            "mean": 51441,
            "median": 51099,
            "max": 68727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1093288,
          "size": 5459
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 26229,
            "mean": 33069,
            "median": 26457,
            "max": 46741
          },
          "asset()": {
            "calls": 256,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2572,
            "mean": 2572,
            "median": 2572,
            "max": 2572
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 30009,
            "mean": 30247,
            "median": 30057,
            "max": 30687
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 30031,
            "mean": 30258,
            "median": 30079,
            "max": 30709
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 45467,
            "mean": 75015,
            "median": 67722,
            "max": 102204
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 11064,
            "mean": 11176,
            "median": 11064,
            "max": 11358
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 45657,
            "mean": 57237,
            "median": 56893,
            "max": 77632
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 30052,
            "mean": 30193,
            "median": 30076,
            "max": 30694
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 30072,
            "mean": 30212,
            "median": 30096,
            "max": 30714
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 30030,
            "mean": 30197,
            "median": 30054,
            "max": 30696
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 30096,
            "mean": 30243,
            "median": 30120,
            "max": 30762
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24419,
            "mean": 52684,
            "median": 55613,
            "max": 78285
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 32945,
            "mean": 55605,
            "median": 57976,
            "max": 81026
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4210346,
          "size": 21186
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 588,
            "mean": 963,
            "median": 1113,
            "max": 1113
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 1234,
            "mean": 1255,
            "median": 1255,
            "max": 1277
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 1301,
            "mean": 1496,
            "median": 1496,
            "max": 1692
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 6871,
            "mean": 6893,
            "median": 6871,
            "max": 6937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3818183,
          "size": 19684
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2691,
            "min": 19343,
            "mean": 21586,
            "median": 22143,
            "max": 22143
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2387,
            "min": 19096,
            "mean": 21562,
            "median": 21896,
            "max": 21896
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4761,
            "mean": 4761,
            "median": 4761,
            "max": 4761
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4827,
            "mean": 4827,
            "median": 4827,
            "max": 4827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1796988,
          "size": 8772
        },
        "functions": {
          "clock()": {
            "calls": 5080,
            "min": 367,
            "mean": 367,
            "median": 367,
            "max": 367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 958069,
          "size": 5266
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 35349,
            "mean": 53611,
            "median": 50579,
            "max": 69667
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 63092,
            "mean": 126220,
            "median": 88806,
            "max": 303217
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4195,
            "min": 1914,
            "mean": 1914,
            "median": 1914,
            "max": 1914
          },
          "nonces(address)": {
            "calls": 1181,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 10760,
            "mean": 13593,
            "median": 14305,
            "max": 14305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1396871,
          "size": 6813
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1089992,
          "size": 5538
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1274993,
          "size": 7877
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 62379,
            "mean": 78408,
            "median": 79357,
            "max": 82166
          },
          "ownerOf(uint256)": {
            "calls": 2814,
            "min": 2695,
            "mean": 11120,
            "median": 12380,
            "max": 27768
          },
          "totalMinted()": {
            "calls": 1534,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 65060,
            "mean": 69773,
            "median": 69872,
            "max": 87042
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1487967,
          "size": 7268
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 1017,
            "mean": 1026,
            "median": 1026,
            "max": 1038
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1821730,
          "size": 8935
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 27323,
            "mean": 27564,
            "median": 27695,
            "max": 27707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 1938859,
          "size": 9520
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 2049,
            "mean": 2076,
            "median": 2077,
            "max": 2077
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1863,
            "mean": 1870,
            "median": 1863,
            "max": 1893
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 2030,
            "mean": 2057,
            "median": 2058,
            "max": 2058
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1817,
            "mean": 1824,
            "median": 1817,
            "max": 1847
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1665155,
          "size": 8153
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 26397,
            "mean": 26473,
            "median": 26433,
            "max": 26637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1658348,
          "size": 8119
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26339,
            "mean": 26455,
            "median": 26387,
            "max": 26663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1644134,
          "size": 8048
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26384,
            "mean": 26507,
            "median": 26450,
            "max": 26732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1504781,
          "size": 7352
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 28251,
            "mean": 28378,
            "median": 28323,
            "max": 28635
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 322322,
          "size": 1342
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3190,
            "min": 344,
            "mean": 1235,
            "median": 344,
            "max": 2344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 556909,
          "size": 2558
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 25955,
            "mean": 35890,
            "median": 25955,
            "max": 46239
          },
          "balanceOf(address)": {
            "calls": 39442,
            "min": 417,
            "mean": 2332,
            "median": 2417,
            "max": 2417
          },
          "burn(address,uint256)": {
            "calls": 1368,
            "min": 33747,
            "mean": 33893,
            "median": 33891,
            "max": 34119
          },
          "decimals()": {
            "calls": 283,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "mint(address,uint256)": {
            "calls": 58536,
            "min": 27885,
            "mean": 51018,
            "median": 50681,
            "max": 68285
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1521929,
          "size": 8131
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25744,
            "mean": 32577,
            "median": 25972,
            "max": 46256
          },
          "asset()": {
            "calls": 256,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29115,
            "mean": 29329,
            "median": 29139,
            "max": 29801
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29117,
            "mean": 29345,
            "median": 29165,
            "max": 29803
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 43137,
            "mean": 72516,
            "median": 65247,
            "max": 99721
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10105,
            "mean": 10208,
            "median": 10105,
            "max": 10407
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 43346,
            "mean": 54911,
            "median": 54594,
            "max": 75308
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29130,
            "mean": 29282,
            "median": 29154,
            "max": 29780
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29124,
            "mean": 29282,
            "median": 29148,
            "max": 29738
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29112,
            "mean": 29296,
            "median": 29136,
            "max": 29750
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29122,
            "mean": 29305,
            "median": 29146,
            "max": 29796
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24000,
            "mean": 50566,
            "median": 53214,
            "max": 76286
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5463,
            "mean": 5463,
            "median": 5463,
            "max": 5463
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 31699,
            "mean": 52523,
            "median": 54745,
            "max": 77745
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 6308296,
          "size": 32184
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 446,
            "mean": 550,
            "median": 593,
            "max": 593
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 681,
            "mean": 690,
            "median": 690,
            "max": 699
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 687,
            "mean": 794,
            "median": 794,
            "max": 902
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 5791,
            "mean": 5813,
            "median": 5791,
            "max": 5857
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 4637909,
          "size": 24500
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2537,
            "min": 17705,
            "mean": 19924,
            "median": 20505,
            "max": 20505
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2365,
            "min": 17706,
            "mean": 20187,
            "median": 20506,
            "max": 20506
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4525,
            "mean": 4525,
            "median": 4525,
            "max": 4525
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4564,
            "mean": 4564,
            "median": 4564,
            "max": 4564
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1888412,
          "size": 9877
        },
        "functions": {
          "clock()": {
            "calls": 4904,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 1239155,
          "size": 6965
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 33411,
            "mean": 51200,
            "median": 48190,
            "max": 67046
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 67842,
            "mean": 114272,
            "median": 81451,
            "max": 275287
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4087,
            "min": 1509,
            "mean": 1509,
            "median": 1509,
            "max": 1509
          },
          "nonces(address)": {
            "calls": 1164,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 9037,
            "mean": 11573,
            "median": 12348,
            "max": 12348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1864174,
          "size": 9149
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1411685,
          "size": 7703
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1348515,
          "size": 8264
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 60488,
            "mean": 74943,
            "median": 75928,
            "max": 78312
          },
          "ownerOf(uint256)": {
            "calls": 2813,
            "min": 2470,
            "mean": 10080,
            "median": 11442,
            "max": 25051
          },
          "totalMinted()": {
            "calls": 1533,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 67668,
            "mean": 67960,
            "median": 68124,
            "max": 68161
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2269631,
          "size": 11174
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 786,
            "mean": 796,
            "median": 795,
            "max": 807
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3140470,
          "size": 15523
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 26738,
            "mean": 26989,
            "median": 27122,
            "max": 27134
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 2239994,
          "size": 11026
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1100,
            "mean": 1130,
            "median": 1132,
            "max": 1132
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1214,
            "mean": 1227,
            "median": 1226,
            "max": 1250
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1065,
            "mean": 1095,
            "median": 1097,
            "max": 1097
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1204,
            "mean": 1217,
            "median": 1216,
            "max": 1240
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 2395371,
          "size": 11802
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 25915,
            "mean": 26010,
            "median": 25975,
            "max": 26167
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 2360934,
          "size": 11630
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 25942,
            "mean": 26056,
            "median": 26002,
            "max": 26254
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 2349719,
          "size": 11574
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 25942,
            "mean": 26053,
            "median": 25990,
            "max": 26278
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 2303667,
          "size": 11344
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 25846,
            "mean": 25987,
            "median": 25906,
            "max": 26242
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 319700,
          "size": 1286
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 3257,
            "min": 350,
            "mean": 1227,
            "median": 350,
            "max": 2350
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 649340,
          "size": 2982
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "approve(address,uint256)": {
            "calls": 59392,
            "min": 26061,
            "mean": 35994,
            "median": 26061,
            "max": 46345
          },
          "balanceOf(address)": {
            "calls": 39421,
            "min": 438,
            "mean": 2353,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256)": {
            "calls": 1369,
            "min": 33776,
            "mean": 33918,
            "median": 33908,
            "max": 34148
          },
          "decimals()": {
            "calls": 283,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "mint(address,uint256)": {
            "calls": 58535,
            "min": 27947,
            "mean": 51077,
            "median": 50863,
            "max": 68347
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1812186,
          "size": 9393
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 1024,
            "min": 2620,
            "mean": 2620,
            "median": 2620,
            "max": 2620
          },
          "approve(address,uint256)": {
            "calls": 3072,
            "min": 25860,
            "mean": 32692,
            "median": 26088,
            "max": 46372
          },
          "asset()": {
            "calls": 256,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "balanceOf(address)": {
            "calls": 2048,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          },
          "convertToAssets(uint256)": {
            "calls": 512,
            "min": 29140,
            "mean": 29359,
            "median": 29164,
            "max": 29816
          },
          "convertToShares(uint256)": {
            "calls": 512,
            "min": 29132,
            "mean": 29360,
            "median": 29180,
            "max": 29808
          },
          "deposit(uint256,address)": {
            "calls": 28160,
            "min": 43377,
            "mean": 72793,
            "median": 65530,
            "max": 99994
          },
          "maxDeposit(address)": {
            "calls": 256,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "maxMint(address)": {
            "calls": 256,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "maxRedeem(address)": {
            "calls": 256,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "maxWithdraw(address)": {
            "calls": 256,
            "min": 10138,
            "mean": 10261,
            "median": 10138,
            "max": 10430
          },
          "mint(uint256,address)": {
            "calls": 1536,
            "min": 43399,
            "mean": 55219,
            "median": 54863,
            "max": 75092
          },
          "previewDeposit(uint256)": {
            "calls": 256,
            "min": 29132,
            "mean": 29301,
            "median": 29156,
            "max": 29772
          },
          "previewMint(uint256)": {
            "calls": 256,
            "min": 29176,
            "mean": 29339,
            "median": 29200,
            "max": 29828
          },
          "previewRedeem(uint256)": {
            "calls": 256,
            "min": 29135,
            "mean": 29309,
            "median": 29159,
            "max": 29787
          },
          "previewWithdraw(uint256)": {
            "calls": 256,
            "min": 29166,
            "mean": 29308,
            "median": 29190,
            "max": 29806
          },
          "redeem(uint256,address,address)": {
            "calls": 1792,
            "min": 24126,
            "mean": 50802,
            "median": 53498,
            "max": 76589
          },
          "totalAssets()": {
            "calls": 256,
            "min": 5455,
            "mean": 5455,
            "median": 5455,
            "max": 5455
          },
          "withdraw(uint256,address,address)": {
            "calls": 1792,
            "min": 31794,
            "mean": 52783,
            "median": 54984,
            "max": 77979
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 5113604,
          "size": 25965
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 9,
            "min": 466,
            "mean": 526,
            "median": 540,
            "max": 584
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 2,
            "min": 630,
            "mean": 630,
            "median": 630,
            "max": 631
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 2,
            "min": 665,
            "mean": 762,
            "median": 762,
            "max": 860
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 3,
            "min": 5797,
            "mean": 5819,
            "median": 5797,
            "max": 5863
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 4818093,
          "size": 24661
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 2589,
            "min": 17770,
            "mean": 19993,
            "median": 20570,
            "max": 20570
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 2531,
            "min": 17770,
            "mean": 20286,
            "median": 20570,
            "max": 20570
          },
          "quorumNumerator()": {
            "calls": 1,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          },
          "superQuorumNumerator()": {
            "calls": 1,
            "min": 4589,
            "mean": 4589,
            "median": 4589,
            "max": 4589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1779516,
          "size": 8865
        },
        "functions": {
          "clock()": {
            "calls": 5122,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 1003764,
          "size": 5319
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 512,
            "min": 33342,
            "mean": 51324,
            "median": 48216,
            "max": 66995
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 768,
            "min": 60042,
            "mean": 115082,
            "median": 81096,
            "max": 274353
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 4141,
            "min": 1128,
            "mean": 1128,
            "median": 1128,
            "max": 1128
          },
          "nonces(address)": {
            "calls": 1176,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 256,
            "min": 8894,
            "mean": 11490,
            "median": 12284,
            "max": 12284
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 2033537,
          "size": 9996
        },
        "functions": {
          "getNumber()": {
            "calls": 2052,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1392592,
          "size": 7468
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1219330,
          "size": 7463
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2304,
            "min": 2521,
            "mean": 2521,
            "median": 2521,
            "max": 2521
          },
          "burn(uint256)": {
            "calls": 256,
            "min": 60878,
            "mean": 75216,
            "median": 76309,
            "max": 78584
          },
          "ownerOf(uint256)": {
            "calls": 2815,
            "min": 2555,
            "mean": 10227,
            "median": 11565,
            "max": 25071
          },
          "totalMinted()": {
            "calls": 1535,
            "min": 2296,
            "mean": 2296,
            "median": 2296,
            "max": 2296
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 63455,
            "mean": 68147,
            "median": 68267,
            "max": 85373
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2663463,
          "size": 13142
        },
        "functions": {
          "toShortString(string)": {
            "calls": 256,
            "min": 700,
            "mean": 710,
            "median": 709,
            "max": 721
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2824254,
          "size": 13945
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 256,
            "min": 26792,
            "mean": 27031,
            "median": 27164,
            "max": 27188
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 2749570,
          "size": 13572
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1198,
            "mean": 1198,
            "median": 1198,
            "max": 1211
          },
          "parseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1051,
            "mean": 1058,
            "median": 1057,
            "max": 1081
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 256,
            "min": 1211,
            "mean": 1211,
            "median": 1211,
            "max": 1224
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 256,
            "min": 1166,
            "mean": 1173,
            "median": 1172,
            "max": 1196
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 2167290,
          "size": 10664
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 256,
            "min": 25990,
            "mean": 26104,
            "median": 26074,
            "max": 26254
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 2135053,
          "size": 10503
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 256,
            "min": 26027,
            "mean": 26134,
            "median": 26075,
            "max": 26339
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 2121239,
          "size": 10434
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 256,
            "min": 26019,
            "mean": 26139,
            "median": 26079,
            "max": 26367
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 2018523,
          "size": 9921
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 256,
            "min": 25936,
            "mean": 26071,
            "median": 25984,
            "max": 26320
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "playpen": {
    "solc": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 618942,
          "size": 2941
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104805,
            "mean": 104848,
            "median": 104829,
            "max": 104901
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104914,
            "mean": 104955,
            "median": 104938,
            "max": 105010
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 114132,
            "mean": 114599,
            "median": 114864,
            "max": 114948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 564282,
          "size": 2701
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104587,
            "mean": 104630,
            "median": 104611,
            "max": 104683
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104569,
            "mean": 104613,
            "median": 104605,
            "max": 104665
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113821,
            "mean": 114290,
            "median": 114565,
            "max": 114649
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 421337,
          "size": 2047
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103953,
            "mean": 103996,
            "median": 103977,
            "max": 104049
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 103947,
            "mean": 103987,
            "median": 103971,
            "max": 104043
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113170,
            "mean": 113655,
            "median": 113902,
            "max": 113986
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 454186,
          "size": 2150
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104011,
            "mean": 104054,
            "median": 104047,
            "max": 104107
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 512,
            "min": 104011,
            "mean": 104055,
            "median": 104047,
            "max": 104107
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 512,
            "min": 113245,
            "mean": 113734,
            "median": 113977,
            "max": 114061
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "prb-math": {
    "solc": [],
    "solx": []
  },
  "rollcall": {
    "solc": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 278911,
          "size": 1087
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 26981,
            "mean": 26981,
            "median": 26981,
            "max": 26981
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1083612,
          "size": 5277
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 47021,
            "mean": 47021,
            "median": 47021,
            "max": 47021
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2618696,
          "size": 14432
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 3345,
            "mean": 3345,
            "median": 3345,
            "max": 3345
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 980,
            "mean": 980,
            "median": 980,
            "max": 980
          },
          "slots()": {
            "calls": 1,
            "min": 5885,
            "mean": 5885,
            "median": 5885,
            "max": 5885
          },
          "sources()": {
            "calls": 1,
            "min": 6131,
            "mean": 6131,
            "median": 6131,
            "max": 6131
          },
          "version()": {
            "calls": 1,
            "min": 1178,
            "mean": 1178,
            "median": 1178,
            "max": 1178
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 548,
            "mean": 548,
            "median": 548,
            "max": 548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 1034265,
          "size": 4867
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 3505,
            "mean": 3505,
            "median": 3505,
            "max": 3505
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 222295,
            "mean": 259130,
            "median": 262479,
            "max": 262479
          },
          "queueId()": {
            "calls": 1,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2940,
            "mean": 2940,
            "median": 2940,
            "max": 2940
          },
          "slots()": {
            "calls": 12,
            "min": 1891,
            "mean": 1891,
            "median": 1891,
            "max": 1891
          },
          "sources()": {
            "calls": 12,
            "min": 1827,
            "mean": 1827,
            "median": 1827,
            "max": 1827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4581002,
          "size": 21994
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 1430854,
            "mean": 1430854,
            "median": 1430854,
            "max": 1430854
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 81855,
            "mean": 592987,
            "median": 631944,
            "max": 1023600
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 1032884,
            "mean": 1032884,
            "median": 1032884,
            "max": 1032884
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 1024531,
            "mean": 1024531,
            "median": 1024531,
            "max": 1024531
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 10008,
            "mean": 10008,
            "median": 10008,
            "max": 10008
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 26185,
            "mean": 117111,
            "median": 152624,
            "max": 172524
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 3816,
            "mean": 7694,
            "median": 8108,
            "max": 11248
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 28489,
            "mean": 28489,
            "median": 28489,
            "max": 28489
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 227684,
          "size": 835
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 25644,
            "mean": 25644,
            "median": 25644,
            "max": 25644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1121516,
          "size": 5362
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 46330,
            "mean": 46330,
            "median": 46330,
            "max": 46330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2548816,
          "size": 13947
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 3396,
            "mean": 3396,
            "median": 3396,
            "max": 3396
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "slots()": {
            "calls": 1,
            "min": 5376,
            "mean": 5376,
            "median": 5376,
            "max": 5376
          },
          "sources()": {
            "calls": 1,
            "min": 5509,
            "mean": 5509,
            "median": 5509,
            "max": 5509
          },
          "version()": {
            "calls": 1,
            "min": 704,
            "mean": 704,
            "median": 704,
            "max": 704
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 378,
            "mean": 378,
            "median": 378,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 735155,
          "size": 3335
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 205598,
            "mean": 242433,
            "median": 245782,
            "max": 245782
          },
          "queueId()": {
            "calls": 1,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2723,
            "mean": 2723,
            "median": 2723,
            "max": 2723
          },
          "slots()": {
            "calls": 12,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "sources()": {
            "calls": 12,
            "min": 1122,
            "mean": 1122,
            "median": 1122,
            "max": 1122
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4216128,
          "size": 20098
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 746851,
            "mean": 746851,
            "median": 746851,
            "max": 746851
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 76038,
            "mean": 316262,
            "median": 312415,
            "max": 527281
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 535266,
            "mean": 535266,
            "median": 535266,
            "max": 535266
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 528463,
            "mean": 528463,
            "median": 528463,
            "max": 528463
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 2071,
            "mean": 2071,
            "median": 2071,
            "max": 2071
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 8612,
            "mean": 8612,
            "median": 8612,
            "max": 8612
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 25563,
            "mean": 108374,
            "median": 139830,
            "max": 159730
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 3307,
            "mean": 5973,
            "median": 6714,
            "max": 8168
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 25561,
            "mean": 25561,
            "median": 25561,
            "max": 25561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 140621,
          "size": 437
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 24386,
            "mean": 24386,
            "median": 24386,
            "max": 24386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 645074,
          "size": 2910
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 45906,
            "mean": 45906,
            "median": 45906,
            "max": 45906
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 1738430,
          "size": 9169
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 2716,
            "mean": 2716,
            "median": 2716,
            "max": 2716
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "slots()": {
            "calls": 1,
            "min": 4816,
            "mean": 4816,
            "median": 4816,
            "max": 4816
          },
          "sources()": {
            "calls": 1,
            "min": 4876,
            "mean": 4876,
            "median": 4876,
            "max": 4876
          },
          "version()": {
            "calls": 1,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 320216,
          "size": 1333
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 817,
            "mean": 817,
            "median": 817,
            "max": 817
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 190122,
            "mean": 226957,
            "median": 230306,
            "max": 230306
          },
          "queueId()": {
            "calls": 1,
            "min": 2309,
            "mean": 2309,
            "median": 2309,
            "max": 2309
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "slots()": {
            "calls": 12,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "sources()": {
            "calls": 12,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 3007771,
          "size": 14160
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 364319,
            "mean": 364319,
            "median": 364319,
            "max": 364319
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 73056,
            "mean": 152560,
            "median": 140544,
            "max": 228477
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 234321,
            "mean": 234321,
            "median": 234321,
            "max": 234321
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 229453,
            "mean": 229453,
            "median": 229453,
            "max": 229453
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 693,
            "mean": 693,
            "median": 693,
            "max": 693
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 7227,
            "mean": 7227,
            "median": 7227,
            "max": 7227
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 24413,
            "mean": 100683,
            "median": 128868,
            "max": 148768
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 2586,
            "mean": 4527,
            "median": 5416,
            "max": 6003
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 23400,
            "mean": 23400,
            "median": 23400,
            "max": 23400
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 150799,
          "size": 485
        },
        "functions": {
          "warp(uint256)": {
            "calls": 20,
            "min": 24568,
            "mean": 24568,
            "median": 24568,
            "max": 24568
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 683054,
          "size": 3050
        },
        "functions": {
          "setVoter(address)": {
            "calls": 12,
            "min": 45922,
            "mean": 45922,
            "median": 45922,
            "max": 45922
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 1793364,
          "size": 9328
        },
        "functions": {
          "name()": {
            "calls": 1,
            "min": 2664,
            "mean": 2664,
            "median": 2664,
            "max": 2664
          },
          "quorum(uint256)": {
            "calls": 1,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "slots()": {
            "calls": 1,
            "min": 4757,
            "mean": 4757,
            "median": 4757,
            "max": 4757
          },
          "sources()": {
            "calls": 1,
            "min": 4762,
            "mean": 4762,
            "median": 4762,
            "max": 4762
          },
          "version()": {
            "calls": 1,
            "min": 427,
            "mean": 427,
            "median": 427,
            "max": 427
          },
          "votingPeriod()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 297518,
          "size": 1185
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 12,
            "min": 921,
            "mean": 921,
            "median": 921,
            "max": 921
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 12,
            "min": 190115,
            "mean": 226950,
            "median": 230299,
            "max": 230299
          },
          "queueId()": {
            "calls": 1,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "queueVotes(uint256)": {
            "calls": 10,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "slots()": {
            "calls": 12,
            "min": 240,
            "mean": 240,
            "median": 240,
            "max": 240
          },
          "sources()": {
            "calls": 12,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 2725437,
          "size": 12835
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 9,
            "min": 366958,
            "mean": 366958,
            "median": 366958,
            "max": 366958
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 7,
            "min": 73124,
            "mean": 153958,
            "median": 142020,
            "max": 231123
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 1,
            "min": 237096,
            "mean": 237096,
            "median": 237096,
            "max": 237096
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 1,
            "min": 232130,
            "mean": 232130,
            "median": 232130,
            "max": 232130
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 1,
            "min": 717,
            "mean": 717,
            "median": 717,
            "max": 717
          },
          "proposal(address,bytes32)": {
            "calls": 1,
            "min": 7167,
            "mean": 7167,
            "median": 7167,
            "max": 7167
          },
          "queue(address,bytes32,uint32)": {
            "calls": 3,
            "min": 24499,
            "mean": 100775,
            "median": 128963,
            "max": 148863
          },
          "state(address,bytes32)": {
            "calls": 5,
            "min": 2661,
            "mean": 4676,
            "median": 5530,
            "max": 6263
          },
          "votes(address,bytes32)": {
            "calls": 1,
            "min": 23150,
            "mean": 23150,
            "median": 23150,
            "max": 23150
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "solady": {
    "solc": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 262102,
          "size": 1139
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24343,
            "mean": 74248,
            "median": 36338,
            "max": 118296
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 393,
            "mean": 393,
            "median": 393,
            "max": 393
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 100173,
          "size": 363
        },
        "functions": {
          "fallback()": {
            "calls": 6270,
            "min": 3029,
            "mean": 16085,
            "median": 10271,
            "max": 299548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 927963,
          "size": 4117
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 517,
            "mean": 517,
            "median": 517,
            "max": 517
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "cancel(bytes32)": {
            "calls": 19,
            "min": 25598,
            "mean": 25745,
            "median": 25622,
            "max": 26416
          },
          "execute(bytes32,bytes)": {
            "calls": 266,
            "min": 28670,
            "mean": 43835,
            "median": 45203,
            "max": 95946
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2494,
            "mean": 2494,
            "median": 2494,
            "max": 2494
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23369,
            "mean": 308894,
            "median": 379965,
            "max": 379965
          },
          "minDelay()": {
            "calls": 237,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "operationState(bytes32)": {
            "calls": 952,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 28552,
            "mean": 54708,
            "median": 55574,
            "max": 57994
          },
          "readyTimestamp(bytes32)": {
            "calls": 715,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23980,
            "mean": 33725,
            "median": 23992,
            "max": 76202
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 553930,
          "size": 2347
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "decimals()": {
            "calls": 1,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "deposit()": {
            "calls": 540,
            "min": 27728,
            "mean": 65524,
            "median": 67528,
            "max": 67528
          },
          "name()": {
            "calls": 1,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "receive()": {
            "calls": 299,
            "min": 27378,
            "mean": 63022,
            "median": 67178,
            "max": 67178
          },
          "symbol()": {
            "calls": 1,
            "min": 583,
            "mean": 583,
            "median": 583,
            "max": 583
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "withdraw(uint256)": {
            "calls": 281,
            "min": 27900,
            "mean": 39403,
            "median": 40224,
            "max": 40344
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 480651,
          "size": 2003
        },
        "functions": {
          "adminOf(address)": {
            "calls": 487,
            "min": 2377,
            "mean": 2377,
            "median": 2377,
            "max": 2377
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24204,
            "mean": 26403,
            "median": 26403,
            "max": 28603
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22363,
            "mean": 54656,
            "median": 22387,
            "max": 126198
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105650,
            "mean": 158977,
            "median": 159416,
            "max": 159500
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23741,
            "mean": 145344,
            "median": 159824,
            "max": 160016
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 586,
            "mean": 586,
            "median": 586,
            "max": 586
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24352,
            "mean": 28052,
            "median": 24364,
            "max": 33596
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35605,
            "mean": 51268,
            "median": 51268,
            "max": 66932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 244324,
          "size": 989
        },
        "functions": {
          "implementation()": {
            "calls": 4948,
            "min": 9,
            "mean": 2261,
            "median": 2276,
            "max": 2276
          },
          "owner()": {
            "calls": 481,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "renounceOwnership()": {
            "calls": 40,
            "min": 23094,
            "mean": 23344,
            "median": 23380,
            "max": 23380
          },
          "transferOwnership(address)": {
            "calls": 153,
            "min": 23602,
            "mean": 26997,
            "median": 28363,
            "max": 28363
          },
          "upgradeTo(address)": {
            "calls": 96,
            "min": 23630,
            "mean": 26347,
            "median": 23742,
            "max": 32494
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3512434,
          "size": 17469
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 22944,
            "mean": 79606,
            "median": 43889,
            "max": 213921
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21957,
            "mean": 22806,
            "median": 21969,
            "max": 25763
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 8020,
            "mean": 8133,
            "median": 8051,
            "max": 8410
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Brutalizer.t.sol:BrutalizerTest",
        "deployment": {
          "gas": 444581,
          "size": 2167
        },
        "functions": {
          "revertWithError()": {
            "calls": 1,
            "min": 7814,
            "mean": 7814,
            "median": 7814,
            "max": 7814
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 46788,
            "mean": 46788,
            "median": 46788,
            "max": 46788
          },
          "value()": {
            "calls": 1,
            "min": 7652,
            "mean": 7652,
            "median": 7652,
            "max": 7652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2569279,
          "size": 12759
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 89091,
            "mean": 38936300,
            "median": 889506,
            "max": 96808702
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4610293,
          "size": 22951
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 785,
            "mean": 785,
            "median": 785,
            "max": 785
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 609,
            "mean": 609,
            "median": 609,
            "max": 609
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 987,
            "mean": 987,
            "median": 987,
            "max": 987
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1284,
            "mean": 1284,
            "median": 1284,
            "max": 1284
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 1025,
            "mean": 1025,
            "median": 1025,
            "max": 1025
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1191,
            "mean": 1191,
            "median": 1191,
            "max": 1191
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 1344,
            "mean": 1344,
            "median": 1344,
            "max": 1344
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 891,
            "mean": 891,
            "median": 891,
            "max": 891
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 712,
            "mean": 712,
            "median": 712,
            "max": 712
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 1650,
            "mean": 1650,
            "median": 1650,
            "max": 1650
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 1317,
            "mean": 1317,
            "median": 1317,
            "max": 1317
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 1119,
            "mean": 1119,
            "median": 1119,
            "max": 1119
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1452,
            "mean": 1452,
            "median": 1452,
            "max": 1452
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 1509,
            "mean": 1509,
            "median": 1509,
            "max": 1509
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 868,
            "mean": 868,
            "median": 868,
            "max": 868
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 314016,
          "size": 1103
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 134,
            "min": 67346,
            "mean": 67571,
            "median": 67718,
            "max": 67718
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 153552,
          "size": 492
        },
        "functions": {
          "generate(bytes)": {
            "calls": 159,
            "min": 0,
            "mean": 2642,
            "median": 1402,
            "max": 65007
          },
          "next(uint256)": {
            "calls": 245,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 3764163,
          "size": 18726
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1837,
            "mean": 1837,
            "median": 1837,
            "max": 1837
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 518,
            "mean": 518,
            "median": 518,
            "max": 518
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3869496,
          "size": 19252
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 30,
            "min": 1916,
            "mean": 1997,
            "median": 2002,
            "max": 2047
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 31,
            "min": 617984,
            "mean": 631873,
            "median": 618963,
            "max": 1021983
          },
          "recover(bytes32,bytes)": {
            "calls": 149,
            "min": 22567,
            "mean": 27015,
            "median": 26776,
            "max": 30507
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 32,
            "min": 4401,
            "mean": 25413,
            "median": 26715,
            "max": 27001
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 280,
            "min": 26782,
            "mean": 27025,
            "median": 27154,
            "max": 27210
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 136,
            "min": 643540,
            "mean": 714248,
            "median": 644953,
            "max": 4320264
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 30,
            "min": 643212,
            "mean": 706355,
            "median": 644085,
            "max": 2512000
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 280,
            "min": 643458,
            "mean": 755176,
            "median": 644710,
            "max": 4566204
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 149,
            "min": 24032,
            "mean": 31222,
            "median": 31451,
            "max": 31463
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 32,
            "min": 3909,
            "mean": 24925,
            "median": 26257,
            "max": 26509
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 280,
            "min": 26202,
            "mean": 26440,
            "median": 26574,
            "max": 26586
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 136,
            "min": 647136,
            "mean": 720250,
            "median": 648364,
            "max": 4790682
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 30,
            "min": 644034,
            "mean": 825994,
            "median": 645025,
            "max": 3733748
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 280,
            "min": 644104,
            "mean": 752460,
            "median": 645276,
            "max": 4865580
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 699053,
          "size": 3016
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2544,
            "mean": 6108,
            "median": 7070,
            "max": 9333
          },
          "batchData()": {
            "calls": 520,
            "min": 2831,
            "mean": 360350,
            "median": 2840,
            "max": 8856788
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "batchIds()": {
            "calls": 520,
            "min": 2775,
            "mean": 6339,
            "median": 7301,
            "max": 9564
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "from()": {
            "calls": 512,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "id()": {
            "calls": 512,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "mintData()": {
            "calls": 512,
            "min": 2787,
            "mean": 318588,
            "median": 2796,
            "max": 8414060
          },
          "operator()": {
            "calls": 512,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1529695,
          "size": 6856
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 622,
            "mean": 622,
            "median": 622,
            "max": 622
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62455,
            "mean": 62592,
            "median": 62683,
            "max": 62715
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 59102,
            "mean": 59239,
            "median": 59330,
            "max": 59362
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 50486,
            "mean": 52711,
            "median": 50486,
            "max": 121686
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62929,
            "mean": 63064,
            "median": 63157,
            "max": 63173
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49922,
            "mean": 63642,
            "median": 59647,
            "max": 76503
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:RevertingERC1155Recipient",
        "deployment": {
          "gas": 218302,
          "size": 796
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 4,
            "min": 3064,
            "mean": 3073,
            "median": 3070,
            "max": 3089
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3620,
            "mean": 3620,
            "median": 3620,
            "max": 3620
          },
          "getArgUint256(uint256)": {
            "calls": 8,
            "min": 5491,
            "mean": 5498,
            "median": 5497,
            "max": 5516
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 4,
            "min": 8333,
            "mean": 8891,
            "median": 8607,
            "max": 10019
          },
          "getArgUint64(uint256)": {
            "calls": 4,
            "min": 3416,
            "mean": 3425,
            "median": 3422,
            "max": 3441
          },
          "getArgUint8(uint256)": {
            "calls": 4,
            "min": 3306,
            "mean": 3315,
            "median": 3312,
            "max": 3331
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3652,
            "mean": 3652,
            "median": 3652,
            "max": 3652
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5270,
            "mean": 5279,
            "median": 5276,
            "max": 5295
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 43947,
            "mean": 43956,
            "median": 43953,
            "max": 43972
          },
          "value()": {
            "calls": 4,
            "min": 5179,
            "mean": 5188,
            "median": 5185,
            "max": 5204
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 324815,
          "size": 1318
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 34,
            "min": 31191,
            "mean": 50580,
            "median": 51109,
            "max": 51475
          },
          "burn(address,uint256)": {
            "calls": 1,
            "min": 36256,
            "mean": 36256,
            "median": 36256,
            "max": 36256
          },
          "mint(address,uint256)": {
            "calls": 34,
            "min": 36092,
            "mean": 71946,
            "median": 61784,
            "max": 96008
          },
          "sum()": {
            "calls": 1,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 34103,
            "mean": 34103,
            "median": 34103,
            "max": 34103
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 5198111,
          "size": 25886
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24828,
            "mean": 50654,
            "median": 50080,
            "max": 74293
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 308966,
          "size": 1210
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 198,
            "mean": 1168,
            "median": 198,
            "max": 3108
          },
          "data()": {
            "calls": 257,
            "min": 2823,
            "mean": 3353,
            "median": 2823,
            "max": 11611
          },
          "datahash()": {
            "calls": 621,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25322,
            "mean": 33237,
            "median": 25322,
            "max": 134049
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 8394174,
          "size": 41841
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22253,
            "mean": 22603,
            "median": 22459,
            "max": 23377
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22477,
            "mean": 22779,
            "median": 22617,
            "max": 23503
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 297294,
          "size": 1156
        },
        "functions": {
          "datahash()": {
            "calls": 412,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 315940,
          "size": 1243
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2707,
            "mean": 4327,
            "median": 2707,
            "max": 11465
          },
          "from()": {
            "calls": 1024,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "id()": {
            "calls": 1024,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "operator()": {
            "calls": 1024,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1310913,
          "size": 5852
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 894,
            "mean": 894,
            "median": 894,
            "max": 894
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 541,
            "mean": 541,
            "median": 541,
            "max": 541
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61992,
            "mean": 63607,
            "median": 62004,
            "max": 113304
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 58445,
            "mean": 59105,
            "median": 58661,
            "max": 75773
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 65141,
            "mean": 69681,
            "median": 69827,
            "max": 69941
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 152067,
          "size": 487
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3016,
            "mean": 3022,
            "median": 3022,
            "max": 3028
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3571,
            "mean": 3571,
            "median": 3571,
            "max": 3571
          },
          "getArgUint256(uint256)": {
            "calls": 5,
            "min": 5443,
            "mean": 5449,
            "median": 5449,
            "max": 5455
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 6065,
            "mean": 6619,
            "median": 6613,
            "max": 7180
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3368,
            "mean": 3374,
            "median": 3374,
            "max": 3380
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3258,
            "mean": 3264,
            "median": 3264,
            "max": 3270
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3507,
            "mean": 3507,
            "median": 3507,
            "max": 3507
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5222,
            "mean": 5228,
            "median": 5228,
            "max": 5234
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43911,
            "mean": 43953,
            "median": 43959,
            "max": 43989
          },
          "value()": {
            "calls": 3,
            "min": 5131,
            "mean": 5137,
            "median": 5137,
            "max": 5143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2138981,
          "size": 10610
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 450,
            "min": 751,
            "mean": 769,
            "median": 763,
            "max": 946
          },
          "returnsHash(bytes)": {
            "calls": 452,
            "min": 694,
            "mean": 713,
            "median": 706,
            "max": 886
          },
          "revertsWithCustomError()": {
            "calls": 8,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1216569,
          "size": 6003
        },
        "functions": {
          "get(address)": {
            "calls": 504,
            "min": 2555,
            "mean": 5842,
            "median": 5842,
            "max": 9129
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26647,
            "mean": 49982,
            "median": 37240,
            "max": 165310
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 4985411,
          "size": 24824
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 189,
            "min": 21729,
            "mean": 44676,
            "median": 44125,
            "max": 142233
          },
          "addToBytes32Set(bytes32)": {
            "calls": 180,
            "min": 22259,
            "mean": 48676,
            "median": 46860,
            "max": 162017
          },
          "addressSetAt(uint256)": {
            "calls": 18,
            "min": 9154,
            "mean": 9178,
            "median": 9154,
            "max": 9226
          },
          "addressSetContains(address)": {
            "calls": 156,
            "min": 734,
            "mean": 7111,
            "median": 7222,
            "max": 7242
          },
          "bytes32SetAt(uint256)": {
            "calls": 11,
            "min": 11349,
            "mean": 11380,
            "median": 11349,
            "max": 11451
          },
          "bytes32SetContains(bytes32)": {
            "calls": 185,
            "min": 313,
            "mean": 8633,
            "median": 8865,
            "max": 8865
          },
          "removeFromAddressSet(address)": {
            "calls": 187,
            "min": 22171,
            "mean": 28649,
            "median": 28862,
            "max": 28862
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 189,
            "min": 22042,
            "mean": 30690,
            "median": 30949,
            "max": 30949
          },
          "uint8SetAt(uint256)": {
            "calls": 15,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 27070,
            "mean": 50590,
            "median": 49274,
            "max": 143297
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28539,
            "mean": 53995,
            "median": 50814,
            "max": 161899
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24590,
            "mean": 28533,
            "median": 27674,
            "max": 44700
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 23655885,
          "size": 117964
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 1971,
            "mean": 1971,
            "median": 1972,
            "max": 1972
          },
          "divWad(uint256,uint256)": {
            "calls": 88,
            "min": 2154,
            "mean": 2154,
            "median": 2154,
            "max": 2154
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 1273,
            "mean": 1307,
            "median": 1323,
            "max": 1323
          },
          "divWadUp(uint256,uint256)": {
            "calls": 85,
            "min": 2990,
            "mean": 2990,
            "median": 2990,
            "max": 2990
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 2157,
            "mean": 2157,
            "median": 2157,
            "max": 2157
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 310,
            "min": 2711,
            "mean": 2751,
            "median": 2711,
            "max": 3029
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 4077,
            "mean": 4094,
            "median": 4077,
            "max": 4179
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 2443,
            "mean": 2445,
            "median": 2443,
            "max": 2738
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 952,
            "mean": 952,
            "median": 952,
            "max": 952
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 1808,
            "mean": 1808,
            "median": 1808,
            "max": 1808
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 3137,
            "mean": 3137,
            "median": 3138,
            "max": 3138
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 2680,
            "mean": 2689,
            "median": 2698,
            "max": 2698
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 290,
            "mean": 316,
            "median": 339,
            "max": 339
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 571,
            "mean": 593,
            "median": 612,
            "max": 612
          },
          "mulWad(uint256,uint256)": {
            "calls": 120,
            "min": 4002,
            "mean": 4002,
            "median": 4002,
            "max": 4002
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 1424,
            "mean": 1427,
            "median": 1430,
            "max": 1430
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 127,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 3984,
            "mean": 3984,
            "median": 3984,
            "max": 3984
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 2072,
            "mean": 2803,
            "median": 2803,
            "max": 3535
          },
          "sDivWad(int256,int256)": {
            "calls": 78,
            "min": 4043,
            "mean": 4043,
            "median": 4043,
            "max": 4043
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 3080,
            "mean": 3145,
            "median": 3171,
            "max": 3171
          },
          "sMulWad(int256,int256)": {
            "calls": 91,
            "min": 3637,
            "mean": 3637,
            "median": 3637,
            "max": 3637
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 2373,
            "mean": 2418,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 12221510,
          "size": 60941
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 19432,
            "mean": 22498,
            "median": 22339,
            "max": 31997
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 19767,
            "mean": 29385,
            "median": 32221,
            "max": 32430
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 20165,
            "mean": 25081,
            "median": 24132,
            "max": 32612
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 1227,
            "mean": 3604,
            "median": 1530,
            "max": 10886
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 19746,
            "mean": 22867,
            "median": 22534,
            "max": 32173
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1774770,
          "size": 8791
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 2729470,
          "size": 13559
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23776,
            "mean": 33870,
            "median": 33870,
            "max": 43965
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26719,
            "mean": 35259,
            "median": 35259,
            "max": 43799
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 3244096,
          "size": 16129
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 530,
            "min": 23788,
            "mean": 24814,
            "median": 24448,
            "max": 27636
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 25194,
            "mean": 27140,
            "median": 26734,
            "max": 30258
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28474,
            "mean": 29011,
            "median": 28858,
            "max": 30227
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24790,
            "mean": 26201,
            "median": 26426,
            "max": 27162
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 284,
            "min": 3138,
            "mean": 731979,
            "median": 636579,
            "max": 4140762
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2382261,
          "size": 11825
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 107792,
            "mean": 1293306,
            "median": 895038,
            "max": 83523290
          },
          "getArgAddress(uint256)": {
            "calls": 8,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 8,
            "min": 783,
            "mean": 802,
            "median": 801,
            "max": 819
          },
          "getArgUint256(uint256)": {
            "calls": 24,
            "min": 2676,
            "mean": 2676,
            "median": 2676,
            "max": 2676
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 8,
            "min": 3536,
            "mean": 42739,
            "median": 42456,
            "max": 68559
          },
          "getArgUint64(uint256)": {
            "calls": 8,
            "min": 601,
            "mean": 601,
            "median": 601,
            "max": 601
          },
          "getArgUint8(uint256)": {
            "calls": 8,
            "min": 491,
            "mean": 491,
            "median": 491,
            "max": 491
          },
          "getCalldataHash()": {
            "calls": 8,
            "min": 752,
            "mean": 2481,
            "median": 2468,
            "max": 3618
          },
          "revertWithError()": {
            "calls": 8,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 22419,
            "mean": 22419,
            "median": 22419,
            "max": 22419
          },
          "value()": {
            "calls": 1038,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 149935,
          "size": 474
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44587,
            "mean": 45245,
            "median": 45027,
            "max": 46660
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 860397,
          "size": 4224
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 380,
            "min": 597,
            "mean": 740,
            "median": 806,
            "max": 830
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 9442039,
          "size": 47071
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 20,
            "min": 2930,
            "mean": 2930,
            "median": 2930,
            "max": 2930
          },
          "argsOnClone(address,uint256)": {
            "calls": 13,
            "min": 4159,
            "mean": 4159,
            "median": 4159,
            "max": 4159
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 7,
            "min": 3346,
            "mean": 3346,
            "median": 3346,
            "max": 3346
          },
          "argsOnERC1967(address)": {
            "calls": 14,
            "min": 4932,
            "mean": 4932,
            "median": 4932,
            "max": 4932
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 10,
            "min": 3917,
            "mean": 3917,
            "median": 3917,
            "max": 3917
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 8,
            "min": 3632,
            "mean": 3632,
            "median": 3632,
            "max": 3632
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 8,
            "min": 4162,
            "mean": 4162,
            "median": 4162,
            "max": 4162
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 2,
            "min": 2993,
            "mean": 2993,
            "median": 2993,
            "max": 2993
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 4,
            "min": 5468,
            "mean": 5468,
            "median": 5468,
            "max": 5468
          },
          "argsOnERC1967I(address)": {
            "calls": 16,
            "min": 4272,
            "mean": 4272,
            "median": 4272,
            "max": 4272
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 12,
            "min": 3282,
            "mean": 3282,
            "median": 3282,
            "max": 3282
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 8,
            "min": 5446,
            "mean": 5446,
            "median": 5446,
            "max": 5446
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 3,
            "min": 4294,
            "mean": 4294,
            "median": 4294,
            "max": 4294
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 4,
            "min": 3873,
            "mean": 3873,
            "median": 3873,
            "max": 3873
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 6,
            "min": 4886,
            "mean": 4886,
            "median": 4886,
            "max": 4886
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 64,
            "min": 38692,
            "mean": 48869,
            "median": 48746,
            "max": 59128
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 890,
            "mean": 896,
            "median": 890,
            "max": 919
          },
          "clone(address)": {
            "calls": 257,
            "min": 86724,
            "mean": 86724,
            "median": 86724,
            "max": 86724
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69737,
            "mean": 2632105,
            "median": 73189,
            "max": 96792569
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 267,
            "min": 70849,
            "mean": 6424847,
            "median": 75710,
            "max": 96795359
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 87896,
            "mean": 136629,
            "median": 88268,
            "max": 1547016
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 264,
            "min": 0,
            "mean": 357652,
            "median": 77259,
            "max": 12924192
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 265,
            "min": 0,
            "mean": 323599,
            "median": 102072,
            "max": 12010597
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 116400,
            "mean": 166778,
            "median": 116772,
            "max": 728093
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 351,
            "min": 0,
            "mean": 293076,
            "median": 106841,
            "max": 11930249
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102218,
            "mean": 133523,
            "median": 102590,
            "max": 713998
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 365341,
            "median": 106717,
            "max": 14043612
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 119448,
            "mean": 160309,
            "median": 119820,
            "max": 731174
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 358,
            "min": 0,
            "mean": 414422,
            "median": 107219,
            "max": 13393398
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102990,
            "mean": 146229,
            "median": 103362,
            "max": 714840
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 263,
            "min": 95955,
            "mean": 5823932,
            "median": 99220,
            "max": 96822519
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 385,
            "min": 96826,
            "mean": 154547,
            "median": 114062,
            "max": 725426
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 450,
            "min": 101719,
            "mean": 19129867,
            "median": 108461,
            "max": 96829703
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99414,
            "mean": 153115,
            "median": 99798,
            "max": 3994644
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 262,
            "min": 102154,
            "mean": 3301104,
            "median": 105401,
            "max": 96815029
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 642,
            "min": 100582,
            "mean": 143464,
            "median": 101063,
            "max": 1026719
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 433,
            "min": 102207,
            "mean": 16369823,
            "median": 106896,
            "max": 96822421
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 100946,
            "mean": 161706,
            "median": 101318,
            "max": 2282819
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 95068,
            "mean": 3785748,
            "median": 98529,
            "max": 96830439
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98715,
            "mean": 151956,
            "median": 98824,
            "max": 4478462
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 113,
            "min": 99200,
            "mean": 4071559,
            "median": 102460,
            "max": 96829512
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 116179,
            "mean": 116179,
            "median": 116179,
            "max": 116179
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 100711,
            "mean": 4920439,
            "median": 104269,
            "max": 96832743
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99590,
            "mean": 149208,
            "median": 99699,
            "max": 4763125
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 132,
            "min": 101021,
            "mean": 2426916,
            "median": 104007,
            "max": 96809165
          },
          "revertWithError()": {
            "calls": 7153,
            "min": 106,
            "mean": 3030,
            "median": 3048,
            "max": 3048
          },
          "setValue(uint256)": {
            "calls": 7503,
            "min": 3108,
            "mean": 22851,
            "median": 23008,
            "max": 23008
          },
          "value()": {
            "calls": 21071,
            "min": 106,
            "mean": 2882,
            "median": 2891,
            "max": 2891
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2409691,
          "size": 11962
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 721,
            "mean": 721,
            "median": 721,
            "max": 721
          },
          "decodeBatch(bytes)": {
            "calls": 63,
            "min": 1276,
            "mean": 3211,
            "median": 2712,
            "max": 5092
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 23,
            "min": 1291,
            "mean": 1507,
            "median": 1619,
            "max": 1667
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 650,
            "min": 765,
            "mean": 2142,
            "median": 1131,
            "max": 6135
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 1239,
            "mean": 1257,
            "median": 1251,
            "max": 1287
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 983,
            "mean": 1002,
            "median": 995,
            "max": 1031
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23549,
            "mean": 23549,
            "median": 23549,
            "max": 23549
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 120,
            "min": 30174,
            "mean": 40400,
            "median": 38714,
            "max": 64534
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 642266,
            "mean": 718531,
            "median": 669754,
            "max": 3418692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 3656823,
          "size": 18190
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 3154,
            "mean": 3154,
            "median": 3154,
            "max": 3154
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 3104,
            "mean": 3104,
            "median": 3104,
            "max": 3104
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 44351,
            "mean": 44351,
            "median": 44351,
            "max": 44351
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 44677,
            "mean": 44677,
            "median": 44677,
            "max": 44677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 3023626,
          "size": 15028
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2390,
            "mean": 3495,
            "median": 2390,
            "max": 4655
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23651,
            "mean": 23674,
            "median": 23687,
            "max": 23687
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21717,
            "mean": 43347,
            "median": 43904,
            "max": 43916
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23548,
            "mean": 23849,
            "median": 23932,
            "max": 23932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 4642537,
          "size": 23112
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24534,
            "mean": 40179,
            "median": 28196,
            "max": 102542
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 25873,
            "mean": 51219,
            "median": 31696,
            "max": 153899
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 15780778,
          "size": 78699
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 1973,
            "mean": 1981,
            "median": 1979,
            "max": 1991
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 1595,
            "mean": 1595,
            "median": 1595,
            "max": 1595
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 710,
            "mean": 710,
            "median": 710,
            "max": 710
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 240815,
          "size": 893
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27398,
            "mean": 51736,
            "median": 50826,
            "max": 82653
          },
          "x()": {
            "calls": 6,
            "min": 2674,
            "mean": 10328,
            "median": 5958,
            "max": 37658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166999,
          "size": 552
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27229,
            "mean": 41915,
            "median": 32645,
            "max": 82291
          },
          "x()": {
            "calls": 6,
            "min": 2542,
            "mean": 9458,
            "median": 4727,
            "max": 37482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2201454,
          "size": 10922
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22497,
            "mean": 27165,
            "median": 28482,
            "max": 30198
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 25624,
            "mean": 36887,
            "median": 35649,
            "max": 91773
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 1817420,
          "size": 9004
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 255,
            "min": 1022,
            "mean": 44209,
            "median": 43893,
            "max": 85997
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 255,
            "min": 1185,
            "mean": 50953,
            "median": 47404,
            "max": 88392
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 255,
            "min": 2578,
            "mean": 45777,
            "median": 46476,
            "max": 85558
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 2,
            "min": 814,
            "mean": 814,
            "median": 814,
            "max": 814
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 510,
            "mean": 510,
            "median": 510,
            "max": 510
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1878484,
          "size": 9309
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "name()": {
            "calls": 256,
            "min": 4882,
            "mean": 6820,
            "median": 4925,
            "max": 13728
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 574,
            "mean": 574,
            "median": 574,
            "max": 574
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 502,
            "mean": 502,
            "median": 502,
            "max": 502
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 287
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 5296,
            "mean": 7255,
            "median": 5416,
            "max": 14213
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "returnsString()": {
            "calls": 512,
            "min": 4892,
            "mean": 6829,
            "median": 4935,
            "max": 13751
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "reverts()": {
            "calls": 258,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "symbol()": {
            "calls": 256,
            "min": 5168,
            "mean": 7106,
            "median": 5211,
            "max": 14014
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 5306668,
          "size": 26428
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 121,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "enqueue(uint256,uint256)": {
            "calls": 379,
            "min": 24179,
            "mean": 52997,
            "median": 66720,
            "max": 66852
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 135,
            "min": 860,
            "mean": 860,
            "median": 860,
            "max": 860
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 132,
            "min": 826,
            "mean": 841,
            "median": 857,
            "max": 857
          },
          "pop()": {
            "calls": 56,
            "min": 23937,
            "mean": 23937,
            "median": 23937,
            "max": 23937
          },
          "replace(uint256)": {
            "calls": 72,
            "min": 24318,
            "mean": 24604,
            "median": 24690,
            "max": 24690
          },
          "root()": {
            "calls": 109,
            "min": 2989,
            "mean": 2989,
            "median": 2989,
            "max": 2989
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3274136,
          "size": 16279
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22460,
            "mean": 23462,
            "median": 23924,
            "max": 23948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 3245480,
          "size": 14281
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 8,
            "min": 3348,
            "mean": 3375,
            "median": 3370,
            "max": 3443
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3898,
            "mean": 3929,
            "median": 3919,
            "max": 3992
          },
          "getArgUint256(uint256)": {
            "calls": 20,
            "min": 5775,
            "mean": 5805,
            "median": 5797,
            "max": 5870
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 8,
            "min": 21208,
            "mean": 22683,
            "median": 22217,
            "max": 25545
          },
          "getArgUint64(uint256)": {
            "calls": 8,
            "min": 3700,
            "mean": 3727,
            "median": 3722,
            "max": 3795
          },
          "getArgUint8(uint256)": {
            "calls": 8,
            "min": 3590,
            "mean": 3617,
            "median": 3612,
            "max": 3685
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 4478,
            "mean": 4570,
            "median": 4543,
            "max": 4756
          },
          "revertWithError()": {
            "calls": 8,
            "min": 5554,
            "mean": 5581,
            "median": 5576,
            "max": 5648
          },
          "setValue(uint256)": {
            "calls": 8,
            "min": 44231,
            "mean": 44257,
            "median": 44247,
            "max": 44326
          },
          "value()": {
            "calls": 8,
            "min": 5463,
            "mean": 5490,
            "median": 5485,
            "max": 5557
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 3026226,
          "size": 15041
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21744,
            "mean": 24206,
            "median": 24206,
            "max": 26668
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 24169,
            "mean": 24495,
            "median": 24498,
            "max": 24498
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 1502080,
          "size": 4030
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3673,
            "mean": 3692,
            "median": 3686,
            "max": 3718
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 4268,
            "mean": 4268,
            "median": 4268,
            "max": 4268
          },
          "getArgUint256(uint256)": {
            "calls": 5,
            "min": 6100,
            "mean": 6129,
            "median": 6145,
            "max": 6145
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 36910,
            "mean": 37504,
            "median": 37498,
            "max": 38106
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 4025,
            "mean": 4044,
            "median": 4038,
            "max": 4070
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3915,
            "mean": 3934,
            "median": 3928,
            "max": 3960
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 5566,
            "mean": 5566,
            "median": 5566,
            "max": 5566
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5878,
            "mean": 6376,
            "median": 5907,
            "max": 7814
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 44556,
            "mean": 45140,
            "median": 44585,
            "max": 46836
          },
          "value()": {
            "calls": 4,
            "min": 5787,
            "mean": 6268,
            "median": 5816,
            "max": 7652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1809406,
          "size": 8964
        },
        "functions": {
          "read(address)": {
            "calls": 139,
            "min": 3121,
            "mean": 3174,
            "median": 3121,
            "max": 3430
          },
          "read(address,uint256)": {
            "calls": 101,
            "min": 424,
            "mean": 2975,
            "median": 2924,
            "max": 3244
          },
          "read(address,uint256,uint256)": {
            "calls": 64,
            "min": 3337,
            "mean": 3761,
            "median": 3337,
            "max": 23798
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468486,
            "mean": 48556369,
            "median": 48556369,
            "max": 83644253
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 8845162,
          "size": 44092
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 18,
            "min": 543,
            "mean": 569,
            "median": 579,
            "max": 579
          },
          "toInt104(uint256)": {
            "calls": 8,
            "min": 1110,
            "mean": 1122,
            "median": 1110,
            "max": 1144
          },
          "toInt112(int256)": {
            "calls": 22,
            "min": 1093,
            "mean": 1119,
            "median": 1129,
            "max": 1129
          },
          "toInt112(uint256)": {
            "calls": 21,
            "min": 1880,
            "mean": 1896,
            "median": 1880,
            "max": 1914
          },
          "toInt120(int256)": {
            "calls": 40,
            "min": 2397,
            "mean": 2424,
            "median": 2433,
            "max": 2433
          },
          "toInt120(uint256)": {
            "calls": 9,
            "min": 1732,
            "mean": 1754,
            "median": 1766,
            "max": 1766
          },
          "toInt128(int256)": {
            "calls": 22,
            "min": 2199,
            "mean": 2225,
            "median": 2235,
            "max": 2235
          },
          "toInt128(uint256)": {
            "calls": 18,
            "min": 324,
            "mean": 329,
            "median": 324,
            "max": 358
          },
          "toInt136(int256)": {
            "calls": 46,
            "min": 1803,
            "mean": 1831,
            "median": 1839,
            "max": 1839
          },
          "toInt136(uint256)": {
            "calls": 13,
            "min": 1974,
            "mean": 1979,
            "median": 1974,
            "max": 2008
          },
          "toInt144(int256)": {
            "calls": 32,
            "min": 1363,
            "mean": 1391,
            "median": 1399,
            "max": 1399
          },
          "toInt144(uint256)": {
            "calls": 17,
            "min": 1072,
            "mean": 1082,
            "median": 1072,
            "max": 1106
          },
          "toInt152(int256)": {
            "calls": 30,
            "min": 1143,
            "mean": 1171,
            "median": 1179,
            "max": 1179
          },
          "toInt152(uint256)": {
            "calls": 13,
            "min": 1182,
            "mean": 1197,
            "median": 1182,
            "max": 1216
          },
          "toInt16(int256)": {
            "calls": 52,
            "min": 2105,
            "mean": 2125,
            "median": 2141,
            "max": 2141
          },
          "toInt16(uint256)": {
            "calls": 22,
            "min": 626,
            "mean": 629,
            "median": 626,
            "max": 660
          },
          "toInt160(int256)": {
            "calls": 36,
            "min": 1275,
            "mean": 1302,
            "median": 1311,
            "max": 1311
          },
          "toInt160(uint256)": {
            "calls": 23,
            "min": 742,
            "mean": 759,
            "median": 776,
            "max": 776
          },
          "toInt168(int256)": {
            "calls": 52,
            "min": 2331,
            "mean": 2359,
            "median": 2367,
            "max": 2367
          },
          "toInt168(uint256)": {
            "calls": 17,
            "min": 2502,
            "mean": 2518,
            "median": 2502,
            "max": 2536
          },
          "toInt176(int256)": {
            "calls": 30,
            "min": 1539,
            "mean": 1565,
            "median": 1575,
            "max": 1575
          },
          "toInt176(uint256)": {
            "calls": 14,
            "min": 676,
            "mean": 695,
            "median": 710,
            "max": 710
          },
          "toInt184(int256)": {
            "calls": 10,
            "min": 1341,
            "mean": 1366,
            "median": 1377,
            "max": 1377
          },
          "toInt184(uint256)": {
            "calls": 16,
            "min": 1820,
            "mean": 1837,
            "median": 1837,
            "max": 1854
          },
          "toInt192(int256)": {
            "calls": 20,
            "min": 299,
            "mean": 299,
            "median": 299,
            "max": 299
          },
          "toInt192(uint256)": {
            "calls": 8,
            "min": 434,
            "mean": 438,
            "median": 434,
            "max": 468
          },
          "toInt200(int256)": {
            "calls": 26,
            "min": 395,
            "mean": 425,
            "median": 431,
            "max": 431
          },
          "toInt200(uint256)": {
            "calls": 12,
            "min": 456,
            "mean": 484,
            "median": 490,
            "max": 490
          },
          "toInt208(int256)": {
            "calls": 22,
            "min": 2419,
            "mean": 2445,
            "median": 2455,
            "max": 2455
          },
          "toInt208(uint256)": {
            "calls": 14,
            "min": 588,
            "mean": 602,
            "median": 588,
            "max": 622
          },
          "toInt216(int256)": {
            "calls": 30,
            "min": 2375,
            "mean": 2403,
            "median": 2411,
            "max": 2411
          },
          "toInt216(uint256)": {
            "calls": 15,
            "min": 2348,
            "mean": 2366,
            "median": 2382,
            "max": 2382
          },
          "toInt224(int256)": {
            "calls": 28,
            "min": 835,
            "mean": 864,
            "median": 871,
            "max": 871
          },
          "toInt224(uint256)": {
            "calls": 18,
            "min": 1226,
            "mean": 1248,
            "median": 1260,
            "max": 1260
          },
          "toInt232(int256)": {
            "calls": 42,
            "min": 219,
            "mean": 249,
            "median": 255,
            "max": 255
          },
          "toInt232(uint256)": {
            "calls": 27,
            "min": 1292,
            "mean": 1305,
            "median": 1292,
            "max": 1326
          },
          "toInt24(int256)": {
            "calls": 38,
            "min": 2303,
            "mean": 2322,
            "median": 2339,
            "max": 2339
          },
          "toInt24(uint256)": {
            "calls": 27,
            "min": 1374,
            "mean": 1382,
            "median": 1374,
            "max": 1408
          },
          "toInt240(int256)": {
            "calls": 22,
            "min": 1011,
            "mean": 1043,
            "median": 1047,
            "max": 1047
          },
          "toInt240(uint256)": {
            "calls": 21,
            "min": 962,
            "mean": 983,
            "median": 996,
            "max": 996
          },
          "toInt248(int256)": {
            "calls": 26,
            "min": 197,
            "mean": 226,
            "median": 233,
            "max": 233
          },
          "toInt248(uint256)": {
            "calls": 23,
            "min": 2172,
            "mean": 2191,
            "median": 2206,
            "max": 2206
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 2208,
            "mean": 2227,
            "median": 2228,
            "max": 2228
          },
          "toInt32(int256)": {
            "calls": 38,
            "min": 1709,
            "mean": 1730,
            "median": 1745,
            "max": 1745
          },
          "toInt32(uint256)": {
            "calls": 13,
            "min": 2254,
            "mean": 2261,
            "median": 2254,
            "max": 2288
          },
          "toInt40(int256)": {
            "calls": 30,
            "min": 1995,
            "mean": 2022,
            "median": 2031,
            "max": 2031
          },
          "toInt40(uint256)": {
            "calls": 16,
            "min": 2056,
            "mean": 2066,
            "median": 2056,
            "max": 2090
          },
          "toInt48(int256)": {
            "calls": 26,
            "min": 477,
            "mean": 501,
            "median": 513,
            "max": 513
          },
          "toInt48(uint256)": {
            "calls": 10,
            "min": 1198,
            "mean": 1208,
            "median": 1198,
            "max": 1232
          },
          "toInt56(int256)": {
            "calls": 42,
            "min": 939,
            "mean": 965,
            "median": 975,
            "max": 975
          },
          "toInt56(uint256)": {
            "calls": 16,
            "min": 2430,
            "mean": 2438,
            "median": 2430,
            "max": 2464
          },
          "toInt64(int256)": {
            "calls": 18,
            "min": 2149,
            "mean": 2173,
            "median": 2185,
            "max": 2185
          },
          "toInt64(uint256)": {
            "calls": 18,
            "min": 406,
            "mean": 417,
            "median": 406,
            "max": 440
          },
          "toInt72(int256)": {
            "calls": 12,
            "min": 2281,
            "mean": 2305,
            "median": 2317,
            "max": 2317
          },
          "toInt72(uint256)": {
            "calls": 15,
            "min": 2122,
            "mean": 2135,
            "median": 2122,
            "max": 2156
          },
          "toInt8(int256)": {
            "calls": 29,
            "min": 2479,
            "mean": 2480,
            "median": 2479,
            "max": 2513
          },
          "toInt8(uint256)": {
            "calls": 16,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "toInt80(int256)": {
            "calls": 38,
            "min": 719,
            "mean": 741,
            "median": 755,
            "max": 755
          },
          "toInt80(uint256)": {
            "calls": 10,
            "min": 780,
            "mean": 786,
            "median": 780,
            "max": 814
          },
          "toInt88(int256)": {
            "calls": 18,
            "min": 1687,
            "mean": 1719,
            "median": 1723,
            "max": 1723
          },
          "toInt88(uint256)": {
            "calls": 9,
            "min": 1946,
            "mean": 1961,
            "median": 1946,
            "max": 1980
          },
          "toInt96(int256)": {
            "calls": 28,
            "min": 521,
            "mean": 544,
            "median": 557,
            "max": 557
          },
          "toInt96(uint256)": {
            "calls": 16,
            "min": 1440,
            "mean": 1450,
            "median": 1440,
            "max": 1474
          },
          "toUint104(uint256)": {
            "calls": 15,
            "min": 1550,
            "mean": 1564,
            "median": 1550,
            "max": 1580
          },
          "toUint112(uint256)": {
            "calls": 17,
            "min": 912,
            "mean": 927,
            "median": 942,
            "max": 942
          },
          "toUint120(uint256)": {
            "calls": 13,
            "min": 560,
            "mean": 564,
            "median": 560,
            "max": 590
          },
          "toUint128(uint256)": {
            "calls": 12,
            "min": 1484,
            "mean": 1520,
            "median": 1538,
            "max": 1538
          },
          "toUint136(uint256)": {
            "calls": 19,
            "min": 1748,
            "mean": 1767,
            "median": 1748,
            "max": 1802
          },
          "toUint144(uint256)": {
            "calls": 11,
            "min": 1858,
            "mean": 1882,
            "median": 1858,
            "max": 1912
          },
          "toUint152(uint256)": {
            "calls": 8,
            "min": 1600,
            "mean": 1620,
            "median": 1600,
            "max": 1654
          },
          "toUint16(uint256)": {
            "calls": 28,
            "min": 1638,
            "mean": 1641,
            "median": 1638,
            "max": 1668
          },
          "toUint160(uint256)": {
            "calls": 16,
            "min": 2238,
            "mean": 2254,
            "median": 2238,
            "max": 2292
          },
          "toUint168(uint256)": {
            "calls": 22,
            "min": 1028,
            "mean": 1052,
            "median": 1028,
            "max": 1082
          },
          "toUint176(uint256)": {
            "calls": 12,
            "min": 236,
            "mean": 258,
            "median": 236,
            "max": 290
          },
          "toUint184(uint256)": {
            "calls": 17,
            "min": 1050,
            "mean": 1075,
            "median": 1050,
            "max": 1104
          },
          "toUint192(uint256)": {
            "calls": 18,
            "min": 1424,
            "mean": 1442,
            "median": 1424,
            "max": 1478
          },
          "toUint200(uint256)": {
            "calls": 16,
            "min": 1402,
            "mean": 1439,
            "median": 1456,
            "max": 1456
          },
          "toUint208(uint256)": {
            "calls": 18,
            "min": 1930,
            "mean": 1960,
            "median": 1984,
            "max": 1984
          },
          "toUint216(uint256)": {
            "calls": 19,
            "min": 1578,
            "mean": 1623,
            "median": 1632,
            "max": 1632
          },
          "toUint224(uint256)": {
            "calls": 13,
            "min": 1160,
            "mean": 1189,
            "median": 1214,
            "max": 1214
          },
          "toUint232(uint256)": {
            "calls": 18,
            "min": 302,
            "mean": 338,
            "median": 356,
            "max": 356
          },
          "toUint24(uint256)": {
            "calls": 18,
            "min": 1660,
            "mean": 1668,
            "median": 1660,
            "max": 1690
          },
          "toUint240(uint256)": {
            "calls": 10,
            "min": 874,
            "mean": 901,
            "median": 901,
            "max": 928
          },
          "toUint248(uint256)": {
            "calls": 20,
            "min": 896,
            "mean": 917,
            "median": 896,
            "max": 950
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 2579,
            "mean": 2592,
            "median": 2599,
            "max": 2599
          },
          "toUint32(uint256)": {
            "calls": 18,
            "min": 2034,
            "mean": 2037,
            "median": 2034,
            "max": 2064
          },
          "toUint40(uint256)": {
            "calls": 14,
            "min": 2562,
            "mean": 2566,
            "median": 2562,
            "max": 2592
          },
          "toUint48(uint256)": {
            "calls": 19,
            "min": 1770,
            "mean": 1777,
            "median": 1770,
            "max": 1800
          },
          "toUint56(uint256)": {
            "calls": 17,
            "min": 2012,
            "mean": 2022,
            "median": 2012,
            "max": 2042
          },
          "toUint64(uint256)": {
            "calls": 8,
            "min": 692,
            "mean": 703,
            "median": 692,
            "max": 722
          },
          "toUint72(uint256)": {
            "calls": 28,
            "min": 802,
            "mean": 813,
            "median": 802,
            "max": 832
          },
          "toUint8(uint256)": {
            "calls": 22,
            "min": 274,
            "mean": 276,
            "median": 274,
            "max": 304
          },
          "toUint80(uint256)": {
            "calls": 12,
            "min": 2078,
            "mean": 2085,
            "median": 2078,
            "max": 2108
          },
          "toUint88(uint256)": {
            "calls": 19,
            "min": 1462,
            "mean": 1474,
            "median": 1462,
            "max": 1492
          },
          "toUint96(uint256)": {
            "calls": 11,
            "min": 494,
            "mean": 504,
            "median": 494,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 15925322,
          "size": 79420
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 87,
            "min": 163455,
            "mean": 172316,
            "median": 172527,
            "max": 172563
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 690,
            "min": 23774,
            "mean": 150806,
            "median": 74838,
            "max": 298662
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46307,
            "mean": 67709,
            "median": 69611,
            "max": 85353
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29494,
            "mean": 29953,
            "median": 29894,
            "max": 32407
          },
          "safeApprove(address,address,uint256)": {
            "calls": 257,
            "min": 26930,
            "mean": 27324,
            "median": 27410,
            "max": 27746
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 256,
            "min": 25893,
            "mean": 26280,
            "median": 26355,
            "max": 26697
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 26762,
            "mean": 27152,
            "median": 27158,
            "max": 27482
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 29364,
            "mean": 29364,
            "median": 29364,
            "max": 29364
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 23145,
            "mean": 29847,
            "median": 29893,
            "max": 30182
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 252,
            "min": 27913,
            "mean": 28498,
            "median": 28645,
            "max": 28961
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 29775,
            "mean": 50822,
            "median": 69307,
            "max": 70461
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 1729,
            "mean": 4933,
            "median": 6535,
            "max": 6535
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2560,
            "min": 26160,
            "mean": 40218,
            "median": 31902,
            "max": 62104
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 555831,
            "mean": 691832,
            "median": 582510,
            "max": 4665133
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 554132,
            "mean": 706646,
            "median": 584480,
            "max": 4652012
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2717454,
          "size": 13499
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33855,
            "mean": 42787,
            "median": 40623,
            "max": 65077
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 38746,
            "mean": 59976,
            "median": 53574,
            "max": 106715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 4159277,
          "size": 20699
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1798,
            "mean": 9287,
            "median": 9665,
            "max": 16448
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 296,
            "min": 1411,
            "mean": 10744,
            "median": 10776,
            "max": 16941
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 119,
            "min": 6714,
            "mean": 6725,
            "median": 6714,
            "max": 6739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 199032,
          "size": 730
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 24,
            "min": 45233,
            "mean": 50933,
            "median": 45233,
            "max": 79433
          },
          "fallbackDeposit(uint256)": {
            "calls": 42,
            "min": 32290,
            "mean": 49997,
            "median": 44590,
            "max": 78790
          },
          "withdraw(uint256)": {
            "calls": 22,
            "min": 45366,
            "mean": 45390,
            "median": 45378,
            "max": 45450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2982779,
          "size": 14824
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 127,
            "min": 1726,
            "mean": 1742,
            "median": 1745,
            "max": 1769
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 317038,
          "size": 1274
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 334,
            "mean": 343,
            "median": 343,
            "max": 352
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 309,
            "mean": 309,
            "median": 309,
            "max": 309
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 419,
            "mean": 428,
            "median": 428,
            "max": 437
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22561,
            "mean": 22561,
            "median": 22561,
            "max": 22561
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 290,
            "mean": 299,
            "median": 299,
            "max": 308
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22200,
            "mean": 22200,
            "median": 22200,
            "max": 22200
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 287845,
          "size": 1114
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2277,
            "mean": 2277,
            "median": 2277,
            "max": 2277
          },
          "fallback()": {
            "calls": 520,
            "min": 23321,
            "mean": 65649,
            "median": 90295,
            "max": 285364
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "receive()": {
            "calls": 260,
            "min": 88,
            "mean": 20845,
            "median": 21088,
            "max": 21088
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 678,
            "mean": 33723,
            "median": 24172,
            "max": 67554
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1853,
            "mean": 35020,
            "median": 35020,
            "max": 68188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 100131,
          "size": 240
        },
        "functions": {
          "fallback()": {
            "calls": 990,
            "min": 215,
            "mean": 23660,
            "median": 22334,
            "max": 59547
          },
          "receive()": {
            "calls": 17,
            "min": 21082,
            "mean": 21082,
            "median": 21082,
            "max": 21082
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 356920,
          "size": 1451
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 209,
            "mean": 332,
            "median": 394,
            "max": 394
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 903,
            "mean": 903,
            "median": 903,
            "max": 903
          },
          "getArgAddress(uint256)": {
            "calls": 9,
            "min": 3205,
            "mean": 3224,
            "median": 3227,
            "max": 3249
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 3773,
            "mean": 3781,
            "median": 3779,
            "max": 3798
          },
          "getArgUint256(uint256)": {
            "calls": 19,
            "min": 5632,
            "mean": 5655,
            "median": 5657,
            "max": 5676
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 9,
            "min": 15441,
            "mean": 15865,
            "median": 15743,
            "max": 16874
          },
          "getArgUint64(uint256)": {
            "calls": 9,
            "min": 3557,
            "mean": 3576,
            "median": 3579,
            "max": 3601
          },
          "getArgUint8(uint256)": {
            "calls": 9,
            "min": 3447,
            "mean": 3466,
            "median": 3469,
            "max": 3491
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 4109,
            "mean": 4133,
            "median": 4127,
            "max": 4182
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 339,
            "mean": 457,
            "median": 516,
            "max": 516
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 739,
            "mean": 739,
            "median": 739,
            "max": 739
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 618,
            "mean": 618,
            "median": 618,
            "max": 618
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 676,
            "mean": 676,
            "median": 676,
            "max": 676
          },
          "revertWithError()": {
            "calls": 9,
            "min": 5411,
            "mean": 5430,
            "median": 5433,
            "max": 5454
          },
          "setValue(uint256)": {
            "calls": 9,
            "min": 44082,
            "mean": 44252,
            "median": 44158,
            "max": 44479
          },
          "value()": {
            "calls": 9,
            "min": 5320,
            "mean": 5339,
            "median": 5342,
            "max": 5363
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 618077,
          "size": 3469
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5400,
            "mean": 5413,
            "median": 5418,
            "max": 5418
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5647,
            "mean": 5656,
            "median": 5656,
            "max": 5665
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5533,
            "mean": 5542,
            "median": 5542,
            "max": 5551
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5514,
            "mean": 5523,
            "median": 5523,
            "max": 5532
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5371,
            "mean": 5380,
            "median": 5380,
            "max": 5389
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5429,
            "mean": 5438,
            "median": 5438,
            "max": 5447
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11557,
            "mean": 30282,
            "median": 33533,
            "max": 45757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1303085,
          "size": 5810
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5500,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 438,
            "min": 670,
            "mean": 2639,
            "median": 835,
            "max": 7906
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 636,
            "min": 23985,
            "mean": 30285,
            "median": 29485,
            "max": 50189
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4233,
            "min": 24039,
            "mean": 165012,
            "median": 79174,
            "max": 36497126
          },
          "burn(address,uint256,uint256)": {
            "calls": 380,
            "min": 25362,
            "mean": 29400,
            "median": 28110,
            "max": 33478
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 916,
            "min": 24647,
            "mean": 355356,
            "median": 63980,
            "max": 38840878
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1070,
            "min": 24108,
            "mean": 307814,
            "median": 58602,
            "max": 37929839
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1959,
            "min": 26446,
            "mean": 44619,
            "median": 46574,
            "max": 46606
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2821,
            "mean": 2821,
            "median": 2821,
            "max": 2821
          },
          "lastDataHash()": {
            "calls": 33,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 4973,
            "min": 23263,
            "mean": 139110,
            "median": 73125,
            "max": 36501308
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 902,
            "min": 23890,
            "mean": 285738,
            "median": 61710,
            "max": 38169344
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1117,
            "min": 23762,
            "mean": 173584,
            "median": 57994,
            "max": 36349928
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1725,
            "min": 25946,
            "mean": 45410,
            "median": 46086,
            "max": 46086
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 132,
            "min": 26700,
            "mean": 36333,
            "median": 33802,
            "max": 47491
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 132,
            "min": 25598,
            "mean": 30445,
            "median": 30532,
            "max": 30798
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 126,
            "min": 33254,
            "mean": 133096,
            "median": 93925,
            "max": 1376359
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 128,
            "min": 58781,
            "mean": 96182,
            "median": 62319,
            "max": 1196952
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 390787,
          "size": 1627
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 407,
            "min": 2851,
            "mean": 2885,
            "median": 2863,
            "max": 6124
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26539,
            "mean": 26539,
            "median": 26539,
            "max": 26539
          },
          "signer()": {
            "calls": 4,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 806989,
          "size": 4289
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "allowance(address,address)": {
            "calls": 2456,
            "min": 841,
            "mean": 2422,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 2619,
            "min": 25693,
            "mean": 45909,
            "median": 46025,
            "max": 46205
          },
          "balanceOf(address)": {
            "calls": 13250,
            "min": 529,
            "mean": 2351,
            "median": 2529,
            "max": 2529
          },
          "burn(address,uint256)": {
            "calls": 515,
            "min": 24279,
            "mean": 29237,
            "median": 27359,
            "max": 34522
          },
          "decimals()": {
            "calls": 312,
            "min": 2342,
            "mean": 2342,
            "median": 2342,
            "max": 2342
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 25145,
            "mean": 27114,
            "median": 28063,
            "max": 28649
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 25131,
            "mean": 37730,
            "median": 25723,
            "max": 52599
          },
          "mint(address,uint256)": {
            "calls": 3221,
            "min": 24348,
            "mean": 67809,
            "median": 68313,
            "max": 68677
          },
          "name()": {
            "calls": 258,
            "min": 2683,
            "mean": 4910,
            "median": 4875,
            "max": 9247
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23730,
            "mean": 43818,
            "median": 30346,
            "max": 74376
          },
          "symbol()": {
            "calls": 258,
            "min": 2870,
            "mean": 5361,
            "median": 7251,
            "max": 9437
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 2575,
            "min": 24303,
            "mean": 45651,
            "median": 51522,
            "max": 51754
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1544,
            "min": 24707,
            "mean": 40629,
            "median": 32581,
            "max": 54581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 806989,
          "size": 4289
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21796,
            "mean": 22296,
            "median": 21856,
            "max": 46145
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28477,
            "mean": 68017,
            "median": 68337,
            "max": 68677
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22855,
            "mean": 23187,
            "median": 23131,
            "max": 29242
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24911,
            "mean": 38400,
            "median": 30347,
            "max": 52366
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 829428,
          "size": 4051
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 1014,
            "min": 23723,
            "mean": 35056,
            "median": 35885,
            "max": 46407
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1402155,
          "size": 6271
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2378,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 272,
            "min": 21536,
            "mean": 21984,
            "median": 21788,
            "max": 95429
          },
          "checkpointAt(address,uint256)": {
            "calls": 349,
            "min": 0,
            "mean": 44,
            "median": 0,
            "max": 4920
          },
          "checkpointCount(address)": {
            "calls": 1416,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 561,
            "min": 21192,
            "mean": 21613,
            "median": 21432,
            "max": 91614
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23821,
            "mean": 39725,
            "median": 23845,
            "max": 76039
          },
          "delegates(address)": {
            "calls": 4456,
            "min": 0,
            "mean": 214,
            "median": 0,
            "max": 2606
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 28358,
            "mean": 48468,
            "median": 48714,
            "max": 48714
          },
          "directIncrementNonce(address)": {
            "calls": 858,
            "min": 27157,
            "mean": 31652,
            "median": 27169,
            "max": 44269
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5247,
            "mean": 5747,
            "median": 5247,
            "max": 7247
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 699,
            "mean": 3804,
            "median": 5255,
            "max": 5459
          },
          "getVotes(address)": {
            "calls": 3132,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4953
          },
          "getVotesTotalSupply()": {
            "calls": 808,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4965
          },
          "mint(address,uint256)": {
            "calls": 763,
            "min": 21548,
            "mean": 21843,
            "median": 21800,
            "max": 94733
          },
          "name()": {
            "calls": 256,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "nonces(address)": {
            "calls": 473,
            "min": 2661,
            "mean": 2661,
            "median": 2661,
            "max": 2661
          },
          "totalSupply()": {
            "calls": 403,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 537,
            "min": 21548,
            "mean": 21831,
            "median": 21788,
            "max": 86873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 243804,
          "size": 912
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21527,
            "mean": 21527,
            "median": 21527,
            "max": 21527
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21706,
            "mean": 22005,
            "median": 22090,
            "max": 22090
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2529,
            "mean": 4053,
            "median": 4663,
            "max": 4663
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 376,
            "min": 22200,
            "mean": 37393,
            "median": 44327,
            "max": 44559
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 752,
            "min": 22423,
            "mean": 37947,
            "median": 44971,
            "max": 45227
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1344744,
          "size": 6286
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31981,
            "mean": 31981,
            "median": 31981,
            "max": 31981
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12519,
            "mean": 12519,
            "median": 12519,
            "max": 12519
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6466,
            "mean": 19196,
            "median": 9112,
            "max": 140404
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 1195,
            "mean": 1195,
            "median": 1195,
            "max": 1195
          },
          "entryPoint()": {
            "calls": 7,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2972,
            "mean": 16950,
            "median": 13468,
            "max": 37892
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 126,
            "min": 2885,
            "mean": 66407,
            "median": 73123,
            "max": 217029
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 133,
            "min": 3266,
            "mean": 52326,
            "median": 38389,
            "max": 217413
          },
          "fallback()": {
            "calls": 5,
            "min": 690,
            "mean": 29082,
            "median": 690,
            "max": 109753
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5637,
            "mean": 5637,
            "median": 5637,
            "max": 5637
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2754,
            "mean": 24225,
            "median": 24292,
            "max": 24292
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6830,
            "mean": 8195,
            "median": 6872,
            "max": 13754
          },
          "owner()": {
            "calls": 267,
            "min": 2599,
            "mean": 2599,
            "median": 2599,
            "max": 2599
          },
          "receive()": {
            "calls": 258,
            "min": 62,
            "mean": 62,
            "median": 62,
            "max": 62
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 7084,
            "mean": 7084,
            "median": 7084,
            "max": 7084
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23473,
            "mean": 23473,
            "median": 23473,
            "max": 23473
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2327,
            "mean": 13393,
            "median": 13393,
            "max": 24459
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7460,
            "mean": 7460,
            "median": 7460,
            "max": 7460
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 265,
            "mean": 24122,
            "median": 29225,
            "max": 37775
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45218,
            "mean": 45218,
            "median": 45218,
            "max": 45218
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1274367,
          "size": 6799
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2927,
            "mean": 2927,
            "median": 2927,
            "max": 2927
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2683,
            "mean": 2683,
            "median": 2683,
            "max": 2683
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2754,
            "mean": 2754,
            "median": 2754,
            "max": 2754
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2364,
            "mean": 5101,
            "median": 7686,
            "max": 7745
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 8210,
            "mean": 8227,
            "median": 8227,
            "max": 8245
          },
          "decimals()": {
            "calls": 20,
            "min": 355,
            "mean": 358,
            "median": 355,
            "max": 394
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30396,
            "mean": 119275,
            "median": 120743,
            "max": 120983
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30447,
            "mean": 119674,
            "median": 120786,
            "max": 131509
          },
          "name()": {
            "calls": 1,
            "min": 2725,
            "mean": 2725,
            "median": 2725,
            "max": 2725
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 8320,
            "mean": 8320,
            "median": 8320,
            "max": 8355
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7814,
            "mean": 7814,
            "median": 7814,
            "max": 7849
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24936,
            "mean": 77693,
            "median": 78148,
            "max": 92975
          },
          "symbol()": {
            "calls": 1,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5356,
            "mean": 5356,
            "median": 5356,
            "max": 5356
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 27085,
            "mean": 78474,
            "median": 79203,
            "max": 79371
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1121620,
          "size": 5319
        },
        "functions": {
          "eip712Domain()": {
            "calls": 330,
            "min": 1170,
            "mean": 1170,
            "median": 1170,
            "max": 1170
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 6128,
            "mean": 22961,
            "median": 11152,
            "max": 63413
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 132,
            "min": 6307,
            "mean": 90788,
            "median": 99269,
            "max": 243275
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 128,
            "min": 28706,
            "mean": 91783,
            "median": 99066,
            "max": 294515
          },
          "fallback()": {
            "calls": 872,
            "min": 547,
            "mean": 6777,
            "median": 3772,
            "max": 136154
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 346,
            "min": 459,
            "mean": 14835,
            "median": 14190,
            "max": 56595
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 6187,
            "mean": 6187,
            "median": 6187,
            "max": 6187
          },
          "mockId()": {
            "calls": 2,
            "min": 621,
            "mean": 621,
            "median": 621,
            "max": 621
          },
          "owner()": {
            "calls": 792,
            "min": 6028,
            "mean": 6028,
            "median": 6028,
            "max": 6028
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 1,
            "min": 67,
            "mean": 67,
            "median": 67,
            "max": 67
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5746,
            "mean": 14298,
            "median": 14320,
            "max": 22894
          },
          "state()": {
            "calls": 772,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "token()": {
            "calls": 536,
            "min": 695,
            "mean": 695,
            "median": 695,
            "max": 695
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 6130,
            "mean": 35503,
            "median": 35665,
            "max": 52765
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1140774,
          "size": 5411
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5467,
            "mean": 5467,
            "median": 5467,
            "max": 5467
          },
          "fallback()": {
            "calls": 158,
            "min": 3822,
            "mean": 13802,
            "median": 6186,
            "max": 52329
          },
          "mockId()": {
            "calls": 1,
            "min": 636,
            "mean": 636,
            "median": 636,
            "max": 636
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 16,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5904,
            "mean": 14456,
            "median": 14478,
            "max": 23052
          },
          "state()": {
            "calls": 513,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18723,
            "mean": 18723,
            "median": 18723,
            "max": 18723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 170071,
          "size": 566
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2414,
            "min": 94768,
            "mean": 95324,
            "median": 95380,
            "max": 95584
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 631674,
          "size": 2708
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2477,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26829,
            "mean": 46920,
            "median": 47093,
            "max": 47513
          },
          "balanceOf(address,uint256)": {
            "calls": 2394,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24576,
            "mean": 27580,
            "median": 25524,
            "max": 30818
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 46486,
            "mean": 47299,
            "median": 47302,
            "max": 47686
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 24161,
            "mean": 32535,
            "median": 26617,
            "max": 46529
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 399,
            "min": 25690,
            "mean": 40234,
            "median": 28994,
            "max": 61500
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24371,
            "mean": 45892,
            "median": 47172,
            "max": 47740
          },
          "name(uint256)": {
            "calls": 256,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 46060,
            "mean": 46060,
            "median": 46060,
            "max": 46060
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 949,
            "mean": 949,
            "median": 949,
            "max": 949
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1044,
            "min": 24290,
            "mean": 37422,
            "median": 47037,
            "max": 52797
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1641,
            "min": 27295,
            "mean": 38982,
            "median": 33386,
            "max": 61168
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1261904,
          "size": 5627
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1040,
            "min": 24176,
            "mean": 42861,
            "median": 48453,
            "max": 48797
          },
          "balanceOf(address)": {
            "calls": 10253,
            "min": 2766,
            "mean": 2766,
            "median": 2766,
            "max": 2766
          },
          "burn(uint256)": {
            "calls": 214,
            "min": 28407,
            "mean": 29435,
            "median": 28829,
            "max": 31516
          },
          "directApprove(address,uint256)": {
            "calls": 1048,
            "min": 24489,
            "mean": 44014,
            "median": 49311,
            "max": 49653
          },
          "directGetApproved(uint256)": {
            "calls": 1542,
            "min": 2875,
            "mean": 4898,
            "median": 5085,
            "max": 5085
          },
          "directOwnerOf(uint256)": {
            "calls": 2512,
            "min": 3070,
            "mean": 3263,
            "median": 3310,
            "max": 3310
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 654,
            "min": 56965,
            "mean": 76080,
            "median": 63434,
            "max": 129769
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 535,
            "min": 63588,
            "mean": 93112,
            "median": 65138,
            "max": 241068
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 960,
            "min": 24517,
            "mean": 41902,
            "median": 46657,
            "max": 46673
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1787,
            "min": 25580,
            "mean": 42820,
            "median": 41418,
            "max": 57978
          },
          "exists(uint256)": {
            "calls": 510,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "getApproved(uint256)": {
            "calls": 1526,
            "min": 2415,
            "mean": 4374,
            "median": 4551,
            "max": 4551
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 3305,
            "mean": 3305,
            "median": 3305,
            "max": 3313
          },
          "getExtraData(uint256)": {
            "calls": 3578,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 3129,
            "mean": 3129,
            "median": 3129,
            "max": 3129
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 3051,
            "mean": 5588,
            "median": 6321,
            "max": 7381
          },
          "mint(address,uint256)": {
            "calls": 10870,
            "min": 24509,
            "mean": 64416,
            "median": 68625,
            "max": 68985
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46863,
            "mean": 56043,
            "median": 51888,
            "max": 69356
          },
          "ownerOf(uint256)": {
            "calls": 5670,
            "min": 749,
            "mean": 2733,
            "median": 2749,
            "max": 2749
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71650,
            "mean": 82098,
            "median": 72477,
            "max": 121632
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72567,
            "mean": 99130,
            "median": 74028,
            "max": 232626
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1827,
            "min": 40974,
            "mean": 68790,
            "median": 63843,
            "max": 134171
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 489,
            "min": 64380,
            "mean": 96347,
            "median": 65873,
            "max": 241862
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1192,
            "min": 24480,
            "mean": 43295,
            "median": 46620,
            "max": 46628
          },
          "setAux(address,uint224)": {
            "calls": 801,
            "min": 28106,
            "mean": 45085,
            "median": 45198,
            "max": 45206
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1528,
            "min": 24243,
            "mean": 37213,
            "median": 44191,
            "max": 44647
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1826,
            "min": 24786,
            "mean": 42623,
            "median": 40804,
            "max": 57159
          },
          "uncheckedBurn(uint256)": {
            "calls": 2964,
            "min": 24062,
            "mean": 30571,
            "median": 31512,
            "max": 36696
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 183,
            "min": 54987,
            "mean": 55241,
            "median": 55227,
            "max": 55595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 558186,
          "size": 2370
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31198,
            "mean": 102173,
            "median": 91385,
            "max": 159424
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 263,
            "min": 275191,
            "mean": 345198,
            "median": 294921,
            "max": 2962546
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2665,
            "mean": 5991,
            "median": 4865,
            "max": 11423
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22115,
            "mean": 41288,
            "median": 44027,
            "max": 44027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 164180,
          "size": 744
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2247,
            "mean": 2247,
            "median": 2247,
            "max": 2247
          },
          "garbage()": {
            "calls": 780,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3025,
            "mean": 3029,
            "median": 3029,
            "max": 3034
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3571,
            "mean": 3577,
            "median": 3577,
            "max": 3583
          },
          "getArgUint256(uint256)": {
            "calls": 6,
            "min": 5452,
            "mean": 5456,
            "median": 5456,
            "max": 5461
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 6345,
            "mean": 6488,
            "median": 6488,
            "max": 6631
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3377,
            "mean": 3381,
            "median": 3381,
            "max": 3386
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3267,
            "mean": 3271,
            "median": 3271,
            "max": 3276
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3522,
            "mean": 3532,
            "median": 3532,
            "max": 3543
          },
          "receive()": {
            "calls": 12,
            "min": 0,
            "mean": 36844,
            "median": 21100,
            "max": 286463
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5231,
            "mean": 5235,
            "median": 5235,
            "max": 5240
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43896,
            "mean": 43906,
            "median": 43906,
            "max": 43917
          },
          "value()": {
            "calls": 2,
            "min": 5140,
            "mean": 5144,
            "median": 5144,
            "max": 5149
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 692301,
          "size": 2984
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7928,
            "min": 513,
            "mean": 4305,
            "median": 4633,
            "max": 4633
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 262,
            "min": 26781,
            "mean": 28214,
            "median": 28248,
            "max": 28248
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 33,
            "min": 26643,
            "mean": 43315,
            "median": 44305,
            "max": 59744
          },
          "guardedByOnlyRoles()": {
            "calls": 33,
            "min": 24168,
            "mean": 41422,
            "median": 41830,
            "max": 57269
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1357,
            "mean": 9024,
            "median": 8080,
            "max": 17037
          },
          "hasRole(address,uint256)": {
            "calls": 1759,
            "min": 2598,
            "mean": 2598,
            "median": 2598,
            "max": 2598
          },
          "owner()": {
            "calls": 1989,
            "min": 2478,
            "mean": 2520,
            "median": 2523,
            "max": 2523
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 219,
            "min": 2655,
            "mean": 2873,
            "median": 2718,
            "max": 4850
          },
          "roleHolderCount(uint256)": {
            "calls": 3971,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "roleHolders(uint256)": {
            "calls": 4054,
            "min": 2726,
            "mean": 3051,
            "median": 2726,
            "max": 23414
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23589,
            "mean": 43379,
            "median": 43549,
            "max": 43873
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 33,
            "min": 24420,
            "mean": 136048,
            "median": 133886,
            "max": 223358
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21566,
            "mean": 26918,
            "median": 26462,
            "max": 43850
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23855,
            "mean": 25096,
            "median": 23855,
            "max": 26667
          },
          "setOwner(address)": {
            "calls": 268,
            "min": 21625,
            "mean": 27076,
            "median": 26665,
            "max": 43765
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23905,
            "mean": 25245,
            "median": 23905,
            "max": 43817
          },
          "setRole(address,uint256,bool)": {
            "calls": 1438,
            "min": 24541,
            "mean": 59662,
            "median": 74025,
            "max": 74553
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6750,
            "min": 33773,
            "mean": 59491,
            "median": 74047,
            "max": 78963
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 112143,
          "size": 299
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getValue(uint256)": {
            "calls": 978,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setValue(uint256,uint256)": {
            "calls": 978,
            "min": 2414,
            "mean": 22293,
            "median": 22314,
            "max": 22314
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 378457,
          "size": 2916
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23373,
            "mean": 33890,
            "median": 33890,
            "max": 44407
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 213,
            "min": 27557,
            "mean": 59290,
            "median": 67621,
            "max": 90620
          },
          "isInitializing()": {
            "calls": 189,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23482,
            "mean": 23482,
            "median": 23482,
            "max": 23482
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 233,
            "min": 24508,
            "mean": 54968,
            "median": 67232,
            "max": 90603
          },
          "version()": {
            "calls": 252,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "x()": {
            "calls": 134,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 575716,
          "size": 2507
        },
        "functions": {
          "owner()": {
            "calls": 746,
            "min": 254,
            "mean": 254,
            "median": 254,
            "max": 254
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24937,
            "mean": 33669,
            "median": 24961,
            "max": 59072
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 754037,
          "size": 3383
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 24009,
            "mean": 24009,
            "median": 24009,
            "max": 24009
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26343,
            "mean": 37963,
            "median": 44211,
            "max": 46459
          },
          "owner()": {
            "calls": 1714,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 133,
            "min": 29296,
            "mean": 64946,
            "median": 68457,
            "max": 815283
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 123,
            "min": 28547,
            "mean": 51614,
            "median": 60821,
            "max": 61169
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 120,
            "min": 28839,
            "mean": 53552,
            "median": 61863,
            "max": 62301
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 276,
            "min": 28329,
            "mean": 48867,
            "median": 47721,
            "max": 64019
          },
          "rescueETH(address,uint256)": {
            "calls": 1408,
            "min": 5764,
            "mean": 32423,
            "median": 36619,
            "max": 61916
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 7251,
            "mean": 7251,
            "median": 7251,
            "max": 7251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 567123,
          "size": 2408
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 510,
            "min": 22040,
            "mean": 24542,
            "median": 24609,
            "max": 37835
          },
          "multicallBrutalized(bytes[])": {
            "calls": 265,
            "min": 280397,
            "mean": 366629,
            "median": 287024,
            "max": 3728584
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 45141,
            "mean": 45141,
            "median": 45141,
            "max": 45141
          },
          "returnsRandomizedString(string)": {
            "calls": 252,
            "min": 795,
            "mean": 1776,
            "median": 1608,
            "max": 3284
          },
          "returnsSender()": {
            "calls": 1,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 481,
            "mean": 481,
            "median": 481,
            "max": 481
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 273,
            "mean": 273,
            "median": 273,
            "max": 273
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 816,
            "mean": 831,
            "median": 828,
            "max": 849
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 331849,
          "size": 1244
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22615,
            "mean": 22615,
            "median": 22615,
            "max": 22615
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24015,
            "mean": 28936,
            "median": 29074,
            "max": 29090
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28271,
            "mean": 28271,
            "median": 28271,
            "max": 28271
          },
          "owner()": {
            "calls": 841,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2871,
            "mean": 2873,
            "median": 2871,
            "max": 2887
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 452,
            "mean": 452,
            "median": 452,
            "max": 452
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23115,
            "mean": 23115,
            "median": 23115,
            "max": 23115
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44499,
            "mean": 44499,
            "median": 44499,
            "max": 44499
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28364,
            "mean": 28522,
            "median": 28592,
            "max": 28608
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24033,
            "mean": 25339,
            "median": 24043,
            "max": 28852
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 34734,
            "median": 45447,
            "max": 45447
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 249695,
          "size": 863
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 608778,
          "size": 2525
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22813,
            "mean": 22813,
            "median": 22813,
            "max": 22813
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24347,
            "mean": 29278,
            "median": 29406,
            "max": 29422
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24044,
            "mean": 45978,
            "median": 48011,
            "max": 48375
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25993,
            "mean": 45784,
            "median": 45953,
            "max": 46293
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2772,
            "mean": 2774,
            "median": 2772,
            "max": 2788
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2901,
            "mean": 2902,
            "median": 2901,
            "max": 2917
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28537,
            "mean": 28537,
            "median": 28537,
            "max": 28537
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 690,
            "mean": 14349,
            "median": 8094,
            "max": 47726
          },
          "owner()": {
            "calls": 836,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 3203,
            "mean": 3204,
            "median": 3203,
            "max": 3219
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 738,
            "mean": 738,
            "median": 738,
            "max": 738
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23942,
            "mean": 27304,
            "median": 26134,
            "max": 29322
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23335,
            "mean": 23335,
            "median": 23335,
            "max": 23335
          },
          "renounceRoles(uint256)": {
            "calls": 64,
            "min": 23565,
            "mean": 27977,
            "median": 28005,
            "max": 28365
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44587,
            "mean": 44587,
            "median": 44587,
            "max": 44587
          },
          "revokeRoles(address,uint256)": {
            "calls": 65,
            "min": 24188,
            "mean": 27211,
            "median": 24752,
            "max": 31400
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 641,
            "mean": 19177,
            "median": 19265,
            "max": 41668
          },
          "rolesOf(address)": {
            "calls": 2270,
            "min": 2808,
            "mean": 2810,
            "median": 2808,
            "max": 2824
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23840,
            "mean": 28783,
            "median": 28880,
            "max": 28896
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 28597,
            "mean": 37562,
            "median": 37443,
            "max": 46301
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24353,
            "mean": 25580,
            "median": 24375,
            "max": 29184
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23330,
            "mean": 34302,
            "median": 23330,
            "max": 45447
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 26064,
            "mean": 46361,
            "median": 46352,
            "max": 48558
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23899,
            "mean": 44242,
            "median": 46061,
            "max": 46391
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 26114,
            "mean": 46181,
            "median": 46446,
            "max": 48607
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 354753,
          "size": 1349
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 78927,
          "size": 142
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476139,
          "size": 1990
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 23684,
            "mean": 23684,
            "median": 23684,
            "max": 23684
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 23377,
            "mean": 23377,
            "median": 23377,
            "max": 23377
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65551,
            "mean": 65551,
            "median": 65551,
            "max": 65551
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45796,
            "mean": 45796,
            "median": 45796,
            "max": 45796
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 70055,
            "mean": 70055,
            "median": 70055,
            "max": 70055
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65940,
            "mean": 65940,
            "median": 65940,
            "max": 65940
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66821,
            "mean": 66821,
            "median": 66821,
            "max": 66821
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 47037,
            "mean": 47037,
            "median": 47037,
            "max": 47037
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 57154,
            "mean": 57154,
            "median": 57154,
            "max": 57154
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 133635,
          "size": 376
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3004,
            "mean": 3004,
            "median": 3004,
            "max": 3004
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3553,
            "mean": 3553,
            "median": 3553,
            "max": 3553
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 5431,
            "mean": 5431,
            "median": 5431,
            "max": 5431
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 5217,
            "mean": 5217,
            "median": 5217,
            "max": 5217
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3356,
            "mean": 3356,
            "median": 3356,
            "max": 3356
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3246,
            "mean": 3246,
            "median": 3246,
            "max": 3246
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3453,
            "mean": 3453,
            "median": 3453,
            "max": 3453
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5210,
            "mean": 10143,
            "median": 12610,
            "max": 12610
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 44247,
            "mean": 49096,
            "median": 51395,
            "max": 51647
          },
          "value()": {
            "calls": 3,
            "min": 5119,
            "mean": 10007,
            "median": 12451,
            "max": 12451
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 784534,
          "size": 3412
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 693,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 259,
            "min": 27156,
            "mean": 28642,
            "median": 28660,
            "max": 28660
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 259,
            "min": 33896,
            "mean": 39949,
            "median": 40059,
            "max": 40826
          },
          "owner()": {
            "calls": 1228,
            "min": 2589,
            "mean": 2589,
            "median": 2589,
            "max": 2589
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 23677,
            "mean": 43521,
            "median": 43601,
            "max": 43601
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91419,
            "mean": 111194,
            "median": 111355,
            "max": 111355
          },
          "setMaxTimedRole(uint256)": {
            "calls": 18,
            "min": 26749,
            "mean": 29907,
            "median": 27121,
            "max": 44221
          },
          "setOwner(address)": {
            "calls": 37,
            "min": 26653,
            "mean": 28050,
            "median": 26665,
            "max": 43765
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 710,
            "min": 24721,
            "mean": 50330,
            "median": 51852,
            "max": 51948
          },
          "timedRoleActive(address,uint256)": {
            "calls": 776,
            "min": 2749,
            "mean": 2749,
            "median": 2749,
            "max": 2749
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 264786,
          "size": 1067
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3107,
            "mean": 3120,
            "median": 3125,
            "max": 3132
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3656,
            "mean": 3664,
            "median": 3662,
            "max": 3675
          },
          "getArgUint256(uint256)": {
            "calls": 11,
            "min": 5534,
            "mean": 5544,
            "median": 5540,
            "max": 5559
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 10037,
            "mean": 10998,
            "median": 10892,
            "max": 12013
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3459,
            "mean": 3472,
            "median": 3477,
            "max": 3484
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3349,
            "mean": 3362,
            "median": 3367,
            "max": 3374
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3761,
            "mean": 3785,
            "median": 3779,
            "max": 3816
          },
          "initialize(address)": {
            "calls": 8,
            "min": 22470,
            "mean": 22470,
            "median": 22470,
            "max": 22470
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 7,
            "min": 357,
            "mean": 4971,
            "median": 5331,
            "max": 7814
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 22304,
            "mean": 41311,
            "median": 44008,
            "max": 46848
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2785,
            "mean": 9824,
            "median": 5472,
            "max": 32241
          },
          "value()": {
            "calls": 7,
            "min": 2247,
            "mean": 5153,
            "median": 5240,
            "max": 7652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 350610,
          "size": 1217
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1681,
            "min": 508,
            "mean": 1424,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 267916,
          "size": 836
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1030,
            "min": 508,
            "mean": 2504,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 519857,
          "size": 2000
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 748,
            "mean": 748,
            "median": 748,
            "max": 748
          },
          "balanceOf(address)": {
            "calls": 2817,
            "min": 530,
            "mean": 1620,
            "median": 2530,
            "max": 2530
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24338,
            "mean": 62115,
            "median": 66602,
            "max": 114433
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 274080,
          "size": 866
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1028,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 355812,
          "size": 1241
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1670,
            "min": 508,
            "mean": 1431,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 268132,
          "size": 837
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 1025,
            "min": 508,
            "mean": 2506,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 265466,
          "size": 825
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 515,
            "min": 508,
            "mean": 2504,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 270930,
          "size": 1175
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24478,
            "mean": 74290,
            "median": 36486,
            "max": 118229
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 619,
            "mean": 619,
            "median": 619,
            "max": 619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 98033,
          "size": 343
        },
        "functions": {
          "fallback()": {
            "calls": 7056,
            "min": 2846,
            "mean": 17092,
            "median": 9994,
            "max": 279188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1047406,
          "size": 4673
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "cancel(bytes32)": {
            "calls": 10,
            "min": 25522,
            "mean": 25686,
            "median": 25534,
            "max": 26308
          },
          "execute(bytes32,bytes)": {
            "calls": 278,
            "min": 28507,
            "mean": 43324,
            "median": 44937,
            "max": 95676
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2641,
            "mean": 2641,
            "median": 2641,
            "max": 2641
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23354,
            "mean": 307507,
            "median": 378234,
            "max": 378234
          },
          "minDelay()": {
            "calls": 242,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "operationState(bytes32)": {
            "calls": 950,
            "min": 2577,
            "mean": 2577,
            "median": 2577,
            "max": 2577
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 28684,
            "mean": 54618,
            "median": 55736,
            "max": 58278
          },
          "readyTimestamp(bytes32)": {
            "calls": 715,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 24152,
            "mean": 33816,
            "median": 24164,
            "max": 76119
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 636157,
          "size": 2726
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "decimals()": {
            "calls": 1,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deposit()": {
            "calls": 553,
            "min": 27568,
            "mean": 64834,
            "median": 67368,
            "max": 67368
          },
          "name()": {
            "calls": 1,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "receive()": {
            "calls": 292,
            "min": 27420,
            "mean": 63297,
            "median": 67220,
            "max": 67220
          },
          "symbol()": {
            "calls": 1,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "withdraw(uint256)": {
            "calls": 275,
            "min": 27990,
            "mean": 39802,
            "median": 40314,
            "max": 40434
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 473250,
          "size": 1971
        },
        "functions": {
          "adminOf(address)": {
            "calls": 473,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24321,
            "mean": 26533,
            "median": 26533,
            "max": 28746
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22297,
            "mean": 55060,
            "median": 22321,
            "max": 126390
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105837,
            "mean": 159332,
            "median": 159724,
            "max": 159820
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23786,
            "mean": 138045,
            "median": 159949,
            "max": 160213
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 736,
            "mean": 736,
            "median": 736,
            "max": 736
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24320,
            "mean": 28040,
            "median": 24332,
            "max": 33616
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35652,
            "mean": 51359,
            "median": 51359,
            "max": 67067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 237303,
          "size": 997
        },
        "functions": {
          "implementation()": {
            "calls": 4880,
            "min": 77,
            "mean": 2288,
            "median": 2300,
            "max": 2300
          },
          "owner()": {
            "calls": 526,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "renounceOwnership()": {
            "calls": 49,
            "min": 23125,
            "mean": 23307,
            "median": 23348,
            "max": 23348
          },
          "transferOwnership(address)": {
            "calls": 174,
            "min": 23642,
            "mean": 27056,
            "median": 28473,
            "max": 28473
          },
          "upgradeTo(address)": {
            "calls": 98,
            "min": 23737,
            "mean": 25678,
            "median": 23827,
            "max": 32627
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3596928,
          "size": 17894
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 23065,
            "mean": 75881,
            "median": 42263,
            "max": 201323
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21888,
            "mean": 22682,
            "median": 21900,
            "max": 25999
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 7208,
            "mean": 7350,
            "median": 7276,
            "max": 7641
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2701228,
          "size": 13421
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 89180,
            "mean": 38937624,
            "median": 898430,
            "max": 96808197
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4245782,
          "size": 21134
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 484,
            "mean": 484,
            "median": 484,
            "max": 484
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1532,
            "mean": 1532,
            "median": 1532,
            "max": 1532
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 423,
            "mean": 423,
            "median": 423,
            "max": 423
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1315,
            "mean": 1315,
            "median": 1315,
            "max": 1315
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 470,
            "mean": 470,
            "median": 470,
            "max": 470
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 449,
            "mean": 449,
            "median": 449,
            "max": 449
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 467,
            "mean": 467,
            "median": 467,
            "max": 467
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 439,
            "mean": 439,
            "median": 439,
            "max": 439
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 869,
            "mean": 869,
            "median": 869,
            "max": 869
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 466,
            "mean": 466,
            "median": 466,
            "max": 466
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 814,
            "mean": 814,
            "median": 814,
            "max": 814
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 367694,
          "size": 1336
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 123,
            "min": 67730,
            "mean": 67953,
            "median": 68102,
            "max": 68102
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 196064,
          "size": 691
        },
        "functions": {
          "generate(bytes)": {
            "calls": 137,
            "min": 0,
            "mean": 3164,
            "median": 1511,
            "max": 68912
          },
          "next(uint256)": {
            "calls": 254,
            "min": 362,
            "mean": 362,
            "median": 362,
            "max": 362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 2627137,
          "size": 13051
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1442,
            "mean": 1442,
            "median": 1442,
            "max": 1442
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3510622,
          "size": 17463
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 43,
            "min": 854,
            "mean": 927,
            "median": 931,
            "max": 970
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 44,
            "min": 626336,
            "mean": 769661,
            "median": 627393,
            "max": 3591419
          },
          "recover(bytes32,bytes)": {
            "calls": 166,
            "min": 22632,
            "mean": 27162,
            "median": 26843,
            "max": 30521
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 39,
            "min": 3724,
            "mean": 25048,
            "median": 26312,
            "max": 26324
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 285,
            "min": 25976,
            "mean": 26255,
            "median": 26360,
            "max": 26489
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 153,
            "min": 651833,
            "mean": 802805,
            "median": 653318,
            "max": 4240073
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 37,
            "min": 651433,
            "mean": 755510,
            "median": 653012,
            "max": 2675809
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 285,
            "min": 651289,
            "mean": 748815,
            "median": 652610,
            "max": 4524873
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 166,
            "min": 23151,
            "mean": 30368,
            "median": 30563,
            "max": 30575
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 39,
            "min": 3679,
            "mean": 25009,
            "median": 26279,
            "max": 26279
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 285,
            "min": 26094,
            "mean": 26359,
            "median": 26478,
            "max": 26490
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 153,
            "min": 655514,
            "mean": 755037,
            "median": 656999,
            "max": 3774428
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 37,
            "min": 651459,
            "mean": 919357,
            "median": 652720,
            "max": 4444049
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 285,
            "min": 651559,
            "mean": 737150,
            "median": 653050,
            "max": 3754507
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 519796,
          "size": 2190
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2664,
            "mean": 6265,
            "median": 7209,
            "max": 9447
          },
          "batchData()": {
            "calls": 520,
            "min": 2921,
            "mean": 269775,
            "median": 3100,
            "max": 8973147
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "batchIds()": {
            "calls": 520,
            "min": 2684,
            "mean": 6284,
            "median": 7228,
            "max": 9466
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "from()": {
            "calls": 512,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "id()": {
            "calls": 512,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "mintData()": {
            "calls": 512,
            "min": 2944,
            "mean": 157140,
            "median": 3123,
            "max": 8462286
          },
          "operator()": {
            "calls": 512,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1674586,
          "size": 7527
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62999,
            "mean": 63131,
            "median": 63227,
            "max": 63235
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 59176,
            "mean": 59308,
            "median": 59404,
            "max": 59412
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 50547,
            "mean": 52772,
            "median": 50547,
            "max": 121747
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 62303,
            "mean": 62435,
            "median": 62531,
            "max": 62535
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49633,
            "mean": 63258,
            "median": 59162,
            "max": 76030
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 337462,
          "size": 1377
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 37,
            "min": 51175,
            "mean": 51414,
            "median": 51427,
            "max": 51763
          },
          "mint(address,uint256)": {
            "calls": 36,
            "min": 61599,
            "mean": 71356,
            "median": 61953,
            "max": 96315
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 4817161,
          "size": 23987
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24751,
            "mean": 50126,
            "median": 44804,
            "max": 74307
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 298541,
          "size": 1164
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 251,
            "mean": 1220,
            "median": 251,
            "max": 3160
          },
          "data()": {
            "calls": 257,
            "min": 2920,
            "mean": 3472,
            "median": 2920,
            "max": 11636
          },
          "datahash()": {
            "calls": 650,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25445,
            "mean": 33455,
            "median": 25445,
            "max": 134182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 7200952,
          "size": 35888
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22263,
            "mean": 22678,
            "median": 22575,
            "max": 23428
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22283,
            "mean": 22651,
            "median": 22569,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 276065,
          "size": 1060
        },
        "functions": {
          "datahash()": {
            "calls": 414,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 305797,
          "size": 1200
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2898,
            "mean": 4419,
            "median": 2898,
            "max": 11614
          },
          "from()": {
            "calls": 1024,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "id()": {
            "calls": 1024,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "operator()": {
            "calls": 1024,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1429297,
          "size": 6401
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 405,
            "mean": 405,
            "median": 405,
            "max": 405
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 62171,
            "mean": 63785,
            "median": 62183,
            "max": 113483
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 58427,
            "mean": 59085,
            "median": 58643,
            "max": 75755
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 65506,
            "mean": 70049,
            "median": 70192,
            "max": 70306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2423296,
          "size": 12033
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 449,
            "min": 828,
            "mean": 847,
            "median": 840,
            "max": 1023
          },
          "returnsHash(bytes)": {
            "calls": 465,
            "min": 744,
            "mean": 762,
            "median": 756,
            "max": 936
          },
          "revertsWithCustomError()": {
            "calls": 5,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1115655,
          "size": 5502
        },
        "functions": {
          "get(address)": {
            "calls": 498,
            "min": 2621,
            "mean": 5934,
            "median": 5934,
            "max": 9247
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26965,
            "mean": 49145,
            "median": 37491,
            "max": 165345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 3836641,
          "size": 19091
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 172,
            "min": 21813,
            "mean": 45064,
            "median": 44241,
            "max": 142311
          },
          "addToBytes32Set(bytes32)": {
            "calls": 164,
            "min": 21747,
            "mean": 46836,
            "median": 46399,
            "max": 161184
          },
          "addressSetAt(uint256)": {
            "calls": 10,
            "min": 4856,
            "mean": 5923,
            "median": 4856,
            "max": 9130
          },
          "addressSetContains(address)": {
            "calls": 153,
            "min": 535,
            "mean": 6913,
            "median": 7085,
            "max": 7093
          },
          "bytes32SetAt(uint256)": {
            "calls": 15,
            "min": 4850,
            "mean": 7122,
            "median": 6976,
            "max": 11250
          },
          "bytes32SetContains(bytes32)": {
            "calls": 168,
            "min": 450,
            "mean": 8865,
            "median": 9070,
            "max": 9070
          },
          "removeFromAddressSet(address)": {
            "calls": 195,
            "min": 21790,
            "mean": 28020,
            "median": 28476,
            "max": 28476
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 168,
            "min": 21726,
            "mean": 30179,
            "median": 30630,
            "max": 30630
          },
          "uint8SetAt(uint256)": {
            "calls": 17,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26881,
            "mean": 50169,
            "median": 47017,
            "max": 142883
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28776,
            "mean": 54002,
            "median": 49019,
            "max": 161830
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24367,
            "mean": 28359,
            "median": 27540,
            "max": 44564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 9750780,
          "size": 48615
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 467,
            "mean": 508,
            "median": 511,
            "max": 511
          },
          "divWad(uint256,uint256)": {
            "calls": 85,
            "min": 456,
            "mean": 456,
            "median": 456,
            "max": 456
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 465,
            "mean": 536,
            "median": 568,
            "max": 568
          },
          "divWadUp(uint256,uint256)": {
            "calls": 94,
            "min": 457,
            "mean": 457,
            "median": 457,
            "max": 457
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 406,
            "mean": 406,
            "median": 406,
            "max": 406
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 310,
            "min": 592,
            "mean": 617,
            "median": 592,
            "max": 936
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 592,
            "mean": 612,
            "median": 609,
            "max": 706
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 629,
            "mean": 631,
            "median": 629,
            "max": 965
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 445,
            "mean": 445,
            "median": 445,
            "max": 445
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 501,
            "mean": 501,
            "median": 501,
            "max": 501
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 481,
            "mean": 512,
            "median": 525,
            "max": 525
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 466,
            "mean": 513,
            "median": 550,
            "max": 550
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 489,
            "mean": 549,
            "median": 598,
            "max": 598
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 488,
            "mean": 546,
            "median": 598,
            "max": 598
          },
          "mulWad(uint256,uint256)": {
            "calls": 114,
            "min": 436,
            "mean": 436,
            "median": 436,
            "max": 436
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 464,
            "mean": 520,
            "median": 567,
            "max": 567
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 115,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 677,
            "mean": 677,
            "median": 677,
            "max": 677
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 702,
            "mean": 1446,
            "median": 1446,
            "max": 2191
          },
          "sDivWad(int256,int256)": {
            "calls": 66,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 528,
            "mean": 642,
            "median": 677,
            "max": 677
          },
          "sMulWad(int256,int256)": {
            "calls": 94,
            "min": 479,
            "mean": 479,
            "median": 479,
            "max": 479
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 512,
            "mean": 645,
            "median": 701,
            "max": 701
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 7467381,
          "size": 37218
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 10553,
            "mean": 13156,
            "median": 12959,
            "max": 19628
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 10696,
            "mean": 19402,
            "median": 21832,
            "max": 22037
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 10660,
            "mean": 14842,
            "median": 12839,
            "max": 21860
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 979,
            "mean": 3249,
            "median": 1335,
            "max": 9987
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 10713,
            "mean": 14513,
            "median": 14206,
            "max": 23893
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1750734,
          "size": 8674
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 1647422,
          "size": 8158
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23799,
            "mean": 33892,
            "median": 33892,
            "max": 43985
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26756,
            "mean": 35286,
            "median": 35286,
            "max": 43817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 2759297,
          "size": 13711
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 528,
            "min": 23479,
            "mean": 24440,
            "median": 24071,
            "max": 27187
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 25286,
            "mean": 28053,
            "median": 26830,
            "max": 617218
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28413,
            "mean": 29001,
            "median": 28844,
            "max": 30177
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 25111,
            "mean": 26522,
            "median": 26747,
            "max": 27483
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 277,
            "min": 3005,
            "mean": 743513,
            "median": 646240,
            "max": 4556455
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2359822,
          "size": 11716
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 114414,
            "mean": 1383065,
            "median": 1039355,
            "max": 83524431
          },
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 721,
            "mean": 737,
            "median": 733,
            "max": 757
          },
          "getArgUint256(uint256)": {
            "calls": 9,
            "min": 2726,
            "mean": 2726,
            "median": 2726,
            "max": 2726
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 2257,
            "mean": 18257,
            "median": 3096,
            "max": 49419
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 397,
            "mean": 397,
            "median": 397,
            "max": 397
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 420,
            "mean": 420,
            "median": 420,
            "max": 420
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 537,
            "mean": 1204,
            "median": 549,
            "max": 2528
          },
          "revertWithError()": {
            "calls": 3,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 22377,
            "mean": 22377,
            "median": 22377,
            "max": 22377
          },
          "value()": {
            "calls": 1033,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 182699,
          "size": 628
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44648,
            "mean": 45396,
            "median": 45206,
            "max": 46813
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 942676,
          "size": 4638
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 392,
            "min": 742,
            "mean": 947,
            "median": 1053,
            "max": 1077
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 8960342,
          "size": 44670
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 13,
            "min": 3112,
            "mean": 3112,
            "median": 3112,
            "max": 3112
          },
          "argsOnClone(address,uint256)": {
            "calls": 12,
            "min": 3147,
            "mean": 3147,
            "median": 3147,
            "max": 3147
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 5,
            "min": 3288,
            "mean": 3288,
            "median": 3288,
            "max": 3288
          },
          "argsOnERC1967(address)": {
            "calls": 13,
            "min": 3130,
            "mean": 3130,
            "median": 3130,
            "max": 3130
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 10,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 5,
            "min": 3332,
            "mean": 3332,
            "median": 3332,
            "max": 3332
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 6,
            "min": 3088,
            "mean": 3088,
            "median": 3088,
            "max": 3088
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 9,
            "min": 3103,
            "mean": 3103,
            "median": 3103,
            "max": 3103
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 3,
            "min": 3307,
            "mean": 3307,
            "median": 3307,
            "max": 3307
          },
          "argsOnERC1967I(address)": {
            "calls": 4,
            "min": 3065,
            "mean": 3065,
            "median": 3065,
            "max": 3065
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 4,
            "min": 3102,
            "mean": 3102,
            "median": 3102,
            "max": 3102
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 2,
            "min": 3285,
            "mean": 3285,
            "median": 3285,
            "max": 3285
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 9,
            "min": 3087,
            "mean": 3087,
            "median": 3087,
            "max": 3087
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 2,
            "min": 3101,
            "mean": 3101,
            "median": 3101,
            "max": 3101
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 3,
            "min": 3330,
            "mean": 3330,
            "median": 3330,
            "max": 3330
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 69,
            "min": 36196,
            "mean": 47192,
            "median": 56470,
            "max": 56742
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 898,
            "mean": 906,
            "median": 911,
            "max": 914
          },
          "clone(address)": {
            "calls": 257,
            "min": 86093,
            "mean": 86093,
            "median": 86093,
            "max": 86093
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 70090,
            "mean": 4027854,
            "median": 73103,
            "max": 96834451
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 266,
            "min": 70809,
            "mean": 6002856,
            "median": 74211,
            "max": 96808319
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 86717,
            "mean": 139343,
            "median": 87089,
            "max": 4669130
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 265,
            "min": 0,
            "mean": 160442,
            "median": 75953,
            "max": 11572062
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 260,
            "min": 0,
            "mean": 449480,
            "median": 101883,
            "max": 12632958
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 115400,
            "mean": 143859,
            "median": 115772,
            "max": 670918
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 356,
            "min": 0,
            "mean": 421870,
            "median": 105660,
            "max": 12669866
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102557,
            "mean": 150212,
            "median": 102929,
            "max": 2800698
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 261,
            "min": 0,
            "mean": 404533,
            "median": 106063,
            "max": 14389660
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 119706,
            "mean": 151681,
            "median": 120078,
            "max": 2130260
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 366,
            "min": 0,
            "mean": 421733,
            "median": 106476,
            "max": 12965780
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 103559,
            "mean": 123328,
            "median": 103919,
            "max": 659065
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 262,
            "min": 96290,
            "mean": 4380722,
            "median": 99548,
            "max": 96829936
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 381,
            "min": 95284,
            "mean": 151214,
            "median": 112506,
            "max": 3051725
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 466,
            "min": 100354,
            "mean": 17408553,
            "median": 105097,
            "max": 96818978
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99521,
            "mean": 129366,
            "median": 99893,
            "max": 3231289
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 264,
            "min": 100556,
            "mean": 6132325,
            "median": 102508,
            "max": 96828310
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 646,
            "min": 99531,
            "mean": 147946,
            "median": 100009,
            "max": 1507377
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 437,
            "min": 101355,
            "mean": 16572183,
            "median": 104947,
            "max": 96830344
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 100532,
            "mean": 126825,
            "median": 100904,
            "max": 656116
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 95391,
            "mean": 4516531,
            "median": 97683,
            "max": 96828274
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98836,
            "mean": 148408,
            "median": 98930,
            "max": 4295603
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 131,
            "min": 99483,
            "mean": 4252200,
            "median": 102071,
            "max": 96819466
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115914,
            "mean": 115914,
            "median": 115914,
            "max": 115914
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 99721,
            "mean": 2847743,
            "median": 101790,
            "max": 96823154
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99836,
            "mean": 140846,
            "median": 99930,
            "max": 2975899
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 124,
            "min": 100526,
            "mean": 5070397,
            "median": 106354,
            "max": 96799951
          },
          "revertWithError()": {
            "calls": 7149,
            "min": 65,
            "mean": 2395,
            "median": 2411,
            "max": 2411
          },
          "setValue(uint256)": {
            "calls": 7513,
            "min": 2545,
            "mean": 22255,
            "median": 22445,
            "max": 22445
          },
          "value()": {
            "calls": 21082,
            "min": 65,
            "mean": 2421,
            "median": 2430,
            "max": 2430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2612722,
          "size": 12979
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 664,
            "mean": 664,
            "median": 664,
            "max": 664
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 646,
            "mean": 646,
            "median": 646,
            "max": 646
          },
          "decodeBatch(bytes)": {
            "calls": 71,
            "min": 1332,
            "mean": 3558,
            "median": 3959,
            "max": 5505
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 27,
            "min": 1503,
            "mean": 1744,
            "median": 1843,
            "max": 2026
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 633,
            "min": 706,
            "mean": 2174,
            "median": 1117,
            "max": 6404
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 1043,
            "mean": 1061,
            "median": 1055,
            "max": 1091
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 1084,
            "mean": 1102,
            "median": 1096,
            "max": 1132
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 138,
            "min": 30485,
            "mean": 40847,
            "median": 40129,
            "max": 58217
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 648370,
            "mean": 738213,
            "median": 653765,
            "max": 3822926
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 2305362,
          "size": 11444
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2595,
            "mean": 2595,
            "median": 2595,
            "max": 2595
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2624,
            "mean": 2624,
            "median": 2624,
            "max": 2624
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 44062,
            "mean": 44062,
            "median": 44062,
            "max": 44062
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 44031,
            "mean": 44031,
            "median": 44031,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 2830182,
          "size": 14065
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2429,
            "mean": 3581,
            "median": 2429,
            "max": 4771
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23803,
            "mean": 23828,
            "median": 23839,
            "max": 23839
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21554,
            "mean": 43239,
            "median": 43809,
            "max": 43809
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23690,
            "mean": 23977,
            "median": 24062,
            "max": 24062
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 5021049,
          "size": 25005
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24600,
            "mean": 37993,
            "median": 27749,
            "max": 91356
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24912,
            "mean": 45695,
            "median": 29693,
            "max": 129914
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibStorage.t.sol:LibStorageTest",
        "deployment": {
          "gas": 236178,
          "size": 1086
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3278,
            "mean": 3278,
            "median": 3278,
            "max": 3278
          },
          "getArgUint256(uint256)": {
            "calls": 1,
            "min": 5615,
            "mean": 5615,
            "median": 5615,
            "max": 5615
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 12544,
            "mean": 12544,
            "median": 12544,
            "max": 12544
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3286,
            "mean": 3286,
            "median": 3286,
            "max": 3286
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3309,
            "mean": 3309,
            "median": 3309,
            "max": 3309
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5295,
            "mean": 6236,
            "median": 6236,
            "max": 7177
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43979,
            "mean": 45132,
            "median": 45132,
            "max": 46285
          },
          "value()": {
            "calls": 2,
            "min": 5223,
            "mean": 6207,
            "median": 6207,
            "max": 7191
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 10017885,
          "size": 49948
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 873,
            "mean": 882,
            "median": 879,
            "max": 891
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 603,
            "mean": 603,
            "median": 603,
            "max": 603
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 818,
            "mean": 818,
            "median": 818,
            "max": 818
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 229928,
          "size": 845
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27606,
            "mean": 52003,
            "median": 51118,
            "max": 82868
          },
          "x()": {
            "calls": 6,
            "min": 3054,
            "mean": 10545,
            "median": 6193,
            "max": 37502
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 176259,
          "size": 597
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27392,
            "mean": 42061,
            "median": 32834,
            "max": 82275
          },
          "x()": {
            "calls": 6,
            "min": 2666,
            "mean": 9570,
            "median": 4885,
            "max": 37430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2248696,
          "size": 11161
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22551,
            "mean": 26790,
            "median": 28016,
            "max": 29560
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 25468,
            "mean": 33192,
            "median": 33343,
            "max": 61070
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 1771562,
          "size": 8778
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 255,
            "min": 1135,
            "mean": 43058,
            "median": 44204,
            "max": 83314
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1522,
            "mean": 51428,
            "median": 48165,
            "max": 85791
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1109,
            "mean": 43900,
            "median": 44016,
            "max": 84144
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1550517,
          "size": 7674
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "name()": {
            "calls": 256,
            "min": 5028,
            "mean": 6898,
            "median": 5251,
            "max": 13770
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 356
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 5039,
            "mean": 6922,
            "median": 5253,
            "max": 13851
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "returnsString()": {
            "calls": 512,
            "min": 5031,
            "mean": 7025,
            "median": 5255,
            "max": 13774
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "reverts()": {
            "calls": 258,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "symbol()": {
            "calls": 256,
            "min": 5049,
            "mean": 6919,
            "median": 5272,
            "max": 13791
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 3042239,
          "size": 15124
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 125,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "enqueue(uint256,uint256)": {
            "calls": 383,
            "min": 23944,
            "mean": 52535,
            "median": 66472,
            "max": 66664
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 124,
            "min": 722,
            "mean": 722,
            "median": 722,
            "max": 722
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 125,
            "min": 776,
            "mean": 777,
            "median": 779,
            "max": 779
          },
          "pop()": {
            "calls": 60,
            "min": 23548,
            "mean": 23548,
            "median": 23548,
            "max": 23548
          },
          "replace(uint256)": {
            "calls": 51,
            "min": 23789,
            "mean": 24080,
            "median": 24161,
            "max": 24161
          },
          "root()": {
            "calls": 114,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2497386,
          "size": 12403
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22552,
            "mean": 23432,
            "median": 23992,
            "max": 24016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 3555551,
          "size": 15821
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 25,
            "min": 3532,
            "mean": 3586,
            "median": 3589,
            "max": 3627
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 11,
            "min": 3892,
            "mean": 3942,
            "median": 3960,
            "max": 4001
          },
          "getArgUint256(uint256)": {
            "calls": 47,
            "min": 5869,
            "mean": 5924,
            "median": 5926,
            "max": 5964
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 25,
            "min": 24293,
            "mean": 26698,
            "median": 27232,
            "max": 29012
          },
          "getArgUint64(uint256)": {
            "calls": 25,
            "min": 3540,
            "mean": 3594,
            "median": 3597,
            "max": 3635
          },
          "getArgUint8(uint256)": {
            "calls": 25,
            "min": 3563,
            "mean": 3617,
            "median": 3620,
            "max": 3658
          },
          "getCalldataHash()": {
            "calls": 11,
            "min": 4465,
            "mean": 4593,
            "median": 4593,
            "max": 4709
          },
          "revertWithError()": {
            "calls": 25,
            "min": 5549,
            "mean": 5603,
            "median": 5606,
            "max": 5644
          },
          "setValue(uint256)": {
            "calls": 25,
            "min": 44221,
            "mean": 44362,
            "median": 44315,
            "max": 44637
          },
          "value()": {
            "calls": 25,
            "min": 5477,
            "mean": 5531,
            "median": 5534,
            "max": 5572
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 2640552,
          "size": 13118
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 426,
            "mean": 426,
            "median": 426,
            "max": 426
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21621,
            "mean": 24121,
            "median": 24121,
            "max": 26621
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 24014,
            "mean": 24342,
            "median": 24345,
            "max": 24345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 837020,
          "size": 4177
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 22,
            "min": 3768,
            "mean": 3854,
            "median": 3868,
            "max": 3923
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 13,
            "min": 4115,
            "mean": 4204,
            "median": 4232,
            "max": 4264
          },
          "getArgUint256(uint256)": {
            "calls": 48,
            "min": 6105,
            "mean": 6192,
            "median": 6221,
            "max": 6260
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 22,
            "min": 34691,
            "mean": 39058,
            "median": 39627,
            "max": 42779
          },
          "getArgUint64(uint256)": {
            "calls": 22,
            "min": 3776,
            "mean": 3862,
            "median": 3876,
            "max": 3931
          },
          "getArgUint8(uint256)": {
            "calls": 22,
            "min": 3799,
            "mean": 3885,
            "median": 3899,
            "max": 3954
          },
          "getCalldataHash()": {
            "calls": 13,
            "min": 5121,
            "mean": 5382,
            "median": 5463,
            "max": 5558
          },
          "revertWithError()": {
            "calls": 23,
            "min": 5784,
            "mean": 6142,
            "median": 5901,
            "max": 12126
          },
          "setValue(uint256)": {
            "calls": 23,
            "min": 44469,
            "mean": 44862,
            "median": 44573,
            "max": 51237
          },
          "value()": {
            "calls": 23,
            "min": 5712,
            "mean": 6074,
            "median": 5829,
            "max": 12143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1810005,
          "size": 8970
        },
        "functions": {
          "read(address)": {
            "calls": 143,
            "min": 3020,
            "mean": 3110,
            "median": 3020,
            "max": 3437
          },
          "read(address,uint256)": {
            "calls": 102,
            "min": 3052,
            "mean": 3188,
            "median": 3052,
            "max": 3502
          },
          "read(address,uint256,uint256)": {
            "calls": 73,
            "min": 3286,
            "mean": 3732,
            "median": 3286,
            "max": 23778
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468528,
            "mean": 48556581,
            "median": 48556581,
            "max": 83644634
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 9079161,
          "size": 45263
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 28,
            "min": 381,
            "mean": 441,
            "median": 455,
            "max": 455
          },
          "toInt104(uint256)": {
            "calls": 15,
            "min": 396,
            "mean": 421,
            "median": 396,
            "max": 472
          },
          "toInt112(int256)": {
            "calls": 24,
            "min": 381,
            "mean": 436,
            "median": 455,
            "max": 455
          },
          "toInt112(uint256)": {
            "calls": 13,
            "min": 417,
            "mean": 452,
            "median": 417,
            "max": 493
          },
          "toInt120(int256)": {
            "calls": 28,
            "min": 407,
            "mean": 462,
            "median": 481,
            "max": 481
          },
          "toInt120(uint256)": {
            "calls": 19,
            "min": 424,
            "mean": 460,
            "median": 424,
            "max": 500
          },
          "toInt128(int256)": {
            "calls": 16,
            "min": 430,
            "mean": 480,
            "median": 504,
            "max": 504
          },
          "toInt128(uint256)": {
            "calls": 12,
            "min": 381,
            "mean": 412,
            "median": 381,
            "max": 457
          },
          "toInt136(int256)": {
            "calls": 34,
            "min": 430,
            "mean": 484,
            "median": 504,
            "max": 504
          },
          "toInt136(uint256)": {
            "calls": 14,
            "min": 444,
            "mean": 482,
            "median": 482,
            "max": 520
          },
          "toInt144(int256)": {
            "calls": 26,
            "min": 429,
            "mean": 477,
            "median": 503,
            "max": 503
          },
          "toInt144(uint256)": {
            "calls": 12,
            "min": 445,
            "mean": 464,
            "median": 445,
            "max": 521
          },
          "toInt152(int256)": {
            "calls": 38,
            "min": 431,
            "mean": 481,
            "median": 505,
            "max": 505
          },
          "toInt152(uint256)": {
            "calls": 16,
            "min": 401,
            "mean": 415,
            "median": 401,
            "max": 477
          },
          "toInt16(int256)": {
            "calls": 32,
            "min": 424,
            "mean": 470,
            "median": 498,
            "max": 498
          },
          "toInt16(uint256)": {
            "calls": 25,
            "min": 374,
            "mean": 395,
            "median": 374,
            "max": 450
          },
          "toInt160(int256)": {
            "calls": 26,
            "min": 408,
            "mean": 464,
            "median": 482,
            "max": 482
          },
          "toInt160(uint256)": {
            "calls": 15,
            "min": 423,
            "mean": 463,
            "median": 499,
            "max": 499
          },
          "toInt168(int256)": {
            "calls": 36,
            "min": 408,
            "mean": 473,
            "median": 482,
            "max": 482
          },
          "toInt168(uint256)": {
            "calls": 12,
            "min": 422,
            "mean": 441,
            "median": 422,
            "max": 498
          },
          "toInt176(int256)": {
            "calls": 26,
            "min": 387,
            "mean": 441,
            "median": 461,
            "max": 461
          },
          "toInt176(uint256)": {
            "calls": 12,
            "min": 424,
            "mean": 462,
            "median": 462,
            "max": 500
          },
          "toInt184(int256)": {
            "calls": 44,
            "min": 407,
            "mean": 462,
            "median": 481,
            "max": 481
          },
          "toInt184(uint256)": {
            "calls": 22,
            "min": 445,
            "mean": 496,
            "median": 521,
            "max": 521
          },
          "toInt192(int256)": {
            "calls": 30,
            "min": 388,
            "mean": 444,
            "median": 462,
            "max": 462
          },
          "toInt192(uint256)": {
            "calls": 12,
            "min": 424,
            "mean": 474,
            "median": 500,
            "max": 500
          },
          "toInt200(int256)": {
            "calls": 24,
            "min": 387,
            "mean": 454,
            "median": 461,
            "max": 461
          },
          "toInt200(uint256)": {
            "calls": 16,
            "min": 446,
            "mean": 493,
            "median": 522,
            "max": 522
          },
          "toInt208(int256)": {
            "calls": 32,
            "min": 429,
            "mean": 472,
            "median": 503,
            "max": 503
          },
          "toInt208(uint256)": {
            "calls": 17,
            "min": 424,
            "mean": 473,
            "median": 500,
            "max": 500
          },
          "toInt216(int256)": {
            "calls": 16,
            "min": 385,
            "mean": 435,
            "median": 459,
            "max": 459
          },
          "toInt216(uint256)": {
            "calls": 9,
            "min": 423,
            "mean": 465,
            "median": 499,
            "max": 499
          },
          "toInt224(int256)": {
            "calls": 36,
            "min": 432,
            "mean": 493,
            "median": 506,
            "max": 506
          },
          "toInt224(uint256)": {
            "calls": 16,
            "min": 445,
            "mean": 478,
            "median": 445,
            "max": 521
          },
          "toInt232(int256)": {
            "calls": 36,
            "min": 411,
            "mean": 468,
            "median": 485,
            "max": 485
          },
          "toInt232(uint256)": {
            "calls": 19,
            "min": 423,
            "mean": 459,
            "median": 423,
            "max": 499
          },
          "toInt24(int256)": {
            "calls": 28,
            "min": 380,
            "mean": 422,
            "median": 454,
            "max": 454
          },
          "toInt24(uint256)": {
            "calls": 25,
            "min": 438,
            "mean": 450,
            "median": 438,
            "max": 514
          },
          "toInt240(int256)": {
            "calls": 40,
            "min": 386,
            "mean": 445,
            "median": 460,
            "max": 460
          },
          "toInt240(uint256)": {
            "calls": 13,
            "min": 402,
            "mean": 448,
            "median": 478,
            "max": 478
          },
          "toInt248(int256)": {
            "calls": 34,
            "min": 389,
            "mean": 446,
            "median": 452,
            "max": 452
          },
          "toInt248(uint256)": {
            "calls": 18,
            "min": 401,
            "mean": 447,
            "median": 466,
            "max": 466
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 372,
            "mean": 431,
            "median": 432,
            "max": 432
          },
          "toInt32(int256)": {
            "calls": 40,
            "min": 403,
            "mean": 445,
            "median": 477,
            "max": 477
          },
          "toInt32(uint256)": {
            "calls": 19,
            "min": 416,
            "mean": 440,
            "median": 416,
            "max": 492
          },
          "toInt40(int256)": {
            "calls": 36,
            "min": 381,
            "mean": 428,
            "median": 455,
            "max": 455
          },
          "toInt40(uint256)": {
            "calls": 18,
            "min": 373,
            "mean": 415,
            "median": 449,
            "max": 449
          },
          "toInt48(int256)": {
            "calls": 30,
            "min": 382,
            "mean": 431,
            "median": 456,
            "max": 456
          },
          "toInt48(uint256)": {
            "calls": 23,
            "min": 417,
            "mean": 430,
            "median": 417,
            "max": 493
          },
          "toInt56(int256)": {
            "calls": 46,
            "min": 381,
            "mean": 429,
            "median": 455,
            "max": 455
          },
          "toInt56(uint256)": {
            "calls": 21,
            "min": 438,
            "mean": 459,
            "median": 438,
            "max": 514
          },
          "toInt64(int256)": {
            "calls": 36,
            "min": 380,
            "mean": 427,
            "median": 454,
            "max": 454
          },
          "toInt64(uint256)": {
            "calls": 12,
            "min": 396,
            "mean": 421,
            "median": 396,
            "max": 472
          },
          "toInt72(int256)": {
            "calls": 32,
            "min": 445,
            "mean": 493,
            "median": 519,
            "max": 519
          },
          "toInt72(uint256)": {
            "calls": 9,
            "min": 439,
            "mean": 439,
            "median": 439,
            "max": 439
          },
          "toInt8(int256)": {
            "calls": 23,
            "min": 401,
            "mean": 404,
            "median": 401,
            "max": 474
          },
          "toInt8(uint256)": {
            "calls": 19,
            "min": 440,
            "mean": 443,
            "median": 440,
            "max": 515
          },
          "toInt80(int256)": {
            "calls": 34,
            "min": 402,
            "mean": 452,
            "median": 476,
            "max": 476
          },
          "toInt80(uint256)": {
            "calls": 10,
            "min": 375,
            "mean": 397,
            "median": 375,
            "max": 451
          },
          "toInt88(int256)": {
            "calls": 28,
            "min": 381,
            "mean": 431,
            "median": 455,
            "max": 455
          },
          "toInt88(uint256)": {
            "calls": 13,
            "min": 416,
            "mean": 433,
            "median": 416,
            "max": 492
          },
          "toInt96(int256)": {
            "calls": 36,
            "min": 426,
            "mean": 481,
            "median": 500,
            "max": 500
          },
          "toInt96(uint256)": {
            "calls": 11,
            "min": 419,
            "mean": 446,
            "median": 419,
            "max": 495
          },
          "toUint104(uint256)": {
            "calls": 9,
            "min": 396,
            "mean": 411,
            "median": 396,
            "max": 467
          },
          "toUint112(uint256)": {
            "calls": 18,
            "min": 440,
            "mean": 475,
            "median": 475,
            "max": 511
          },
          "toUint120(uint256)": {
            "calls": 17,
            "min": 396,
            "mean": 421,
            "median": 396,
            "max": 467
          },
          "toUint128(uint256)": {
            "calls": 16,
            "min": 396,
            "mean": 435,
            "median": 467,
            "max": 467
          },
          "toUint136(uint256)": {
            "calls": 15,
            "min": 373,
            "mean": 415,
            "median": 444,
            "max": 444
          },
          "toUint144(uint256)": {
            "calls": 18,
            "min": 395,
            "mean": 436,
            "median": 436,
            "max": 478
          },
          "toUint152(uint256)": {
            "calls": 17,
            "min": 379,
            "mean": 442,
            "median": 462,
            "max": 462
          },
          "toUint16(uint256)": {
            "calls": 26,
            "min": 417,
            "mean": 427,
            "median": 417,
            "max": 488
          },
          "toUint160(uint256)": {
            "calls": 19,
            "min": 400,
            "mean": 426,
            "median": 400,
            "max": 483
          },
          "toUint168(uint256)": {
            "calls": 10,
            "min": 401,
            "mean": 467,
            "median": 484,
            "max": 484
          },
          "toUint176(uint256)": {
            "calls": 18,
            "min": 426,
            "mean": 467,
            "median": 467,
            "max": 509
          },
          "toUint184(uint256)": {
            "calls": 17,
            "min": 423,
            "mean": 447,
            "median": 423,
            "max": 506
          },
          "toUint192(uint256)": {
            "calls": 15,
            "min": 403,
            "mean": 452,
            "median": 486,
            "max": 486
          },
          "toUint200(uint256)": {
            "calls": 23,
            "min": 381,
            "mean": 413,
            "median": 381,
            "max": 464
          },
          "toUint208(uint256)": {
            "calls": 17,
            "min": 400,
            "mean": 429,
            "median": 400,
            "max": 483
          },
          "toUint216(uint256)": {
            "calls": 11,
            "min": 424,
            "mean": 469,
            "median": 507,
            "max": 507
          },
          "toUint224(uint256)": {
            "calls": 16,
            "min": 379,
            "mean": 415,
            "median": 379,
            "max": 462
          },
          "toUint232(uint256)": {
            "calls": 18,
            "min": 425,
            "mean": 471,
            "median": 508,
            "max": 508
          },
          "toUint24(uint256)": {
            "calls": 17,
            "min": 439,
            "mean": 459,
            "median": 439,
            "max": 510
          },
          "toUint240(uint256)": {
            "calls": 18,
            "min": 402,
            "mean": 443,
            "median": 443,
            "max": 485
          },
          "toUint248(uint256)": {
            "calls": 12,
            "min": 424,
            "mean": 472,
            "median": 507,
            "max": 507
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 437,
            "mean": 480,
            "median": 497,
            "max": 497
          },
          "toUint32(uint256)": {
            "calls": 18,
            "min": 418,
            "mean": 437,
            "median": 418,
            "max": 489
          },
          "toUint40(uint256)": {
            "calls": 9,
            "min": 415,
            "mean": 430,
            "median": 415,
            "max": 486
          },
          "toUint48(uint256)": {
            "calls": 13,
            "min": 395,
            "mean": 422,
            "median": 395,
            "max": 466
          },
          "toUint56(uint256)": {
            "calls": 19,
            "min": 396,
            "mean": 418,
            "median": 396,
            "max": 467
          },
          "toUint64(uint256)": {
            "calls": 17,
            "min": 373,
            "mean": 389,
            "median": 373,
            "max": 444
          },
          "toUint72(uint256)": {
            "calls": 10,
            "min": 397,
            "mean": 439,
            "median": 468,
            "max": 468
          },
          "toUint8(uint256)": {
            "calls": 28,
            "min": 397,
            "mean": 397,
            "median": 397,
            "max": 397
          },
          "toUint80(uint256)": {
            "calls": 14,
            "min": 395,
            "mean": 405,
            "median": 395,
            "max": 466
          },
          "toUint88(uint256)": {
            "calls": 16,
            "min": 374,
            "mean": 400,
            "median": 374,
            "max": 445
          },
          "toUint96(uint256)": {
            "calls": 14,
            "min": 397,
            "mean": 417,
            "median": 397,
            "max": 468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 14181956,
          "size": 70727
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 83,
            "min": 161714,
            "mean": 170669,
            "median": 170774,
            "max": 170822
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 694,
            "min": 22271,
            "mean": 150635,
            "median": 170960,
            "max": 297296
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46860,
            "mean": 68250,
            "median": 70090,
            "max": 85918
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29684,
            "mean": 30140,
            "median": 30152,
            "max": 32381
          },
          "safeApprove(address,address,uint256)": {
            "calls": 253,
            "min": 24896,
            "mean": 25295,
            "median": 25388,
            "max": 25712
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 254,
            "min": 25292,
            "mean": 25677,
            "median": 25760,
            "max": 26096
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24949,
            "mean": 25331,
            "median": 25345,
            "max": 25669
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28758,
            "mean": 28758,
            "median": 28758,
            "max": 28758
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22186,
            "mean": 28824,
            "median": 28945,
            "max": 29202
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 254,
            "min": 26217,
            "mean": 26780,
            "median": 26925,
            "max": 27253
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 29259,
            "mean": 50252,
            "median": 68937,
            "max": 69893
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 604,
            "mean": 3892,
            "median": 5536,
            "max": 5536
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2561,
            "min": 26089,
            "mean": 40228,
            "median": 31647,
            "max": 62096
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 591789,
            "mean": 700283,
            "median": 620340,
            "max": 4806656
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 591604,
            "mean": 719823,
            "median": 622475,
            "max": 4758362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2735267,
          "size": 13591
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 35662,
            "mean": 42902,
            "median": 40633,
            "max": 64504
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 40118,
            "mean": 60611,
            "median": 54609,
            "max": 105462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 3611352,
          "size": 17966
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1701,
            "mean": 9264,
            "median": 9990,
            "max": 16725
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 299,
            "min": 1146,
            "mean": 10435,
            "median": 10464,
            "max": 17041
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 141,
            "min": 6700,
            "mean": 6713,
            "median": 6726,
            "max": 6726
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 198558,
          "size": 718
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 37,
            "min": 32778,
            "mean": 50550,
            "median": 45078,
            "max": 79278
          },
          "fallbackDeposit(uint256)": {
            "calls": 35,
            "min": 32413,
            "mean": 48270,
            "median": 44713,
            "max": 78913
          },
          "withdraw(uint256)": {
            "calls": 16,
            "min": 45458,
            "mean": 45477,
            "median": 45464,
            "max": 45566
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2256903,
          "size": 11202
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 136,
            "min": 1800,
            "mean": 1815,
            "median": 1819,
            "max": 1834
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 381377,
          "size": 1574
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 258,
            "mean": 288,
            "median": 288,
            "max": 319
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 267,
            "mean": 297,
            "median": 297,
            "max": 328
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22486,
            "mean": 22486,
            "median": 22486,
            "max": 22486
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 280,
            "mean": 302,
            "median": 302,
            "max": 324
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22411,
            "mean": 22411,
            "median": 22411,
            "max": 22411
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 290229,
          "size": 1124
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "fallback()": {
            "calls": 520,
            "min": 23730,
            "mean": 62928,
            "median": 85757,
            "max": 219396
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "receive()": {
            "calls": 260,
            "min": 89,
            "mean": 20846,
            "median": 21089,
            "max": 21089
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 720,
            "mean": 33781,
            "median": 24106,
            "max": 67393
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 2018,
            "mean": 35183,
            "median": 35183,
            "max": 68349
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 108363,
          "size": 281
        },
        "functions": {
          "fallback()": {
            "calls": 996,
            "min": 234,
            "mean": 23611,
            "median": 22388,
            "max": 153176
          },
          "receive()": {
            "calls": 14,
            "min": 21107,
            "mean": 21107,
            "median": 21107,
            "max": 21107
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 396733,
          "size": 1675
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 285,
            "mean": 394,
            "median": 449,
            "max": 449
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 1010,
            "mean": 1010,
            "median": 1010,
            "max": 1010
          },
          "getArgAddress(uint256)": {
            "calls": 9,
            "min": 3382,
            "mean": 3406,
            "median": 3401,
            "max": 3445
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3730,
            "mean": 3760,
            "median": 3754,
            "max": 3792
          },
          "getArgUint256(uint256)": {
            "calls": 21,
            "min": 5719,
            "mean": 5745,
            "median": 5738,
            "max": 5782
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 9,
            "min": 16650,
            "mean": 18043,
            "median": 18096,
            "max": 19582
          },
          "getArgUint64(uint256)": {
            "calls": 9,
            "min": 3390,
            "mean": 3414,
            "median": 3409,
            "max": 3453
          },
          "getArgUint8(uint256)": {
            "calls": 9,
            "min": 3413,
            "mean": 3437,
            "median": 3432,
            "max": 3476
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 3985,
            "mean": 4070,
            "median": 4058,
            "max": 4169
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 441,
            "mean": 551,
            "median": 606,
            "max": 606
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 819,
            "mean": 819,
            "median": 819,
            "max": 819
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 762,
            "mean": 762,
            "median": 762,
            "max": 762
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "revertWithError()": {
            "calls": 9,
            "min": 5399,
            "mean": 5422,
            "median": 5418,
            "max": 5461
          },
          "setValue(uint256)": {
            "calls": 9,
            "min": 44083,
            "mean": 44179,
            "median": 44108,
            "max": 44506
          },
          "value()": {
            "calls": 9,
            "min": 5327,
            "mean": 5350,
            "median": 5346,
            "max": 5389
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 568978,
          "size": 3198
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5733,
            "mean": 6001,
            "median": 6091,
            "max": 6091
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 6022,
            "mean": 6201,
            "median": 6201,
            "max": 6380
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5889,
            "mean": 6068,
            "median": 6068,
            "max": 6247
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5853,
            "mean": 6032,
            "median": 6032,
            "max": 6211
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5774,
            "mean": 5953,
            "median": 5953,
            "max": 6132
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5832,
            "mean": 6011,
            "median": 6011,
            "max": 6190
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11742,
            "mean": 30467,
            "median": 33718,
            "max": 45942
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1455831,
          "size": 6517
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5499,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 450,
            "min": 745,
            "mean": 2834,
            "median": 1012,
            "max": 8044
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 626,
            "min": 23980,
            "mean": 30084,
            "median": 29413,
            "max": 50299
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4229,
            "min": 24018,
            "mean": 157991,
            "median": 78907,
            "max": 32318665
          },
          "burn(address,uint256,uint256)": {
            "calls": 387,
            "min": 25257,
            "mean": 29193,
            "median": 27937,
            "max": 33351
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 929,
            "min": 25224,
            "mean": 220120,
            "median": 64776,
            "max": 31881173
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1129,
            "min": 24343,
            "mean": 143650,
            "median": 58914,
            "max": 30233255
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 2003,
            "min": 26556,
            "mean": 44848,
            "median": 46704,
            "max": 46712
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2675,
            "mean": 2675,
            "median": 2675,
            "max": 2675
          },
          "lastDataHash()": {
            "calls": 26,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 4997,
            "min": 23050,
            "mean": 109738,
            "median": 72981,
            "max": 9771486
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 877,
            "min": 24203,
            "mean": 187874,
            "median": 62623,
            "max": 29415590
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1068,
            "min": 24020,
            "mean": 221517,
            "median": 58235,
            "max": 33836910
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1661,
            "min": 25851,
            "mean": 45131,
            "median": 45991,
            "max": 45991
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 142,
            "min": 26846,
            "mean": 36715,
            "median": 33986,
            "max": 47739
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 125,
            "min": 25692,
            "mean": 30500,
            "median": 30624,
            "max": 30864
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 144,
            "min": 33671,
            "mean": 93124,
            "median": 67389,
            "max": 1277571
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 118,
            "min": 59360,
            "mean": 97096,
            "median": 62728,
            "max": 1009908
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 448725,
          "size": 1889
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 434,
            "min": 2911,
            "mean": 2942,
            "median": 2914,
            "max": 6391
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26544,
            "mean": 26544,
            "median": 26544,
            "max": 26544
          },
          "signer()": {
            "calls": 4,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 816228,
          "size": 4125
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 435,
            "mean": 435,
            "median": 435,
            "max": 435
          },
          "allowance(address,address)": {
            "calls": 2447,
            "min": 598,
            "mean": 2337,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 2622,
            "min": 26122,
            "mean": 46157,
            "median": 46238,
            "max": 46406
          },
          "balanceOf(address)": {
            "calls": 13190,
            "min": 608,
            "mean": 2431,
            "median": 2608,
            "max": 2608
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24304,
            "mean": 29295,
            "median": 27408,
            "max": 34632
          },
          "decimals()": {
            "calls": 312,
            "min": 2311,
            "mean": 2311,
            "median": 2311,
            "max": 2311
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 25160,
            "mean": 27096,
            "median": 28108,
            "max": 28698
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 25164,
            "mean": 35874,
            "median": 25752,
            "max": 52650
          },
          "mint(address,uint256)": {
            "calls": 3223,
            "min": 24470,
            "mean": 68011,
            "median": 68470,
            "max": 68830
          },
          "name()": {
            "calls": 258,
            "min": 2929,
            "mean": 5166,
            "median": 3108,
            "max": 9486
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23697,
            "mean": 43851,
            "median": 30288,
            "max": 74424
          },
          "symbol()": {
            "calls": 258,
            "min": 2951,
            "mean": 5153,
            "median": 3130,
            "max": 9508
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 2574,
            "min": 24317,
            "mean": 45778,
            "median": 51658,
            "max": 51878
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1546,
            "min": 24999,
            "mean": 41119,
            "median": 32987,
            "max": 54959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 816276,
          "size": 4132
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 598,
            "mean": 598,
            "median": 598,
            "max": 598
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21925,
            "mean": 22260,
            "median": 22021,
            "max": 46346
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28642,
            "mean": 68015,
            "median": 68474,
            "max": 68830
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22821,
            "mean": 23085,
            "median": 23085,
            "max": 23421
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 25203,
            "mean": 38699,
            "median": 30831,
            "max": 52754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 840124,
          "size": 3816
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2758,
            "mean": 2758,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 1016,
            "min": 23966,
            "mean": 35272,
            "median": 36132,
            "max": 46658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1211914,
          "size": 5389
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2154,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 223,
            "min": 21548,
            "mean": 22050,
            "median": 21800,
            "max": 95473
          },
          "checkpointAt(address,uint256)": {
            "calls": 331,
            "min": 0,
            "mean": 46,
            "median": 0,
            "max": 4869
          },
          "checkpointCount(address)": {
            "calls": 1286,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 518,
            "min": 21192,
            "mean": 21644,
            "median": 21432,
            "max": 91760
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23524,
            "mean": 43342,
            "median": 58797,
            "max": 75897
          },
          "delegates(address)": {
            "calls": 3872,
            "min": 0,
            "mean": 263,
            "median": 0,
            "max": 2615
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 28297,
            "mean": 48343,
            "median": 48653,
            "max": 48653
          },
          "directIncrementNonce(address)": {
            "calls": 812,
            "min": 26857,
            "mean": 31416,
            "median": 26869,
            "max": 43969
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5425,
            "mean": 5925,
            "median": 5425,
            "max": 7425
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 408,
            "mean": 3561,
            "median": 5042,
            "max": 5234
          },
          "getVotes(address)": {
            "calls": 2886,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4825
          },
          "getVotesTotalSupply()": {
            "calls": 766,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4645
          },
          "mint(address,uint256)": {
            "calls": 696,
            "min": 21548,
            "mean": 21862,
            "median": 21800,
            "max": 94888
          },
          "name()": {
            "calls": 256,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "nonces(address)": {
            "calls": 519,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "totalSupply()": {
            "calls": 382,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 514,
            "min": 21548,
            "mean": 21843,
            "median": 21788,
            "max": 86998
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 307465,
          "size": 1206
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21490,
            "mean": 21490,
            "median": 21490,
            "max": 21490
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21711,
            "mean": 22019,
            "median": 22095,
            "max": 22095
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2629,
            "mean": 4146,
            "median": 4754,
            "max": 4754
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 388,
            "min": 22478,
            "mean": 37226,
            "median": 44639,
            "max": 44859
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 776,
            "min": 22664,
            "mean": 37750,
            "median": 45242,
            "max": 45486
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1428888,
          "size": 6672
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31983,
            "mean": 31983,
            "median": 31983,
            "max": 31983
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12238,
            "mean": 12238,
            "median": 12238,
            "max": 12238
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 6454,
            "mean": 19255,
            "median": 9144,
            "max": 140472
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 1078,
            "mean": 1078,
            "median": 1078,
            "max": 1078
          },
          "entryPoint()": {
            "calls": 7,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2829,
            "mean": 16779,
            "median": 13197,
            "max": 37895
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 136,
            "min": 3006,
            "mean": 69686,
            "median": 73482,
            "max": 224461
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 123,
            "min": 3328,
            "mean": 63440,
            "median": 38573,
            "max": 304460
          },
          "fallback()": {
            "calls": 5,
            "min": 270,
            "mean": 28580,
            "median": 291,
            "max": 108870
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5452,
            "mean": 5452,
            "median": 5452,
            "max": 5452
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2513,
            "mean": 24017,
            "median": 24084,
            "max": 24084
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 7202,
            "mean": 8571,
            "median": 7243,
            "max": 14470
          },
          "owner()": {
            "calls": 267,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "receive()": {
            "calls": 258,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6971,
            "mean": 6971,
            "median": 6971,
            "max": 6971
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23483,
            "mean": 23483,
            "median": 23483,
            "max": 23483
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2411,
            "mean": 2411,
            "median": 2411,
            "max": 2411
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2522,
            "mean": 13570,
            "median": 13570,
            "max": 24619
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 7174,
            "mean": 7174,
            "median": 7174,
            "max": 7174
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 459,
            "mean": 24429,
            "median": 29570,
            "max": 38120
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45605,
            "mean": 45605,
            "median": 45605,
            "max": 45605
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1345208,
          "size": 6980
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2393,
            "mean": 2393,
            "median": 2393,
            "max": 2393
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2535,
            "mean": 5340,
            "median": 7990,
            "max": 8071
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7975,
            "mean": 8011,
            "median": 8011,
            "max": 8047
          },
          "decimals()": {
            "calls": 20,
            "min": 347,
            "mean": 356,
            "median": 347,
            "max": 438
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30674,
            "mean": 119750,
            "median": 121219,
            "max": 121455
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30605,
            "mean": 120028,
            "median": 121134,
            "max": 132036
          },
          "name()": {
            "calls": 1,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 8035,
            "mean": 8035,
            "median": 8035,
            "max": 8107
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 8040,
            "mean": 8040,
            "median": 8040,
            "max": 8112
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24776,
            "mean": 77985,
            "median": 78438,
            "max": 93291
          },
          "symbol()": {
            "calls": 1,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5556,
            "mean": 5556,
            "median": 5556,
            "max": 5556
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26948,
            "mean": 78895,
            "median": 79633,
            "max": 79781
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1212662,
          "size": 5712
        },
        "functions": {
          "eip712Domain()": {
            "calls": 341,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 6309,
            "mean": 23195,
            "median": 11341,
            "max": 63789
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 125,
            "min": 6240,
            "mean": 87484,
            "median": 64160,
            "max": 243638
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 135,
            "min": 28959,
            "mean": 95493,
            "median": 99601,
            "max": 221534
          },
          "fallback()": {
            "calls": 872,
            "min": 262,
            "mean": 6347,
            "median": 3432,
            "max": 135263
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 358,
            "min": 655,
            "mean": 14686,
            "median": 14382,
            "max": 38043
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 6293,
            "mean": 6293,
            "median": 6293,
            "max": 6293
          },
          "mockId()": {
            "calls": 2,
            "min": 478,
            "mean": 478,
            "median": 478,
            "max": 478
          },
          "owner()": {
            "calls": 807,
            "min": 5731,
            "mean": 5731,
            "median": 5731,
            "max": 5731
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "receive()": {
            "calls": 1,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5725,
            "mean": 14277,
            "median": 14299,
            "max": 22873
          },
          "state()": {
            "calls": 772,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "token()": {
            "calls": 536,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 6234,
            "mean": 35618,
            "median": 35780,
            "max": 52880
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1239396,
          "size": 5839
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5205,
            "mean": 5205,
            "median": 5205,
            "max": 5205
          },
          "mockId()": {
            "calls": 1,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5902,
            "mean": 14454,
            "median": 14476,
            "max": 23050
          },
          "state()": {
            "calls": 513,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18857,
            "mean": 18857,
            "median": 18857,
            "max": 18857
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 178113,
          "size": 605
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2426,
            "min": 94895,
            "mean": 95469,
            "median": 95519,
            "max": 95723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 795817,
          "size": 3467
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2504,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 27027,
            "mean": 47047,
            "median": 47263,
            "max": 47687
          },
          "balanceOf(address,uint256)": {
            "calls": 2377,
            "min": 2585,
            "mean": 2585,
            "median": 2585,
            "max": 2585
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24455,
            "mean": 27458,
            "median": 25407,
            "max": 30732
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 26660,
            "mean": 47175,
            "median": 47328,
            "max": 47724
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 24077,
            "mean": 32039,
            "median": 26557,
            "max": 46469
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 392,
            "min": 25726,
            "mean": 40090,
            "median": 29236,
            "max": 61958
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24503,
            "mean": 45966,
            "median": 47299,
            "max": 47855
          },
          "name(uint256)": {
            "calls": 256,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 46198,
            "mean": 46198,
            "median": 46198,
            "max": 46198
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 862,
            "mean": 862,
            "median": 862,
            "max": 862
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1044,
            "min": 24470,
            "mean": 37616,
            "median": 30548,
            "max": 53052
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1648,
            "min": 27261,
            "mean": 38602,
            "median": 33301,
            "max": 61226
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1369290,
          "size": 6122
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1077,
            "min": 24346,
            "mean": 42837,
            "median": 48663,
            "max": 49002
          },
          "balanceOf(address)": {
            "calls": 10371,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "burn(uint256)": {
            "calls": 220,
            "min": 28388,
            "mean": 29385,
            "median": 28827,
            "max": 31483
          },
          "directApprove(address,uint256)": {
            "calls": 1064,
            "min": 24364,
            "mean": 44531,
            "median": 49421,
            "max": 49715
          },
          "directGetApproved(uint256)": {
            "calls": 1580,
            "min": 2571,
            "mean": 4618,
            "median": 4816,
            "max": 4816
          },
          "directOwnerOf(uint256)": {
            "calls": 2588,
            "min": 2570,
            "mean": 2779,
            "median": 2827,
            "max": 2827
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 634,
            "min": 57292,
            "mean": 74903,
            "median": 63812,
            "max": 130588
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 528,
            "min": 63922,
            "mean": 94697,
            "median": 65356,
            "max": 241725
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 876,
            "min": 24618,
            "mean": 42041,
            "median": 46758,
            "max": 46764
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1840,
            "min": 25419,
            "mean": 42853,
            "median": 41289,
            "max": 57854
          },
          "exists(uint256)": {
            "calls": 543,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "getApproved(uint256)": {
            "calls": 1554,
            "min": 2537,
            "mean": 4562,
            "median": 4727,
            "max": 4727
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2995,
            "mean": 2995,
            "median": 2995,
            "max": 2998
          },
          "getExtraData(uint256)": {
            "calls": 3677,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2988,
            "mean": 5577,
            "median": 6318,
            "max": 7380
          },
          "mint(address,uint256)": {
            "calls": 10917,
            "min": 24342,
            "mean": 64424,
            "median": 68679,
            "max": 69042
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 47201,
            "mean": 56425,
            "median": 52266,
            "max": 69726
          },
          "ownerOf(uint256)": {
            "calls": 5687,
            "min": 631,
            "mean": 2610,
            "median": 2631,
            "max": 2631
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71356,
            "mean": 81972,
            "median": 72336,
            "max": 121831
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72519,
            "mean": 98711,
            "median": 73914,
            "max": 232842
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1858,
            "min": 41545,
            "mean": 69283,
            "median": 64258,
            "max": 132067
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 496,
            "min": 64484,
            "mean": 93460,
            "median": 65689,
            "max": 241978
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1253,
            "min": 24223,
            "mean": 42811,
            "median": 46363,
            "max": 46366
          },
          "setAux(address,uint224)": {
            "calls": 777,
            "min": 27821,
            "mean": 44808,
            "median": 44906,
            "max": 44921
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1593,
            "min": 24062,
            "mean": 36908,
            "median": 43998,
            "max": 44478
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1870,
            "min": 25011,
            "mean": 42756,
            "median": 41020,
            "max": 57373
          },
          "uncheckedBurn(uint256)": {
            "calls": 2994,
            "min": 23777,
            "mean": 30430,
            "median": 31312,
            "max": 36496
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 191,
            "min": 55057,
            "mean": 55299,
            "median": 55285,
            "max": 55648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 597887,
          "size": 2555
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31263,
            "mean": 98509,
            "median": 91746,
            "max": 159808
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 260,
            "min": 303121,
            "mean": 395678,
            "median": 326195,
            "max": 3692498
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2898,
            "mean": 5852,
            "median": 5137,
            "max": 11614
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22237,
            "mean": 41410,
            "median": 44149,
            "max": 44149
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 168112,
          "size": 766
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "garbage()": {
            "calls": 780,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "receive()": {
            "calls": 8,
            "min": 0,
            "mean": 49782,
            "median": 21095,
            "max": 286581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 770452,
          "size": 3346
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7273,
            "min": 357,
            "mean": 4160,
            "median": 4516,
            "max": 4516
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 263,
            "min": 26900,
            "mean": 28325,
            "median": 28364,
            "max": 28364
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 37,
            "min": 27363,
            "mean": 44778,
            "median": 42514,
            "max": 59601
          },
          "guardedByOnlyRoles()": {
            "calls": 37,
            "min": 23992,
            "mean": 44205,
            "median": 45937,
            "max": 56836
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1300,
            "mean": 9291,
            "median": 8061,
            "max": 16989
          },
          "hasRole(address,uint256)": {
            "calls": 1933,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "owner()": {
            "calls": 1960,
            "min": 2330,
            "mean": 2536,
            "median": 2551,
            "max": 2551
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 257,
            "min": 2512,
            "mean": 2821,
            "median": 2629,
            "max": 4749
          },
          "roleHolderCount(uint256)": {
            "calls": 3392,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolders(uint256)": {
            "calls": 3418,
            "min": 2716,
            "mean": 3178,
            "median": 2716,
            "max": 18853
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23692,
            "mean": 43563,
            "median": 43640,
            "max": 43976
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 37,
            "min": 24509,
            "mean": 150439,
            "median": 156200,
            "max": 223227
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21669,
            "mean": 27072,
            "median": 26523,
            "max": 43953
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23774,
            "mean": 25289,
            "median": 26586,
            "max": 26586
          },
          "setOwner(address)": {
            "calls": 266,
            "min": 21769,
            "mean": 27222,
            "median": 26809,
            "max": 43909
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23769,
            "mean": 25263,
            "median": 26581,
            "max": 43681
          },
          "setRole(address,uint256,bool)": {
            "calls": 1404,
            "min": 24491,
            "mean": 59482,
            "median": 74046,
            "max": 74562
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6127,
            "min": 33578,
            "mean": 60164,
            "median": 73860,
            "max": 78764
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 131415,
          "size": 391
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "getValue(uint256)": {
            "calls": 946,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "setValue(uint256,uint256)": {
            "calls": 946,
            "min": 2479,
            "mean": 22336,
            "median": 22379,
            "max": 22379
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 366463,
          "size": 3054
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23437,
            "mean": 33955,
            "median": 33955,
            "max": 44473
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 192,
            "min": 27826,
            "mean": 62896,
            "median": 67889,
            "max": 91159
          },
          "isInitializing()": {
            "calls": 169,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23421,
            "mean": 23421,
            "median": 23421,
            "max": 23421
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 226,
            "min": 24769,
            "mean": 56583,
            "median": 67681,
            "max": 91135
          },
          "version()": {
            "calls": 228,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "x()": {
            "calls": 132,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 560701,
          "size": 2398
        },
        "functions": {
          "owner()": {
            "calls": 735,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 25048,
            "mean": 33915,
            "median": 25072,
            "max": 59312
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 742399,
          "size": 3290
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23998,
            "mean": 23998,
            "median": 23998,
            "max": 23998
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26280,
            "mean": 37934,
            "median": 44272,
            "max": 46421
          },
          "owner()": {
            "calls": 1727,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 119,
            "min": 29573,
            "mean": 61469,
            "median": 68745,
            "max": 76233
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 118,
            "min": 28606,
            "mean": 52191,
            "median": 61066,
            "max": 61433
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 132,
            "min": 28907,
            "mean": 53809,
            "median": 62293,
            "max": 62685
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 262,
            "min": 28476,
            "mean": 49274,
            "median": 48286,
            "max": 64451
          },
          "rescueETH(address,uint256)": {
            "calls": 1411,
            "min": 5914,
            "mean": 32697,
            "median": 36818,
            "max": 62107
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 7093,
            "mean": 7093,
            "median": 7093,
            "max": 7093
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 671694,
          "size": 2892
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 526,
            "min": 21975,
            "mean": 24477,
            "median": 24558,
            "max": 37372
          },
          "multicallBrutalized(bytes[])": {
            "calls": 249,
            "min": 368727,
            "mean": 441228,
            "median": 375478,
            "max": 3420229
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 44682,
            "mean": 44682,
            "median": 44682,
            "max": 44682
          },
          "returnsRandomizedString(string)": {
            "calls": 264,
            "min": 781,
            "mean": 1688,
            "median": 1606,
            "max": 2818
          },
          "returnsSender()": {
            "calls": 1,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 483,
            "mean": 483,
            "median": 483,
            "max": 483
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 857,
            "mean": 873,
            "median": 878,
            "max": 890
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 349220,
          "size": 1343
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22645,
            "mean": 22645,
            "median": 22645,
            "max": 22645
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23969,
            "mean": 28932,
            "median": 29077,
            "max": 29081
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28401,
            "mean": 28401,
            "median": 28401,
            "max": 28401
          },
          "owner()": {
            "calls": 823,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2919,
            "mean": 2919,
            "median": 2919,
            "max": 2923
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23131,
            "mean": 23131,
            "median": 23131,
            "max": 23131
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44547,
            "mean": 44547,
            "median": 44547,
            "max": 44547
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23593,
            "mean": 28529,
            "median": 28633,
            "max": 28637
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23987,
            "mean": 24974,
            "median": 24007,
            "max": 28837
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23351,
            "mean": 34674,
            "median": 45479,
            "max": 45479
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 265240,
          "size": 961
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2280,
            "mean": 2280,
            "median": 2280,
            "max": 2280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 704567,
          "size": 2987
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22666,
            "mean": 22666,
            "median": 22666,
            "max": 22666
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 24048,
            "mean": 29027,
            "median": 29156,
            "max": 29160
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24199,
            "mean": 46098,
            "median": 48233,
            "max": 48609
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 26149,
            "mean": 45831,
            "median": 46061,
            "max": 46437
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 3047,
            "mean": 3047,
            "median": 3047,
            "max": 3051
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 3046,
            "mean": 3046,
            "median": 3046,
            "max": 3050
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28481,
            "mean": 28481,
            "median": 28481,
            "max": 28481
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 639,
            "mean": 13434,
            "median": 10228,
            "max": 41804
          },
          "owner()": {
            "calls": 837,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2991
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 24062,
            "mean": 27361,
            "median": 26230,
            "max": 29414
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23154,
            "mean": 23154,
            "median": 23154,
            "max": 23154
          },
          "renounceRoles(uint256)": {
            "calls": 61,
            "min": 23414,
            "mean": 27913,
            "median": 28250,
            "max": 28574
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44591,
            "mean": 44591,
            "median": 44591,
            "max": 44591
          },
          "revokeRoles(address,uint256)": {
            "calls": 70,
            "min": 24214,
            "mean": 28329,
            "median": 30955,
            "max": 31531
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 716,
            "mean": 23978,
            "median": 22889,
            "max": 53426
          },
          "rolesOf(address)": {
            "calls": 2283,
            "min": 2945,
            "mean": 2945,
            "median": 2945,
            "max": 2949
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23628,
            "mean": 28565,
            "median": 28668,
            "max": 28672
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 23900,
            "mean": 37661,
            "median": 37552,
            "max": 46404
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 24066,
            "mean": 25313,
            "median": 24086,
            "max": 28916
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23374,
            "mean": 34438,
            "median": 34438,
            "max": 45502
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25781,
            "mean": 45946,
            "median": 46098,
            "max": 48299
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23679,
            "mean": 44039,
            "median": 45861,
            "max": 46197
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25758,
            "mean": 46172,
            "median": 47904,
            "max": 48276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 386578,
          "size": 1522
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 79383,
          "size": 146
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476990,
          "size": 1993
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 26463,
            "mean": 26463,
            "median": 26463,
            "max": 26463
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 43543,
            "mean": 43543,
            "median": 43543,
            "max": 43543
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65737,
            "mean": 65737,
            "median": 65737,
            "max": 65737
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45581,
            "mean": 45581,
            "median": 45581,
            "max": 45581
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69963,
            "mean": 69963,
            "median": 69963,
            "max": 69963
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 66032,
            "mean": 66032,
            "median": 66032,
            "max": 66032
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 67153,
            "mean": 67153,
            "median": 67153,
            "max": 67153
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 47971,
            "mean": 47971,
            "median": 47971,
            "max": 47971
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 58515,
            "mean": 58515,
            "median": 58515,
            "max": 58515
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2400,
            "mean": 2400,
            "median": 2400,
            "max": 2400
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 146896,
          "size": 459
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3150,
            "mean": 3153,
            "median": 3153,
            "max": 3156
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3497,
            "mean": 3497,
            "median": 3497,
            "max": 3497
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5487,
            "mean": 5488,
            "median": 5487,
            "max": 5493
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 5601,
            "mean": 6170,
            "median": 6170,
            "max": 6739
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3158,
            "mean": 3161,
            "median": 3161,
            "max": 3164
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3181,
            "mean": 3184,
            "median": 3184,
            "max": 3187
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3292,
            "mean": 3292,
            "median": 3292,
            "max": 3292
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5167,
            "mean": 5170,
            "median": 5170,
            "max": 5173
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43851,
            "mean": 43866,
            "median": 43866,
            "max": 43881
          },
          "value()": {
            "calls": 2,
            "min": 5095,
            "mean": 5098,
            "median": 5098,
            "max": 5101
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 896304,
          "size": 3928
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 691,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 259,
            "min": 26921,
            "mean": 28396,
            "median": 28411,
            "max": 29185
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 259,
            "min": 33968,
            "mean": 40009,
            "median": 40124,
            "max": 40124
          },
          "owner()": {
            "calls": 1229,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43559,
            "mean": 43569,
            "median": 43571,
            "max": 43571
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91591,
            "mean": 111277,
            "median": 111515,
            "max": 111515
          },
          "setMaxTimedRole(uint256)": {
            "calls": 19,
            "min": 26513,
            "mean": 29480,
            "median": 26873,
            "max": 43973
          },
          "setOwner(address)": {
            "calls": 43,
            "min": 26820,
            "mean": 28024,
            "median": 26832,
            "max": 43932
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 711,
            "min": 24980,
            "mean": 50408,
            "median": 52244,
            "max": 52352
          },
          "timedRoleActive(address,uint256)": {
            "calls": 758,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 320727,
          "size": 1294
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22508,
            "mean": 22508,
            "median": 22508,
            "max": 22508
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "revertWithError()": {
            "calls": 1,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22309,
            "mean": 22309,
            "median": 22309,
            "max": 22309
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 3094,
            "mean": 10153,
            "median": 5760,
            "max": 32618
          },
          "value()": {
            "calls": 1,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 378830,
          "size": 1350
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 1650,
            "min": 561,
            "mean": 1495,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 272746,
          "size": 858
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 549,
            "mean": 2547,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 527112,
          "size": 2034
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 2814,
            "min": 561,
            "mean": 1652,
            "median": 2561,
            "max": 2561
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24488,
            "mean": 63672,
            "median": 66794,
            "max": 114617
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 275892,
          "size": 874
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1034,
            "min": 549,
            "mean": 2537,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 377112,
          "size": 1342
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 1664,
            "min": 561,
            "mean": 1487,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 269728,
          "size": 844
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 549,
            "mean": 2537,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 266402,
          "size": 829
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 514,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 247729,
          "size": 1092
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24240,
            "mean": 73966,
            "median": 36255,
            "max": 117831
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 431,
            "mean": 431,
            "median": 431,
            "max": 431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 107580,
          "size": 420
        },
        "functions": {
          "fallback()": {
            "calls": 6262,
            "min": 2752,
            "mean": 15711,
            "median": 10047,
            "max": 355888
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1131932,
          "size": 5062
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 242,
            "mean": 242,
            "median": 242,
            "max": 242
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "cancel(bytes32)": {
            "calls": 17,
            "min": 25420,
            "mean": 25431,
            "median": 25432,
            "max": 25432
          },
          "execute(bytes32,bytes)": {
            "calls": 255,
            "min": 28356,
            "mean": 43761,
            "median": 44815,
            "max": 95366
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 22944,
            "mean": 306498,
            "median": 377078,
            "max": 377078
          },
          "minDelay()": {
            "calls": 236,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "operationState(bytes32)": {
            "calls": 937,
            "min": 2437,
            "mean": 2442,
            "median": 2442,
            "max": 2448
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 26173,
            "mean": 53929,
            "median": 55285,
            "max": 57717
          },
          "readyTimestamp(bytes32)": {
            "calls": 703,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 23946,
            "mean": 33587,
            "median": 23958,
            "max": 75896
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 592102,
          "size": 2527
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "decimals()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "deposit()": {
            "calls": 551,
            "min": 27583,
            "mean": 65376,
            "median": 67383,
            "max": 67383
          },
          "name()": {
            "calls": 1,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "receive()": {
            "calls": 289,
            "min": 27376,
            "mean": 63666,
            "median": 67176,
            "max": 67176
          },
          "symbol()": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "withdraw(uint256)": {
            "calls": 278,
            "min": 27886,
            "mean": 39764,
            "median": 40210,
            "max": 40330
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 759687,
          "size": 3305
        },
        "functions": {
          "adminOf(address)": {
            "calls": 484,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24161,
            "mean": 26369,
            "median": 26369,
            "max": 28577
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22255,
            "mean": 61102,
            "median": 22267,
            "max": 125961
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105400,
            "mean": 158724,
            "median": 159172,
            "max": 159304
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23498,
            "mean": 143601,
            "median": 159537,
            "max": 159765
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 578,
            "mean": 578,
            "median": 578,
            "max": 578
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24144,
            "mean": 27844,
            "median": 24156,
            "max": 33390
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35354,
            "mean": 51045,
            "median": 51045,
            "max": 66736
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 258572,
          "size": 1072
        },
        "functions": {
          "implementation()": {
            "calls": 4880,
            "min": 160,
            "mean": 2266,
            "median": 2281,
            "max": 2281
          },
          "owner()": {
            "calls": 484,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "renounceOwnership()": {
            "calls": 31,
            "min": 23086,
            "mean": 23284,
            "median": 23354,
            "max": 23354
          },
          "transferOwnership(address)": {
            "calls": 125,
            "min": 23549,
            "mean": 26954,
            "median": 28215,
            "max": 28215
          },
          "upgradeTo(address)": {
            "calls": 90,
            "min": 23636,
            "mean": 26714,
            "median": 23732,
            "max": 32503
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3159794,
          "size": 15715
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 22916,
            "mean": 86138,
            "median": 46790,
            "max": 233337
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21783,
            "mean": 22628,
            "median": 21795,
            "max": 26437
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 9297,
            "mean": 9431,
            "median": 9332,
            "max": 9763
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 3027836,
          "size": 15056
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 88936,
            "mean": 38960941,
            "median": 1012600,
            "max": 96809454
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 5786374,
          "size": 28830
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1101,
            "mean": 1101,
            "median": 1101,
            "max": 1101
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1029,
            "mean": 1029,
            "median": 1029,
            "max": 1029
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 360,
            "mean": 360,
            "median": 360,
            "max": 360
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 384,
            "mean": 384,
            "median": 384,
            "max": 384
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 680,
            "mean": 680,
            "median": 680,
            "max": 680
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 670,
            "mean": 670,
            "median": 670,
            "max": 670
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 350716,
          "size": 1310
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 121,
            "min": 67262,
            "mean": 67520,
            "median": 67634,
            "max": 67634
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 161178,
          "size": 532
        },
        "functions": {
          "generate(bytes)": {
            "calls": 133,
            "min": 0,
            "mean": 1867,
            "median": 1246,
            "max": 53139
          },
          "next(uint256)": {
            "calls": 252,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 5993081,
          "size": 29862
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1368,
            "mean": 1368,
            "median": 1368,
            "max": 1368
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 5659984,
          "size": 28199
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 29,
            "min": 725,
            "mean": 790,
            "median": 806,
            "max": 818
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 30,
            "min": 589987,
            "mean": 664157,
            "median": 590649,
            "max": 2796279
          },
          "recover(bytes32,bytes)": {
            "calls": 165,
            "min": 22549,
            "mean": 27177,
            "median": 26762,
            "max": 30444
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 50,
            "min": 3581,
            "mean": 25096,
            "median": 25845,
            "max": 26181
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 25910,
            "mean": 26154,
            "median": 26282,
            "max": 26352
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 152,
            "min": 615556,
            "mean": 760516,
            "median": 616519,
            "max": 4766903
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 48,
            "min": 615031,
            "mean": 726063,
            "median": 615811,
            "max": 3891300
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 615081,
            "mean": 723635,
            "median": 615904,
            "max": 4314723
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 165,
            "min": 23044,
            "mean": 30247,
            "median": 30462,
            "max": 30474
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 50,
            "min": 3563,
            "mean": 25085,
            "median": 25827,
            "max": 26163
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 25963,
            "mean": 26199,
            "median": 26335,
            "max": 26347
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 152,
            "min": 619265,
            "mean": 792357,
            "median": 620034,
            "max": 4717540
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 48,
            "min": 615041,
            "mean": 636465,
            "median": 616022,
            "max": 1212818
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 292,
            "min": 615142,
            "mean": 715880,
            "median": 616095,
            "max": 4378105
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 754758,
          "size": 3282
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2528,
            "mean": 5911,
            "median": 4793,
            "max": 9357
          },
          "batchData()": {
            "calls": 520,
            "min": 2679,
            "mean": 179566,
            "median": 2691,
            "max": 8636111
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "batchIds()": {
            "calls": 520,
            "min": 2563,
            "mean": 5948,
            "median": 4831,
            "max": 9395
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "from()": {
            "calls": 512,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "id()": {
            "calls": 512,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "mintData()": {
            "calls": 512,
            "min": 2700,
            "mean": 320953,
            "median": 2712,
            "max": 8967600
          },
          "operator()": {
            "calls": 512,
            "min": 2336,
            "mean": 2336,
            "median": 2336,
            "max": 2336
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2090807,
          "size": 9463
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61315,
            "mean": 61448,
            "median": 61543,
            "max": 61557
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 57915,
            "mean": 58048,
            "median": 58143,
            "max": 58157
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 49340,
            "mean": 51565,
            "median": 49340,
            "max": 120540
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61527,
            "mean": 61660,
            "median": 61755,
            "max": 61762
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 49261,
            "mean": 62619,
            "median": 58257,
            "max": 75122
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 303557,
          "size": 1253
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 37,
            "min": 31081,
            "mean": 50454,
            "median": 51017,
            "max": 51353
          },
          "mint(address,uint256)": {
            "calls": 36,
            "min": 61056,
            "mean": 71730,
            "median": 61392,
            "max": 95784
          },
          "sum()": {
            "calls": 1,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "transfer(address,uint256)": {
            "calls": 1,
            "min": 33728,
            "mean": 33728,
            "median": 33728,
            "max": 33728
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 7162313,
          "size": 35699
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24653,
            "mean": 50207,
            "median": 49855,
            "max": 74074
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 373506,
          "size": 1514
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 179,
            "mean": 1148,
            "median": 179,
            "max": 3088
          },
          "data()": {
            "calls": 257,
            "min": 2692,
            "mean": 3423,
            "median": 2692,
            "max": 11440
          },
          "datahash()": {
            "calls": 638,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25124,
            "mean": 35573,
            "median": 25124,
            "max": 133840
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 15493281,
          "size": 77270
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 187,
            "mean": 187,
            "median": 187,
            "max": 187
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22106,
            "mean": 22457,
            "median": 22439,
            "max": 23037
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22270,
            "mean": 22520,
            "median": 22486,
            "max": 23048
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 361609,
          "size": 1459
        },
        "functions": {
          "datahash()": {
            "calls": 390,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 320412,
          "size": 1270
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2590,
            "mean": 4127,
            "median": 2590,
            "max": 11338
          },
          "from()": {
            "calls": 1024,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "id()": {
            "calls": 1024,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "operator()": {
            "calls": 1024,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1891868,
          "size": 8549
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61825,
            "mean": 63440,
            "median": 61837,
            "max": 113137
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 56809,
            "mean": 57468,
            "median": 57025,
            "max": 74137
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 64830,
            "mean": 69375,
            "median": 69516,
            "max": 69630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2591511,
          "size": 12877
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 458,
            "min": 655,
            "mean": 676,
            "median": 667,
            "max": 850
          },
          "returnsHash(bytes)": {
            "calls": 458,
            "min": 576,
            "mean": 594,
            "median": 588,
            "max": 768
          },
          "revertsWithCustomError()": {
            "calls": 8,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1546120,
          "size": 7656
        },
        "functions": {
          "get(address)": {
            "calls": 508,
            "min": 2461,
            "mean": 5707,
            "median": 5707,
            "max": 8954
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26541,
            "mean": 48804,
            "median": 37082,
            "max": 164993
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 8686681,
          "size": 43308
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 182,
            "min": 21658,
            "mean": 44677,
            "median": 44018,
            "max": 142119
          },
          "addToBytes32Set(bytes32)": {
            "calls": 179,
            "min": 21689,
            "mean": 47534,
            "median": 46287,
            "max": 161454
          },
          "addressSetAt(uint256)": {
            "calls": 16,
            "min": 4695,
            "mean": 6548,
            "median": 4695,
            "max": 8933
          },
          "addressSetContains(address)": {
            "calls": 151,
            "min": 376,
            "mean": 6586,
            "median": 6843,
            "max": 6856
          },
          "bytes32SetAt(uint256)": {
            "calls": 11,
            "min": 4663,
            "mean": 6972,
            "median": 6755,
            "max": 11050
          },
          "bytes32SetContains(bytes32)": {
            "calls": 194,
            "min": 360,
            "mean": 8727,
            "median": 8903,
            "max": 8903
          },
          "removeFromAddressSet(address)": {
            "calls": 177,
            "min": 21679,
            "mean": 28040,
            "median": 28321,
            "max": 28321
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 180,
            "min": 21649,
            "mean": 30115,
            "median": 30523,
            "max": 30523
          },
          "uint8SetAt(uint256)": {
            "calls": 19,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26515,
            "mean": 50030,
            "median": 48714,
            "max": 142581
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28552,
            "mean": 53982,
            "median": 50837,
            "max": 161620
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24037,
            "mean": 27915,
            "median": 27001,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 23900266,
          "size": 119187
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 372,
            "mean": 372,
            "median": 372,
            "max": 386
          },
          "divWad(uint256,uint256)": {
            "calls": 90,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 352,
            "mean": 376,
            "median": 387,
            "max": 387
          },
          "divWadUp(uint256,uint256)": {
            "calls": 88,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 323,
            "min": 527,
            "mean": 573,
            "median": 540,
            "max": 909
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 379,
            "mean": 436,
            "median": 415,
            "max": 539
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 568,
            "mean": 583,
            "median": 581,
            "max": 927
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 322,
            "mean": 322,
            "median": 322,
            "max": 322
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 436,
            "mean": 445,
            "median": 449,
            "max": 449
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 393,
            "mean": 413,
            "median": 416,
            "max": 432
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 426,
            "mean": 447,
            "median": 454,
            "max": 468
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 402,
            "mean": 448,
            "median": 463,
            "max": 479
          },
          "mulWad(uint256,uint256)": {
            "calls": 114,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 414,
            "mean": 428,
            "median": 431,
            "max": 444
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 125,
            "min": 432,
            "mean": 432,
            "median": 432,
            "max": 432
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 921,
            "mean": 921,
            "median": 921,
            "max": 921
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 656,
            "mean": 1643,
            "median": 1643,
            "max": 2630
          },
          "sDivWad(int256,int256)": {
            "calls": 83,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 440,
            "mean": 510,
            "median": 541,
            "max": 541
          },
          "sMulWad(int256,int256)": {
            "calls": 102,
            "min": 509,
            "mean": 521,
            "median": 522,
            "max": 522
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 448,
            "mean": 554,
            "median": 570,
            "max": 570
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 19867923,
          "size": 99086
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 38064,
            "mean": 40313,
            "median": 40282,
            "max": 46791
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 38298,
            "mean": 52266,
            "median": 56654,
            "max": 56940
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 38284,
            "mean": 44470,
            "median": 40960,
            "max": 56705
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 795,
            "mean": 3563,
            "median": 1210,
            "max": 11846
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 38117,
            "mean": 41856,
            "median": 41016,
            "max": 57965
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2385463,
          "size": 11848
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 3847473,
          "size": 19149
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23686,
            "mean": 33797,
            "median": 33797,
            "max": 43908
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26617,
            "mean": 35165,
            "median": 35165,
            "max": 43714
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 4440658,
          "size": 22111
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 527,
            "min": 23230,
            "mean": 24224,
            "median": 23894,
            "max": 27078
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 24832,
            "mean": 27643,
            "median": 26324,
            "max": 523664
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 28084,
            "mean": 28603,
            "median": 28456,
            "max": 29905
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24363,
            "mean": 25774,
            "median": 25999,
            "max": 26735
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 275,
            "min": 2825,
            "mean": 731818,
            "median": 617748,
            "max": 4783445
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 3910149,
          "size": 19462
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 114063,
            "mean": 1295076,
            "median": 903811,
            "max": 83526516
          },
          "getArgAddress(uint256)": {
            "calls": 7,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 7,
            "min": 517,
            "mean": 544,
            "median": 553,
            "max": 553
          },
          "getArgUint256(uint256)": {
            "calls": 21,
            "min": 1576,
            "mean": 1576,
            "median": 1576,
            "max": 1576
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 7,
            "min": 20425,
            "mean": 41841,
            "median": 27106,
            "max": 69458
          },
          "getArgUint64(uint256)": {
            "calls": 7,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getArgUint8(uint256)": {
            "calls": 7,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "getCalldataHash()": {
            "calls": 7,
            "min": 1204,
            "mean": 2101,
            "median": 1512,
            "max": 3232
          },
          "revertWithError()": {
            "calls": 7,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 22332,
            "mean": 22332,
            "median": 22332,
            "max": 22332
          },
          "value()": {
            "calls": 1037,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 159821,
          "size": 525
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44373,
            "mean": 45124,
            "median": 44879,
            "max": 46542
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 896638,
          "size": 4412
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 386,
            "min": 559,
            "mean": 688,
            "median": 751,
            "max": 775
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 16793081,
          "size": 83753
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 22,
            "min": 482,
            "mean": 2754,
            "median": 2982,
            "max": 2982
          },
          "argsOnClone(address,uint256)": {
            "calls": 8,
            "min": 3026,
            "mean": 3028,
            "median": 3026,
            "max": 3043
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 6,
            "min": 758,
            "mean": 2841,
            "median": 3258,
            "max": 3258
          },
          "argsOnERC1967(address)": {
            "calls": 9,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2987
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 8,
            "min": 3013,
            "mean": 3013,
            "median": 3013,
            "max": 3013
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 6,
            "min": 3274,
            "mean": 3274,
            "median": 3274,
            "max": 3274
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 9,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 8,
            "min": 2988,
            "mean": 2990,
            "median": 2988,
            "max": 3005
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 3,
            "min": 3295,
            "mean": 3295,
            "median": 3295,
            "max": 3295
          },
          "argsOnERC1967I(address)": {
            "calls": 13,
            "min": 2969,
            "mean": 2969,
            "median": 2969,
            "max": 2969
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 2,
            "min": 3011,
            "mean": 3011,
            "median": 3011,
            "max": 3011
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 5,
            "min": 3288,
            "mean": 3288,
            "median": 3288,
            "max": 3288
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 4,
            "min": 2985,
            "mean": 2985,
            "median": 2985,
            "max": 2985
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 7,
            "min": 3012,
            "mean": 3012,
            "median": 3012,
            "max": 3012
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 67,
            "min": 35867,
            "mean": 47755,
            "median": 56087,
            "max": 56359
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 647,
            "mean": 650,
            "median": 647,
            "max": 663
          },
          "clone(address)": {
            "calls": 257,
            "min": 85378,
            "mean": 85378,
            "median": 85378,
            "max": 85378
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69263,
            "mean": 2551453,
            "median": 71896,
            "max": 96830790
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 263,
            "min": 69767,
            "mean": 7577965,
            "median": 73978,
            "max": 96834421
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 85786,
            "mean": 122037,
            "median": 86158,
            "max": 663910
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 185559,
            "median": 74922,
            "max": 11345746
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 264,
            "min": 0,
            "mean": 454072,
            "median": 101105,
            "max": 12864866
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 114377,
            "mean": 175363,
            "median": 114737,
            "max": 4678634
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 363,
            "min": 0,
            "mean": 253748,
            "median": 104510,
            "max": 12972548
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 101478,
            "mean": 172709,
            "median": 101850,
            "max": 3928181
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 264,
            "min": 0,
            "mean": 278472,
            "median": 104289,
            "max": 10932189
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 118613,
            "mean": 161748,
            "median": 118985,
            "max": 2997940
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 356,
            "min": 0,
            "mean": 329879,
            "median": 105410,
            "max": 13679629
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102477,
            "mean": 156675,
            "median": 102849,
            "max": 4660690
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 264,
            "min": 95127,
            "mean": 5068702,
            "median": 98210,
            "max": 96807875
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 389,
            "min": 94278,
            "mean": 161902,
            "median": 111564,
            "max": 4241093
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 452,
            "min": 99170,
            "mean": 18607669,
            "median": 105129,
            "max": 96834355
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 98490,
            "mean": 143909,
            "median": 98862,
            "max": 676567
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 267,
            "min": 99396,
            "mean": 7916324,
            "median": 103677,
            "max": 96830765
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 638,
            "min": 98490,
            "mean": 147547,
            "median": 99000,
            "max": 3589385
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 442,
            "min": 100205,
            "mean": 16903321,
            "median": 105997,
            "max": 96828193
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99506,
            "mean": 155215,
            "median": 99878,
            "max": 3891452
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 94614,
            "mean": 6611681,
            "median": 98737,
            "max": 96830092
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 98024,
            "mean": 154366,
            "median": 98162,
            "max": 4350205
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 132,
            "min": 98623,
            "mean": 3934654,
            "median": 100790,
            "max": 96826986
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115141,
            "mean": 115141,
            "median": 115141,
            "max": 115141
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 98832,
            "mean": 3989093,
            "median": 101251,
            "max": 96833079
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 99013,
            "mean": 153956,
            "median": 99151,
            "max": 2249394
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 149,
            "min": 99618,
            "mean": 1612111,
            "median": 102476,
            "max": 96800753
          },
          "revertWithError()": {
            "calls": 7135,
            "min": 267,
            "mean": 2374,
            "median": 2390,
            "max": 2390
          },
          "setValue(uint256)": {
            "calls": 7499,
            "min": 2492,
            "mean": 22223,
            "median": 22392,
            "max": 22392
          },
          "value()": {
            "calls": 21042,
            "min": 267,
            "mean": 2389,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 3835257,
          "size": 19088
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 584,
            "mean": 584,
            "median": 584,
            "max": 584
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 565,
            "mean": 565,
            "median": 565,
            "max": 565
          },
          "decodeBatch(bytes)": {
            "calls": 67,
            "min": 904,
            "mean": 2493,
            "median": 2912,
            "max": 4134
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 31,
            "min": 1231,
            "mean": 1421,
            "median": 1415,
            "max": 1770
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 631,
            "min": 502,
            "mean": 1572,
            "median": 850,
            "max": 4821
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 792,
            "mean": 810,
            "median": 804,
            "max": 840
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 839,
            "mean": 859,
            "median": 851,
            "max": 887
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23301,
            "mean": 23301,
            "median": 23301,
            "max": 23301
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 110,
            "min": 29716,
            "mean": 38850,
            "median": 38134,
            "max": 54656
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 638185,
            "mean": 725139,
            "median": 643511,
            "max": 4575996
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 7247648,
          "size": 36125
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 43936,
            "mean": 43936,
            "median": 43936,
            "max": 43936
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 43912,
            "mean": 43912,
            "median": 43912,
            "max": 43912
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 4642539,
          "size": 23119
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2387,
            "mean": 3481,
            "median": 2387,
            "max": 4726
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23748,
            "mean": 23771,
            "median": 23784,
            "max": 23784
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21496,
            "mean": 42908,
            "median": 43692,
            "max": 43692
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23610,
            "mean": 23900,
            "median": 23982,
            "max": 23982
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 10261178,
          "size": 51166
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24499,
            "mean": 45312,
            "median": 29326,
            "max": 128582
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24769,
            "mean": 49019,
            "median": 30357,
            "max": 147187
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 18896616,
          "size": 94243
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 649,
            "mean": 657,
            "median": 655,
            "max": 667
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 566,
            "mean": 566,
            "median": 566,
            "max": 566
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 667,
            "mean": 667,
            "median": 667,
            "max": 667
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 249351,
          "size": 939
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27312,
            "mean": 51584,
            "median": 50784,
            "max": 82153
          },
          "x()": {
            "calls": 6,
            "min": 2575,
            "mean": 10227,
            "median": 5828,
            "max": 37630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166489,
          "size": 556
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27184,
            "mean": 41848,
            "median": 32584,
            "max": 82161
          },
          "x()": {
            "calls": 6,
            "min": 2441,
            "mean": 9342,
            "median": 4619,
            "max": 37311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2333004,
          "size": 11586
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22394,
            "mean": 26987,
            "median": 28309,
            "max": 29875
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 24353,
            "mean": 34849,
            "median": 34219,
            "max": 84366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 2527028,
          "size": 12555
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 255,
            "min": 880,
            "mean": 38803,
            "median": 39270,
            "max": 78755
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 255,
            "min": 1251,
            "mean": 46387,
            "median": 39598,
            "max": 81056
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1182,
            "mean": 42201,
            "median": 45821,
            "max": 78124
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 1,
            "min": 578,
            "mean": 578,
            "median": 578,
            "max": 578
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 369,
            "mean": 369,
            "median": 369,
            "max": 369
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2455546,
          "size": 12198
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "name()": {
            "calls": 256,
            "min": 4788,
            "mean": 6760,
            "median": 4840,
            "max": 13566
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 262
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 4819,
            "mean": 6804,
            "median": 4848,
            "max": 13667
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "returnsString()": {
            "calls": 512,
            "min": 4821,
            "mean": 6729,
            "median": 4863,
            "max": 13611
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "reverts()": {
            "calls": 258,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "symbol()": {
            "calls": 256,
            "min": 4811,
            "mean": 6783,
            "median": 4863,
            "max": 13589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 10278815,
          "size": 51254
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 123,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "enqueue(uint256,uint256)": {
            "calls": 382,
            "min": 21651,
            "mean": 51611,
            "median": 66230,
            "max": 66386
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 119,
            "min": 400,
            "mean": 400,
            "median": 400,
            "max": 400
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 122,
            "min": 632,
            "mean": 635,
            "median": 632,
            "max": 640
          },
          "pop()": {
            "calls": 69,
            "min": 23439,
            "mean": 23439,
            "median": 23439,
            "max": 23439
          },
          "replace(uint256)": {
            "calls": 72,
            "min": 23616,
            "mean": 23912,
            "median": 24000,
            "max": 24000
          },
          "root()": {
            "calls": 125,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 4783734,
          "size": 23824
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22506,
            "mean": 23465,
            "median": 23946,
            "max": 23970
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 8064403,
          "size": 40202
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21475,
            "mean": 23885,
            "median": 23885,
            "max": 26296
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 23826,
            "mean": 24154,
            "median": 24157,
            "max": 24157
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 2397078,
          "size": 11906
        },
        "functions": {
          "read(address)": {
            "calls": 148,
            "min": 2904,
            "mean": 2938,
            "median": 2904,
            "max": 3208
          },
          "read(address,uint256)": {
            "calls": 97,
            "min": 2943,
            "mean": 3004,
            "median": 2943,
            "max": 3295
          },
          "read(address,uint256,uint256)": {
            "calls": 45,
            "min": 3185,
            "mean": 3302,
            "median": 3185,
            "max": 3495
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468290,
            "mean": 48556915,
            "median": 48556915,
            "max": 83645541
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 13076136,
          "size": 65212
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 26,
            "min": 297,
            "mean": 324,
            "median": 335,
            "max": 335
          },
          "toInt104(uint256)": {
            "calls": 16,
            "min": 302,
            "mean": 321,
            "median": 321,
            "max": 340
          },
          "toInt112(int256)": {
            "calls": 24,
            "min": 286,
            "mean": 311,
            "median": 324,
            "max": 324
          },
          "toInt112(uint256)": {
            "calls": 16,
            "min": 308,
            "mean": 317,
            "median": 308,
            "max": 346
          },
          "toInt120(int256)": {
            "calls": 30,
            "min": 326,
            "mean": 350,
            "median": 364,
            "max": 364
          },
          "toInt120(uint256)": {
            "calls": 20,
            "min": 307,
            "mean": 324,
            "median": 307,
            "max": 345
          },
          "toInt128(int256)": {
            "calls": 24,
            "min": 314,
            "mean": 339,
            "median": 352,
            "max": 352
          },
          "toInt128(uint256)": {
            "calls": 8,
            "min": 279,
            "mean": 288,
            "median": 279,
            "max": 317
          },
          "toInt136(int256)": {
            "calls": 36,
            "min": 316,
            "mean": 346,
            "median": 354,
            "max": 354
          },
          "toInt136(uint256)": {
            "calls": 15,
            "min": 310,
            "mean": 332,
            "median": 348,
            "max": 348
          },
          "toInt144(int256)": {
            "calls": 34,
            "min": 317,
            "mean": 346,
            "median": 355,
            "max": 355
          },
          "toInt144(uint256)": {
            "calls": 9,
            "min": 309,
            "mean": 317,
            "median": 309,
            "max": 347
          },
          "toInt152(int256)": {
            "calls": 28,
            "min": 319,
            "mean": 346,
            "median": 357,
            "max": 357
          },
          "toInt152(uint256)": {
            "calls": 9,
            "min": 319,
            "mean": 340,
            "median": 357,
            "max": 357
          },
          "toInt16(int256)": {
            "calls": 46,
            "min": 310,
            "mean": 334,
            "median": 348,
            "max": 348
          },
          "toInt16(uint256)": {
            "calls": 22,
            "min": 269,
            "mean": 270,
            "median": 269,
            "max": 307
          },
          "toInt160(int256)": {
            "calls": 36,
            "min": 315,
            "mean": 343,
            "median": 353,
            "max": 353
          },
          "toInt160(uint256)": {
            "calls": 17,
            "min": 293,
            "mean": 306,
            "median": 293,
            "max": 331
          },
          "toInt168(int256)": {
            "calls": 28,
            "min": 315,
            "mean": 339,
            "median": 353,
            "max": 353
          },
          "toInt168(uint256)": {
            "calls": 17,
            "min": 309,
            "mean": 329,
            "median": 347,
            "max": 347
          },
          "toInt176(int256)": {
            "calls": 20,
            "min": 292,
            "mean": 322,
            "median": 330,
            "max": 330
          },
          "toInt176(uint256)": {
            "calls": 13,
            "min": 307,
            "mean": 324,
            "median": 307,
            "max": 345
          },
          "toInt184(int256)": {
            "calls": 28,
            "min": 321,
            "mean": 353,
            "median": 359,
            "max": 359
          },
          "toInt184(uint256)": {
            "calls": 8,
            "min": 320,
            "mean": 339,
            "median": 339,
            "max": 358
          },
          "toInt192(int256)": {
            "calls": 32,
            "min": 280,
            "mean": 313,
            "median": 318,
            "max": 318
          },
          "toInt192(uint256)": {
            "calls": 10,
            "min": 303,
            "mean": 329,
            "median": 341,
            "max": 341
          },
          "toInt200(int256)": {
            "calls": 28,
            "min": 314,
            "mean": 339,
            "median": 352,
            "max": 352
          },
          "toInt200(uint256)": {
            "calls": 13,
            "min": 308,
            "mean": 322,
            "median": 308,
            "max": 346
          },
          "toInt208(int256)": {
            "calls": 26,
            "min": 317,
            "mean": 343,
            "median": 355,
            "max": 355
          },
          "toInt208(uint256)": {
            "calls": 16,
            "min": 292,
            "mean": 311,
            "median": 311,
            "max": 330
          },
          "toInt216(int256)": {
            "calls": 16,
            "min": 316,
            "mean": 342,
            "median": 354,
            "max": 354
          },
          "toInt216(uint256)": {
            "calls": 17,
            "min": 308,
            "mean": 330,
            "median": 346,
            "max": 346
          },
          "toInt224(int256)": {
            "calls": 36,
            "min": 318,
            "mean": 347,
            "median": 356,
            "max": 356
          },
          "toInt224(uint256)": {
            "calls": 12,
            "min": 320,
            "mean": 339,
            "median": 339,
            "max": 358
          },
          "toInt232(int256)": {
            "calls": 42,
            "min": 312,
            "mean": 345,
            "median": 350,
            "max": 350
          },
          "toInt232(uint256)": {
            "calls": 22,
            "min": 308,
            "mean": 337,
            "median": 346,
            "max": 346
          },
          "toInt24(int256)": {
            "calls": 42,
            "min": 287,
            "mean": 313,
            "median": 325,
            "max": 325
          },
          "toInt24(uint256)": {
            "calls": 20,
            "min": 310,
            "mean": 317,
            "median": 310,
            "max": 348
          },
          "toInt240(int256)": {
            "calls": 64,
            "min": 315,
            "mean": 347,
            "median": 353,
            "max": 353
          },
          "toInt240(uint256)": {
            "calls": 15,
            "min": 291,
            "mean": 308,
            "median": 291,
            "max": 329
          },
          "toInt248(int256)": {
            "calls": 44,
            "min": 287,
            "mean": 319,
            "median": 326,
            "max": 326
          },
          "toInt248(uint256)": {
            "calls": 24,
            "min": 305,
            "mean": 322,
            "median": 333,
            "max": 333
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 306,
            "mean": 316,
            "median": 317,
            "max": 317
          },
          "toInt32(int256)": {
            "calls": 26,
            "min": 297,
            "mean": 323,
            "median": 335,
            "max": 335
          },
          "toInt32(uint256)": {
            "calls": 17,
            "min": 305,
            "mean": 316,
            "median": 305,
            "max": 343
          },
          "toInt40(int256)": {
            "calls": 30,
            "min": 275,
            "mean": 300,
            "median": 313,
            "max": 313
          },
          "toInt40(uint256)": {
            "calls": 20,
            "min": 303,
            "mean": 323,
            "median": 341,
            "max": 341
          },
          "toInt48(int256)": {
            "calls": 32,
            "min": 274,
            "mean": 300,
            "median": 312,
            "max": 312
          },
          "toInt48(uint256)": {
            "calls": 14,
            "min": 304,
            "mean": 314,
            "median": 304,
            "max": 342
          },
          "toInt56(int256)": {
            "calls": 30,
            "min": 286,
            "mean": 311,
            "median": 324,
            "max": 324
          },
          "toInt56(uint256)": {
            "calls": 24,
            "min": 310,
            "mean": 322,
            "median": 310,
            "max": 348
          },
          "toInt64(int256)": {
            "calls": 38,
            "min": 287,
            "mean": 303,
            "median": 314,
            "max": 314
          },
          "toInt64(uint256)": {
            "calls": 18,
            "min": 307,
            "mean": 310,
            "median": 307,
            "max": 334
          },
          "toInt72(int256)": {
            "calls": 20,
            "min": 327,
            "mean": 349,
            "median": 365,
            "max": 365
          },
          "toInt72(uint256)": {
            "calls": 19,
            "min": 309,
            "mean": 319,
            "median": 309,
            "max": 347
          },
          "toInt8(int256)": {
            "calls": 23,
            "min": 310,
            "mean": 313,
            "median": 310,
            "max": 346
          },
          "toInt8(uint256)": {
            "calls": 21,
            "min": 308,
            "mean": 308,
            "median": 308,
            "max": 308
          },
          "toInt80(int256)": {
            "calls": 44,
            "min": 314,
            "mean": 340,
            "median": 352,
            "max": 352
          },
          "toInt80(uint256)": {
            "calls": 10,
            "min": 279,
            "mean": 286,
            "median": 279,
            "max": 317
          },
          "toInt88(int256)": {
            "calls": 44,
            "min": 275,
            "mean": 303,
            "median": 313,
            "max": 313
          },
          "toInt88(uint256)": {
            "calls": 10,
            "min": 305,
            "mean": 320,
            "median": 305,
            "max": 343
          },
          "toInt96(int256)": {
            "calls": 32,
            "min": 312,
            "mean": 339,
            "median": 350,
            "max": 350
          },
          "toInt96(uint256)": {
            "calls": 10,
            "min": 317,
            "mean": 332,
            "median": 317,
            "max": 355
          },
          "toUint104(uint256)": {
            "calls": 27,
            "min": 302,
            "mean": 307,
            "median": 302,
            "max": 324
          },
          "toUint112(uint256)": {
            "calls": 12,
            "min": 319,
            "mean": 328,
            "median": 319,
            "max": 341
          },
          "toUint120(uint256)": {
            "calls": 18,
            "min": 318,
            "mean": 330,
            "median": 340,
            "max": 340
          },
          "toUint128(uint256)": {
            "calls": 17,
            "min": 302,
            "mean": 309,
            "median": 302,
            "max": 324
          },
          "toUint136(uint256)": {
            "calls": 9,
            "min": 303,
            "mean": 312,
            "median": 303,
            "max": 325
          },
          "toUint144(uint256)": {
            "calls": 18,
            "min": 303,
            "mean": 310,
            "median": 303,
            "max": 325
          },
          "toUint152(uint256)": {
            "calls": 20,
            "min": 303,
            "mean": 312,
            "median": 303,
            "max": 325
          },
          "toUint16(uint256)": {
            "calls": 20,
            "min": 304,
            "mean": 309,
            "median": 304,
            "max": 326
          },
          "toUint160(uint256)": {
            "calls": 11,
            "min": 320,
            "mean": 334,
            "median": 342,
            "max": 342
          },
          "toUint168(uint256)": {
            "calls": 16,
            "min": 319,
            "mean": 334,
            "median": 341,
            "max": 341
          },
          "toUint176(uint256)": {
            "calls": 14,
            "min": 305,
            "mean": 311,
            "median": 305,
            "max": 327
          },
          "toUint184(uint256)": {
            "calls": 13,
            "min": 304,
            "mean": 315,
            "median": 326,
            "max": 326
          },
          "toUint192(uint256)": {
            "calls": 13,
            "min": 301,
            "mean": 311,
            "median": 301,
            "max": 323
          },
          "toUint200(uint256)": {
            "calls": 13,
            "min": 279,
            "mean": 285,
            "median": 279,
            "max": 301
          },
          "toUint208(uint256)": {
            "calls": 16,
            "min": 320,
            "mean": 333,
            "median": 342,
            "max": 342
          },
          "toUint216(uint256)": {
            "calls": 9,
            "min": 318,
            "mean": 327,
            "median": 318,
            "max": 340
          },
          "toUint224(uint256)": {
            "calls": 18,
            "min": 303,
            "mean": 316,
            "median": 325,
            "max": 325
          },
          "toUint232(uint256)": {
            "calls": 21,
            "min": 317,
            "mean": 329,
            "median": 339,
            "max": 339
          },
          "toUint24(uint256)": {
            "calls": 21,
            "min": 320,
            "mean": 326,
            "median": 320,
            "max": 342
          },
          "toUint240(uint256)": {
            "calls": 19,
            "min": 318,
            "mean": 331,
            "median": 340,
            "max": 340
          },
          "toUint248(uint256)": {
            "calls": 28,
            "min": 303,
            "mean": 314,
            "median": 325,
            "max": 325
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 324,
            "mean": 331,
            "median": 335,
            "max": 335
          },
          "toUint32(uint256)": {
            "calls": 16,
            "min": 318,
            "mean": 319,
            "median": 318,
            "max": 340
          },
          "toUint40(uint256)": {
            "calls": 20,
            "min": 306,
            "mean": 309,
            "median": 306,
            "max": 328
          },
          "toUint48(uint256)": {
            "calls": 17,
            "min": 319,
            "mean": 326,
            "median": 319,
            "max": 341
          },
          "toUint56(uint256)": {
            "calls": 19,
            "min": 302,
            "mean": 304,
            "median": 302,
            "max": 324
          },
          "toUint64(uint256)": {
            "calls": 13,
            "min": 303,
            "mean": 309,
            "median": 303,
            "max": 325
          },
          "toUint72(uint256)": {
            "calls": 16,
            "min": 301,
            "mean": 309,
            "median": 301,
            "max": 323
          },
          "toUint8(uint256)": {
            "calls": 20,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "toUint80(uint256)": {
            "calls": 11,
            "min": 319,
            "mean": 327,
            "median": 319,
            "max": 341
          },
          "toUint88(uint256)": {
            "calls": 15,
            "min": 280,
            "mean": 285,
            "median": 280,
            "max": 302
          },
          "toUint96(uint256)": {
            "calls": 17,
            "min": 301,
            "mean": 306,
            "median": 301,
            "max": 323
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 19720708,
          "size": 98352
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 94,
            "min": 161571,
            "mean": 170553,
            "median": 170679,
            "max": 170679
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 683,
            "min": 22068,
            "mean": 148987,
            "median": 73146,
            "max": 296866
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 45823,
            "mean": 67090,
            "median": 68536,
            "max": 84813
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29375,
            "mean": 29816,
            "median": 29788,
            "max": 32031
          },
          "safeApprove(address,address,uint256)": {
            "calls": 256,
            "min": 24734,
            "mean": 25225,
            "median": 25274,
            "max": 25550
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 252,
            "min": 25195,
            "mean": 25685,
            "median": 25705,
            "max": 25987
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24812,
            "mean": 25275,
            "median": 25292,
            "max": 25532
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28645,
            "mean": 28645,
            "median": 28645,
            "max": 28645
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22057,
            "mean": 28812,
            "median": 28901,
            "max": 29095
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 254,
            "min": 25885,
            "mean": 26530,
            "median": 26593,
            "max": 26926
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 28243,
            "mean": 49549,
            "median": 68189,
            "max": 69166
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 469,
            "mean": 3674,
            "median": 5277,
            "max": 5277
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2563,
            "min": 25632,
            "mean": 39604,
            "median": 30905,
            "max": 61428
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 585610,
            "mean": 692517,
            "median": 612249,
            "max": 4725579
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 583913,
            "mean": 720550,
            "median": 612648,
            "max": 4760087
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 3047460,
          "size": 15154
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33047,
            "mean": 41883,
            "median": 39339,
            "max": 70600
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 37783,
            "mean": 59249,
            "median": 50948,
            "max": 117915
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 6125484,
          "size": 30523
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1553,
            "mean": 8746,
            "median": 9371,
            "max": 16035
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 294,
            "min": 1045,
            "mean": 10265,
            "median": 10302,
            "max": 16349
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 102,
            "min": 6439,
            "mean": 6444,
            "median": 6449,
            "max": 6449
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 163778,
          "size": 603
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 35,
            "min": 44949,
            "mean": 49834,
            "median": 44949,
            "max": 79149
          },
          "fallbackDeposit(uint256)": {
            "calls": 32,
            "min": 32263,
            "mean": 50591,
            "median": 44563,
            "max": 78763
          },
          "withdraw(uint256)": {
            "calls": 19,
            "min": 32932,
            "mean": 44615,
            "median": 45256,
            "max": 45352
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 3361850,
          "size": 16724
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 122,
            "min": 1463,
            "mean": 1478,
            "median": 1482,
            "max": 1494
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 334836,
          "size": 1360
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 234,
            "mean": 249,
            "median": 249,
            "max": 265
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 252,
            "mean": 267,
            "median": 267,
            "max": 283
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 250,
            "mean": 265,
            "median": 265,
            "max": 280
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22039,
            "mean": 22039,
            "median": 22039,
            "max": 22039
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 253751,
          "size": 962
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "fallback()": {
            "calls": 520,
            "min": 22823,
            "mean": 61557,
            "median": 79998,
            "max": 155665
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "receive()": {
            "calls": 260,
            "min": 65,
            "mean": 20822,
            "median": 21065,
            "max": 21065
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 524,
            "mean": 33602,
            "median": 23952,
            "max": 67268
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1730,
            "mean": 34888,
            "median": 34888,
            "max": 68046
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 107785,
          "size": 284
        },
        "functions": {
          "fallback()": {
            "calls": 1004,
            "min": 256,
            "mean": 23230,
            "median": 22364,
            "max": 71763
          },
          "receive()": {
            "calls": 10,
            "min": 21079,
            "mean": 21079,
            "median": 21079,
            "max": 21079
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 328391,
          "size": 1493
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 227,
            "mean": 339,
            "median": 396,
            "max": 396
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 769,
            "mean": 769,
            "median": 769,
            "max": 769
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3182,
            "mean": 3200,
            "median": 3200,
            "max": 3219
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3433,
            "mean": 3433,
            "median": 3433,
            "max": 3433
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 4477,
            "mean": 4486,
            "median": 4477,
            "max": 4514
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 12289,
            "mean": 13668,
            "median": 13668,
            "max": 15048
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3195,
            "mean": 3213,
            "median": 3213,
            "max": 3232
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3216,
            "mean": 3234,
            "median": 3234,
            "max": 3253
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3659,
            "mean": 3659,
            "median": 3659,
            "max": 3659
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 314,
            "mean": 422,
            "median": 476,
            "max": 476
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 702,
            "mean": 702,
            "median": 702,
            "max": 702
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 647,
            "mean": 647,
            "median": 647,
            "max": 647
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 689,
            "mean": 689,
            "median": 689,
            "max": 689
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5258,
            "mean": 5276,
            "median": 5276,
            "max": 5295
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43946,
            "mean": 43958,
            "median": 43958,
            "max": 43971
          },
          "value()": {
            "calls": 2,
            "min": 5210,
            "mean": 5228,
            "median": 5228,
            "max": 5247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 802964,
          "size": 4775
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5107,
            "mean": 5120,
            "median": 5125,
            "max": 5125
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5297,
            "mean": 5306,
            "median": 5306,
            "max": 5315
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5208,
            "mean": 5217,
            "median": 5217,
            "max": 5226
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5215,
            "mean": 5224,
            "median": 5224,
            "max": 5233
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5159,
            "mean": 5168,
            "median": 5168,
            "max": 5177
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5201,
            "mean": 5210,
            "median": 5210,
            "max": 5219
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11280,
            "mean": 30005,
            "median": 33256,
            "max": 45480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1740902,
          "size": 7843
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5532,
            "min": 2433,
            "mean": 2433,
            "median": 2433,
            "max": 2433
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 451,
            "min": 533,
            "mean": 2651,
            "median": 638,
            "max": 7638
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 619,
            "min": 23536,
            "mean": 29575,
            "median": 28980,
            "max": 49721
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4226,
            "min": 23582,
            "mean": 149747,
            "median": 78218,
            "max": 46860020
          },
          "burn(address,uint256,uint256)": {
            "calls": 378,
            "min": 25076,
            "mean": 28964,
            "median": 27730,
            "max": 33074
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 913,
            "min": 24413,
            "mean": 244796,
            "median": 63535,
            "max": 48661806
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1112,
            "min": 24032,
            "mean": 276453,
            "median": 58185,
            "max": 49088517
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1967,
            "min": 26335,
            "mean": 44586,
            "median": 46475,
            "max": 46489
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "lastDataHash()": {
            "calls": 35,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5023,
            "min": 22785,
            "mean": 128154,
            "median": 72382,
            "max": 46437633
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 906,
            "min": 23663,
            "mean": 168667,
            "median": 61573,
            "max": 45864570
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1067,
            "min": 23300,
            "mean": 349747,
            "median": 57493,
            "max": 46976211
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1695,
            "min": 25734,
            "mean": 45126,
            "median": 45874,
            "max": 45874
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 148,
            "min": 26281,
            "mean": 35200,
            "median": 33384,
            "max": 46923
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 134,
            "min": 29623,
            "mean": 30231,
            "median": 30223,
            "max": 30542
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 125,
            "min": 33190,
            "mean": 118557,
            "median": 94144,
            "max": 1522534
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 136,
            "min": 39214,
            "mean": 139163,
            "median": 62256,
            "max": 1539419
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 402600,
          "size": 1713
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 444,
            "min": 2801,
            "mean": 2846,
            "median": 2825,
            "max": 6074
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26441,
            "mean": 26441,
            "median": 26441,
            "max": 26441
          },
          "signer()": {
            "calls": 4,
            "min": 2303,
            "mean": 2303,
            "median": 2303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 930042,
          "size": 5306
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 420,
            "mean": 420,
            "median": 420,
            "max": 420
          },
          "allowance(address,address)": {
            "calls": 2442,
            "min": 512,
            "mean": 2091,
            "median": 2512,
            "max": 2512
          },
          "approve(address,uint256)": {
            "calls": 2622,
            "min": 25945,
            "mean": 45940,
            "median": 46055,
            "max": 46229
          },
          "balanceOf(address)": {
            "calls": 13266,
            "min": 419,
            "mean": 2243,
            "median": 2419,
            "max": 2419
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24090,
            "mean": 29144,
            "median": 27210,
            "max": 34360
          },
          "decimals()": {
            "calls": 312,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 24931,
            "mean": 26763,
            "median": 25519,
            "max": 28436
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 24846,
            "mean": 37849,
            "median": 25405,
            "max": 52263
          },
          "mint(address,uint256)": {
            "calls": 3223,
            "min": 24248,
            "mean": 67595,
            "median": 68214,
            "max": 68569
          },
          "name()": {
            "calls": 258,
            "min": 2698,
            "mean": 5060,
            "median": 7075,
            "max": 9263
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23399,
            "mean": 43535,
            "median": 29999,
            "max": 74090
          },
          "symbol()": {
            "calls": 258,
            "min": 2686,
            "mean": 4746,
            "median": 2698,
            "max": 9241
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "transfer(address,uint256)": {
            "calls": 2575,
            "min": 24105,
            "mean": 45502,
            "median": 51332,
            "max": 51567
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1548,
            "min": 24677,
            "mean": 40121,
            "median": 32456,
            "max": 54538
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 929970,
          "size": 5306
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21781,
            "mean": 22098,
            "median": 21865,
            "max": 46169
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28378,
            "mean": 67925,
            "median": 68238,
            "max": 68569
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22512,
            "mean": 22840,
            "median": 22836,
            "max": 28931
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24857,
            "mean": 38294,
            "median": 30310,
            "max": 52326
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 939493,
          "size": 4249
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2512,
            "mean": 2512,
            "median": 2512,
            "max": 2512
          },
          "approve(address,uint256)": {
            "calls": 1020,
            "min": 23742,
            "mean": 35077,
            "median": 35870,
            "max": 46371
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1687394,
          "size": 7602
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2076,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 229,
            "min": 21548,
            "mean": 22027,
            "median": 21788,
            "max": 94909
          },
          "checkpointAt(address,uint256)": {
            "calls": 272,
            "min": 0,
            "mean": 53,
            "median": 0,
            "max": 4630
          },
          "checkpointCount(address)": {
            "calls": 1331,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 448,
            "min": 21192,
            "mean": 21680,
            "median": 21432,
            "max": 91318
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23255,
            "mean": 42635,
            "median": 58401,
            "max": 75513
          },
          "delegates(address)": {
            "calls": 4296,
            "min": 0,
            "mean": 219,
            "median": 0,
            "max": 2445
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 47938,
            "mean": 48209,
            "median": 48382,
            "max": 48394
          },
          "directIncrementNonce(address)": {
            "calls": 837,
            "min": 26755,
            "mean": 31097,
            "median": 26767,
            "max": 43867
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5193,
            "mean": 5693,
            "median": 5193,
            "max": 7193
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 281,
            "mean": 3414,
            "median": 4873,
            "max": 5089
          },
          "getVotes(address)": {
            "calls": 2900,
            "min": 0,
            "mean": 10,
            "median": 0,
            "max": 4616
          },
          "getVotesTotalSupply()": {
            "calls": 754,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4529
          },
          "mint(address,uint256)": {
            "calls": 726,
            "min": 21548,
            "mean": 21855,
            "median": 21800,
            "max": 94545
          },
          "name()": {
            "calls": 256,
            "min": 448,
            "mean": 448,
            "median": 448,
            "max": 448
          },
          "nonces(address)": {
            "calls": 512,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "totalSupply()": {
            "calls": 376,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 449,
            "min": 21548,
            "mean": 21859,
            "median": 21800,
            "max": 86454
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 250299,
          "size": 943
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21454,
            "mean": 21454,
            "median": 21454,
            "max": 21454
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21642,
            "mean": 21943,
            "median": 22026,
            "max": 22026
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2525,
            "mean": 4013,
            "median": 4598,
            "max": 4617
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 384,
            "min": 21977,
            "mean": 36869,
            "median": 44128,
            "max": 44344
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 768,
            "min": 22152,
            "mean": 37386,
            "median": 44726,
            "max": 44966
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1571377,
          "size": 7296
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31900,
            "mean": 31900,
            "median": 31900,
            "max": 31900
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12074,
            "mean": 12074,
            "median": 12074,
            "max": 12074
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 5979,
            "mean": 19530,
            "median": 8513,
            "max": 139727
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 853,
            "mean": 853,
            "median": 853,
            "max": 853
          },
          "entryPoint()": {
            "calls": 7,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2531,
            "mean": 16331,
            "median": 12787,
            "max": 37220
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 125,
            "min": 2816,
            "mean": 59526,
            "median": 37679,
            "max": 267958
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 134,
            "min": 2975,
            "mean": 63125,
            "median": 37844,
            "max": 302935
          },
          "fallback()": {
            "calls": 5,
            "min": 219,
            "mean": 27733,
            "median": 266,
            "max": 104992
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5262,
            "mean": 5262,
            "median": 5262,
            "max": 5262
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2387,
            "mean": 23859,
            "median": 23926,
            "max": 23926
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6514,
            "mean": 7879,
            "median": 6514,
            "max": 13789
          },
          "owner()": {
            "calls": 267,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "receive()": {
            "calls": 258,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6907,
            "mean": 6907,
            "median": 6907,
            "max": 6907
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2363,
            "mean": 13435,
            "median": 13435,
            "max": 24507
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 6964,
            "mean": 6964,
            "median": 6964,
            "max": 6964
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 320,
            "mean": 24107,
            "median": 29186,
            "max": 37736
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45018,
            "mean": 45018,
            "median": 45018,
            "max": 45018
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1752544,
          "size": 9631
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2448,
            "mean": 2448,
            "median": 2448,
            "max": 2448
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2436,
            "mean": 5085,
            "median": 7586,
            "max": 7702
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7617,
            "mean": 7665,
            "median": 7665,
            "max": 7714
          },
          "decimals()": {
            "calls": 20,
            "min": 310,
            "mean": 314,
            "median": 310,
            "max": 351
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30169,
            "mean": 119031,
            "median": 120497,
            "max": 120749
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30124,
            "mean": 119344,
            "median": 120464,
            "max": 131068
          },
          "name()": {
            "calls": 1,
            "min": 2745,
            "mean": 2745,
            "median": 2745,
            "max": 2745
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 7614,
            "mean": 7614,
            "median": 7614,
            "max": 7711
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7714,
            "mean": 7714,
            "median": 7714,
            "max": 7743
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24468,
            "mean": 76870,
            "median": 77326,
            "max": 92202
          },
          "symbol()": {
            "calls": 1,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5336,
            "mean": 5336,
            "median": 5336,
            "max": 5336
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26661,
            "mean": 77572,
            "median": 78294,
            "max": 78462
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1359224,
          "size": 6367
        },
        "functions": {
          "eip712Domain()": {
            "calls": 344,
            "min": 832,
            "mean": 832,
            "median": 832,
            "max": 832
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 5775,
            "mean": 22553,
            "median": 10786,
            "max": 62865
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 127,
            "min": 5795,
            "mean": 87419,
            "median": 98201,
            "max": 241961
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 133,
            "min": 28342,
            "mean": 95977,
            "median": 63268,
            "max": 350781
          },
          "fallback()": {
            "calls": 872,
            "min": 221,
            "mean": 6041,
            "median": 3196,
            "max": 131404
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 356,
            "min": 524,
            "mean": 14302,
            "median": 13775,
            "max": 45480
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 5785,
            "mean": 5785,
            "median": 5785,
            "max": 5785
          },
          "mockId()": {
            "calls": 2,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "owner()": {
            "calls": 802,
            "min": 5570,
            "mean": 5570,
            "median": 5570,
            "max": 5570
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "receive()": {
            "calls": 1,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5595,
            "mean": 14148,
            "median": 14169,
            "max": 22743
          },
          "state()": {
            "calls": 772,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "token()": {
            "calls": 536,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 5767,
            "mean": 35014,
            "median": 35175,
            "max": 52275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1379362,
          "size": 6461
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5231,
            "mean": 5231,
            "median": 5231,
            "max": 5231
          },
          "mockId()": {
            "calls": 1,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5709,
            "mean": 14262,
            "median": 14283,
            "max": 22857
          },
          "state()": {
            "calls": 513,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18189,
            "mean": 18189,
            "median": 18189,
            "max": 18189
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 185210,
          "size": 642
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2424,
            "min": 94676,
            "mean": 95235,
            "median": 95288,
            "max": 95492
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 825331,
          "size": 3609
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2488,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26775,
            "mean": 46840,
            "median": 47035,
            "max": 47438
          },
          "balanceOf(address,uint256)": {
            "calls": 2426,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24222,
            "mean": 27218,
            "median": 25170,
            "max": 30441
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 46330,
            "mean": 47139,
            "median": 47158,
            "max": 47530
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 23826,
            "mean": 32209,
            "median": 26294,
            "max": 46206
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 380,
            "min": 25659,
            "mean": 41043,
            "median": 33452,
            "max": 61558
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24426,
            "mean": 45688,
            "median": 47039,
            "max": 47586
          },
          "name(uint256)": {
            "calls": 256,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 45910,
            "mean": 45910,
            "median": 45910,
            "max": 45910
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 386,
            "mean": 386,
            "median": 386,
            "max": 386
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 717,
            "mean": 717,
            "median": 717,
            "max": 717
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1044,
            "min": 24159,
            "mean": 37201,
            "median": 30269,
            "max": 52721
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1660,
            "min": 26893,
            "mean": 38287,
            "median": 32922,
            "max": 60748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1817261,
          "size": 8204
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1033,
            "min": 23995,
            "mean": 42717,
            "median": 48300,
            "max": 48636
          },
          "balanceOf(address)": {
            "calls": 10043,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "burn(uint256)": {
            "calls": 258,
            "min": 28213,
            "mean": 29296,
            "median": 28658,
            "max": 31358
          },
          "directApprove(address,uint256)": {
            "calls": 1044,
            "min": 24135,
            "mean": 43521,
            "median": 48901,
            "max": 49220
          },
          "directGetApproved(uint256)": {
            "calls": 1472,
            "min": 2472,
            "mean": 4463,
            "median": 4645,
            "max": 4645
          },
          "directOwnerOf(uint256)": {
            "calls": 2495,
            "min": 2480,
            "mean": 2654,
            "median": 2701,
            "max": 2701
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 683,
            "min": 56729,
            "mean": 74611,
            "median": 63034,
            "max": 129505
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 512,
            "min": 63703,
            "mean": 91930,
            "median": 64726,
            "max": 240569
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 967,
            "min": 24291,
            "mean": 41989,
            "median": 46431,
            "max": 46457
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1733,
            "min": 25067,
            "mean": 42421,
            "median": 40936,
            "max": 57517
          },
          "exists(uint256)": {
            "calls": 467,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getApproved(uint256)": {
            "calls": 1510,
            "min": 2447,
            "mean": 4377,
            "median": 4564,
            "max": 4564
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2730,
            "mean": 2731,
            "median": 2730,
            "max": 2743
          },
          "getExtraData(uint256)": {
            "calls": 3449,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2804,
            "mean": 5348,
            "median": 6084,
            "max": 7137
          },
          "mint(address,uint256)": {
            "calls": 10837,
            "min": 24359,
            "mean": 64427,
            "median": 68517,
            "max": 68878
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46699,
            "mean": 55836,
            "median": 51737,
            "max": 69197
          },
          "ownerOf(uint256)": {
            "calls": 5621,
            "min": 497,
            "mean": 2481,
            "median": 2497,
            "max": 2497
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71107,
            "mean": 81467,
            "median": 71872,
            "max": 121058
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72179,
            "mean": 97767,
            "median": 73416,
            "max": 231897
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1812,
            "min": 40510,
            "mean": 68044,
            "median": 63174,
            "max": 129659
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 512,
            "min": 63471,
            "mean": 96479,
            "median": 64940,
            "max": 240814
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1165,
            "min": 24024,
            "mean": 42720,
            "median": 46164,
            "max": 46177
          },
          "setAux(address,uint224)": {
            "calls": 749,
            "min": 27580,
            "mean": 44552,
            "median": 44655,
            "max": 44680
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1493,
            "min": 23918,
            "mean": 37213,
            "median": 43914,
            "max": 44322
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1808,
            "min": 24512,
            "mean": 42161,
            "median": 40353,
            "max": 56910
          },
          "uncheckedBurn(uint256)": {
            "calls": 2899,
            "min": 23625,
            "mean": 30014,
            "median": 31043,
            "max": 36227
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 197,
            "min": 54693,
            "mean": 54927,
            "median": 54933,
            "max": 55306
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 612419,
          "size": 2624
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31160,
            "mean": 100723,
            "median": 90990,
            "max": 159003
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 263,
            "min": 317844,
            "mean": 465651,
            "median": 341231,
            "max": 3848780
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2585,
            "mean": 5762,
            "median": 4754,
            "max": 11333
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22078,
            "mean": 41251,
            "median": 43990,
            "max": 43990
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 159309,
          "size": 715
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "garbage()": {
            "calls": 780,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          },
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3048,
            "mean": 3048,
            "median": 3048,
            "max": 3048
          },
          "getArgUint256(uint256)": {
            "calls": 1,
            "min": 4343,
            "mean": 4343,
            "median": 4343,
            "max": 4343
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 6434,
            "mean": 6434,
            "median": 6434,
            "max": 6434
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3061,
            "mean": 3061,
            "median": 3061,
            "max": 3061
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3082,
            "mean": 3082,
            "median": 3082,
            "max": 3082
          },
          "receive()": {
            "calls": 8,
            "min": 0,
            "mean": 49737,
            "median": 21096,
            "max": 286345
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5061,
            "mean": 5787,
            "median": 5124,
            "max": 7176
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43812,
            "mean": 44733,
            "median": 44137,
            "max": 46252
          },
          "value()": {
            "calls": 3,
            "min": 5063,
            "mean": 5772,
            "median": 5076,
            "max": 7178
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 806333,
          "size": 3519
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 7856,
            "min": 327,
            "mean": 4133,
            "median": 4453,
            "max": 4453
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 268,
            "min": 26708,
            "mean": 28054,
            "median": 28118,
            "max": 28118
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 38,
            "min": 26278,
            "mean": 37942,
            "median": 35377,
            "max": 57106
          },
          "guardedByOnlyRoles()": {
            "calls": 38,
            "min": 23721,
            "mean": 36803,
            "median": 34701,
            "max": 54549
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 1004,
            "mean": 8767,
            "median": 7717,
            "max": 16669
          },
          "hasRole(address,uint256)": {
            "calls": 1668,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "owner()": {
            "calls": 1944,
            "min": 2351,
            "mean": 2366,
            "median": 2368,
            "max": 2368
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 263,
            "min": 2431,
            "mean": 2637,
            "median": 2474,
            "max": 4570
          },
          "roleHolderCount(uint256)": {
            "calls": 3720,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "roleHolders(uint256)": {
            "calls": 3741,
            "min": 2552,
            "mean": 2889,
            "median": 2552,
            "max": 18595
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23618,
            "mean": 43342,
            "median": 43584,
            "max": 43902
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 38,
            "min": 24262,
            "mean": 112729,
            "median": 111235,
            "max": 200687
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21601,
            "mean": 26943,
            "median": 26479,
            "max": 43885
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23644,
            "mean": 25060,
            "median": 26456,
            "max": 26456
          },
          "setOwner(address)": {
            "calls": 268,
            "min": 26468,
            "mean": 27119,
            "median": 26696,
            "max": 43796
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23666,
            "mean": 24984,
            "median": 23666,
            "max": 26478
          },
          "setRole(address,uint256,bool)": {
            "calls": 1382,
            "min": 24263,
            "mean": 59582,
            "median": 73563,
            "max": 74115
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 6733,
            "min": 33347,
            "mean": 59243,
            "median": 73600,
            "max": 78507
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 113853,
          "size": 312
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          },
          "getValue(uint256)": {
            "calls": 967,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "setValue(uint256,uint256)": {
            "calls": 967,
            "min": 2421,
            "mean": 22300,
            "median": 22321,
            "max": 22321
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 409424,
          "size": 3100
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23365,
            "mean": 33882,
            "median": 33882,
            "max": 44399
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 188,
            "min": 27436,
            "mean": 62372,
            "median": 67961,
            "max": 90545
          },
          "isInitializing()": {
            "calls": 201,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23402,
            "mean": 23402,
            "median": 23402,
            "max": 23402
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 256,
            "min": 24395,
            "mean": 54569,
            "median": 67162,
            "max": 90556
          },
          "version()": {
            "calls": 282,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "x()": {
            "calls": 139,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 850682,
          "size": 3778
        },
        "functions": {
          "owner()": {
            "calls": 737,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24778,
            "mean": 33605,
            "median": 24802,
            "max": 58982
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 1017960,
          "size": 4626
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23854,
            "mean": 23854,
            "median": 23854,
            "max": 23854
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26162,
            "mean": 37791,
            "median": 44020,
            "max": 46306
          },
          "owner()": {
            "calls": 1744,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 132,
            "min": 28924,
            "mean": 75149,
            "median": 67701,
            "max": 1491949
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 132,
            "min": 28084,
            "mean": 54289,
            "median": 60300,
            "max": 60552
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 142,
            "min": 28518,
            "mean": 54898,
            "median": 61496,
            "max": 61877
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 238,
            "min": 27881,
            "mean": 48251,
            "median": 47234,
            "max": 63329
          },
          "rescueETH(address,uint256)": {
            "calls": 1416,
            "min": 5702,
            "mean": 32535,
            "median": 36548,
            "max": 61926
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 6807,
            "mean": 6807,
            "median": 6807,
            "max": 6807
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 691419,
          "size": 2988
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 522,
            "min": 21842,
            "mean": 24298,
            "median": 24330,
            "max": 37376
          },
          "multicallBrutalized(bytes[])": {
            "calls": 253,
            "min": 388676,
            "mean": 463788,
            "median": 395512,
            "max": 3251171
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 42399,
            "mean": 42399,
            "median": 42399,
            "max": 42399
          },
          "returnsRandomizedString(string)": {
            "calls": 272,
            "min": 722,
            "mean": 1673,
            "median": 1622,
            "max": 2871
          },
          "returnsSender()": {
            "calls": 1,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 455,
            "mean": 455,
            "median": 455,
            "max": 455
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 165,
            "mean": 165,
            "median": 165,
            "max": 165
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 686,
            "mean": 701,
            "median": 707,
            "max": 719
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 378739,
          "size": 1464
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22661,
            "mean": 22661,
            "median": 22661,
            "max": 22661
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23814,
            "mean": 28738,
            "median": 28855,
            "max": 28862
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28229,
            "mean": 28229,
            "median": 28229,
            "max": 28229
          },
          "owner()": {
            "calls": 829,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2694
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23104,
            "mean": 23104,
            "median": 23104,
            "max": 23104
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44565,
            "mean": 44565,
            "median": 44565,
            "max": 44565
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28247,
            "mean": 28389,
            "median": 28475,
            "max": 28482
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23837,
            "mean": 24904,
            "median": 23865,
            "max": 28510
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23365,
            "mean": 34084,
            "median": 23365,
            "max": 45496
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 274493,
          "size": 981
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 736122,
          "size": 3117
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22670,
            "mean": 22670,
            "median": 22670,
            "max": 22670
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23886,
            "mean": 28794,
            "median": 28921,
            "max": 28928
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 24008,
            "mean": 46008,
            "median": 47992,
            "max": 48335
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 45588,
            "mean": 45835,
            "median": 45846,
            "max": 46183
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2739,
            "mean": 2739,
            "median": 2739,
            "max": 2746
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2759
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28268,
            "mean": 28268,
            "median": 28268,
            "max": 28268
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 451,
            "mean": 15654,
            "median": 10225,
            "max": 52333
          },
          "owner()": {
            "calls": 847,
            "min": 2336,
            "mean": 2336,
            "median": 2336,
            "max": 2336
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2735,
            "mean": 2735,
            "median": 2735,
            "max": 2742
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23743,
            "mean": 27158,
            "median": 25942,
            "max": 29119
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 23126,
            "mean": 23126,
            "median": 23126,
            "max": 23126
          },
          "renounceRoles(uint256)": {
            "calls": 62,
            "min": 23626,
            "mean": 27867,
            "median": 28072,
            "max": 28426
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44604,
            "mean": 44604,
            "median": 44604,
            "max": 44604
          },
          "revokeRoles(address,uint256)": {
            "calls": 74,
            "min": 24031,
            "mean": 27175,
            "median": 25374,
            "max": 31194
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 477,
            "mean": 26127,
            "median": 25804,
            "max": 53912
          },
          "rolesOf(address)": {
            "calls": 2283,
            "min": 2704,
            "mean": 2705,
            "median": 2704,
            "max": 2711
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 23436,
            "mean": 28364,
            "median": 28476,
            "max": 28483
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 23693,
            "mean": 37460,
            "median": 37346,
            "max": 46200
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23872,
            "mean": 25246,
            "median": 23889,
            "max": 28534
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23387,
            "mean": 34026,
            "median": 23387,
            "max": 45530
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25712,
            "mean": 45783,
            "median": 46019,
            "max": 48218
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23615,
            "mean": 45176,
            "median": 45809,
            "max": 46121
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25709,
            "mean": 46411,
            "median": 46091,
            "max": 48215
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 400568,
          "size": 1564
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 87013,
          "size": 188
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 432467,
          "size": 1786
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 21302,
            "mean": 21302,
            "median": 21302,
            "max": 21302
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 21262,
            "mean": 21262,
            "median": 21262,
            "max": 21262
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65556,
            "mean": 65556,
            "median": 65556,
            "max": 65556
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45535,
            "mean": 45535,
            "median": 45535,
            "max": 45535
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69591,
            "mean": 69591,
            "median": 69591,
            "max": 69591
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65866,
            "mean": 65866,
            "median": 65866,
            "max": 65866
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66501,
            "mean": 66501,
            "median": 66501,
            "max": 66501
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 45573,
            "mean": 45573,
            "median": 45573,
            "max": 45573
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 51232,
            "mean": 51232,
            "median": 51232,
            "max": 51232
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 926330,
          "size": 4074
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 670,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 261,
            "min": 26701,
            "mean": 28124,
            "median": 28149,
            "max": 28909
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 261,
            "min": 33542,
            "mean": 39475,
            "median": 39659,
            "max": 39659
          },
          "owner()": {
            "calls": 1209,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43515,
            "mean": 43525,
            "median": 43527,
            "max": 43527
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91339,
            "mean": 110881,
            "median": 111275,
            "max": 111275
          },
          "setMaxTimedRole(uint256)": {
            "calls": 16,
            "min": 26454,
            "mean": 29943,
            "median": 26826,
            "max": 43926
          },
          "setOwner(address)": {
            "calls": 37,
            "min": 26672,
            "mean": 28081,
            "median": 26696,
            "max": 43796
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 687,
            "min": 24474,
            "mean": 50241,
            "median": 51668,
            "max": 51764
          },
          "timedRoleActive(address,uint256)": {
            "calls": 740,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 267863,
          "size": 1043
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22354,
            "mean": 22354,
            "median": 22354,
            "max": 22354
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 1,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22287,
            "mean": 22287,
            "median": 22287,
            "max": 22287
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2677,
            "mean": 9683,
            "median": 5331,
            "max": 32072
          },
          "value()": {
            "calls": 1,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 349869,
          "size": 1217
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1677,
            "min": 412,
            "mean": 1331,
            "median": 412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 259895,
          "size": 801
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 412,
            "mean": 2410,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 561574,
          "size": 2197
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 2834,
            "min": 412,
            "mean": 1495,
            "median": 2412,
            "max": 2412
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24196,
            "mean": 62730,
            "median": 66485,
            "max": 114307
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 261443,
          "size": 808
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1033,
            "min": 412,
            "mean": 2402,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 351381,
          "size": 1224
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1661,
            "min": 412,
            "mean": 1340,
            "median": 412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 260111,
          "size": 802
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 1025,
            "min": 412,
            "mean": 2410,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 216392,
          "size": 600
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 513,
            "mean": 513,
            "median": 513,
            "max": 513
          },
          "balanceOf(address)": {
            "calls": 514,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 259121,
          "size": 1089
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 1027,
            "min": 24326,
            "mean": 74070,
            "median": 36338,
            "max": 117951
          },
          "getAddress(bytes32)": {
            "calls": 257,
            "min": 443,
            "mean": 443,
            "median": 443,
            "max": 443
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 105644,
          "size": 344
        },
        "functions": {
          "fallback()": {
            "calls": 6323,
            "min": 2834,
            "mean": 15494,
            "median": 10028,
            "max": 247096
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1223820,
          "size": 5551
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "EXECUTOR_ROLE()": {
            "calls": 4,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "MAX_ROLE()": {
            "calls": 62,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "cancel(bytes32)": {
            "calls": 12,
            "min": 25459,
            "mean": 25601,
            "median": 25471,
            "max": 26259
          },
          "execute(bytes32,bytes)": {
            "calls": 280,
            "min": 28325,
            "mean": 43364,
            "median": 44756,
            "max": 95379
          },
          "hasRole(address,uint256)": {
            "calls": 1,
            "min": 2544,
            "mean": 2544,
            "median": 2544,
            "max": 2544
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 10,
            "min": 23014,
            "mean": 306582,
            "median": 377164,
            "max": 377164
          },
          "minDelay()": {
            "calls": 245,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "operationState(bytes32)": {
            "calls": 972,
            "min": 2546,
            "mean": 2551,
            "median": 2551,
            "max": 2557
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 260,
            "min": 26342,
            "mean": 54603,
            "median": 55379,
            "max": 57852
          },
          "readyTimestamp(bytes32)": {
            "calls": 729,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          },
          "roleHolderCount(uint256)": {
            "calls": 4,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          },
          "setRole(address,uint256,bool)": {
            "calls": 6,
            "min": 24023,
            "mean": 33663,
            "median": 24035,
            "max": 75979
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 608299,
          "size": 2603
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1287,
            "min": 2415,
            "mean": 2415,
            "median": 2415,
            "max": 2415
          },
          "decimals()": {
            "calls": 1,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          },
          "deposit()": {
            "calls": 545,
            "min": 27560,
            "mean": 65614,
            "median": 67360,
            "max": 67360
          },
          "name()": {
            "calls": 1,
            "min": 387,
            "mean": 387,
            "median": 387,
            "max": 387
          },
          "receive()": {
            "calls": 291,
            "min": 27379,
            "mean": 63516,
            "median": 67179,
            "max": 67179
          },
          "symbol()": {
            "calls": 1,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "withdraw(uint256)": {
            "calls": 286,
            "min": 27932,
            "mean": 39758,
            "median": 40256,
            "max": 40376
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 962201,
          "size": 4247
        },
        "functions": {
          "adminOf(address)": {
            "calls": 487,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "changeAdmin(address,address)": {
            "calls": 2,
            "min": 24198,
            "mean": 26399,
            "median": 26399,
            "max": 28600
          },
          "deploy(address,address)": {
            "calls": 267,
            "min": 22283,
            "mean": 51830,
            "median": 22295,
            "max": 126063
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 257,
            "min": 105550,
            "mean": 158894,
            "median": 159289,
            "max": 159433
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 256,
            "min": 23603,
            "mean": 145254,
            "median": 159651,
            "max": 159783
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 256,
            "min": 596,
            "mean": 596,
            "median": 596,
            "max": 596
          },
          "upgrade(address,address)": {
            "calls": 5,
            "min": 24192,
            "mean": 27883,
            "median": 24204,
            "max": 33414
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 2,
            "min": 35440,
            "mean": 51111,
            "median": 51111,
            "max": 66783
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 249839,
          "size": 997
        },
        "functions": {
          "implementation()": {
            "calls": 5054,
            "min": 98,
            "mean": 2244,
            "median": 2258,
            "max": 2258
          },
          "owner()": {
            "calls": 504,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "renounceOwnership()": {
            "calls": 51,
            "min": 22947,
            "mean": 23229,
            "median": 23336,
            "max": 23336
          },
          "transferOwnership(address)": {
            "calls": 159,
            "min": 23602,
            "mean": 26840,
            "median": 28245,
            "max": 28245
          },
          "upgradeTo(address)": {
            "calls": 93,
            "min": 23668,
            "mean": 26470,
            "median": 23772,
            "max": 32524
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3563275,
          "size": 17731
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 38,
            "min": 22813,
            "mean": 83450,
            "median": 45244,
            "max": 226149
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 256,
            "min": 21874,
            "mean": 22777,
            "median": 21886,
            "max": 26264
          },
          "decodeWord(string)": {
            "calls": 6,
            "min": 9239,
            "mean": 9379,
            "median": 9280,
            "max": 9718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 3274712,
          "size": 16290
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 1285,
            "min": 88819,
            "mean": 38992895,
            "median": 1169802,
            "max": 96809798
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 6800694,
          "size": 33895
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 1,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          },
          "addHours(uint256,uint256)": {
            "calls": 1,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "addMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "addMonths(uint256,uint256)": {
            "calls": 1,
            "min": 1115,
            "mean": 1115,
            "median": 1115,
            "max": 1115
          },
          "addSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 340,
            "mean": 340,
            "median": 340,
            "max": 340
          },
          "addYears(uint256,uint256)": {
            "calls": 1,
            "min": 1045,
            "mean": 1045,
            "median": 1045,
            "max": 1045
          },
          "diffDays(uint256,uint256)": {
            "calls": 1,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "diffHours(uint256,uint256)": {
            "calls": 1,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 331,
            "mean": 331,
            "median": 331,
            "max": 331
          },
          "diffMonths(uint256,uint256)": {
            "calls": 1,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "diffYears(uint256,uint256)": {
            "calls": 1,
            "min": 386,
            "mean": 386,
            "median": 386,
            "max": 386
          },
          "subDays(uint256,uint256)": {
            "calls": 1,
            "min": 408,
            "mean": 408,
            "median": 408,
            "max": 408
          },
          "subHours(uint256,uint256)": {
            "calls": 1,
            "min": 378,
            "mean": 378,
            "median": 378,
            "max": 378
          },
          "subMinutes(uint256,uint256)": {
            "calls": 1,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "subMonths(uint256,uint256)": {
            "calls": 1,
            "min": 720,
            "mean": 720,
            "median": 720,
            "max": 720
          },
          "subSeconds(uint256,uint256)": {
            "calls": 1,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "subYears(uint256,uint256)": {
            "calls": 1,
            "min": 698,
            "mean": 698,
            "median": 698,
            "max": 698
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 371184,
          "size": 1379
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 139,
            "min": 67294,
            "mean": 67516,
            "median": 67666,
            "max": 67666
          },
          "predictDeployment(bytes32)": {
            "calls": 256,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 179536,
          "size": 618
        },
        "functions": {
          "generate(bytes)": {
            "calls": 149,
            "min": 0,
            "mean": 4595,
            "median": 1333,
            "max": 77799
          },
          "next(uint256)": {
            "calls": 279,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 7756047,
          "size": 38664
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 1237,
            "mean": 1237,
            "median": 1237,
            "max": 1237
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 256,
            "min": 394,
            "mean": 394,
            "median": 394,
            "max": 394
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 7298496,
          "size": 36380
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 38,
            "min": 748,
            "mean": 815,
            "median": 817,
            "max": 841
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 46,
            "min": 593197,
            "mean": 685397,
            "median": 593829,
            "max": 2678874
          },
          "recover(bytes32,bytes)": {
            "calls": 158,
            "min": 22524,
            "mean": 27112,
            "median": 26758,
            "max": 30217
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 40,
            "min": 3601,
            "mean": 24944,
            "median": 26189,
            "max": 26201
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 25892,
            "mean": 26152,
            "median": 26264,
            "max": 26358
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 145,
            "min": 618813,
            "mean": 756748,
            "median": 619596,
            "max": 4763339
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 38,
            "min": 618347,
            "mean": 652049,
            "median": 619099,
            "max": 1623004
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 618270,
            "mean": 730500,
            "median": 619063,
            "max": 4246938
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 158,
            "min": 22813,
            "mean": 29989,
            "median": 30188,
            "max": 30200
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 40,
            "min": 3603,
            "mean": 24957,
            "median": 26191,
            "max": 26203
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 25982,
            "mean": 26233,
            "median": 26354,
            "max": 26366
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 145,
            "min": 622234,
            "mean": 744927,
            "median": 623039,
            "max": 4465422
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 38,
            "min": 618492,
            "mean": 641564,
            "median": 619026,
            "max": 960100
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 284,
            "min": 618424,
            "mean": 735618,
            "median": 619188,
            "max": 4431824
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 747870,
          "size": 3254
        },
        "functions": {
          "batchAmounts()": {
            "calls": 520,
            "min": 2453,
            "mean": 5919,
            "median": 6960,
            "max": 9217
          },
          "batchData()": {
            "calls": 520,
            "min": 2542,
            "mean": 235971,
            "median": 2589,
            "max": 9031112
          },
          "batchFrom()": {
            "calls": 520,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "batchIds()": {
            "calls": 520,
            "min": 2478,
            "mean": 5944,
            "median": 6984,
            "max": 9241
          },
          "batchOperator()": {
            "calls": 520,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "from()": {
            "calls": 512,
            "min": 2296,
            "mean": 2296,
            "median": 2296,
            "max": 2296
          },
          "id()": {
            "calls": 512,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "mintData()": {
            "calls": 512,
            "min": 2560,
            "mean": 192814,
            "median": 2605,
            "max": 8923629
          },
          "operator()": {
            "calls": 512,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2594840,
          "size": 11827
        },
        "functions": {
          "afterCounter()": {
            "calls": 160,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "beforeCounter()": {
            "calls": 160,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 61110,
            "mean": 61243,
            "median": 61338,
            "max": 61352
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 57649,
            "mean": 57782,
            "median": 57877,
            "max": 57891
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 32,
            "min": 49222,
            "mean": 51447,
            "median": 49222,
            "max": 120422
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 32,
            "min": 59959,
            "mean": 60090,
            "median": 60187,
            "max": 60187
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 64,
            "min": 48553,
            "mean": 61876,
            "median": 57474,
            "max": 74346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 341566,
          "size": 1385
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 28,
            "min": 31145,
            "mean": 50432,
            "median": 51189,
            "max": 51429
          },
          "mint(address,uint256)": {
            "calls": 34,
            "min": 61129,
            "mean": 72446,
            "median": 61531,
            "max": 95869
          },
          "sum()": {
            "calls": 1,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 6315945,
          "size": 31475
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 512,
            "min": 24696,
            "mean": 50821,
            "median": 49961,
            "max": 74159
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 359002,
          "size": 1449
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 3,
            "min": 178,
            "mean": 1147,
            "median": 178,
            "max": 3087
          },
          "data()": {
            "calls": 257,
            "min": 2518,
            "mean": 2988,
            "median": 2518,
            "max": 11248
          },
          "datahash()": {
            "calls": 651,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          },
          "setData(bytes)": {
            "calls": 257,
            "min": 25142,
            "mean": 32527,
            "median": 25142,
            "max": 133848
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 11507984,
          "size": 57389
        },
        "functions": {
          "decimals()": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22204,
            "mean": 22496,
            "median": 22485,
            "max": 23015
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 256,
            "min": 22224,
            "mean": 22512,
            "median": 22496,
            "max": 23014
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 347334,
          "size": 1395
        },
        "functions": {
          "datahash()": {
            "calls": 384,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 321801,
          "size": 1278
        },
        "functions": {
          "data()": {
            "calls": 1024,
            "min": 2495,
            "mean": 4062,
            "median": 2495,
            "max": 11225
          },
          "from()": {
            "calls": 1024,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "id()": {
            "calls": 1024,
            "min": 2270,
            "mean": 2270,
            "median": 2270,
            "max": 2270
          },
          "operator()": {
            "calls": 1024,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 2252193,
          "size": 10226
        },
        "functions": {
          "afterCounter()": {
            "calls": 32,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "beforeCounter()": {
            "calls": 32,
            "min": 363,
            "mean": 363,
            "median": 363,
            "max": 363
          },
          "mint(address,uint256)": {
            "calls": 32,
            "min": 61732,
            "mean": 63346,
            "median": 61744,
            "max": 113044
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 56911,
            "mean": 57570,
            "median": 57127,
            "max": 74239
          },
          "transferFrom(address,address,uint256)": {
            "calls": 32,
            "min": 64812,
            "mean": 69357,
            "median": 69498,
            "max": 69612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2837578,
          "size": 14107
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 457,
            "min": 558,
            "mean": 577,
            "median": 570,
            "max": 753
          },
          "returnsHash(bytes)": {
            "calls": 474,
            "min": 533,
            "mean": 552,
            "median": 545,
            "max": 725
          },
          "revertsWithCustomError()": {
            "calls": 5,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 2148367,
          "size": 10665
        },
        "functions": {
          "get(address)": {
            "calls": 508,
            "min": 2488,
            "mean": 5743,
            "median": 5743,
            "max": 8998
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 145,
            "min": 26577,
            "mean": 48786,
            "median": 37165,
            "max": 165079
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 12385601,
          "size": 61768
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 190,
            "min": 21766,
            "mean": 47312,
            "median": 44153,
            "max": 142315
          },
          "addToBytes32Set(bytes32)": {
            "calls": 167,
            "min": 21744,
            "mean": 48130,
            "median": 46370,
            "max": 161560
          },
          "addressSetAt(uint256)": {
            "calls": 18,
            "min": 4761,
            "mean": 6053,
            "median": 4761,
            "max": 9009
          },
          "addressSetContains(address)": {
            "calls": 160,
            "min": 4790,
            "mean": 6867,
            "median": 6894,
            "max": 6894
          },
          "bytes32SetAt(uint256)": {
            "calls": 16,
            "min": 4734,
            "mean": 5524,
            "median": 4734,
            "max": 8973
          },
          "bytes32SetContains(bytes32)": {
            "calls": 200,
            "min": 412,
            "mean": 8617,
            "median": 8959,
            "max": 8959
          },
          "removeFromAddressSet(address)": {
            "calls": 158,
            "min": 21743,
            "mean": 28272,
            "median": 28403,
            "max": 28403
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 190,
            "min": 21707,
            "mean": 30249,
            "median": 30603,
            "max": 30603
          },
          "uint8SetAt(uint256)": {
            "calls": 16,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 9,
            "min": 26615,
            "mean": 49866,
            "median": 46615,
            "max": 142652
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 2304,
            "min": 28671,
            "mean": 53857,
            "median": 48795,
            "max": 161734
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 2304,
            "min": 24170,
            "mean": 28043,
            "median": 27121,
            "max": 44151
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 15913436,
          "size": 79367
        },
        "functions": {
          "add(uint256,uint256)": {
            "calls": 257,
            "min": 380,
            "mean": 380,
            "median": 380,
            "max": 391
          },
          "divWad(uint256,uint256)": {
            "calls": 87,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 423,
            "mean": 453,
            "median": 468,
            "max": 468
          },
          "divWadUp(uint256,uint256)": {
            "calls": 80,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "factorial(uint256)": {
            "calls": 1,
            "min": 379,
            "mean": 379,
            "median": 379,
            "max": 379
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 325,
            "min": 556,
            "mean": 589,
            "median": 569,
            "max": 914
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 256,
            "min": 512,
            "mean": 547,
            "median": 543,
            "max": 625
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 258,
            "min": 579,
            "mean": 594,
            "median": 592,
            "max": 941
          },
          "lambertW0Wad(int256)": {
            "calls": 12,
            "min": 445,
            "mean": 445,
            "median": 445,
            "max": 445
          },
          "lnWad(int256)": {
            "calls": 3,
            "min": 393,
            "mean": 393,
            "median": 393,
            "max": 393
          },
          "mul(uint256,uint256)": {
            "calls": 257,
            "min": 438,
            "mean": 462,
            "median": 474,
            "max": 474
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 450,
            "mean": 479,
            "median": 493,
            "max": 506
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 512,
            "min": 448,
            "mean": 476,
            "median": 471,
            "max": 505
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 257,
            "min": 483,
            "mean": 531,
            "median": 563,
            "max": 576
          },
          "mulWad(uint256,uint256)": {
            "calls": 107,
            "min": 395,
            "mean": 395,
            "median": 395,
            "max": 395
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 512,
            "min": 422,
            "mean": 450,
            "median": 471,
            "max": 471
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 102,
            "min": 436,
            "mean": 436,
            "median": 436,
            "max": 436
          },
          "packSci(uint256)": {
            "calls": 1,
            "min": 961,
            "mean": 961,
            "median": 961,
            "max": 961
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 2,
            "min": 725,
            "mean": 1631,
            "median": 1631,
            "max": 2538
          },
          "sDivWad(int256,int256)": {
            "calls": 73,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 435,
            "mean": 499,
            "median": 525,
            "max": 525
          },
          "sMulWad(int256,int256)": {
            "calls": 91,
            "min": 513,
            "mean": 525,
            "median": 526,
            "max": 526
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 256,
            "min": 453,
            "mean": 581,
            "median": 606,
            "max": 606
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 15129752,
          "size": 75458
        },
        "functions": {
          "decodeString(string)": {
            "calls": 282,
            "min": 25729,
            "mean": 28367,
            "median": 28172,
            "max": 35595
          },
          "parseInt(string)": {
            "calls": 794,
            "min": 25988,
            "mean": 39229,
            "median": 43177,
            "max": 43403
          },
          "parseUint(string)": {
            "calls": 278,
            "min": 25899,
            "mean": 32236,
            "median": 29314,
            "max": 43233
          },
          "parseUintFromHex(string)": {
            "calls": 320,
            "min": 760,
            "mean": 3542,
            "median": 1190,
            "max": 11826
          },
          "parsedValue(string)": {
            "calls": 1203,
            "min": 25719,
            "mean": 29467,
            "median": 28671,
            "max": 42999
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2600095,
          "size": 12921
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 1,
            "min": 308,
            "mean": 308,
            "median": 308,
            "max": 308
          },
          "returnsBool(uint256)": {
            "calls": 1,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 3839229,
          "size": 19109
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 2,
            "min": 23774,
            "mean": 33830,
            "median": 33830,
            "max": 43886
          },
          "claimWithToggle(uint256)": {
            "calls": 2,
            "min": 26703,
            "mean": 35230,
            "median": 35230,
            "max": 43758
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 5168046,
          "size": 25744
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 530,
            "min": 23054,
            "mean": 24035,
            "median": 23686,
            "max": 26762
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 772,
            "min": 24656,
            "mean": 26479,
            "median": 26152,
            "max": 29752
          },
          "_testLoadCalldata(bytes)": {
            "calls": 256,
            "min": 27861,
            "mean": 28455,
            "median": 28261,
            "max": 29679
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 4,
            "min": 24371,
            "mean": 25782,
            "median": 26007,
            "max": 26743
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 270,
            "min": 2842,
            "mean": 738107,
            "median": 630856,
            "max": 4879839
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2415877,
          "size": 12001
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 259,
            "min": 117925,
            "mean": 1334661,
            "median": 953392,
            "max": 83526327
          },
          "getArgAddress(uint256)": {
            "calls": 11,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 11,
            "min": 514,
            "mean": 524,
            "median": 526,
            "max": 550
          },
          "getArgUint256(uint256)": {
            "calls": 33,
            "min": 1668,
            "mean": 1668,
            "median": 1668,
            "max": 1668
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 11,
            "min": 4134,
            "mean": 47874,
            "median": 54341,
            "max": 76319
          },
          "getArgUint64(uint256)": {
            "calls": 11,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "getArgUint8(uint256)": {
            "calls": 11,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "getCalldataHash()": {
            "calls": 11,
            "min": 606,
            "mean": 2386,
            "median": 2640,
            "max": 3580
          },
          "revertWithError()": {
            "calls": 11,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "setValue(uint256)": {
            "calls": 11,
            "min": 22343,
            "mean": 22343,
            "median": 22343,
            "max": 22343
          },
          "value()": {
            "calls": 1041,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 153955,
          "size": 499
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 512,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "setHash(uint256,bytes)": {
            "calls": 256,
            "min": 44445,
            "mean": 45118,
            "median": 44999,
            "max": 46335
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 947071,
          "size": 4665
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 395,
            "min": 511,
            "mean": 620,
            "median": 676,
            "max": 700
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 20467156,
          "size": 102075
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 13,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnClone(address,uint256)": {
            "calls": 12,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 7,
            "min": 3267,
            "mean": 3267,
            "median": 3267,
            "max": 3267
          },
          "argsOnERC1967(address)": {
            "calls": 15,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 7,
            "min": 3079,
            "mean": 3079,
            "median": 3079,
            "max": 3079
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 5,
            "min": 3286,
            "mean": 3286,
            "median": 3286,
            "max": 3286
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 5,
            "min": 3020,
            "mean": 3020,
            "median": 3020,
            "max": 3020
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 6,
            "min": 3048,
            "mean": 3048,
            "median": 3048,
            "max": 3048
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 1,
            "min": 3274,
            "mean": 3274,
            "median": 3274,
            "max": 3274
          },
          "argsOnERC1967I(address)": {
            "calls": 10,
            "min": 3026,
            "mean": 3026,
            "median": 3026,
            "max": 3026
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 4,
            "min": 3079,
            "mean": 3079,
            "median": 3079,
            "max": 3079
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 5,
            "min": 3258,
            "mean": 3258,
            "median": 3258,
            "max": 3258
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 8,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 2,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 6,
            "min": 3260,
            "mean": 3260,
            "median": 3260,
            "max": 3260
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 73,
            "min": 35945,
            "mean": 47389,
            "median": 56102,
            "max": 56390
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 768,
            "min": 619,
            "mean": 621,
            "median": 619,
            "max": 625
          },
          "clone(address)": {
            "calls": 257,
            "min": 85388,
            "mean": 85388,
            "median": 85388,
            "max": 85388
          },
          "clone(address,bytes)": {
            "calls": 257,
            "min": 69247,
            "mean": 3212496,
            "median": 71730,
            "max": 96830787
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 264,
            "min": 69731,
            "mean": 4389929,
            "median": 72493,
            "max": 96798239
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 257,
            "min": 85798,
            "mean": 113831,
            "median": 86170,
            "max": 680427
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 263,
            "min": 0,
            "mean": 249630,
            "median": 74644,
            "max": 8472803
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 266,
            "min": 0,
            "mean": 508679,
            "median": 100999,
            "max": 13397354
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 256,
            "min": 114318,
            "mean": 158596,
            "median": 114690,
            "max": 1867954
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 377,
            "min": 0,
            "mean": 422250,
            "median": 103931,
            "max": 14424344
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 101386,
            "mean": 127220,
            "median": 101758,
            "max": 695927
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 260,
            "min": 0,
            "mean": 365086,
            "median": 104787,
            "max": 13220040
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 256,
            "min": 118499,
            "mean": 147649,
            "median": 118871,
            "max": 972001
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 366,
            "min": 0,
            "mean": 460434,
            "median": 105144,
            "max": 13738074
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 102375,
            "mean": 178885,
            "median": 102747,
            "max": 3110542
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 265,
            "min": 95060,
            "mean": 8365429,
            "median": 98141,
            "max": 96830912
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 389,
            "min": 94265,
            "mean": 159060,
            "median": 111520,
            "max": 4659199
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 457,
            "min": 99112,
            "mean": 15049850,
            "median": 102169,
            "max": 96820570
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 98404,
            "mean": 154104,
            "median": 98776,
            "max": 1217940
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 263,
            "min": 99356,
            "mean": 6826444,
            "median": 102501,
            "max": 96818749
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 638,
            "min": 98395,
            "mean": 149475,
            "median": 98894,
            "max": 2551174
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 431,
            "min": 100101,
            "mean": 15492859,
            "median": 105028,
            "max": 96798773
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 256,
            "min": 99420,
            "mean": 181123,
            "median": 99792,
            "max": 4097201
          },
          "deployERC1967(address,bytes)": {
            "calls": 257,
            "min": 94536,
            "mean": 1491724,
            "median": 97037,
            "max": 96842164
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 512,
            "min": 97998,
            "mean": 152054,
            "median": 98125,
            "max": 4747238
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 117,
            "min": 98703,
            "mean": 382534,
            "median": 101005,
            "max": 8029644
          },
          "deployERC1967I(address)": {
            "calls": 257,
            "min": 115077,
            "mean": 115077,
            "median": 115077,
            "max": 115077
          },
          "deployERC1967I(address,bytes)": {
            "calls": 257,
            "min": 98810,
            "mean": 5231768,
            "median": 101644,
            "max": 96833012
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 513,
            "min": 98995,
            "mean": 148390,
            "median": 99122,
            "max": 4259439
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 129,
            "min": 99579,
            "mean": 5711057,
            "median": 102823,
            "max": 96797593
          },
          "revertWithError()": {
            "calls": 7101,
            "min": 139,
            "mean": 2443,
            "median": 2456,
            "max": 2456
          },
          "setValue(uint256)": {
            "calls": 7487,
            "min": 431,
            "mean": 22262,
            "median": 22431,
            "max": 22431
          },
          "value()": {
            "calls": 20978,
            "min": 139,
            "mean": 2410,
            "median": 2417,
            "max": 2417
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 4970165,
          "size": 24756
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 1,
            "min": 510,
            "mean": 510,
            "median": 510,
            "max": 510
          },
          "decodeBatch(bytes)": {
            "calls": 71,
            "min": 796,
            "mean": 2569,
            "median": 2849,
            "max": 4082
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 17,
            "min": 1049,
            "mean": 1221,
            "median": 1247,
            "max": 1385
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 607,
            "min": 527,
            "mean": 1486,
            "median": 834,
            "max": 4697
          },
          "decodeDelegate(bytes)": {
            "calls": 256,
            "min": 667,
            "mean": 685,
            "median": 679,
            "max": 715
          },
          "decodeSingle(bytes)": {
            "calls": 256,
            "min": 705,
            "mean": 725,
            "median": 717,
            "max": 753
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 1,
            "min": 23316,
            "mean": 23316,
            "median": 23316,
            "max": 23316
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 137,
            "min": 29575,
            "mean": 37076,
            "median": 35695,
            "max": 52776
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 256,
            "min": 646454,
            "mean": 776851,
            "median": 652545,
            "max": 4206917
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 4055515,
          "size": 20189
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 1,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 1,
            "min": 2578,
            "mean": 2578,
            "median": 2578,
            "max": 2578
          },
          "setUint8(uint256,uint8)": {
            "calls": 1,
            "min": 43911,
            "mean": 43911,
            "median": 43911,
            "max": 43911
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 1,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 5098946,
          "size": 25399
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 256,
            "min": 2421,
            "mean": 3531,
            "median": 2421,
            "max": 4796
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 256,
            "min": 23770,
            "mean": 23793,
            "median": 23794,
            "max": 23806
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 514,
            "min": 21519,
            "mean": 43172,
            "median": 43698,
            "max": 43698
          },
          "lazyShufflerNext(uint256)": {
            "calls": 257,
            "min": 23663,
            "mean": 23970,
            "median": 24047,
            "max": 24047
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 12005809,
          "size": 59873
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 20,
            "min": 24472,
            "mean": 42100,
            "median": 28589,
            "max": 112199
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 20,
            "min": 24649,
            "mean": 47976,
            "median": 30019,
            "max": 142452
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 19488378,
          "size": 97195
        },
        "functions": {
          "returnString(string)": {
            "calls": 259,
            "min": 630,
            "mean": 638,
            "median": 636,
            "max": 648
          },
          "toHexString(uint256,uint256)": {
            "calls": 1,
            "min": 579,
            "mean": 579,
            "median": 579,
            "max": 579
          },
          "toSmallString(string)": {
            "calls": 1,
            "min": 648,
            "mean": 648,
            "median": 648,
            "max": 648
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 244876,
          "size": 920
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27359,
            "mean": 51687,
            "median": 50840,
            "max": 82513
          },
          "x()": {
            "calls": 6,
            "min": 2516,
            "mean": 10119,
            "median": 5761,
            "max": 37316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 173407,
          "size": 589
        },
        "functions": {
          "setX(string)": {
            "calls": 6,
            "min": 27217,
            "mean": 41890,
            "median": 32626,
            "max": 82219
          },
          "x()": {
            "calls": 6,
            "min": 2492,
            "mean": 9419,
            "median": 4684,
            "max": 37475
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2897447,
          "size": 14406
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 1538,
            "min": 22249,
            "mean": 26571,
            "median": 27773,
            "max": 29345
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 1795,
            "min": 24263,
            "mean": 32190,
            "median": 32725,
            "max": 59881
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 2723839,
          "size": 13539
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 256,
            "min": 842,
            "mean": 42189,
            "median": 42403,
            "max": 81003
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 1230,
            "mean": 47651,
            "median": 41757,
            "max": 83797
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 256,
            "min": 823,
            "mean": 43325,
            "median": 43579,
            "max": 81170
          },
          "getRootFromEmptyTree()": {
            "calls": 1,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 1,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2509789,
          "size": 12470
        },
        "functions": {
          "decimals()": {
            "calls": 256,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "name()": {
            "calls": 256,
            "min": 4744,
            "mean": 6610,
            "median": 4820,
            "max": 13500
          },
          "returnsBytes32StringA()": {
            "calls": 1,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "returnsBytes32StringB()": {
            "calls": 40,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "returnsChoppedString(uint256)": {
            "calls": 105,
            "min": 322,
            "mean": 322,
            "median": 322,
            "max": 325
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 560,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "returnsEmptyString()": {
            "calls": 256,
            "min": 4744,
            "mean": 6626,
            "median": 4813,
            "max": 13582
          },
          "returnsNothing()": {
            "calls": 258,
            "min": 176,
            "mean": 176,
            "median": 176,
            "max": 176
          },
          "returnsString()": {
            "calls": 512,
            "min": 4754,
            "mean": 6702,
            "median": 4830,
            "max": 13510
          },
          "returnsUint()": {
            "calls": 256,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "reverts()": {
            "calls": 258,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "symbol()": {
            "calls": 256,
            "min": 4759,
            "mean": 6625,
            "median": 4835,
            "max": 13515
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 9868196,
          "size": 49206
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 113,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "enqueue(uint256,uint256)": {
            "calls": 380,
            "min": 21680,
            "mean": 51827,
            "median": 66255,
            "max": 66375
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 119,
            "min": 611,
            "mean": 611,
            "median": 611,
            "max": 611
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 132,
            "min": 801,
            "mean": 801,
            "median": 802,
            "max": 802
          },
          "pop()": {
            "calls": 79,
            "min": 23441,
            "mean": 23441,
            "median": 23441,
            "max": 23441
          },
          "replace(uint256)": {
            "calls": 61,
            "min": 23657,
            "mean": 23906,
            "median": 24017,
            "max": 24029
          },
          "root()": {
            "calls": 142,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3141145,
          "size": 15623
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 256,
            "min": 22442,
            "mean": 23347,
            "median": 23906,
            "max": 23930
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 9970588,
          "size": 49717
        },
        "functions": {
          "find(uint256)": {
            "calls": 1,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "insert(uint256)": {
            "calls": 2,
            "min": 21515,
            "mean": 23917,
            "median": 23917,
            "max": 26319
          },
          "remove(bytes32)": {
            "calls": 259,
            "min": 23889,
            "mean": 24217,
            "median": 24220,
            "max": 24220
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 2441907,
          "size": 12131
        },
        "functions": {
          "read(address)": {
            "calls": 164,
            "min": 438,
            "mean": 2983,
            "median": 2938,
            "max": 3209
          },
          "read(address,uint256)": {
            "calls": 103,
            "min": 2976,
            "mean": 3091,
            "median": 2976,
            "max": 3295
          },
          "read(address,uint256,uint256)": {
            "calls": 63,
            "min": 3194,
            "mean": 3635,
            "median": 3469,
            "max": 20709
          },
          "write(bytes)": {
            "calls": 2,
            "min": 13468255,
            "mean": 48556882,
            "median": 48556882,
            "max": 83645509
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 9189545,
          "size": 45819
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 24,
            "min": 349,
            "mean": 369,
            "median": 380,
            "max": 380
          },
          "toInt104(uint256)": {
            "calls": 16,
            "min": 360,
            "mean": 365,
            "median": 360,
            "max": 380
          },
          "toInt112(int256)": {
            "calls": 20,
            "min": 344,
            "mean": 359,
            "median": 364,
            "max": 364
          },
          "toInt112(uint256)": {
            "calls": 11,
            "min": 352,
            "mean": 366,
            "median": 352,
            "max": 383
          },
          "toInt120(int256)": {
            "calls": 38,
            "min": 371,
            "mean": 384,
            "median": 391,
            "max": 391
          },
          "toInt120(uint256)": {
            "calls": 18,
            "min": 353,
            "mean": 366,
            "median": 353,
            "max": 384
          },
          "toInt128(int256)": {
            "calls": 40,
            "min": 358,
            "mean": 378,
            "median": 389,
            "max": 389
          },
          "toInt128(uint256)": {
            "calls": 16,
            "min": 339,
            "mean": 351,
            "median": 359,
            "max": 359
          },
          "toInt136(int256)": {
            "calls": 46,
            "min": 349,
            "mean": 374,
            "median": 380,
            "max": 380
          },
          "toInt136(uint256)": {
            "calls": 21,
            "min": 366,
            "mean": 377,
            "median": 386,
            "max": 386
          },
          "toInt144(int256)": {
            "calls": 28,
            "min": 357,
            "mean": 379,
            "median": 388,
            "max": 388
          },
          "toInt144(uint256)": {
            "calls": 12,
            "min": 376,
            "mean": 386,
            "median": 386,
            "max": 396
          },
          "toInt152(int256)": {
            "calls": 26,
            "min": 374,
            "mean": 396,
            "median": 405,
            "max": 405
          },
          "toInt152(uint256)": {
            "calls": 13,
            "min": 375,
            "mean": 384,
            "median": 375,
            "max": 395
          },
          "toInt16(int256)": {
            "calls": 54,
            "min": 346,
            "mean": 363,
            "median": 377,
            "max": 377
          },
          "toInt16(uint256)": {
            "calls": 18,
            "min": 338,
            "mean": 342,
            "median": 338,
            "max": 358
          },
          "toInt160(int256)": {
            "calls": 32,
            "min": 357,
            "mean": 381,
            "median": 388,
            "max": 388
          },
          "toInt160(uint256)": {
            "calls": 16,
            "min": 360,
            "mean": 367,
            "median": 360,
            "max": 380
          },
          "toInt168(int256)": {
            "calls": 26,
            "min": 362,
            "mean": 368,
            "median": 371,
            "max": 371
          },
          "toInt168(uint256)": {
            "calls": 19,
            "min": 351,
            "mean": 357,
            "median": 351,
            "max": 371
          },
          "toInt176(int256)": {
            "calls": 24,
            "min": 341,
            "mean": 356,
            "median": 361,
            "max": 361
          },
          "toInt176(uint256)": {
            "calls": 19,
            "min": 362,
            "mean": 378,
            "median": 393,
            "max": 393
          },
          "toInt184(int256)": {
            "calls": 36,
            "min": 373,
            "mean": 397,
            "median": 404,
            "max": 404
          },
          "toInt184(uint256)": {
            "calls": 16,
            "min": 367,
            "mean": 380,
            "median": 387,
            "max": 387
          },
          "toInt192(int256)": {
            "calls": 18,
            "min": 327,
            "mean": 349,
            "median": 358,
            "max": 358
          },
          "toInt192(uint256)": {
            "calls": 9,
            "min": 361,
            "mean": 372,
            "median": 381,
            "max": 381
          },
          "toInt200(int256)": {
            "calls": 22,
            "min": 358,
            "mean": 379,
            "median": 389,
            "max": 389
          },
          "toInt200(uint256)": {
            "calls": 14,
            "min": 377,
            "mean": 389,
            "median": 397,
            "max": 397
          },
          "toInt208(int256)": {
            "calls": 30,
            "min": 348,
            "mean": 371,
            "median": 379,
            "max": 379
          },
          "toInt208(uint256)": {
            "calls": 14,
            "min": 358,
            "mean": 370,
            "median": 378,
            "max": 378
          },
          "toInt216(int256)": {
            "calls": 34,
            "min": 367,
            "mean": 383,
            "median": 387,
            "max": 387
          },
          "toInt216(uint256)": {
            "calls": 20,
            "min": 352,
            "mean": 365,
            "median": 352,
            "max": 383
          },
          "toInt224(int256)": {
            "calls": 36,
            "min": 378,
            "mean": 402,
            "median": 409,
            "max": 409
          },
          "toInt224(uint256)": {
            "calls": 15,
            "min": 376,
            "mean": 384,
            "median": 376,
            "max": 396
          },
          "toInt232(int256)": {
            "calls": 48,
            "min": 368,
            "mean": 383,
            "median": 388,
            "max": 388
          },
          "toInt232(uint256)": {
            "calls": 18,
            "min": 361,
            "mean": 373,
            "median": 361,
            "max": 392
          },
          "toInt24(int256)": {
            "calls": 36,
            "min": 323,
            "mean": 343,
            "median": 354,
            "max": 354
          },
          "toInt24(uint256)": {
            "calls": 19,
            "min": 375,
            "mean": 378,
            "median": 375,
            "max": 395
          },
          "toInt240(int256)": {
            "calls": 50,
            "min": 363,
            "mean": 387,
            "median": 394,
            "max": 394
          },
          "toInt240(uint256)": {
            "calls": 18,
            "min": 360,
            "mean": 366,
            "median": 360,
            "max": 380
          },
          "toInt248(int256)": {
            "calls": 42,
            "min": 329,
            "mean": 353,
            "median": 360,
            "max": 360
          },
          "toInt248(uint256)": {
            "calls": 22,
            "min": 350,
            "mean": 364,
            "median": 370,
            "max": 370
          },
          "toInt256(uint256)": {
            "calls": 256,
            "min": 349,
            "mean": 359,
            "median": 360,
            "max": 360
          },
          "toInt32(int256)": {
            "calls": 38,
            "min": 346,
            "mean": 368,
            "median": 377,
            "max": 377
          },
          "toInt32(uint256)": {
            "calls": 14,
            "min": 350,
            "mean": 352,
            "median": 350,
            "max": 370
          },
          "toInt40(int256)": {
            "calls": 50,
            "min": 324,
            "mean": 342,
            "median": 355,
            "max": 355
          },
          "toInt40(uint256)": {
            "calls": 15,
            "min": 350,
            "mean": 352,
            "median": 350,
            "max": 370
          },
          "toInt48(int256)": {
            "calls": 28,
            "min": 331,
            "mean": 352,
            "median": 362,
            "max": 362
          },
          "toInt48(uint256)": {
            "calls": 16,
            "min": 360,
            "mean": 362,
            "median": 360,
            "max": 380
          },
          "toInt56(int256)": {
            "calls": 46,
            "min": 333,
            "mean": 353,
            "median": 364,
            "max": 364
          },
          "toInt56(uint256)": {
            "calls": 15,
            "min": 366,
            "mean": 371,
            "median": 366,
            "max": 386
          },
          "toInt64(int256)": {
            "calls": 38,
            "min": 323,
            "mean": 344,
            "median": 354,
            "max": 354
          },
          "toInt64(uint256)": {
            "calls": 9,
            "min": 376,
            "mean": 380,
            "median": 376,
            "max": 396
          },
          "toInt72(int256)": {
            "calls": 40,
            "min": 361,
            "mean": 382,
            "median": 392,
            "max": 392
          },
          "toInt72(uint256)": {
            "calls": 12,
            "min": 367,
            "mean": 377,
            "median": 377,
            "max": 387
          },
          "toInt8(int256)": {
            "calls": 22,
            "min": 344,
            "mean": 345,
            "median": 344,
            "max": 374
          },
          "toInt8(uint256)": {
            "calls": 18,
            "min": 363,
            "mean": 364,
            "median": 363,
            "max": 393
          },
          "toInt80(int256)": {
            "calls": 28,
            "min": 384,
            "mean": 397,
            "median": 404,
            "max": 404
          },
          "toInt80(uint256)": {
            "calls": 15,
            "min": 322,
            "mean": 334,
            "median": 322,
            "max": 353
          },
          "toInt88(int256)": {
            "calls": 14,
            "min": 324,
            "mean": 343,
            "median": 355,
            "max": 355
          },
          "toInt88(uint256)": {
            "calls": 16,
            "min": 350,
            "mean": 360,
            "median": 360,
            "max": 370
          },
          "toInt96(int256)": {
            "calls": 32,
            "min": 380,
            "mean": 394,
            "median": 400,
            "max": 400
          },
          "toInt96(uint256)": {
            "calls": 14,
            "min": 345,
            "mean": 360,
            "median": 360,
            "max": 376
          },
          "toUint104(uint256)": {
            "calls": 14,
            "min": 349,
            "mean": 355,
            "median": 349,
            "max": 371
          },
          "toUint112(uint256)": {
            "calls": 10,
            "min": 372,
            "mean": 374,
            "median": 372,
            "max": 394
          },
          "toUint120(uint256)": {
            "calls": 9,
            "min": 371,
            "mean": 380,
            "median": 371,
            "max": 393
          },
          "toUint128(uint256)": {
            "calls": 13,
            "min": 342,
            "mean": 352,
            "median": 342,
            "max": 364
          },
          "toUint136(uint256)": {
            "calls": 14,
            "min": 348,
            "mean": 362,
            "median": 370,
            "max": 370
          },
          "toUint144(uint256)": {
            "calls": 15,
            "min": 348,
            "mean": 361,
            "median": 370,
            "max": 370
          },
          "toUint152(uint256)": {
            "calls": 15,
            "min": 348,
            "mean": 358,
            "median": 348,
            "max": 370
          },
          "toUint16(uint256)": {
            "calls": 24,
            "min": 349,
            "mean": 354,
            "median": 349,
            "max": 371
          },
          "toUint160(uint256)": {
            "calls": 9,
            "min": 363,
            "mean": 375,
            "median": 385,
            "max": 385
          },
          "toUint168(uint256)": {
            "calls": 23,
            "min": 373,
            "mean": 384,
            "median": 395,
            "max": 395
          },
          "toUint176(uint256)": {
            "calls": 16,
            "min": 364,
            "mean": 373,
            "median": 364,
            "max": 386
          },
          "toUint184(uint256)": {
            "calls": 23,
            "min": 358,
            "mean": 371,
            "median": 380,
            "max": 380
          },
          "toUint192(uint256)": {
            "calls": 18,
            "min": 341,
            "mean": 350,
            "median": 341,
            "max": 363
          },
          "toUint200(uint256)": {
            "calls": 10,
            "min": 319,
            "mean": 334,
            "median": 341,
            "max": 341
          },
          "toUint208(uint256)": {
            "calls": 18,
            "min": 363,
            "mean": 375,
            "median": 385,
            "max": 385
          },
          "toUint216(uint256)": {
            "calls": 14,
            "min": 365,
            "mean": 374,
            "median": 365,
            "max": 387
          },
          "toUint224(uint256)": {
            "calls": 11,
            "min": 357,
            "mean": 367,
            "median": 357,
            "max": 379
          },
          "toUint232(uint256)": {
            "calls": 18,
            "min": 365,
            "mean": 379,
            "median": 387,
            "max": 387
          },
          "toUint24(uint256)": {
            "calls": 21,
            "min": 365,
            "mean": 368,
            "median": 365,
            "max": 387
          },
          "toUint240(uint256)": {
            "calls": 22,
            "min": 371,
            "mean": 381,
            "median": 371,
            "max": 393
          },
          "toUint248(uint256)": {
            "calls": 16,
            "min": 356,
            "mean": 372,
            "median": 378,
            "max": 378
          },
          "toUint256(int256)": {
            "calls": 256,
            "min": 376,
            "mean": 384,
            "median": 387,
            "max": 387
          },
          "toUint32(uint256)": {
            "calls": 16,
            "min": 354,
            "mean": 359,
            "median": 354,
            "max": 376
          },
          "toUint40(uint256)": {
            "calls": 18,
            "min": 347,
            "mean": 349,
            "median": 347,
            "max": 369
          },
          "toUint48(uint256)": {
            "calls": 23,
            "min": 364,
            "mean": 368,
            "median": 364,
            "max": 386
          },
          "toUint56(uint256)": {
            "calls": 24,
            "min": 349,
            "mean": 354,
            "median": 349,
            "max": 371
          },
          "toUint64(uint256)": {
            "calls": 11,
            "min": 357,
            "mean": 365,
            "median": 357,
            "max": 379
          },
          "toUint72(uint256)": {
            "calls": 12,
            "min": 356,
            "mean": 367,
            "median": 367,
            "max": 378
          },
          "toUint8(uint256)": {
            "calls": 16,
            "min": 349,
            "mean": 351,
            "median": 349,
            "max": 371
          },
          "toUint80(uint256)": {
            "calls": 14,
            "min": 364,
            "mean": 373,
            "median": 364,
            "max": 386
          },
          "toUint88(uint256)": {
            "calls": 9,
            "min": 320,
            "mean": 327,
            "median": 320,
            "max": 342
          },
          "toUint96(uint256)": {
            "calls": 9,
            "min": 356,
            "mean": 368,
            "median": 378,
            "max": 378
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 21517436,
          "size": 107311
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 74,
            "min": 161642,
            "mean": 170461,
            "median": 170702,
            "max": 170750
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 703,
            "min": 22153,
            "mean": 149964,
            "median": 161825,
            "max": 296990
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 5,
            "min": 46066,
            "mean": 67374,
            "median": 68895,
            "max": 85068
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 257,
            "min": 29262,
            "mean": 29640,
            "median": 29569,
            "max": 32100
          },
          "safeApprove(address,address,uint256)": {
            "calls": 254,
            "min": 24743,
            "mean": 25198,
            "median": 25259,
            "max": 25547
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 256,
            "min": 25165,
            "mean": 25611,
            "median": 25669,
            "max": 25981
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 257,
            "min": 24811,
            "mean": 25240,
            "median": 25279,
            "max": 25531
          },
          "safeTransferAllETH(address)": {
            "calls": 257,
            "min": 28706,
            "mean": 28706,
            "median": 28706,
            "max": 28706
          },
          "safeTransferETH(address,uint256)": {
            "calls": 257,
            "min": 22129,
            "mean": 28934,
            "median": 28936,
            "max": 29152
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 252,
            "min": 25714,
            "mean": 26259,
            "median": 26377,
            "max": 26748
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 524,
            "min": 28251,
            "mean": 49563,
            "median": 68228,
            "max": 69154
          },
          "totalSupplyQuery(address)": {
            "calls": 3,
            "min": 518,
            "mean": 3775,
            "median": 5404,
            "max": 5404
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 2560,
            "min": 25655,
            "mean": 39694,
            "median": 30963,
            "max": 61381
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 2310,
            "min": 464286,
            "mean": 569538,
            "median": 490723,
            "max": 4402280
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 2310,
            "min": 462593,
            "mean": 589953,
            "median": 491092,
            "max": 4383609
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2859201,
          "size": 14215
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 18,
            "min": 33938,
            "mean": 41383,
            "median": 38688,
            "max": 68075
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 49,
            "min": 37924,
            "mean": 58039,
            "median": 50831,
            "max": 112748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 5922542,
          "size": 29511
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 6,
            "min": 1315,
            "mean": 8427,
            "median": 9048,
            "max": 15577
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 297,
            "min": 904,
            "mean": 10125,
            "median": 10163,
            "max": 15988
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 146,
            "min": 6498,
            "mean": 6502,
            "median": 6506,
            "max": 6506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 175122,
          "size": 607
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 29,
            "min": 44957,
            "mean": 53212,
            "median": 44957,
            "max": 79157
          },
          "fallbackDeposit(uint256)": {
            "calls": 34,
            "min": 44589,
            "mean": 48612,
            "median": 44589,
            "max": 78789
          },
          "withdraw(uint256)": {
            "calls": 27,
            "min": 33011,
            "mean": 44892,
            "median": 45335,
            "max": 45419
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2847793,
          "size": 14158
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 141,
            "min": 1381,
            "mean": 1397,
            "median": 1400,
            "max": 1415
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 357737,
          "size": 1494
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 2,
            "min": 224,
            "mean": 250,
            "median": 250,
            "max": 276
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 2,
            "min": 359,
            "mean": 359,
            "median": 359,
            "max": 359
          },
          "checkOnlyProxy()": {
            "calls": 2,
            "min": 241,
            "mean": 267,
            "median": 267,
            "max": 293
          },
          "initialize(address)": {
            "calls": 6,
            "min": 22345,
            "mean": 22345,
            "median": 22345,
            "max": 22345
          },
          "proxiableUUID()": {
            "calls": 2,
            "min": 248,
            "mean": 273,
            "median": 273,
            "max": 299
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 22122,
            "mean": 22122,
            "median": 22122,
            "max": 22122
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 262276,
          "size": 1003
        },
        "functions": {
          "dataHash()": {
            "calls": 256,
            "min": 2261,
            "mean": 2261,
            "median": 2261,
            "max": 2261
          },
          "fallback()": {
            "calls": 520,
            "min": 23439,
            "mean": 63632,
            "median": 79468,
            "max": 190059
          },
          "lastCaller()": {
            "calls": 264,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "lastCallvalue()": {
            "calls": 264,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "numbersHash()": {
            "calls": 8,
            "min": 2274,
            "mean": 2274,
            "median": 2274,
            "max": 2274
          },
          "receive()": {
            "calls": 260,
            "min": 80,
            "mean": 20837,
            "median": 21080,
            "max": 21080
          },
          "storeDataHash(bytes,bool)": {
            "calls": 512,
            "min": 532,
            "mean": 33413,
            "median": 23906,
            "max": 67168
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 8,
            "min": 1852,
            "mean": 35010,
            "median": 35010,
            "max": 68169
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 111019,
          "size": 300
        },
        "functions": {
          "fallback()": {
            "calls": 992,
            "min": 245,
            "mean": 23314,
            "median": 22379,
            "max": 76115
          },
          "receive()": {
            "calls": 16,
            "min": 21101,
            "mean": 21101,
            "median": 21101,
            "max": 21101
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 363044,
          "size": 1515
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 264,
            "mean": 355,
            "median": 401,
            "max": 401
          },
          "eip712Domain()": {
            "calls": 10,
            "min": 474,
            "mean": 474,
            "median": 474,
            "max": 474
          },
          "getArgAddress(uint256)": {
            "calls": 5,
            "min": 3263,
            "mean": 3284,
            "median": 3282,
            "max": 3306
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3504,
            "mean": 3513,
            "median": 3513,
            "max": 3523
          },
          "getArgUint256(uint256)": {
            "calls": 9,
            "min": 4618,
            "mean": 4644,
            "median": 4643,
            "max": 4661
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 5,
            "min": 15490,
            "mean": 16172,
            "median": 16410,
            "max": 16735
          },
          "getArgUint64(uint256)": {
            "calls": 5,
            "min": 3255,
            "mean": 3276,
            "median": 3274,
            "max": 3298
          },
          "getArgUint8(uint256)": {
            "calls": 5,
            "min": 3278,
            "mean": 3299,
            "median": 3297,
            "max": 3321
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3915,
            "mean": 3942,
            "median": 3942,
            "max": 3970
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 372,
            "mean": 463,
            "median": 509,
            "max": 509
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 670,
            "mean": 670,
            "median": 670,
            "max": 670
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 617,
            "mean": 617,
            "median": 617,
            "max": 617
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 669,
            "mean": 669,
            "median": 669,
            "max": 669
          },
          "revertWithError()": {
            "calls": 5,
            "min": 5347,
            "mean": 5367,
            "median": 5365,
            "max": 5390
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 43994,
            "mean": 44024,
            "median": 44025,
            "max": 44049
          },
          "value()": {
            "calls": 5,
            "min": 5258,
            "mean": 5278,
            "median": 5276,
            "max": 5301
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 710316,
          "size": 4303
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 12,
            "min": 5042,
            "mean": 5109,
            "median": 5132,
            "max": 5132
          },
          "eip712Domain()": {
            "calls": 6,
            "min": 5189,
            "mean": 5234,
            "median": 5234,
            "max": 5279
          },
          "hashTypedData(bytes32)": {
            "calls": 6,
            "min": 5164,
            "mean": 5209,
            "median": 5209,
            "max": 5254
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 2,
            "min": 5141,
            "mean": 5186,
            "median": 5186,
            "max": 5231
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5095,
            "mean": 5140,
            "median": 5140,
            "max": 5185
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 2,
            "min": 5147,
            "mean": 5192,
            "median": 5192,
            "max": 5237
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 3,
            "min": 11166,
            "mean": 29891,
            "median": 33142,
            "max": 45366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 2317470,
          "size": 10543
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 5560,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 448,
            "min": 558,
            "mean": 2633,
            "median": 723,
            "max": 7699
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 614,
            "min": 23474,
            "mean": 29582,
            "median": 28949,
            "max": 49635
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 4225,
            "min": 23445,
            "mean": 186638,
            "median": 78647,
            "max": 49782987
          },
          "burn(address,uint256,uint256)": {
            "calls": 374,
            "min": 24531,
            "mean": 28784,
            "median": 27640,
            "max": 32963
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 884,
            "min": 24271,
            "mean": 266041,
            "median": 63240,
            "max": 48139451
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1098,
            "min": 23917,
            "mean": 244643,
            "median": 57925,
            "max": 49123715
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 1935,
            "min": 26247,
            "mean": 44520,
            "median": 46387,
            "max": 46401
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2495,
            "mean": 2495,
            "median": 2495,
            "max": 2495
          },
          "lastDataHash()": {
            "calls": 24,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 5007,
            "min": 22662,
            "mean": 119144,
            "median": 72432,
            "max": 44548462
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 925,
            "min": 23483,
            "mean": 236047,
            "median": 61720,
            "max": 45647208
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1079,
            "min": 23165,
            "mean": 236573,
            "median": 57282,
            "max": 46960778
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1692,
            "min": 25750,
            "mean": 44919,
            "median": 45878,
            "max": 45878
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 153,
            "min": 26315,
            "mean": 36486,
            "median": 33412,
            "max": 47013
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 138,
            "min": 25081,
            "mean": 30128,
            "median": 30229,
            "max": 30469
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 134,
            "min": 32789,
            "mean": 119957,
            "median": 93696,
            "max": 1604311
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 138,
            "min": 56347,
            "mean": 83486,
            "median": 62056,
            "max": 1426786
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 371779,
          "size": 1531
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 456,
            "min": 2647,
            "mean": 2692,
            "median": 2676,
            "max": 5976
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 256,
            "min": 26449,
            "mean": 26449,
            "median": 26449,
            "max": 26449
          },
          "signer()": {
            "calls": 4,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1087044,
          "size": 5947
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1283,
            "min": 467,
            "mean": 467,
            "median": 467,
            "max": 467
          },
          "allowance(address,address)": {
            "calls": 2453,
            "min": 582,
            "mean": 2162,
            "median": 2582,
            "max": 2582
          },
          "approve(address,uint256)": {
            "calls": 2613,
            "min": 25801,
            "mean": 46033,
            "median": 46121,
            "max": 46301
          },
          "balanceOf(address)": {
            "calls": 13250,
            "min": 467,
            "mean": 2292,
            "median": 2467,
            "max": 2467
          },
          "burn(address,uint256)": {
            "calls": 514,
            "min": 24094,
            "mean": 29112,
            "median": 27193,
            "max": 34353
          },
          "decimals()": {
            "calls": 312,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 256,
            "min": 24832,
            "mean": 26733,
            "median": 27716,
            "max": 28303
          },
          "directTransfer(address,address,uint256)": {
            "calls": 256,
            "min": 24664,
            "mean": 36433,
            "median": 25252,
            "max": 52156
          },
          "mint(address,uint256)": {
            "calls": 3221,
            "min": 24198,
            "mean": 67757,
            "median": 68222,
            "max": 68577
          },
          "name()": {
            "calls": 258,
            "min": 2627,
            "mean": 4724,
            "median": 2662,
            "max": 9183
          },
          "nonces(address)": {
            "calls": 258,
            "min": 2433,
            "mean": 2433,
            "median": 2433,
            "max": 2433
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1537,
            "min": 23503,
            "mean": 43611,
            "median": 30060,
            "max": 74154
          },
          "symbol()": {
            "calls": 258,
            "min": 2626,
            "mean": 5228,
            "median": 7006,
            "max": 9182
          },
          "totalSupply()": {
            "calls": 1032,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transfer(address,uint256)": {
            "calls": 2574,
            "min": 24043,
            "mean": 45527,
            "median": 51354,
            "max": 51577
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1544,
            "min": 24544,
            "mean": 40388,
            "median": 32440,
            "max": 54467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 1086960,
          "size": 5947
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 512,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          },
          "approve(address,uint256)": {
            "calls": 256,
            "min": 21855,
            "mean": 22086,
            "median": 21915,
            "max": 46241
          },
          "balanceOf(address)": {
            "calls": 512,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "mint(address,uint256)": {
            "calls": 256,
            "min": 28386,
            "mean": 67756,
            "median": 68234,
            "max": 68577
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 22627,
            "mean": 22999,
            "median": 22897,
            "max": 29016
          },
          "transferFrom(address,address,uint256)": {
            "calls": 512,
            "min": 24748,
            "mean": 38202,
            "median": 30215,
            "max": 52247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 1100237,
          "size": 4995
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 771,
            "min": 2582,
            "mean": 2582,
            "median": 2582,
            "max": 2582
          },
          "approve(address,uint256)": {
            "calls": 1014,
            "min": 23801,
            "mean": 35137,
            "median": 35937,
            "max": 46433
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1397085,
          "size": 6252
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 2171,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 252,
            "min": 21548,
            "mean": 22008,
            "median": 21794,
            "max": 95144
          },
          "checkpointAt(address,uint256)": {
            "calls": 290,
            "min": 0,
            "mean": 51,
            "median": 0,
            "max": 4734
          },
          "checkpointCount(address)": {
            "calls": 1316,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 483,
            "min": 21192,
            "mean": 21651,
            "median": 21432,
            "max": 91451
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 256,
            "min": 23382,
            "mean": 41391,
            "median": 29121,
            "max": 75586
          },
          "delegates(address)": {
            "calls": 4144,
            "min": 0,
            "mean": 229,
            "median": 0,
            "max": 2490
          },
          "directDelegate(address,address)": {
            "calls": 256,
            "min": 47973,
            "mean": 48271,
            "median": 48429,
            "max": 48429
          },
          "directIncrementNonce(address)": {
            "calls": 918,
            "min": 26787,
            "mean": 30895,
            "median": 26799,
            "max": 43899
          },
          "getPastVotes(address,uint256)": {
            "calls": 4,
            "min": 5398,
            "mean": 5898,
            "median": 5398,
            "max": 7398
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 3,
            "min": 327,
            "mean": 3538,
            "median": 5012,
            "max": 5277
          },
          "getVotes(address)": {
            "calls": 2886,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4740
          },
          "getVotesTotalSupply()": {
            "calls": 752,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4564
          },
          "mint(address,uint256)": {
            "calls": 734,
            "min": 21548,
            "mean": 21858,
            "median": 21800,
            "max": 94633
          },
          "name()": {
            "calls": 256,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "nonces(address)": {
            "calls": 503,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "totalSupply()": {
            "calls": 375,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 500,
            "min": 21548,
            "mean": 21849,
            "median": 21800,
            "max": 86657
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 270729,
          "size": 1041
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 256,
            "min": 21430,
            "mean": 21430,
            "median": 21430,
            "max": 21430
          },
          "feeDenominator()": {
            "calls": 256,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 512,
            "min": 21649,
            "mean": 21951,
            "median": 22021,
            "max": 22021
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 3584,
            "min": 2576,
            "mean": 4090,
            "median": 4677,
            "max": 4696
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 394,
            "min": 22064,
            "mean": 36554,
            "median": 44182,
            "max": 44398
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 788,
            "min": 22240,
            "mean": 37069,
            "median": 44762,
            "max": 45002
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1803099,
          "size": 8407
        },
        "functions": {
          "addDeposit()": {
            "calls": 2,
            "min": 31949,
            "mean": 31949,
            "median": 31949,
            "max": 31949
          },
          "completeOwnershipHandover(address)": {
            "calls": 1,
            "min": 12107,
            "mean": 12107,
            "median": 12107,
            "max": 12107
          },
          "delegateExecute(address,bytes)": {
            "calls": 774,
            "min": 5979,
            "mean": 18366,
            "median": 8340,
            "max": 139736
          },
          "eip712Domain()": {
            "calls": 2,
            "min": 826,
            "mean": 826,
            "median": 826,
            "max": 826
          },
          "entryPoint()": {
            "calls": 7,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "execute(address,uint256,bytes)": {
            "calls": 4,
            "min": 2698,
            "mean": 16462,
            "median": 12894,
            "max": 37363
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 137,
            "min": 2796,
            "mean": 65267,
            "median": 72557,
            "max": 302805
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 122,
            "min": 3022,
            "mean": 60908,
            "median": 37911,
            "max": 236365
          },
          "fallback()": {
            "calls": 5,
            "min": 227,
            "mean": 28145,
            "median": 257,
            "max": 106903
          },
          "getDeposit()": {
            "calls": 6,
            "min": 5323,
            "mean": 5323,
            "median": 5323,
            "max": 5323
          },
          "initialize(address)": {
            "calls": 1302,
            "min": 2437,
            "mean": 23903,
            "median": 23970,
            "max": 23970
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 1804,
            "min": 6514,
            "mean": 7871,
            "median": 6514,
            "max": 13693
          },
          "owner()": {
            "calls": 267,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "receive()": {
            "calls": 258,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 6795,
            "mean": 6795,
            "median": 6795,
            "max": 6795
          },
          "requestOwnershipHandover()": {
            "calls": 1,
            "min": 23509,
            "mean": 23509,
            "median": 23509,
            "max": 23509
          },
          "storageLoad(bytes32)": {
            "calls": 2,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 2,
            "min": 2481,
            "mean": 13520,
            "median": 13520,
            "max": 24560
          },
          "transferOwnership(address)": {
            "calls": 2,
            "min": 6918,
            "mean": 6918,
            "median": 6918,
            "max": 6918
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 4,
            "min": 427,
            "mean": 24216,
            "median": 29296,
            "max": 37846
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 1,
            "min": 45158,
            "mean": 45158,
            "median": 45158,
            "max": 45158
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1913957,
          "size": 10205
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 516,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "balanceOf(address)": {
            "calls": 1582,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 512,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "convertToAssets(uint256)": {
            "calls": 1062,
            "min": 2488,
            "mean": 5173,
            "median": 7708,
            "max": 7791
          },
          "convertToShares(uint256)": {
            "calls": 4,
            "min": 7718,
            "mean": 7753,
            "median": 7753,
            "max": 7789
          },
          "decimals()": {
            "calls": 20,
            "min": 354,
            "mean": 357,
            "median": 354,
            "max": 385
          },
          "deposit(uint256,address)": {
            "calls": 265,
            "min": 30057,
            "mean": 118988,
            "median": 120463,
            "max": 120703
          },
          "mint(uint256,address)": {
            "calls": 263,
            "min": 30021,
            "mean": 119303,
            "median": 120415,
            "max": 131082
          },
          "name()": {
            "calls": 1,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "previewDeposit(uint256)": {
            "calls": 514,
            "min": 7732,
            "mean": 7732,
            "median": 7732,
            "max": 7803
          },
          "previewWithdraw(uint256)": {
            "calls": 514,
            "min": 7830,
            "mean": 7830,
            "median": 7830,
            "max": 7855
          },
          "redeem(uint256,address,address)": {
            "calls": 263,
            "min": 24536,
            "mean": 77045,
            "median": 77494,
            "max": 92349
          },
          "symbol()": {
            "calls": 1,
            "min": 2692,
            "mean": 2692,
            "median": 2692,
            "max": 2692
          },
          "totalAssets()": {
            "calls": 1046,
            "min": 5415,
            "mean": 5415,
            "median": 5415,
            "max": 5415
          },
          "totalSupply()": {
            "calls": 536,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "useVirtualShares()": {
            "calls": 2,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "withdraw(uint256,address,address)": {
            "calls": 264,
            "min": 26734,
            "mean": 77811,
            "median": 78548,
            "max": 78699
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1483998,
          "size": 7016
        },
        "functions": {
          "eip712Domain()": {
            "calls": 377,
            "min": 826,
            "mean": 826,
            "median": 826,
            "max": 826
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 4,
            "min": 5952,
            "mean": 22667,
            "median": 10888,
            "max": 62943
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 133,
            "min": 5880,
            "mean": 83622,
            "median": 98239,
            "max": 241983
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 127,
            "min": 28388,
            "mean": 89133,
            "median": 98277,
            "max": 242026
          },
          "fallback()": {
            "calls": 872,
            "min": 193,
            "mean": 6133,
            "median": 3244,
            "max": 133100
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 387,
            "min": 535,
            "mean": 14488,
            "median": 13869,
            "max": 37362
          },
          "isValidSigner(address,bytes)": {
            "calls": 256,
            "min": 5876,
            "mean": 5876,
            "median": 5876,
            "max": 5876
          },
          "mockId()": {
            "calls": 2,
            "min": 447,
            "mean": 447,
            "median": 447,
            "max": 447
          },
          "owner()": {
            "calls": 799,
            "min": 5659,
            "mean": 5659,
            "median": 5659,
            "max": 5659
          },
          "proxiableUUID()": {
            "calls": 1,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "receive()": {
            "calls": 1,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5564,
            "mean": 14116,
            "median": 14138,
            "max": 22712
          },
          "state()": {
            "calls": 772,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "supportsInterface(bytes4)": {
            "calls": 4,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "token()": {
            "calls": 536,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 259,
            "min": 5889,
            "mean": 35206,
            "median": 35368,
            "max": 52468
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1505624,
          "size": 7116
        },
        "functions": {
          "clearState()": {
            "calls": 256,
            "min": 5221,
            "mean": 5221,
            "median": 5221,
            "max": 5221
          },
          "mockId()": {
            "calls": 1,
            "min": 447,
            "mean": 447,
            "median": 447,
            "max": 447
          },
          "proxiableUUID()": {
            "calls": 257,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 512,
            "min": 5628,
            "mean": 14180,
            "median": 14202,
            "max": 22776
          },
          "state()": {
            "calls": 513,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 1,
            "min": 18332,
            "mean": 18332,
            "median": 18332,
            "max": 18332
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 179775,
          "size": 618
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 2455,
            "min": 94689,
            "mean": 95270,
            "median": 95349,
            "max": 95529
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 892648,
          "size": 3925
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 2508,
            "min": 2518,
            "mean": 2518,
            "median": 2518,
            "max": 2518
          },
          "approve(address,uint256,uint256)": {
            "calls": 1543,
            "min": 26805,
            "mean": 46832,
            "median": 47029,
            "max": 47432
          },
          "balanceOf(address,uint256)": {
            "calls": 2363,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "burn(address,uint256,uint256)": {
            "calls": 513,
            "min": 24292,
            "mean": 27263,
            "median": 25240,
            "max": 30464
          },
          "decimals(uint256)": {
            "calls": 1,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 513,
            "min": 26756,
            "mean": 47040,
            "median": 47124,
            "max": 47508
          },
          "directSetOperator(address,address,bool)": {
            "calls": 770,
            "min": 23868,
            "mean": 32467,
            "median": 26330,
            "max": 46248
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 385,
            "min": 25467,
            "mean": 40144,
            "median": 28845,
            "max": 61459
          },
          "isOperator(address,address)": {
            "calls": 772,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "mint(address,uint256,uint256)": {
            "calls": 4628,
            "min": 24515,
            "mean": 45770,
            "median": 47119,
            "max": 47654
          },
          "name(uint256)": {
            "calls": 256,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "setOperator(address,bool)": {
            "calls": 1,
            "min": 45944,
            "mean": 45944,
            "median": 45944,
            "max": 45944
          },
          "symbol(uint256)": {
            "calls": 256,
            "min": 431,
            "mean": 431,
            "median": 431,
            "max": 431
          },
          "tokenURI(uint256)": {
            "calls": 1,
            "min": 660,
            "mean": 660,
            "median": 660,
            "max": 660
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1050,
            "min": 24248,
            "mean": 37258,
            "median": 30356,
            "max": 52763
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1649,
            "min": 26978,
            "mean": 38335,
            "median": 33013,
            "max": 60749
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 2146659,
          "size": 9738
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 1051,
            "min": 24095,
            "mean": 42815,
            "median": 48387,
            "max": 48699
          },
          "balanceOf(address)": {
            "calls": 10267,
            "min": 2541,
            "mean": 2541,
            "median": 2541,
            "max": 2541
          },
          "burn(uint256)": {
            "calls": 258,
            "min": 28264,
            "mean": 29313,
            "median": 28700,
            "max": 31364
          },
          "directApprove(address,uint256)": {
            "calls": 1094,
            "min": 24088,
            "mean": 43716,
            "median": 48786,
            "max": 49098
          },
          "directGetApproved(uint256)": {
            "calls": 1555,
            "min": 2525,
            "mean": 4551,
            "median": 4727,
            "max": 4727
          },
          "directOwnerOf(uint256)": {
            "calls": 2531,
            "min": 2546,
            "mean": 2694,
            "median": 2731,
            "max": 2731
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 652,
            "min": 56788,
            "mean": 76751,
            "median": 63097,
            "max": 129576
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 516,
            "min": 63583,
            "mean": 95200,
            "median": 64651,
            "max": 218225
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 927,
            "min": 24103,
            "mean": 41695,
            "median": 46243,
            "max": 46243
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 1849,
            "min": 24988,
            "mean": 42354,
            "median": 40866,
            "max": 57421
          },
          "exists(uint256)": {
            "calls": 523,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "getApproved(uint256)": {
            "calls": 1539,
            "min": 2491,
            "mean": 4468,
            "median": 4654,
            "max": 4654
          },
          "getAux(address)": {
            "calls": 2562,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2779
          },
          "getExtraData(uint256)": {
            "calls": 3617,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          },
          "isApprovedForAll(address,address)": {
            "calls": 256,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 1536,
            "min": 2733,
            "mean": 5295,
            "median": 6030,
            "max": 7077
          },
          "mint(address,uint256)": {
            "calls": 10925,
            "min": 24080,
            "mean": 64245,
            "median": 68413,
            "max": 68773
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 769,
            "min": 46771,
            "mean": 55923,
            "median": 51795,
            "max": 69255
          },
          "ownerOf(uint256)": {
            "calls": 5725,
            "min": 546,
            "mean": 2529,
            "median": 2546,
            "max": 2546
          },
          "safeMint(address,uint256)": {
            "calls": 1280,
            "min": 71141,
            "mean": 81516,
            "median": 71872,
            "max": 121141
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 1024,
            "min": 72323,
            "mean": 98285,
            "median": 73426,
            "max": 232039
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 1876,
            "min": 40559,
            "mean": 67106,
            "median": 63143,
            "max": 130603
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 508,
            "min": 63317,
            "mean": 92210,
            "median": 64636,
            "max": 240629
          },
          "setApprovalForAll(address,bool)": {
            "calls": 1221,
            "min": 23993,
            "mean": 42895,
            "median": 46133,
            "max": 46140
          },
          "setAux(address,uint224)": {
            "calls": 763,
            "min": 27576,
            "mean": 44560,
            "median": 44669,
            "max": 44676
          },
          "setExtraData(uint256,uint96)": {
            "calls": 1562,
            "min": 23939,
            "mean": 36841,
            "median": 43905,
            "max": 44355
          },
          "transferFrom(address,address,uint256)": {
            "calls": 1819,
            "min": 24498,
            "mean": 42149,
            "median": 40529,
            "max": 56880
          },
          "uncheckedBurn(uint256)": {
            "calls": 2955,
            "min": 23664,
            "mean": 30159,
            "median": 31040,
            "max": 36224
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 177,
            "min": 54607,
            "mean": 54853,
            "median": 54835,
            "max": 55202
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 607891,
          "size": 2605
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 262,
            "min": 31204,
            "mean": 100520,
            "median": 90803,
            "max": 158818
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 260,
            "min": 313048,
            "mean": 425934,
            "median": 334890,
            "max": 3720029
          },
          "lastOpData()": {
            "calls": 256,
            "min": 2531,
            "mean": 5730,
            "median": 4733,
            "max": 11261
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 8,
            "min": 22112,
            "mean": 41285,
            "median": 44024,
            "max": 44024
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 150844,
          "size": 631
        },
        "functions": {
          "counter()": {
            "calls": 4,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "garbage()": {
            "calls": 780,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "receive()": {
            "calls": 8,
            "min": 0,
            "mean": 49745,
            "median": 21096,
            "max": 286387
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 867354,
          "size": 3805
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 8337,
            "min": 337,
            "mean": 4203,
            "median": 4500,
            "max": 4500
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 263,
            "min": 26754,
            "mean": 28142,
            "median": 28180,
            "max": 28180
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 25,
            "min": 26211,
            "mean": 39905,
            "median": 37772,
            "max": 57002
          },
          "guardedByOnlyRoles()": {
            "calls": 25,
            "min": 23609,
            "mean": 37598,
            "median": 38986,
            "max": 54392
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 256,
            "min": 946,
            "mean": 8728,
            "median": 7663,
            "max": 16612
          },
          "hasRole(address,uint256)": {
            "calls": 1856,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "owner()": {
            "calls": 1913,
            "min": 2349,
            "mean": 2409,
            "median": 2414,
            "max": 2414
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 273,
            "min": 2458,
            "mean": 2726,
            "median": 2545,
            "max": 4633
          },
          "roleHolderCount(uint256)": {
            "calls": 4097,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "roleHolders(uint256)": {
            "calls": 4155,
            "min": 2602,
            "mean": 2921,
            "median": 2602,
            "max": 20925
          },
          "setAllowedRole(uint256)": {
            "calls": 256,
            "min": 23623,
            "mean": 43187,
            "median": 43607,
            "max": 43907
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 25,
            "min": 24230,
            "mean": 117007,
            "median": 133489,
            "max": 200650
          },
          "setMaxRole(uint256)": {
            "calls": 264,
            "min": 21606,
            "mean": 26998,
            "median": 26478,
            "max": 43890
          },
          "setMaxRoleReverts(bool)": {
            "calls": 256,
            "min": 23644,
            "mean": 24929,
            "median": 23644,
            "max": 26456
          },
          "setOwner(address)": {
            "calls": 267,
            "min": 26482,
            "mean": 27145,
            "median": 26710,
            "max": 43810
          },
          "setOwnerReverts(bool)": {
            "calls": 256,
            "min": 23664,
            "mean": 25102,
            "median": 26476,
            "max": 26476
          },
          "setRole(address,uint256,bool)": {
            "calls": 1369,
            "min": 24344,
            "mean": 59287,
            "median": 73719,
            "max": 74295
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 7227,
            "min": 33364,
            "mean": 58726,
            "median": 73618,
            "max": 78525
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 115545,
          "size": 321
        },
        "functions": {
          "fails()": {
            "calls": 6,
            "min": 195,
            "mean": 195,
            "median": 195,
            "max": 195
          },
          "getValue(uint256)": {
            "calls": 968,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "setValue(uint256,uint256)": {
            "calls": 968,
            "min": 2417,
            "mean": 22275,
            "median": 22317,
            "max": 22317
          },
          "succeeds(uint256)": {
            "calls": 2,
            "min": 163,
            "mean": 163,
            "median": 163,
            "max": 163
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 339014,
          "size": 2534
        },
        "functions": {
          "disableInitializers()": {
            "calls": 2,
            "min": 23376,
            "mean": 33892,
            "median": 33892,
            "max": 44409
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 216,
            "min": 27483,
            "mean": 59655,
            "median": 67544,
            "max": 90381
          },
          "isInitializing()": {
            "calls": 192,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "onlyDuringInitializing()": {
            "calls": 1,
            "min": 23390,
            "mean": 23390,
            "median": 23390,
            "max": 23390
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 237,
            "min": 24452,
            "mean": 53548,
            "median": 66984,
            "max": 90374
          },
          "version()": {
            "calls": 266,
            "min": 2309,
            "mean": 2309,
            "median": 2309,
            "max": 2309
          },
          "x()": {
            "calls": 135,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 1000360,
          "size": 4501
        },
        "functions": {
          "owner()": {
            "calls": 749,
            "min": 151,
            "mean": 151,
            "median": 151,
            "max": 151
          },
          "rescueETH(address,uint256)": {
            "calls": 1024,
            "min": 24875,
            "mean": 33586,
            "median": 24899,
            "max": 59043
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 1213197,
          "size": 5487
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 768,
            "min": 23861,
            "mean": 23861,
            "median": 23861,
            "max": 23861
          },
          "lockRescue(uint256)": {
            "calls": 5,
            "min": 26215,
            "mean": 37827,
            "median": 44065,
            "max": 46322
          },
          "owner()": {
            "calls": 1700,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 131,
            "min": 29041,
            "mean": 76259,
            "median": 67256,
            "max": 960892
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 144,
            "min": 28176,
            "mean": 53786,
            "median": 60310,
            "max": 60614
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 122,
            "min": 28489,
            "mean": 52993,
            "median": 61459,
            "max": 61886
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 238,
            "min": 27997,
            "mean": 48195,
            "median": 47097,
            "max": 63342
          },
          "rescueETH(address,uint256)": {
            "calls": 1411,
            "min": 5702,
            "mean": 32416,
            "median": 36518,
            "max": 61915
          },
          "transferOwnership(address)": {
            "calls": 256,
            "min": 6852,
            "mean": 6852,
            "median": 6852,
            "max": 6852
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 749634,
          "size": 3262
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 536,
            "min": 21835,
            "mean": 24170,
            "median": 24192,
            "max": 36808
          },
          "multicallBrutalized(bytes[])": {
            "calls": 239,
            "min": 448633,
            "mean": 650720,
            "median": 455148,
            "max": 4245773
          },
          "multicallOriginal(bytes[])": {
            "calls": 1,
            "min": 41566,
            "mean": 41566,
            "median": 41566,
            "max": 41566
          },
          "returnsRandomizedString(string)": {
            "calls": 228,
            "min": 678,
            "mean": 1630,
            "median": 1535,
            "max": 3153
          },
          "returnsSender()": {
            "calls": 1,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 534,
            "min": 412,
            "mean": 412,
            "median": 412,
            "max": 412
          },
          "revertsWithCustomError()": {
            "calls": 1,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "revertsWithNothing()": {
            "calls": 1,
            "min": 151,
            "mean": 151,
            "median": 151,
            "max": 151
          },
          "revertsWithString(string)": {
            "calls": 257,
            "min": 571,
            "mean": 586,
            "median": 583,
            "max": 604
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 415976,
          "size": 1659
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22651,
            "mean": 22651,
            "median": 22651,
            "max": 22651
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23747,
            "mean": 28715,
            "median": 28833,
            "max": 28840
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28150,
            "mean": 28150,
            "median": 28150,
            "max": 28150
          },
          "owner()": {
            "calls": 840,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2729
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 382,
            "mean": 382,
            "median": 382,
            "max": 382
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 22969,
            "mean": 22969,
            "median": 22969,
            "max": 22969
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44541,
            "mean": 44541,
            "median": 44541,
            "max": 44541
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28151,
            "mean": 28285,
            "median": 28379,
            "max": 28379
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23769,
            "mean": 25021,
            "median": 23787,
            "max": 28423
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23349,
            "mean": 34232,
            "median": 23349,
            "max": 45462
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 283605,
          "size": 1045
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 984426,
          "size": 4296
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 1,
            "min": 22683,
            "mean": 22683,
            "median": 22683,
            "max": 22683
          },
          "completeOwnershipHandover(address)": {
            "calls": 261,
            "min": 23822,
            "mean": 28779,
            "median": 28908,
            "max": 28915
          },
          "grantRoles(address,uint256)": {
            "calls": 1538,
            "min": 23956,
            "mean": 45846,
            "median": 47933,
            "max": 48288
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 256,
            "min": 25883,
            "mean": 45523,
            "median": 45831,
            "max": 46174
          },
          "hasAllRoles(address,uint256)": {
            "calls": 256,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2779
          },
          "hasAnyRole(address,uint256)": {
            "calls": 256,
            "min": 2809,
            "mean": 2809,
            "median": 2809,
            "max": 2816
          },
          "initializeOwnerDirect(address)": {
            "calls": 1,
            "min": 28195,
            "mean": 28195,
            "median": 28195,
            "max": 28195
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 288,
            "min": 522,
            "mean": 15774,
            "median": 7870,
            "max": 54682
          },
          "owner()": {
            "calls": 843,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 259,
            "min": 2761,
            "mean": 2761,
            "median": 2761,
            "max": 2768
          },
          "ownershipHandoverValidFor()": {
            "calls": 3,
            "min": 432,
            "mean": 432,
            "median": 432,
            "max": 432
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 512,
            "min": 23732,
            "mean": 27119,
            "median": 25924,
            "max": 29108
          },
          "renounceOwnership()": {
            "calls": 1,
            "min": 22998,
            "mean": 22998,
            "median": 22998,
            "max": 22998
          },
          "renounceRoles(uint256)": {
            "calls": 71,
            "min": 23637,
            "mean": 27825,
            "median": 28101,
            "max": 28437
          },
          "requestOwnershipHandover()": {
            "calls": 261,
            "min": 44595,
            "mean": 44595,
            "median": 44595,
            "max": 44595
          },
          "revokeRoles(address,uint256)": {
            "calls": 57,
            "min": 23987,
            "mean": 27726,
            "median": 30615,
            "max": 31179
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 288,
            "min": 800,
            "mean": 25140,
            "median": 25715,
            "max": 54273
          },
          "rolesOf(address)": {
            "calls": 2280,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2751
          },
          "setOwnerDirect(address)": {
            "calls": 257,
            "min": 28168,
            "mean": 28300,
            "median": 28396,
            "max": 28396
          },
          "setRolesDirect(address,uint256)": {
            "calls": 1024,
            "min": 28493,
            "mean": 37482,
            "median": 37346,
            "max": 46200
          },
          "transferOwnership(address)": {
            "calls": 257,
            "min": 23807,
            "mean": 25109,
            "median": 23825,
            "max": 28461
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 256,
            "min": 23386,
            "mean": 34615,
            "median": 45499,
            "max": 45499
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 257,
            "min": 25748,
            "mean": 46180,
            "median": 46036,
            "max": 48245
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 256,
            "min": 23632,
            "mean": 44235,
            "median": 45799,
            "max": 46129
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 256,
            "min": 25746,
            "mean": 46170,
            "median": 47871,
            "max": 48243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 426925,
          "size": 1708
        },
        "functions": {
          "owner()": {
            "calls": 1,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 87853,
          "size": 193
        },
        "functions": {
          "receive()": {
            "calls": 1,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 515051,
          "size": 2169
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 1,
            "min": 26341,
            "mean": 26341,
            "median": 26341,
            "max": 26341
          },
          "callGuardedToReadGuarded()": {
            "calls": 1,
            "min": 43411,
            "mean": 43411,
            "median": 43411,
            "max": 43411
          },
          "callUnguardedToGuarded()": {
            "calls": 1,
            "min": 65655,
            "mean": 65655,
            "median": 65655,
            "max": 65655
          },
          "callUnguardedToReadGuarded()": {
            "calls": 1,
            "min": 45518,
            "mean": 45518,
            "median": 45518,
            "max": 45518
          },
          "countAndCall(address)": {
            "calls": 1,
            "min": 69740,
            "mean": 69740,
            "median": 69740,
            "max": 69740
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 65880,
            "mean": 65880,
            "median": 65880,
            "max": 65880
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 66841,
            "mean": 66841,
            "median": 66841,
            "max": 66841
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 1,
            "min": 45162,
            "mean": 45162,
            "median": 45162,
            "max": 45162
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 1,
            "min": 55393,
            "mean": 55393,
            "median": 55393,
            "max": 55393
          },
          "enterTimes()": {
            "calls": 6,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "isReentrancyGuardLocked()": {
            "calls": 14,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 1029222,
          "size": 4554
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 699,
            "min": 2484,
            "mean": 2484,
            "median": 2484,
            "max": 2484
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 257,
            "min": 26749,
            "mean": 28216,
            "median": 28216,
            "max": 28971
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 257,
            "min": 33500,
            "mean": 39554,
            "median": 39626,
            "max": 40369
          },
          "owner()": {
            "calls": 1234,
            "min": 2433,
            "mean": 2433,
            "median": 2433,
            "max": 2433
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 256,
            "min": 43521,
            "mean": 43531,
            "median": 43533,
            "max": 43533
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 256,
            "min": 91290,
            "mean": 110911,
            "median": 111226,
            "max": 111226
          },
          "setMaxTimedRole(uint256)": {
            "calls": 22,
            "min": 21636,
            "mean": 28888,
            "median": 26820,
            "max": 43920
          },
          "setOwner(address)": {
            "calls": 45,
            "min": 26701,
            "mean": 27852,
            "median": 26713,
            "max": 43813
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 720,
            "min": 24645,
            "mean": 50093,
            "median": 51803,
            "max": 51899
          },
          "timedRoleActive(address,uint256)": {
            "calls": 782,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 282878,
          "size": 1135
        },
        "functions": {
          "initialize(address)": {
            "calls": 8,
            "min": 22339,
            "mean": 22339,
            "median": 22339,
            "max": 22339
          },
          "proxiableUUID()": {
            "calls": 3,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "revertWithError()": {
            "calls": 1,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 22275,
            "mean": 22275,
            "median": 22275,
            "max": 22275
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 7,
            "min": 2785,
            "mean": 9793,
            "median": 5410,
            "max": 32180
          },
          "value()": {
            "calls": 1,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 363116,
          "size": 1300
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 1675,
            "min": 423,
            "mean": 1343,
            "median": 423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 224306,
          "size": 658
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 555,
            "mean": 555,
            "median": 555,
            "max": 555
          },
          "balanceOf(address)": {
            "calls": 1031,
            "min": 434,
            "mean": 2428,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 638630,
          "size": 2575
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 768,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 2835,
            "min": 423,
            "mean": 1505,
            "median": 2423,
            "max": 2423
          },
          "setRawBytes(bytes)": {
            "calls": 1536,
            "min": 24256,
            "mean": 62921,
            "median": 66546,
            "max": 114347
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 226082,
          "size": 666
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 1029,
            "min": 423,
            "mean": 2421,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 365072,
          "size": 1309
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 514,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 1680,
            "min": 423,
            "mean": 1340,
            "median": 423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 224522,
          "size": 659
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 256,
            "min": 555,
            "mean": 555,
            "median": 555,
            "max": 555
          },
          "balanceOf(address)": {
            "calls": 1026,
            "min": 434,
            "mean": 2430,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 199398,
          "size": 543
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 257,
            "min": 533,
            "mean": 533,
            "median": 533,
            "max": 533
          },
          "balanceOf(address)": {
            "calls": 517,
            "min": 434,
            "mean": 2422,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "solmate": {
    "solc": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 904688,
          "size": 4136
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4941,
            "mean": 7855,
            "median": 9286,
            "max": 9286
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2712,
            "mean": 2712,
            "median": 2712,
            "max": 2712
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2611,
            "mean": 2611,
            "median": 2611,
            "max": 2611
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27701,
            "mean": 40251,
            "median": 49613,
            "max": 49661
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28317,
            "mean": 40867,
            "median": 50225,
            "max": 50273
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27863,
            "mean": 38059,
            "median": 33143,
            "max": 50243
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28373,
            "mean": 39474,
            "median": 39441,
            "max": 50510
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 826820,
          "size": 3770
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2806,
            "mean": 6746,
            "median": 7239,
            "max": 7239
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2755,
            "mean": 2755,
            "median": 2755,
            "max": 2755
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28525,
            "mean": 39670,
            "median": 39625,
            "max": 50725
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 29017,
            "mean": 42330,
            "median": 50938,
            "max": 51202
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28329,
            "mean": 39428,
            "median": 39397,
            "max": 50466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 399869,
          "size": 1668
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25624,
            "min": 29147,
            "mean": 50604,
            "median": 51179,
            "max": 51443
          },
          "burn(address,uint256)": {
            "calls": 499,
            "min": 35708,
            "mean": 39289,
            "median": 35936,
            "max": 44720
          },
          "mint(address,uint256)": {
            "calls": 22014,
            "min": 35553,
            "mean": 61140,
            "median": 61365,
            "max": 95853
          },
          "sum()": {
            "calls": 1,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 381,
            "min": 31319,
            "mean": 39244,
            "median": 33819,
            "max": 56831
          },
          "transferFrom(address,address,uint256)": {
            "calls": 309,
            "min": 36117,
            "mean": 36553,
            "median": 36561,
            "max": 36561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 549769,
          "size": 2567
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 392,
            "mean": 534,
            "median": 534,
            "max": 677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 232936,
          "size": 889
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23803,
            "min": 34337,
            "mean": 46555,
            "median": 46637,
            "max": 80837
          },
          "fallbackDeposit(uint256)": {
            "calls": 23478,
            "min": 33695,
            "mean": 45936,
            "median": 45995,
            "max": 80195
          },
          "withdraw(uint256)": {
            "calls": 23381,
            "min": 34493,
            "mean": 46578,
            "median": 46829,
            "max": 46937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111424,
          "size": 414
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25624,
            "min": 23907,
            "mean": 45366,
            "median": 45939,
            "max": 46203
          },
          "burn(address,uint256)": {
            "calls": 499,
            "min": 28080,
            "mean": 30538,
            "median": 28308,
            "max": 34292
          },
          "mint(address,uint256)": {
            "calls": 22014,
            "min": 27980,
            "mean": 50610,
            "median": 50992,
            "max": 68380
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "transfer(address,uint256)": {
            "calls": 381,
            "min": 28196,
            "mean": 33844,
            "median": 28412,
            "max": 51424
          },
          "transferFrom(address,address,uint256)": {
            "calls": 309,
            "min": 30795,
            "mean": 31231,
            "median": 31239,
            "max": 31239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 221104,
          "size": 749
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23191,
            "mean": 28060,
            "median": 28231,
            "max": 28231
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23414,
            "mean": 23425,
            "median": 23414,
            "max": 26252
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 935400,
          "size": 4921
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "deposit()": {
            "calls": 24318,
            "min": 29138,
            "mean": 35512,
            "median": 34738,
            "max": 68938
          },
          "receive()": {
            "calls": 23735,
            "min": 28791,
            "mean": 34831,
            "median": 34391,
            "max": 68591
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "withdraw(uint256)": {
            "calls": 23639,
            "min": 29345,
            "mean": 41429,
            "median": 41681,
            "max": 41789
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 928554,
          "size": 4296
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4985,
            "mean": 7965,
            "median": 9357,
            "max": 9357
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2657,
            "mean": 2657,
            "median": 2657,
            "max": 2657
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2679,
            "mean": 2679,
            "median": 2679,
            "max": 2679
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2602,
            "mean": 2602,
            "median": 2602,
            "max": 2602
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2562,
            "mean": 2562,
            "median": 2562,
            "max": 2562
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27824,
            "mean": 40375,
            "median": 49736,
            "max": 49784
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28505,
            "mean": 41071,
            "median": 50436,
            "max": 50484
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27936,
            "mean": 38142,
            "median": 33216,
            "max": 50316
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28485,
            "mean": 39603,
            "median": 39564,
            "max": 50644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 848184,
          "size": 3916
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2870,
            "mean": 6817,
            "median": 7311,
            "max": 7311
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2844,
            "mean": 2844,
            "median": 2844,
            "max": 2844
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2717,
            "mean": 2717,
            "median": 2717,
            "max": 2717
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28522,
            "mean": 39662,
            "median": 39622,
            "max": 50722
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 29185,
            "mean": 42513,
            "median": 51128,
            "max": 51392
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28519,
            "mean": 39618,
            "median": 39592,
            "max": 50666
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 345486,
          "size": 1414
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25817,
            "min": 31295,
            "mean": 51052,
            "median": 51543,
            "max": 51795
          },
          "burn(address,uint256)": {
            "calls": 466,
            "min": 35757,
            "mean": 39020,
            "median": 35973,
            "max": 44757
          },
          "mint(address,uint256)": {
            "calls": 22770,
            "min": 35803,
            "mean": 61426,
            "median": 61639,
            "max": 96115
          },
          "sum()": {
            "calls": 1,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "transfer(address,uint256)": {
            "calls": 315,
            "min": 33654,
            "mean": 35086,
            "median": 33870,
            "max": 56582
          },
          "transferFrom(address,address,uint256)": {
            "calls": 322,
            "min": 36549,
            "mean": 36991,
            "median": 37005,
            "max": 37005
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 541963,
          "size": 2532
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 558,
            "mean": 690,
            "median": 690,
            "max": 822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 209530,
          "size": 771
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23129,
            "min": 34298,
            "mean": 46509,
            "median": 46598,
            "max": 80798
          },
          "fallbackDeposit(uint256)": {
            "calls": 23313,
            "min": 31445,
            "mean": 46164,
            "median": 46245,
            "max": 80445
          },
          "withdraw(uint256)": {
            "calls": 23203,
            "min": 32239,
            "mean": 46819,
            "median": 47063,
            "max": 47183
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111281,
          "size": 406
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25817,
            "min": 25962,
            "mean": 45719,
            "median": 46210,
            "max": 46462
          },
          "burn(address,uint256)": {
            "calls": 466,
            "min": 28143,
            "mean": 30391,
            "median": 28359,
            "max": 34343
          },
          "mint(address,uint256)": {
            "calls": 22770,
            "min": 28166,
            "mean": 50838,
            "median": 51202,
            "max": 68578
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 315,
            "min": 28267,
            "mean": 29699,
            "median": 28483,
            "max": 51195
          },
          "transferFrom(address,address,uint256)": {
            "calls": 322,
            "min": 31077,
            "mean": 31519,
            "median": 31533,
            "max": 31533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 235926,
          "size": 831
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23376,
            "mean": 28268,
            "median": 28416,
            "max": 28416
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23402,
            "mean": 23413,
            "median": 23402,
            "max": 26332
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 939688,
          "size": 4638
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2527,
            "mean": 2527,
            "median": 2527,
            "max": 2527
          },
          "deposit()": {
            "calls": 23644,
            "min": 29088,
            "mean": 35474,
            "median": 34688,
            "max": 68888
          },
          "receive()": {
            "calls": 23570,
            "min": 28940,
            "mean": 34979,
            "median": 34540,
            "max": 68740
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "withdraw(uint256)": {
            "calls": 23461,
            "min": 29583,
            "mean": 41659,
            "median": 41907,
            "max": 42027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 755393,
          "size": 3494
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4780,
            "mean": 7643,
            "median": 9131,
            "max": 9131
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27636,
            "mean": 40185,
            "median": 49548,
            "max": 49596
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28204,
            "mean": 40757,
            "median": 50113,
            "max": 50161
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27748,
            "mean": 37942,
            "median": 33016,
            "max": 50116
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28238,
            "mean": 39332,
            "median": 39301,
            "max": 50365
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 663398,
          "size": 3067
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2560,
            "mean": 6472,
            "median": 6962,
            "max": 6962
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28279,
            "mean": 39412,
            "median": 39373,
            "max": 50467
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 28826,
            "mean": 42134,
            "median": 50737,
            "max": 51001
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28216,
            "mean": 39312,
            "median": 39284,
            "max": 50353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 294691,
          "size": 1212
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25868,
            "min": 30830,
            "mean": 50588,
            "median": 51078,
            "max": 51342
          },
          "burn(address,uint256)": {
            "calls": 476,
            "min": 35231,
            "mean": 38437,
            "median": 35459,
            "max": 44111
          },
          "mint(address,uint256)": {
            "calls": 22908,
            "min": 35270,
            "mean": 60929,
            "median": 61094,
            "max": 95582
          },
          "sum()": {
            "calls": 1,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "transfer(address,uint256)": {
            "calls": 381,
            "min": 33225,
            "mean": 39952,
            "median": 33441,
            "max": 56525
          },
          "transferFrom(address,address,uint256)": {
            "calls": 323,
            "min": 35926,
            "mean": 36361,
            "median": 36370,
            "max": 36370
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 544171,
          "size": 2546
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 386,
            "mean": 521,
            "median": 521,
            "max": 657
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 166648,
          "size": 617
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23975,
            "min": 34058,
            "mean": 46292,
            "median": 46358,
            "max": 80558
          },
          "fallbackDeposit(uint256)": {
            "calls": 23985,
            "min": 33673,
            "mean": 45900,
            "median": 45973,
            "max": 80173
          },
          "withdraw(uint256)": {
            "calls": 23739,
            "min": 31855,
            "mean": 46444,
            "median": 46691,
            "max": 46799
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 105817,
          "size": 399
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 797877,
          "size": 5150
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25868,
            "min": 25694,
            "mean": 45453,
            "median": 45942,
            "max": 46206
          },
          "burn(address,uint256)": {
            "calls": 476,
            "min": 27864,
            "mean": 30076,
            "median": 28092,
            "max": 33944
          },
          "mint(address,uint256)": {
            "calls": 22908,
            "min": 27888,
            "mean": 50594,
            "median": 50912,
            "max": 68300
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "transfer(address,uint256)": {
            "calls": 381,
            "min": 27973,
            "mean": 34700,
            "median": 28189,
            "max": 51273
          },
          "transferFrom(address,address,uint256)": {
            "calls": 323,
            "min": 30663,
            "mean": 31098,
            "median": 31107,
            "max": 31107
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 191417,
          "size": 637
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23180,
            "mean": 28085,
            "median": 28220,
            "max": 28220
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23440,
            "mean": 23451,
            "median": 23440,
            "max": 26281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 814183,
          "size": 4156
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "deposit()": {
            "calls": 24490,
            "min": 28992,
            "mean": 35379,
            "median": 34592,
            "max": 68792
          },
          "receive()": {
            "calls": 24242,
            "min": 28785,
            "mean": 34811,
            "median": 34385,
            "max": 68585
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "withdraw(uint256)": {
            "calls": 23997,
            "min": 29309,
            "mean": 41395,
            "median": 41645,
            "max": 41753
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 1010115,
          "size": 4670
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 8224,
            "min": 4832,
            "mean": 7673,
            "median": 9171,
            "max": 9171
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 771,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "getTargetCustomAuthority(address)": {
            "calls": 771,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 771,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 1799,
            "min": 27648,
            "mean": 40198,
            "median": 49560,
            "max": 49608
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 1799,
            "min": 28208,
            "mean": 40772,
            "median": 50139,
            "max": 50187
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 3341,
            "min": 27718,
            "mean": 37919,
            "median": 32986,
            "max": 50086
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 2056,
            "min": 28223,
            "mean": 39320,
            "median": 39296,
            "max": 50370
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 890390,
          "size": 4114
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2313,
            "min": 2707,
            "mean": 6619,
            "median": 7108,
            "max": 7108
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 771,
            "min": 2659,
            "mean": 2659,
            "median": 2659,
            "max": 2659
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 771,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 771,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 1028,
            "min": 28277,
            "mean": 39415,
            "median": 39377,
            "max": 50477
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 1285,
            "min": 28819,
            "mean": 42156,
            "median": 50762,
            "max": 51026
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 1028,
            "min": 28205,
            "mean": 39319,
            "median": 39284,
            "max": 50364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 332694,
          "size": 1344
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25654,
            "min": 30947,
            "mean": 50692,
            "median": 51183,
            "max": 51447
          },
          "burn(address,uint256)": {
            "calls": 485,
            "min": 35370,
            "mean": 38521,
            "median": 35598,
            "max": 44322
          },
          "mint(address,uint256)": {
            "calls": 22778,
            "min": 35432,
            "mean": 61067,
            "median": 61244,
            "max": 95732
          },
          "sum()": {
            "calls": 1,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "transfer(address,uint256)": {
            "calls": 530,
            "min": 33255,
            "mean": 41289,
            "median": 33483,
            "max": 56567
          },
          "transferFrom(address,address,uint256)": {
            "calls": 285,
            "min": 36000,
            "mean": 36421,
            "median": 36432,
            "max": 36432
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 501108,
          "size": 2332
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 4,
            "min": 467,
            "mean": 595,
            "median": 595,
            "max": 723
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 179288,
          "size": 627
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 23367,
            "min": 34114,
            "mean": 46356,
            "median": 46414,
            "max": 80614
          },
          "fallbackDeposit(uint256)": {
            "calls": 23919,
            "min": 31242,
            "mean": 45946,
            "median": 46042,
            "max": 80242
          },
          "withdraw(uint256)": {
            "calls": 23565,
            "min": 34481,
            "mean": 46555,
            "median": 46829,
            "max": 46925
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 102999,
          "size": 342
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 2570,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 792363,
          "size": 5010
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 25654,
            "min": 25819,
            "mean": 45565,
            "median": 46055,
            "max": 46319
          },
          "burn(address,uint256)": {
            "calls": 485,
            "min": 27944,
            "mean": 30119,
            "median": 28172,
            "max": 34096
          },
          "mint(address,uint256)": {
            "calls": 22778,
            "min": 27985,
            "mean": 50665,
            "median": 50997,
            "max": 68385
          },
          "totalSupply()": {
            "calls": 1,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "transfer(address,uint256)": {
            "calls": 530,
            "min": 28084,
            "mean": 36118,
            "median": 28312,
            "max": 51396
          },
          "transferFrom(address,address,uint256)": {
            "calls": 285,
            "min": 30793,
            "mean": 31214,
            "median": 31225,
            "max": 31225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 213344,
          "size": 762
        },
        "functions": {
          "owner()": {
            "calls": 257,
            "min": 2242,
            "mean": 2242,
            "median": 2242,
            "max": 2242
          },
          "transferOwnership(address)": {
            "calls": 514,
            "min": 23187,
            "mean": 28114,
            "median": 28227,
            "max": 28227
          },
          "updateFlag()": {
            "calls": 258,
            "min": 23432,
            "mean": 23442,
            "median": 23432,
            "max": 26254
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 815946,
          "size": 4084
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 1286,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "deposit()": {
            "calls": 23882,
            "min": 29017,
            "mean": 35428,
            "median": 34617,
            "max": 68817
          },
          "receive()": {
            "calls": 24176,
            "min": 28836,
            "mean": 34847,
            "median": 34436,
            "max": 68636
          },
          "totalSupply()": {
            "calls": 1287,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "withdraw(uint256)": {
            "calls": 23823,
            "min": 29402,
            "mean": 41472,
            "median": 41750,
            "max": 41846
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "tokenlon": {
    "solc": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 643922,
          "size": 3071
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23485,
            "mean": 26545,
            "median": 27565,
            "max": 27565
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24715,
            "mean": 50069,
            "median": 48497,
            "max": 89862
          },
          "unpause()": {
            "calls": 2,
            "min": 23375,
            "mean": 25350,
            "median": 25350,
            "max": 27326
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9759810,
          "size": 47833
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 307229,
            "mean": 307305,
            "median": 307305,
            "max": 307381
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 705609,
          "size": 3116
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25706,
            "mean": 79373,
            "median": 79373,
            "max": 133041
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25012,
            "mean": 54660,
            "median": 54660,
            "max": 84308
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 378556,
          "size": 1804
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 337,
            "mean": 705,
            "median": 705,
            "max": 1074
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 1006,
            "mean": 1006,
            "median": 1006,
            "max": 1006
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "originalChainId()": {
            "calls": 1,
            "min": 139,
            "mean": 139,
            "median": 139,
            "max": 139
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 288249,
          "size": 1168
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23398,
            "mean": 25713,
            "median": 25713,
            "max": 28029
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23728,
            "mean": 42317,
            "median": 46965,
            "max": 46965
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "owner()": {
            "calls": 3,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23375,
            "mean": 24659,
            "median": 25105,
            "max": 25497
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 349547,
          "size": 1409
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 510,
            "mean": 2275,
            "median": 517,
            "max": 5799
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 306,
            "mean": 309,
            "median": 309,
            "max": 313
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22170,
            "mean": 34261,
            "median": 27062,
            "max": 56716
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 230000,
          "size": 852
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3934,
            "mean": 3934,
            "median": 3934,
            "max": 3934
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3192362,
          "size": 15492
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 9918,
            "mean": 9918,
            "median": 9918,
            "max": 9918
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 787264,
          "size": 3420
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46269,
            "mean": 46269,
            "median": 46269,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 480,
            "mean": 998,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 50,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 669646,
          "size": 2934
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 2889,
            "mean": 4928,
            "median": 6223,
            "max": 6250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 759220,
          "size": 4056
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2727,
            "mean": 2727,
            "median": 2727,
            "max": 2727
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46242,
            "mean": 46242,
            "median": 46242,
            "max": 46242
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 510,
            "mean": 1398,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 10,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68010,
            "mean": 68012,
            "median": 68010,
            "max": 68022
          },
          "totalSupply()": {
            "calls": 50,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 771016,
          "size": 3346
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46251,
            "mean": 46251,
            "median": 46251,
            "max": 46251
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 480,
            "mean": 1025,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 10,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 50,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 764300,
          "size": 3747
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46277,
            "mean": 46277,
            "median": 46277,
            "max": 46277
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 510,
            "mean": 941,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 10,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "totalSupply()": {
            "calls": 50,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 703448,
          "size": 3444
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23402,
            "mean": 26580,
            "median": 27640,
            "max": 27640
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24987,
            "mean": 50857,
            "median": 49334,
            "max": 91027
          },
          "unpause()": {
            "calls": 2,
            "min": 23403,
            "mean": 25510,
            "median": 25510,
            "max": 27618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 8984811,
          "size": 42642
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 316492,
            "mean": 316564,
            "median": 316564,
            "max": 316636
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 844372,
          "size": 3776
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25917,
            "mean": 80692,
            "median": 80692,
            "max": 135467
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25160,
            "mean": 55469,
            "median": 55469,
            "max": 85779
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 331107,
          "size": 1561
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 298,
            "mean": 467,
            "median": 467,
            "max": 636
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 539,
            "mean": 539,
            "median": 539,
            "max": 539
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "originalChainId()": {
            "calls": 1,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 302284,
          "size": 1251
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23392,
            "mean": 25871,
            "median": 25871,
            "max": 28351
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23848,
            "mean": 42444,
            "median": 47093,
            "max": 47093
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "owner()": {
            "calls": 3,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23369,
            "mean": 24725,
            "median": 25312,
            "max": 25495
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 420284,
          "size": 1737
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 715,
            "mean": 2485,
            "median": 720,
            "max": 6022
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 417,
            "mean": 419,
            "median": 419,
            "max": 422
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22347,
            "mean": 34533,
            "median": 27257,
            "max": 56933
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 281629,
          "size": 1093
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 4375,
            "mean": 4375,
            "median": 4375,
            "max": 4375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3229415,
          "size": 15682
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 8156,
            "mean": 8156,
            "median": 8156,
            "max": 8156
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 735333,
          "size": 3316
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46511,
            "mean": 46511,
            "median": 46511,
            "max": 46511
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 558,
            "mean": 1076,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 50,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 772690,
          "size": 3408
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 921,
            "mean": 3891,
            "median": 4361,
            "max": 6522
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 689248,
          "size": 3528
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2752
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46629,
            "mean": 46629,
            "median": 46629,
            "max": 46629
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 558,
            "mean": 1446,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 68294,
            "mean": 68296,
            "median": 68294,
            "max": 68306
          },
          "totalSupply()": {
            "calls": 50,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 677862,
          "size": 3037
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46441,
            "mean": 46441,
            "median": 46441,
            "max": 46441
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 558,
            "mean": 1103,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 50,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 683410,
          "size": 3085
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46630,
            "mean": 46630,
            "median": 46630,
            "max": 46630
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 558,
            "mean": 989,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 10,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "totalSupply()": {
            "calls": 50,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 515009,
          "size": 2583
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23402,
            "mean": 26473,
            "median": 27497,
            "max": 27497
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24696,
            "mean": 49818,
            "median": 48261,
            "max": 89249
          },
          "unpause()": {
            "calls": 2,
            "min": 23393,
            "mean": 25368,
            "median": 25368,
            "max": 27344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9255393,
          "size": 46046
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 285676,
            "mean": 285688,
            "median": 285688,
            "max": 285700
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 739919,
          "size": 3295
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25649,
            "mean": 78477,
            "median": 78477,
            "max": 131305
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 24928,
            "mean": 53632,
            "median": 53632,
            "max": 82336
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 336689,
          "size": 1574
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 255,
            "mean": 483,
            "median": 483,
            "max": 712
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 875,
            "mean": 875,
            "median": 875,
            "max": 875
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "originalChainId()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 253425,
          "size": 1044
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23395,
            "mean": 25709,
            "median": 25709,
            "max": 28024
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23742,
            "mean": 42347,
            "median": 46999,
            "max": 46999
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "owner()": {
            "calls": 3,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23365,
            "mean": 24648,
            "median": 25089,
            "max": 25490
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 302876,
          "size": 1187
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 427,
            "mean": 2136,
            "median": 434,
            "max": 5549
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22110,
            "mean": 34125,
            "median": 26986,
            "max": 56641
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 177983,
          "size": 609
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3855,
            "mean": 3855,
            "median": 3855,
            "max": 3855
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3061007,
          "size": 14843
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 186,
            "mean": 186,
            "median": 186,
            "max": 186
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 9504,
            "mean": 9504,
            "median": 9504,
            "max": 9504
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 614265,
          "size": 2678
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46272,
            "mean": 46272,
            "median": 46272,
            "max": 46272
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 400,
            "mean": 918,
            "median": 400,
            "max": 2400
          },
          "decimals()": {
            "calls": 10,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 696114,
          "size": 3070
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 2711,
            "mean": 4725,
            "median": 6017,
            "max": 6078
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 598128,
          "size": 3763
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46239,
            "mean": 46239,
            "median": 46239,
            "max": 46239
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 406,
            "mean": 1294,
            "median": 406,
            "max": 2406
          },
          "decimals()": {
            "calls": 10,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 67913,
            "mean": 67915,
            "median": 67913,
            "max": 67925
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 591969,
          "size": 2575
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46259,
            "mean": 46259,
            "median": 46259,
            "max": 46259
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 400,
            "mean": 945,
            "median": 400,
            "max": 2400
          },
          "decimals()": {
            "calls": 10,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 672704,
          "size": 3023
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46281,
            "mean": 46281,
            "median": 46281,
            "max": 46281
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 406,
            "mean": 837,
            "median": 406,
            "max": 2406
          },
          "decimals()": {
            "calls": 10,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "totalSupply()": {
            "calls": 50,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 529014,
          "size": 2584
        },
        "functions": {
          "pause()": {
            "calls": 4,
            "min": 23416,
            "mean": 26371,
            "median": 27357,
            "max": 27357
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 8,
            "min": 24821,
            "mean": 50006,
            "median": 48465,
            "max": 89427
          },
          "unpause()": {
            "calls": 2,
            "min": 23423,
            "mean": 25396,
            "median": 25396,
            "max": 27370
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 8098381,
          "size": 39254
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 40,
            "min": 268162,
            "mean": 268174,
            "median": 268174,
            "max": 268186
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 748780,
          "size": 3312
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 2,
            "min": 25735,
            "mean": 78758,
            "median": 78758,
            "max": 131782
          },
          "rescueTokens(address[],address)": {
            "calls": 2,
            "min": 25045,
            "mean": 53878,
            "median": 53878,
            "max": 82712
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 320975,
          "size": 1485
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 2,
            "min": 260,
            "mean": 469,
            "median": 469,
            "max": 678
          },
          "calculateDomainSeparator()": {
            "calls": 3,
            "min": 651,
            "mean": 651,
            "median": 651,
            "max": 651
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 1,
            "min": 405,
            "mean": 405,
            "median": 405,
            "max": 405
          },
          "originalChainId()": {
            "calls": 1,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "originalEIP712DomainSeparator()": {
            "calls": 1,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 276205,
          "size": 1124
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 2,
            "min": 23402,
            "mean": 25808,
            "median": 25808,
            "max": 28214
          },
          "nominateNewOwner(address)": {
            "calls": 5,
            "min": 23804,
            "mean": 42374,
            "median": 47017,
            "max": 47017
          },
          "nominatedOwner()": {
            "calls": 3,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          },
          "owner()": {
            "calls": 3,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          },
          "renounceOwnership()": {
            "calls": 3,
            "min": 23380,
            "mean": 24693,
            "median": 25187,
            "max": 25513
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 303905,
          "size": 1192
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 3,
            "min": 459,
            "mean": 2155,
            "median": 466,
            "max": 5542
          },
          "exposedIsETH(address)": {
            "calls": 2,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 6,
            "min": 22178,
            "mean": 34203,
            "median": 27047,
            "max": 56653
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 169523,
          "size": 571
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 3860,
            "mean": 3860,
            "median": 3860,
            "max": 3860
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 2756012,
          "size": 13321
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 1,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 1,
            "min": 7424,
            "mean": 7424,
            "median": 7424,
            "max": 7424
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 585896,
          "size": 2614
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46375,
            "mean": 46375,
            "median": 46375,
            "max": 46375
          },
          "balanceOf(address)": {
            "calls": 54,
            "min": 421,
            "mean": 939,
            "median": 421,
            "max": 2421
          },
          "decimals()": {
            "calls": 10,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 546753,
          "size": 2336
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 5,
            "min": 531,
            "mean": 3416,
            "median": 3880,
            "max": 6044
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 688776,
          "size": 4130
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 8,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46345,
            "mean": 46345,
            "median": 46345,
            "max": 46345
          },
          "balanceOf(address)": {
            "calls": 72,
            "min": 427,
            "mean": 1315,
            "median": 427,
            "max": 2427
          },
          "decimals()": {
            "calls": 10,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "mint(address,uint256)": {
            "calls": 10,
            "min": 67975,
            "mean": 67977,
            "median": 67975,
            "max": 67987
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 562001,
          "size": 2505
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46334,
            "mean": 46334,
            "median": 46334,
            "max": 46334
          },
          "balanceOf(address)": {
            "calls": 55,
            "min": 421,
            "mean": 966,
            "median": 421,
            "max": 2421
          },
          "decimals()": {
            "calls": 10,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 694872,
          "size": 3123
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 10,
            "min": 46355,
            "mean": 46355,
            "median": 46355,
            "max": 46355
          },
          "balanceOf(address)": {
            "calls": 51,
            "min": 427,
            "mean": 858,
            "median": 427,
            "max": 2427
          },
          "decimals()": {
            "calls": 10,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "totalSupply()": {
            "calls": 50,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "uniswap-v4": {
    "solc": [
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26303,
            "mean": 45119,
            "median": 46203,
            "max": 46203
          },
          "balanceOf(address)": {
            "calls": 130152,
            "min": 525,
            "mean": 1697,
            "median": 2525,
            "max": 2525
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 33868,
            "mean": 62323,
            "median": 68008,
            "max": 68080
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46324,
            "mean": 51093,
            "median": 51076,
            "max": 51304
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5243607,
          "size": 24226
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22964,
            "mean": 22964,
            "median": 22964,
            "max": 22964
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57728,
            "mean": 58442,
            "median": 57870,
            "max": 59513
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 1040,
            "mean": 12403,
            "median": 12403,
            "max": 23766
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 375,
            "mean": 2370,
            "median": 2375,
            "max": 2375
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 949,
            "mean": 4092,
            "median": 6949,
            "max": 6949
          },
          "exttload(bytes32)": {
            "calls": 40502,
            "min": 859,
            "mean": 859,
            "median": 859,
            "max": 859
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 23229,
            "mean": 52232,
            "median": 51532,
            "max": 152701
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22395,
            "mean": 22395,
            "median": 22395,
            "max": 22395
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1470,
            "mean": 13258,
            "median": 13183,
            "max": 25196
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2866,
            "mean": 2866,
            "median": 2866,
            "max": 2866
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 46183,
            "mean": 46183,
            "median": 46183,
            "max": 46183
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29642,
            "mean": 32347,
            "median": 32262,
            "max": 32478
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 30106,
            "mean": 47137,
            "median": 47206,
            "max": 47206
          },
          "settle()": {
            "calls": 1,
            "min": 21396,
            "mean": 21396,
            "median": 21396,
            "max": 21396
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1771,
            "mean": 13462,
            "median": 13462,
            "max": 25153
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22397,
            "mean": 22397,
            "median": 22397,
            "max": 22397
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23556,
            "mean": 23556,
            "median": 23556,
            "max": 23556
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2281095,
          "size": 10347
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 46893,
            "mean": 85751,
            "median": 89905,
            "max": 107490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 397868,
          "size": 1634
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 3034,
            "mean": 5266,
            "median": 5825,
            "max": 5825
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 312,
            "mean": 4344,
            "median": 5688,
            "max": 5688
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "toId(address)": {
            "calls": 769,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24682,
            "mean": 52991,
            "median": 54724,
            "max": 56969
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 93643,
          "size": 210
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 241,
            "mean": 247,
            "median": 250,
            "max": 250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 592222,
          "size": 2524
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 902,
            "min": 2728,
            "mean": 2728,
            "median": 2728,
            "max": 2728
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26711,
            "mean": 46699,
            "median": 46875,
            "max": 47271
          },
          "balanceOf(address,uint256)": {
            "calls": 2701,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24577,
            "mean": 24854,
            "median": 24817,
            "max": 29389
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26472,
            "mean": 32304,
            "median": 32277,
            "max": 38201
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2719,
            "mean": 2719,
            "median": 2719,
            "max": 2719
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24144,
            "mean": 46918,
            "median": 47023,
            "max": 47551
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25863,
            "mean": 40888,
            "median": 46003,
            "max": 46003
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24066,
            "mean": 38266,
            "median": 30224,
            "max": 52680
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24498,
            "mean": 42965,
            "median": 47757,
            "max": 61067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1585503,
          "size": 6940
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 524,
            "mean": 1774,
            "median": 1774,
            "max": 3024
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 176115,
          "size": 611
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 235,
            "mean": 237,
            "median": 237,
            "max": 240
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 695526,
          "size": 3164
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 78692,
            "mean": 78692,
            "median": 78692,
            "max": 78692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 1057526,
          "size": 4854
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 39186,
            "mean": 121827,
            "median": 145546,
            "max": 253009
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 233735,
          "size": 892
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29661,
            "mean": 29661,
            "median": 29661,
            "max": 29661
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1356010,
          "size": 6233
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 44907,
            "mean": 187926,
            "median": 183809,
            "max": 389021
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 134491,
            "mean": 149714,
            "median": 149714,
            "max": 164938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1075778,
          "size": 4917
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 85099,
            "mean": 131702,
            "median": 161276,
            "max": 161276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 13370
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69616,
            "mean": 76682,
            "median": 69616,
            "max": 89540
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 4556241,
          "size": 19956
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2531,
            "mean": 2531,
            "median": 2531,
            "max": 2531
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 40912,
            "mean": 139633,
            "median": 179030,
            "max": 236884
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1544945,
          "size": 7133
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 42871,
            "mean": 387992,
            "median": 145378,
            "max": 17412146
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 851773,
          "size": 3910
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 41314,
            "mean": 63485,
            "median": 59159,
            "max": 88197
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 689214,
          "size": 2935
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24133,
            "mean": 43933,
            "median": 27161,
            "max": 62338
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "protocolFeesAccrued(address)": {
            "calls": 902,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 44895,
            "mean": 45524,
            "median": 45519,
            "max": 45915
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 24550,
            "mean": 27866,
            "median": 25735,
            "max": 32342
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23838,
            "mean": 46977,
            "median": 47022,
            "max": 47022
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22521,
            "mean": 38363,
            "median": 44061,
            "max": 44421
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3189051,
          "size": 14704
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6953,
            "mean": 6953,
            "median": 6953,
            "max": 6953
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 863,
            "mean": 863,
            "median": 863,
            "max": 863
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47207,
            "mean": 47207,
            "median": 47207,
            "max": 47207
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 764547,
          "size": 3471
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 108434,
            "mean": 115789,
            "median": 115789,
            "max": 123144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 488598,
          "size": 2156
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46168,
            "mean": 46174,
            "median": 46174,
            "max": 46180
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 436,
            "mean": 1769,
            "median": 2436,
            "max": 2436
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 630030,
          "size": 2706
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 363,
            "mean": 448,
            "median": 363,
            "max": 1254
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 281,
            "mean": 499,
            "median": 281,
            "max": 2272
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 146887,
          "size": 459
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2412,
            "mean": 1087164,
            "median": 1016398,
            "max": 2177213
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2562,
            "mean": 1089798,
            "median": 1113864,
            "max": 2180360
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 188108,
          "size": 653
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 126,
            "min": 342,
            "mean": 359,
            "median": 355,
            "max": 367
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 325,
            "mean": 365,
            "median": 367,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 131787,
          "size": 391
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 266,
            "mean": 307,
            "median": 308,
            "max": 319
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26562,
            "mean": 45378,
            "median": 46462,
            "max": 46462
          },
          "balanceOf(address)": {
            "calls": 130027,
            "min": 527,
            "mean": 1700,
            "median": 2527,
            "max": 2527
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 34066,
            "mean": 62521,
            "median": 68206,
            "max": 68278
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46395,
            "mean": 51164,
            "median": 51147,
            "max": 51375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5872628,
          "size": 27173
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22487,
            "mean": 22487,
            "median": 22487,
            "max": 22487
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57633,
            "mean": 58330,
            "median": 57785,
            "max": 59377
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 1374,
            "mean": 12736,
            "median": 12736,
            "max": 24099
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 415,
            "mean": 2410,
            "median": 2415,
            "max": 2415
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 883,
            "mean": 4026,
            "median": 6883,
            "max": 6883
          },
          "exttload(bytes32)": {
            "calls": 40504,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 23272,
            "mean": 52699,
            "median": 52214,
            "max": 154058
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22467,
            "mean": 22467,
            "median": 22467,
            "max": 22467
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1628,
            "mean": 13415,
            "median": 13340,
            "max": 25353
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2576,
            "mean": 2576,
            "median": 2576,
            "max": 2576
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 46204,
            "mean": 46204,
            "median": 46204,
            "max": 46204
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29752,
            "mean": 32457,
            "median": 32372,
            "max": 32588
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 30067,
            "mean": 47098,
            "median": 47167,
            "max": 47167
          },
          "settle()": {
            "calls": 1,
            "min": 21369,
            "mean": 21369,
            "median": 21369,
            "max": 21369
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1575,
            "mean": 13265,
            "median": 13265,
            "max": 24956
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22579,
            "mean": 22579,
            "median": 22579,
            "max": 22579
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23646,
            "mean": 23646,
            "median": 23646,
            "max": 23646
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2323730,
          "size": 10523
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 47412,
            "mean": 86679,
            "median": 91465,
            "max": 109456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 395951,
          "size": 1627
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 3167,
            "mean": 5383,
            "median": 5938,
            "max": 5938
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 457,
            "mean": 4480,
            "median": 5822,
            "max": 5822
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 334,
            "mean": 334,
            "median": 334,
            "max": 334
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 404,
            "mean": 404,
            "median": 404,
            "max": 404
          },
          "toId(address)": {
            "calls": 769,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24803,
            "mean": 53152,
            "median": 54899,
            "max": 57111
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 107511,
          "size": 277
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 377,
            "mean": 439,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 660716,
          "size": 2846
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 902,
            "min": 2801,
            "mean": 2801,
            "median": 2801,
            "max": 2801
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26855,
            "mean": 46842,
            "median": 47031,
            "max": 47415
          },
          "balanceOf(address,uint256)": {
            "calls": 2701,
            "min": 2609,
            "mean": 2609,
            "median": 2609,
            "max": 2609
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24591,
            "mean": 24871,
            "median": 24831,
            "max": 29403
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26646,
            "mean": 32519,
            "median": 32528,
            "max": 38452
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24273,
            "mean": 47089,
            "median": 47186,
            "max": 47726
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25993,
            "mean": 41015,
            "median": 46133,
            "max": 46133
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24192,
            "mean": 38483,
            "median": 30401,
            "max": 52933
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24527,
            "mean": 43117,
            "median": 47995,
            "max": 61263
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1373040,
          "size": 6061
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 488,
            "mean": 1738,
            "median": 1738,
            "max": 2988
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 160080,
          "size": 543
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 241,
            "mean": 242,
            "median": 242,
            "max": 244
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 444,
            "mean": 444,
            "median": 444,
            "max": 444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 768441,
          "size": 3530
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 79276,
            "mean": 79276,
            "median": 79276,
            "max": 79276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 1309655,
          "size": 6073
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 39983,
            "mean": 122080,
            "median": 146011,
            "max": 253546
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 260679,
          "size": 1015
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29889,
            "mean": 29889,
            "median": 29889,
            "max": 29889
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1565024,
          "size": 7267
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 46199,
            "mean": 190748,
            "median": 182791,
            "max": 393830
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 136946,
            "mean": 152555,
            "median": 152555,
            "max": 168165
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1174519,
          "size": 5422
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 88109,
            "mean": 134522,
            "median": 164012,
            "max": 164012
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 15069
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69526,
            "mean": 76592,
            "median": 69526,
            "max": 89450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 4863324,
          "size": 21415
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 39912,
            "mean": 139384,
            "median": 179253,
            "max": 237367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1752250,
          "size": 8147
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 42798,
            "mean": 406375,
            "median": 147810,
            "max": 18767721
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 1038987,
          "size": 4789
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 41880,
            "mean": 64062,
            "median": 59656,
            "max": 88534
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 733288,
          "size": 3158
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24287,
            "mean": 42615,
            "median": 27386,
            "max": 62761
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "protocolFeesAccrued(address)": {
            "calls": 890,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 45290,
            "mean": 45903,
            "median": 45902,
            "max": 46298
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 25004,
            "mean": 28533,
            "median": 26215,
            "max": 33006
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23955,
            "mean": 47100,
            "median": 47145,
            "max": 47145
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22550,
            "mean": 38392,
            "median": 44090,
            "max": 44450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3332751,
          "size": 15462
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6883,
            "mean": 6883,
            "median": 6883,
            "max": 6883
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47167,
            "mean": 47167,
            "median": 47167,
            "max": 47167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 936598,
          "size": 4309
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 111833,
            "mean": 119113,
            "median": 119113,
            "max": 126394
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 502947,
          "size": 2277
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46393,
            "mean": 46399,
            "median": 46399,
            "max": 46405
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 507,
            "mean": 1840,
            "median": 2507,
            "max": 2507
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 560765,
          "size": 2387
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 398,
            "mean": 484,
            "median": 398,
            "max": 1170
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 397,
            "mean": 638,
            "median": 397,
            "max": 2548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 167887,
          "size": 558
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2489,
            "mean": 1031117,
            "median": 953516,
            "max": 2165302
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2646,
            "mean": 944935,
            "median": 892339,
            "max": 2158466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 216784,
          "size": 789
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 119,
            "min": 548,
            "mean": 615,
            "median": 615,
            "max": 626
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 476,
            "mean": 565,
            "median": 555,
            "max": 629
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 146539,
          "size": 462
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 408,
            "mean": 510,
            "median": 503,
            "max": 565
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 797877,
          "size": 5150
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26306,
            "mean": 45122,
            "median": 46206,
            "max": 46206
          },
          "balanceOf(address)": {
            "calls": 130078,
            "min": 386,
            "mean": 1559,
            "median": 2386,
            "max": 2386
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 33788,
            "mean": 62243,
            "median": 67928,
            "max": 68000
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46101,
            "mean": 50871,
            "median": 50853,
            "max": 51081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5275525,
          "size": 24349
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22343,
            "mean": 22343,
            "median": 22343,
            "max": 22343
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57112,
            "mean": 57906,
            "median": 57281,
            "max": 59097
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 902,
            "mean": 12277,
            "median": 12277,
            "max": 23653
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 323,
            "mean": 2318,
            "median": 2323,
            "max": 2323
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 821,
            "mean": 3964,
            "median": 6821,
            "max": 6821
          },
          "exttload(bytes32)": {
            "calls": 40480,
            "min": 335,
            "mean": 335,
            "median": 335,
            "max": 335
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 22909,
            "mean": 51537,
            "median": 51088,
            "max": 150957
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22337,
            "mean": 22337,
            "median": 22337,
            "max": 22337
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1096,
            "mean": 12897,
            "median": 12822,
            "max": 24848
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 45931,
            "mean": 45931,
            "median": 45931,
            "max": 45931
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29295,
            "mean": 32000,
            "median": 31915,
            "max": 32131
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 29991,
            "mean": 47022,
            "median": 47091,
            "max": 47091
          },
          "settle()": {
            "calls": 1,
            "min": 21406,
            "mean": 21406,
            "median": 21406,
            "max": 21406
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1070,
            "mean": 12773,
            "median": 12773,
            "max": 24477
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22362,
            "mean": 22362,
            "median": 22362,
            "max": 22362
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23301,
            "mean": 23301,
            "median": 23301,
            "max": 23301
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2432214,
          "size": 11019
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 43962,
            "mean": 78691,
            "median": 81398,
            "max": 100516
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 315628,
          "size": 1246
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 2943,
            "mean": 5018,
            "median": 5537,
            "max": 5537
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 304,
            "mean": 4188,
            "median": 5483,
            "max": 5483
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "toId(address)": {
            "calls": 769,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24544,
            "mean": 52816,
            "median": 54363,
            "max": 56853
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 95465,
          "size": 227
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 252,
            "mean": 252,
            "median": 253,
            "max": 253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 520595,
          "size": 2193
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 909,
            "min": 2586,
            "mean": 2586,
            "median": 2586,
            "max": 2586
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26640,
            "mean": 46625,
            "median": 46804,
            "max": 47200
          },
          "balanceOf(address,uint256)": {
            "calls": 2708,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24376,
            "mean": 24648,
            "median": 24604,
            "max": 29188
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26376,
            "mean": 32453,
            "median": 37130,
            "max": 38018
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24123,
            "mean": 46850,
            "median": 46958,
            "max": 47486
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25736,
            "mean": 40759,
            "median": 45876,
            "max": 45876
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24054,
            "mean": 38226,
            "median": 30197,
            "max": 52585
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24216,
            "mean": 42684,
            "median": 47499,
            "max": 60704
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1634163,
          "size": 7188
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 344,
            "mean": 1594,
            "median": 1594,
            "max": 2844
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 134430,
          "size": 419
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 216,
            "mean": 220,
            "median": 220,
            "max": 224
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 502042,
          "size": 2266
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 75535,
            "mean": 75535,
            "median": 75535,
            "max": 75535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 996042,
          "size": 4571
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 35818,
            "mean": 114238,
            "median": 136336,
            "max": 242064
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 219592,
          "size": 866
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29136,
            "mean": 29136,
            "median": 29136,
            "max": 29136
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1448616,
          "size": 6670
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 42414,
            "mean": 179979,
            "median": 174786,
            "max": 372977
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 126281,
            "mean": 142017,
            "median": 142017,
            "max": 157754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1115374,
          "size": 5112
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 81612,
            "mean": 127522,
            "median": 156882,
            "max": 156882
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 18490
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69158,
            "mean": 76224,
            "median": 69158,
            "max": 89082
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 5783308,
          "size": 25701
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 38362,
            "mean": 127540,
            "median": 163837,
            "max": 207967
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1327142,
          "size": 6106
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 37642,
            "mean": 349228,
            "median": 135610,
            "max": 18085725
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 770351,
          "size": 3536
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 38993,
            "mean": 58304,
            "median": 53960,
            "max": 79047
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 542523,
          "size": 2263
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24081,
            "mean": 44035,
            "median": 27108,
            "max": 62046
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "protocolFeesAccrued(address)": {
            "calls": 904,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 44766,
            "mean": 45405,
            "median": 45402,
            "max": 45798
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 24529,
            "mean": 27629,
            "median": 25719,
            "max": 32338
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23844,
            "mean": 47001,
            "median": 47046,
            "max": 47046
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22431,
            "mean": 38275,
            "median": 43971,
            "max": 44331
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3027338,
          "size": 14018
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6828,
            "mean": 6828,
            "median": 6828,
            "max": 6828
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 335,
            "mean": 335,
            "median": 335,
            "max": 335
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47092,
            "mean": 47092,
            "median": 47092,
            "max": 47092
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 655083,
          "size": 2977
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 104780,
            "mean": 111516,
            "median": 111516,
            "max": 118252
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 311368,
          "size": 1268
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46148,
            "mean": 46154,
            "median": 46154,
            "max": 46160
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 349,
            "mean": 1682,
            "median": 2349,
            "max": 2349
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 530919,
          "size": 2248
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 321,
            "mean": 408,
            "median": 321,
            "max": 1088
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 284,
            "mean": 497,
            "median": 284,
            "max": 2203
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 128029,
          "size": 378
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2368,
            "mean": 1046165,
            "median": 998309,
            "max": 2178168
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2514,
            "mean": 1040745,
            "median": 1020545,
            "max": 2181311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 162209,
          "size": 539
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 118,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 307
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 287,
            "mean": 327,
            "median": 344,
            "max": 344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 122761,
          "size": 354
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 276,
            "mean": 306,
            "median": 321,
            "max": 321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 792363,
          "size": 5010
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 4857,
            "min": 26419,
            "mean": 45235,
            "median": 46319,
            "max": 46319
          },
          "balanceOf(address)": {
            "calls": 130279,
            "min": 416,
            "mean": 1587,
            "median": 2416,
            "max": 2416
          },
          "mint(address,uint256)": {
            "calls": 814,
            "min": 33873,
            "mean": 62328,
            "median": 68013,
            "max": 68085
          },
          "transfer(address,uint256)": {
            "calls": 1039,
            "min": 46224,
            "mean": 50992,
            "median": 50976,
            "max": 51204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5782684,
          "size": 26667
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 14,
            "min": 2610,
            "mean": 2610,
            "median": 2610,
            "max": 2610
          },
          "burn(address,uint256,uint256)": {
            "calls": 1,
            "min": 22408,
            "mean": 22408,
            "median": 22408,
            "max": 22408
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5,
            "min": 57366,
            "mean": 58116,
            "median": 57520,
            "max": 59243
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 2,
            "min": 955,
            "mean": 12320,
            "median": 12320,
            "max": 23685
          },
          "extsload(bytes32)": {
            "calls": 4692,
            "min": 353,
            "mean": 2348,
            "median": 2353,
            "max": 2353
          },
          "extsload(bytes32,uint256)": {
            "calls": 26694,
            "min": 949,
            "mean": 4092,
            "median": 6949,
            "max": 6949
          },
          "exttload(bytes32)": {
            "calls": 40504,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 5563,
            "min": 22940,
            "mean": 51648,
            "median": 51156,
            "max": 150827
          },
          "mint(address,uint256,uint256)": {
            "calls": 1,
            "min": 22412,
            "mean": 22412,
            "median": 22412,
            "max": 22412
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 4,
            "min": 1075,
            "mean": 12870,
            "median": 12795,
            "max": 24816
          },
          "protocolFeesAccrued(address)": {
            "calls": 1808,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          },
          "setOperator(address,bool)": {
            "calls": 3,
            "min": 46122,
            "mean": 46122,
            "median": 46122,
            "max": 46122
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 520,
            "min": 29205,
            "mean": 31911,
            "median": 31825,
            "max": 32041
          },
          "setProtocolFeeController(address)": {
            "calls": 250,
            "min": 30020,
            "mean": 47051,
            "median": 47120,
            "max": 47120
          },
          "settle()": {
            "calls": 1,
            "min": 21417,
            "mean": 21417,
            "median": 21417,
            "max": 21417
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 2,
            "min": 1055,
            "mean": 12753,
            "median": 12753,
            "max": 24452
          },
          "take(address,address,uint256)": {
            "calls": 1,
            "min": 22430,
            "mean": 22430,
            "median": 22430,
            "max": 22430
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 1,
            "min": 23336,
            "mean": 23336,
            "median": 23336,
            "max": 23336
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2208105,
          "size": 9954
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 1041,
            "min": 44209,
            "mean": 78501,
            "median": 81200,
            "max": 100434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 304553,
          "size": 1195
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 1280,
            "min": 2964,
            "mean": 5030,
            "median": 5547,
            "max": 5547
          },
          "balanceOfSelf(address)": {
            "calls": 1024,
            "min": 329,
            "mean": 4214,
            "median": 5509,
            "max": 5509
          },
          "fromId(uint256)": {
            "calls": 769,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "isAddressZero(address)": {
            "calls": 258,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "toId(address)": {
            "calls": 769,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "transfer(address,address,uint256)": {
            "calls": 1537,
            "min": 24606,
            "mean": 52895,
            "median": 54572,
            "max": 56921
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 91975,
          "size": 212
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 516,
            "min": 240,
            "mean": 242,
            "median": 243,
            "max": 243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 568793,
          "size": 2417
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 907,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "approve(address,uint256,uint256)": {
            "calls": 1027,
            "min": 26694,
            "mean": 46681,
            "median": 46870,
            "max": 47254
          },
          "balanceOf(address,uint256)": {
            "calls": 2706,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          },
          "burn(uint256,uint256)": {
            "calls": 257,
            "min": 24393,
            "mean": 24669,
            "median": 24633,
            "max": 29205
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 257,
            "min": 26445,
            "mean": 32412,
            "median": 37147,
            "max": 38035
          },
          "isOperator(address,address)": {
            "calls": 257,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256,uint256)": {
            "calls": 3086,
            "min": 24118,
            "mean": 46867,
            "median": 46974,
            "max": 47502
          },
          "setOperator(address,bool)": {
            "calls": 514,
            "min": 25849,
            "mean": 40871,
            "median": 45989,
            "max": 45989
          },
          "transfer(address,uint256,uint256)": {
            "calls": 1025,
            "min": 24064,
            "mean": 38264,
            "median": 30207,
            "max": 52656
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 1802,
            "min": 24325,
            "mean": 42782,
            "median": 47591,
            "max": 60792
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1520232,
          "size": 6741
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 512,
            "min": 375,
            "mean": 1625,
            "median": 1625,
            "max": 2875
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 165485,
          "size": 595
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 2,
            "min": 192,
            "mean": 197,
            "median": 197,
            "max": 203
          },
          "canBeDelegateCalled()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "cannotBeDelegateCalled()": {
            "calls": 1,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 1,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 1,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 573309,
          "size": 2551
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 2,
            "min": 76306,
            "mean": 76306,
            "median": 76306,
            "max": 76306
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 894966,
          "size": 4050
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 1039,
            "min": 35778,
            "mean": 114422,
            "median": 136581,
            "max": 242374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 201382,
          "size": 737
        },
        "functions": {
          "unlock()": {
            "calls": 1,
            "min": 29261,
            "mean": 29261,
            "median": 29261,
            "max": 29261
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1173622,
          "size": 5339
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 12437,
            "min": 42938,
            "mean": 181050,
            "median": 175092,
            "max": 373378
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 2,
            "min": 126508,
            "mean": 142204,
            "median": 142204,
            "max": 157900
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 898734,
          "size": 4054
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 7,
            "min": 81611,
            "mean": 127605,
            "median": 156908,
            "max": 156908
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 17666
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 172,
            "min": 69252,
            "mean": 76318,
            "median": 69252,
            "max": 89176
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 5601667,
          "size": 24699
        },
        "functions": {
          "executor()": {
            "calls": 680,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "unlock(bytes)": {
            "calls": 7,
            "min": 38063,
            "mean": 128020,
            "median": 164492,
            "max": 209307
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1221967,
          "size": 5566
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 2377,
            "min": 37675,
            "mean": 366268,
            "median": 135572,
            "max": 16533955
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 722200,
          "size": 3256
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 5,
            "min": 39610,
            "mean": 58953,
            "median": 54561,
            "max": 79823
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 587190,
          "size": 2494
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 258,
            "min": 24146,
            "mean": 43493,
            "median": 27159,
            "max": 62275
          },
          "protocolFeeController()": {
            "calls": 4,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "protocolFeesAccrued(address)": {
            "calls": 899,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 257,
            "min": 44699,
            "mean": 45323,
            "median": 45323,
            "max": 45719
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 260,
            "min": 24471,
            "mean": 28022,
            "median": 25677,
            "max": 32286
          },
          "setProtocolFeeController(address)": {
            "calls": 518,
            "min": 23898,
            "mean": 47012,
            "median": 47057,
            "max": 47057
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 771,
            "min": 22458,
            "mean": 38301,
            "median": 43998,
            "max": 44358
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3103359,
          "size": 14373
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 2,
            "min": 6863,
            "mean": 6863,
            "median": 6863,
            "max": 6863
          },
          "exttload(bytes32)": {
            "calls": 4,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "setProtocolFeeController(address)": {
            "calls": 8,
            "min": 47120,
            "mean": 47120,
            "median": 47120,
            "max": 47120
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 603157,
          "size": 2684
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 2,
            "min": 105227,
            "mean": 111997,
            "median": 111997,
            "max": 118768
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 366856,
          "size": 1512
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2,
            "min": 46237,
            "mean": 46243,
            "median": 46243,
            "max": 46249
          },
          "balanceOf(address)": {
            "calls": 6,
            "min": 364,
            "mean": 1697,
            "median": 2364,
            "max": 2364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 495805,
          "size": 2082
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 1,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "MAX_TICK()": {
            "calls": 2,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "MIN_SQRT_PRICE()": {
            "calls": 1,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "MIN_TICK()": {
            "calls": 2,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 297,
            "min": 360,
            "mean": 450,
            "median": 360,
            "max": 1156
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 293,
            "min": 326,
            "mean": 539,
            "median": 326,
            "max": 2237
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 133315,
          "size": 404
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 256,
            "min": 2413,
            "mean": 1063178,
            "median": 1003210,
            "max": 2172219
          },
          "extsload(bytes32[])": {
            "calls": 356,
            "min": 2558,
            "mean": 1030200,
            "median": 1022137,
            "max": 2175361
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 168215,
          "size": 567
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 123,
            "min": 367,
            "mean": 408,
            "median": 409,
            "max": 416
          },
          "addDelta(uint128,int128)": {
            "calls": 256,
            "min": 364,
            "mean": 391,
            "median": 386,
            "max": 414
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 124679,
          "size": 364
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 257,
            "min": 308,
            "mean": 373,
            "median": 368,
            "max": 395
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  },
  "unix": {
    "solc": [
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 9441411,
          "size": 47190
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 3625037,
            "mean": 3625037,
            "median": 3625037,
            "max": 3625037
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 7359
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 66500,
            "mean": 66500,
            "median": 66500,
            "max": 66500
          },
          "stdout(string)": {
            "calls": 1,
            "min": 45601,
            "mean": 45601,
            "median": 45601,
            "max": 45601
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 8567395,
          "size": 42856
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 3349955,
            "mean": 3349955,
            "median": 3349955,
            "max": 3349955
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 6468
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 66587,
            "mean": 66587,
            "median": 66587,
            "max": 66587
          },
          "stdout(string)": {
            "calls": 1,
            "min": 45744,
            "mean": 45744,
            "median": 45744,
            "max": 45744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 7042037,
          "size": 35202
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 2718096,
            "mean": 2718096,
            "median": 2718096,
            "max": 2718096
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 5840
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 65597,
            "mean": 65597,
            "median": 65597,
            "max": 65597
          },
          "stdout(string)": {
            "calls": 1,
            "min": 44399,
            "mean": 44399,
            "median": 44399,
            "max": 44399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-via-ir"
        }
      },
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 6569277,
          "size": 32867
        },
        "functions": {
          "run(string)": {
            "calls": 1,
            "min": 2584223,
            "mean": 2584223,
            "median": 2584223,
            "max": 2584223
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 5493
        },
        "functions": {
          "n()": {
            "calls": 1,
            "min": 65717,
            "mean": 65717,
            "median": 65717,
            "max": 65717
          },
          "stdout(string)": {
            "calls": 1,
            "min": 44479,
            "mean": 44479,
            "median": 44479,
            "max": 44479
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0"
        }
      }
    ]
  }
};