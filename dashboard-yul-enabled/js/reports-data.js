// Auto-generated file from build.js
const REPORTS_DATA = {
  "aave-v3": {
    "solc": [
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 821471,
          "size": 3581
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 2834,
            "mean": 2834,
            "median": 2834,
            "max": 2834
          },
          "balanceOf(address)": {
            "calls": 42535,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "initialize(string,string,uint8)": {
            "calls": 590,
            "min": 157262,
            "mean": 157262,
            "median": 157262,
            "max": 157262
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1079
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2295,
            "mean": 2295,
            "median": 2295,
            "max": 2295
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 633052,
          "size": 2789
        },
        "functions": {
          "fallback()": {
            "calls": 70835,
            "min": 5091,
            "mean": 26842,
            "median": 7571,
            "max": 2412228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 504619,
          "size": 2090
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 100,
            "min": 781,
            "mean": 2381,
            "median": 2781,
            "max": 2781
          },
          "approve(address,uint256)": {
            "calls": 17765,
            "min": 28777,
            "mean": 44738,
            "median": 45985,
            "max": 46249
          },
          "balanceOf(address)": {
            "calls": 98085,
            "min": 530,
            "mean": 2526,
            "median": 2530,
            "max": 2530
          },
          "decimals()": {
            "calls": 12190,
            "min": 364,
            "mean": 2322,
            "median": 2364,
            "max": 2364
          },
          "deposit()": {
            "calls": 255,
            "min": 45033,
            "mean": 45033,
            "median": 45033,
            "max": 45033
          },
          "name()": {
            "calls": 80,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "symbol()": {
            "calls": 230,
            "min": 2835,
            "mean": 2835,
            "median": 2835,
            "max": 2835
          },
          "transfer(address,uint256)": {
            "calls": 255,
            "min": 46767,
            "mean": 46767,
            "median": 46767,
            "max": 46767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1589167,
          "size": 7707
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 333459,
            "mean": 423659,
            "median": 455038,
            "max": 482480
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 1692459,
          "size": 8257
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "rescueTokens(address)": {
            "calls": 5,
            "min": 35848,
            "mean": 35848,
            "median": 35848,
            "max": 35848
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 20,
            "min": 364475,
            "mean": 466364,
            "median": 490329,
            "max": 520324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1403419,
          "size": 6831
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 333470,
            "mean": 361396,
            "median": 354794,
            "max": 395925
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3183
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 5,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "createStataTokens(address[])": {
            "calls": 110,
            "min": 2384897,
            "mean": 2384897,
            "median": 2384897,
            "max": 2384897
          },
          "getStataToken(address)": {
            "calls": 110,
            "min": 2516,
            "mean": 2516,
            "median": 2516,
            "max": 2516
          },
          "initialize()": {
            "calls": 3985,
            "min": 23576,
            "mean": 24028,
            "median": 24040,
            "max": 24040
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 20870
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 15,
            "min": 5983,
            "mean": 5983,
            "median": 5983,
            "max": 5983
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 5,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "aToken()": {
            "calls": 5,
            "min": 3073,
            "mean": 3073,
            "median": 3073,
            "max": 3073
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 3713,
            "mean": 3713,
            "median": 3713,
            "max": 3713
          },
          "asset()": {
            "calls": 5,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "balanceOf(address)": {
            "calls": 5,
            "min": 2979,
            "mean": 2979,
            "median": 2979,
            "max": 2979
          },
          "canPause(address)": {
            "calls": 1285,
            "min": 11936,
            "mean": 11936,
            "median": 11936,
            "max": 11936
          },
          "claimRewards(address,address[])": {
            "calls": 5,
            "min": 328083,
            "mean": 328083,
            "median": 328083,
            "max": 328083
          },
          "claimRewardsToSelf(address[])": {
            "calls": 5,
            "min": 3523,
            "mean": 3523,
            "median": 3523,
            "max": 3523
          },
          "decimals()": {
            "calls": 5,
            "min": 2632,
            "mean": 2632,
            "median": 2632,
            "max": 2632
          },
          "deposit(uint256,address)": {
            "calls": 10,
            "min": 260332,
            "mean": 269532,
            "median": 269532,
            "max": 278732
          },
          "depositATokens(uint256,address)": {
            "calls": 1310,
            "min": 160022,
            "mean": 160982,
            "median": 160022,
            "max": 201967
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1295,
            "min": 6401,
            "mean": 126600,
            "median": 127305,
            "max": 149156
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2787,
            "mean": 2787,
            "median": 2787,
            "max": 2787
          },
          "initialize(address,string,string)": {
            "calls": 335,
            "min": 25918,
            "mean": 231162,
            "median": 231964,
            "max": 238964
          },
          "maxRedeem(address)": {
            "calls": 10,
            "min": 28729,
            "mean": 28729,
            "median": 28729,
            "max": 28729
          },
          "maxWithdraw(address)": {
            "calls": 5,
            "min": 31799,
            "mean": 31799,
            "median": 31799,
            "max": 31799
          },
          "mint(uint256,address)": {
            "calls": 5,
            "min": 260702,
            "mean": 260702,
            "median": 260702,
            "max": 260702
          },
          "name()": {
            "calls": 5,
            "min": 2834,
            "mean": 2834,
            "median": 2834,
            "max": 2834
          },
          "nonces(address)": {
            "calls": 15,
            "min": 3016,
            "mean": 3016,
            "median": 3016,
            "max": 3016
          },
          "paused()": {
            "calls": 10,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 1438,
            "mean": 30601,
            "median": 33112,
            "max": 57255
          },
          "previewDeposit(uint256)": {
            "calls": 5,
            "min": 17531,
            "mean": 17531,
            "median": 17531,
            "max": 17531
          },
          "redeem(uint256,address,address)": {
            "calls": 10,
            "min": 34065,
            "mean": 108829,
            "median": 108829,
            "max": 183593
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 5,
            "min": 133394,
            "mean": 133394,
            "median": 133394,
            "max": 133394
          },
          "refreshRewardTokens()": {
            "calls": 5,
            "min": 156830,
            "mean": 156830,
            "median": 156830,
            "max": 156830
          },
          "setPaused(bool)": {
            "calls": 1315,
            "min": 11479,
            "mean": 12100,
            "median": 11479,
            "max": 34847
          },
          "symbol()": {
            "calls": 5,
            "min": 3560,
            "mean": 3560,
            "median": 3560,
            "max": 3560
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 3340,
            "mean": 3340,
            "median": 3340,
            "max": 3340
          },
          "withdraw(uint256,address,address)": {
            "calls": 5,
            "min": 37291,
            "mean": 37291,
            "median": 37291,
            "max": 37291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 8937
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 45,
            "min": 504,
            "mean": 504,
            "median": 504,
            "max": 504
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 15,
            "min": 139831,
            "mean": 210381,
            "median": 139831,
            "max": 351481
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 1546950,
            "mean": 1546950,
            "median": 1546950,
            "max": 1546950
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 3865,
            "min": 1545936,
            "mean": 4432432,
            "median": 4439200,
            "max": 4449298
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 5,
            "min": 192775,
            "mean": 192775,
            "median": 192775,
            "max": 192775
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 18883,
            "mean": 79883,
            "median": 79883,
            "max": 140884
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 5,
            "min": 60540,
            "mean": 60540,
            "median": 60540,
            "max": 60540
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 25,
            "min": 6565,
            "mean": 29287,
            "median": 6874,
            "max": 63217
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 20,
            "min": 21282,
            "mean": 35048,
            "median": 24569,
            "max": 69773
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 5,
            "min": 38541,
            "mean": 38541,
            "median": 38541,
            "max": 38541
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 5,
            "min": 114697,
            "mean": 114697,
            "median": 114697,
            "max": 114697
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7173
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 13010,
            "min": 4310,
            "mean": 7586,
            "median": 6310,
            "max": 31548
          },
          "getDebtCeiling(address)": {
            "calls": 25,
            "min": 12075,
            "mean": 12075,
            "median": 12075,
            "max": 12075
          },
          "getDebtCeilingDecimals()": {
            "calls": 5,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "getFlashLoanEnabled(address)": {
            "calls": 2565,
            "min": 12417,
            "mean": 12417,
            "median": 12417,
            "max": 12417
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 40,
            "min": 8693,
            "mean": 8693,
            "median": 8693,
            "max": 8693
          },
          "getIsVirtualAccActive(address)": {
            "calls": 47564,
            "min": 669,
            "mean": 669,
            "median": 669,
            "max": 669
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 50,
            "min": 12097,
            "mean": 12097,
            "median": 12097,
            "max": 12097
          },
          "getPaused(address)": {
            "calls": 48899,
            "min": 12430,
            "mean": 12430,
            "median": 12430,
            "max": 12540
          },
          "getReserveCaps(address)": {
            "calls": 240,
            "min": 12160,
            "mean": 12160,
            "median": 12160,
            "max": 12160
          },
          "getReserveConfigurationData(address)": {
            "calls": 55544,
            "min": 12398,
            "mean": 12398,
            "median": 12398,
            "max": 12508
          },
          "getReserveTokensAddresses(address)": {
            "calls": 48149,
            "min": 15945,
            "mean": 15945,
            "median": 15945,
            "max": 16055
          },
          "getSiloedBorrowing(address)": {
            "calls": 10,
            "min": 12480,
            "mean": 12480,
            "median": 12480,
            "max": 12480
          },
          "getTotalDebt(address)": {
            "calls": 20,
            "min": 5890,
            "mean": 23545,
            "median": 29431,
            "max": 29431
          },
          "getUnbackedMintCap(address)": {
            "calls": 5,
            "min": 514,
            "mean": 514,
            "median": 514,
            "max": 514
          },
          "getUserReserveData(address,address)": {
            "calls": 1340,
            "min": 66962,
            "mean": 67207,
            "median": 67203,
            "max": 71032
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 5,
            "min": 11474,
            "mean": 11474,
            "median": 11474,
            "max": 11474
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3052
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 15,
            "min": 34887,
            "mean": 34887,
            "median": 34887,
            "max": 34887
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 5,
            "min": 57928,
            "mean": 57928,
            "median": 57928,
            "max": 57928
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 34920,
            "mean": 34920,
            "median": 34920,
            "max": 34920
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 34898,
            "mean": 34898,
            "median": 34898,
            "max": 34898
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 35344,
            "mean": 35344,
            "median": 35344,
            "max": 35344
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 5,
            "min": 34901,
            "mean": 34901,
            "median": 34901,
            "max": 34901
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 35,
            "min": 35003,
            "mean": 35003,
            "median": 35003,
            "max": 35003
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 35141,
            "mean": 35141,
            "median": 35141,
            "max": 35141
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 10,
            "min": 34767,
            "mean": 34805,
            "median": 34805,
            "max": 34844
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1631192,
          "size": 7642
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 10,
            "min": 179914,
            "mean": 180200,
            "median": 180200,
            "max": 180487
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 9050,
            "min": 149551,
            "mean": 179310,
            "median": 181231,
            "max": 220296
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 4835
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 10,
            "min": 239089,
            "mean": 242378,
            "median": 242378,
            "max": 245668
          },
          "depositETH(address,address,uint16)": {
            "calls": 50,
            "min": 196631,
            "mean": 231568,
            "median": 235450,
            "max": 235450
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 5,
            "min": 33800,
            "mean": 33800,
            "median": 33800,
            "max": 33800
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 52705,
            "mean": 52705,
            "median": 52705,
            "max": 52705
          },
          "fallback()": {
            "calls": 10,
            "min": 21703,
            "mean": 21703,
            "median": 21703,
            "max": 21703
          },
          "getWETHAddress()": {
            "calls": 5,
            "min": 332,
            "mean": 332,
            "median": 332,
            "max": 332
          },
          "owner()": {
            "calls": 10,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "receive()": {
            "calls": 5,
            "min": 21206,
            "mean": 21206,
            "median": 21206,
            "max": 21206
          },
          "repayETH(address,uint256,address)": {
            "calls": 30,
            "min": 152537,
            "mean": 158991,
            "median": 155633,
            "max": 171773
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 15,
            "min": 222610,
            "mean": 234121,
            "median": 228580,
            "max": 251174
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 240812,
            "mean": 259066,
            "median": 265302,
            "max": 271084
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2280428,
          "size": 11226
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1300,
            "min": 2529,
            "mean": 2536,
            "median": 2529,
            "max": 3478
          },
          "POOL()": {
            "calls": 535,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 61774,
            "min": 684,
            "mean": 684,
            "median": 684,
            "max": 684
          },
          "REWARDS_CONTROLLER()": {
            "calls": 5,
            "min": 794,
            "mean": 794,
            "median": 794,
            "max": 794
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 48014,
            "min": 2812,
            "mean": 2812,
            "median": 2812,
            "max": 2812
          },
          "allowance(address,address)": {
            "calls": 130,
            "min": 3278,
            "mean": 3278,
            "median": 3278,
            "max": 3278
          },
          "approve(address,uint256)": {
            "calls": 15540,
            "min": 24371,
            "mean": 24371,
            "median": 24371,
            "max": 24371
          },
          "balanceOf(address)": {
            "calls": 90465,
            "min": 3802,
            "mean": 12577,
            "median": 18802,
            "max": 19043
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 32415,
            "min": 1105,
            "mean": 40892,
            "median": 35388,
            "max": 61488
          },
          "decimals()": {
            "calls": 51514,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 7905,
            "mean": 7905,
            "median": 7905,
            "max": 7905
          },
          "getIncentivesController()": {
            "calls": 47554,
            "min": 508,
            "mean": 508,
            "median": 508,
            "max": 508
          },
          "getPreviousIndex(address)": {
            "calls": 80,
            "min": 3136,
            "mean": 3136,
            "median": 3136,
            "max": 3136
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 115,
            "min": 587,
            "mean": 4326,
            "median": 4587,
            "max": 4587
          },
          "increaseAllowance(address,uint256)": {
            "calls": 55,
            "min": 7685,
            "mean": 21675,
            "median": 24785,
            "max": 24785
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 225524,
            "min": 123835,
            "mean": 206418,
            "median": 208832,
            "max": 298961
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 91620,
            "min": 992,
            "mean": 58705,
            "median": 62245,
            "max": 69863
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 50,
            "min": 637,
            "mean": 41200,
            "median": 44807,
            "max": 61907
          },
          "name()": {
            "calls": 48434,
            "min": 2786,
            "mean": 5028,
            "median": 2795,
            "max": 9404
          },
          "nonces(address)": {
            "calls": 1320,
            "min": 2803,
            "mean": 2803,
            "median": 2803,
            "max": 2803
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3925,
            "min": 1157,
            "mean": 24671,
            "median": 9748,
            "max": 53997
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 15,
            "min": 12474,
            "mean": 24913,
            "median": 14653,
            "max": 47612
          },
          "scaledBalanceOf(address)": {
            "calls": 131030,
            "min": 535,
            "mean": 2284,
            "median": 2535,
            "max": 2535
          },
          "scaledTotalSupply()": {
            "calls": 3140,
            "min": 810,
            "mean": 2017,
            "median": 2810,
            "max": 2810
          },
          "symbol()": {
            "calls": 48339,
            "min": 3245,
            "mean": 5487,
            "median": 3691,
            "max": 9836
          },
          "totalSupply()": {
            "calls": 49950,
            "min": 399,
            "mean": 6230,
            "median": 7396,
            "max": 18637
          },
          "transfer(address,uint256)": {
            "calls": 5280,
            "min": 781,
            "mean": 104405,
            "median": 109642,
            "max": 179296
          },
          "transferFrom(address,address,uint256)": {
            "calls": 19395,
            "min": 2901,
            "mean": 94741,
            "median": 112642,
            "max": 149022
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 14250,
            "min": 1011,
            "mean": 30215,
            "median": 34832,
            "max": 41859
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 36745,
            "min": 557,
            "mean": 28060,
            "median": 33637,
            "max": 33637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 20580
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 980,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 345,
            "min": 2366,
            "mean": 2366,
            "median": 2366,
            "max": 2366
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 1100,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 2610,
            "min": 3771,
            "mean": 25530,
            "median": 25605,
            "max": 25605
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 1330,
            "min": 190968,
            "mean": 198010,
            "median": 196568,
            "max": 240250
          },
          "borrow(bytes32)": {
            "calls": 15,
            "min": 197029,
            "mean": 197029,
            "median": 197029,
            "max": 197029
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 2595,
            "min": 6585,
            "mean": 28572,
            "median": 49974,
            "max": 49974
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 10,
            "min": 25284,
            "mean": 25284,
            "median": 25284,
            "max": 25284
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 2630,
            "min": 7335,
            "mean": 7335,
            "median": 7335,
            "max": 7335
          },
          "dropReserve(address)": {
            "calls": 1285,
            "min": 6311,
            "mean": 6595,
            "median": 6311,
            "max": 79509
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "getConfiguration(address)": {
            "calls": 8330,
            "min": 1806,
            "mean": 1824,
            "median": 1806,
            "max": 3806
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 10,
            "min": 3180,
            "mean": 3180,
            "median": 3180,
            "max": 3180
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 2630,
            "min": 3488,
            "mean": 3488,
            "median": 3488,
            "max": 3488
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 1696,
            "mean": 1696,
            "median": 1696,
            "max": 1696
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 398,
            "mean": 398,
            "median": 398,
            "max": 398
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 1280,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 970,
            "mean": 970,
            "median": 970,
            "max": 970
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 1520,
            "mean": 1520,
            "median": 1520,
            "max": 1520
          },
          "getReserveAToken(address)": {
            "calls": 860,
            "min": 1707,
            "mean": 1753,
            "median": 1707,
            "max": 3707
          },
          "getReserveData(address)": {
            "calls": 6170,
            "min": 6449,
            "mean": 21481,
            "median": 22449,
            "max": 24949
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 1365,
            "min": 1937,
            "mean": 1967,
            "median": 1937,
            "max": 5937
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20,
            "min": 888,
            "mean": 3617,
            "median": 4117,
            "max": 5347
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 20,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getReservesList()": {
            "calls": 10,
            "min": 12477,
            "mean": 12477,
            "median": 12477,
            "max": 12477
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 904,
            "mean": 904,
            "median": 904,
            "max": 904
          },
          "getUserAccountData(address)": {
            "calls": 5,
            "min": 82632,
            "mean": 82632,
            "median": 82632,
            "max": 82632
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 20,
            "min": 3057,
            "mean": 3057,
            "median": 3057,
            "max": 3057
          },
          "initReserve(address,address,address)": {
            "calls": 3385,
            "min": 6769,
            "mean": 39740,
            "median": 6769,
            "max": 146008
          },
          "initialize(address)": {
            "calls": 345,
            "min": 46346,
            "mean": 46346,
            "median": 46346,
            "max": 46346
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 4192,
            "mean": 4192,
            "median": 4192,
            "max": 4192
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 5,
            "min": 370379,
            "mean": 370379,
            "median": 370379,
            "max": 370379
          },
          "mintToTreasury(address[])": {
            "calls": 10,
            "min": 73772,
            "mean": 75170,
            "median": 75170,
            "max": 76568
          },
          "multicall(bytes[])": {
            "calls": 1295,
            "min": 220579,
            "mean": 220579,
            "median": 220579,
            "max": 220579
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 8824,
            "mean": 8824,
            "median": 8824,
            "max": 8824
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 10,
            "min": 125560,
            "mean": 125560,
            "median": 125560,
            "max": 125560
          },
          "repay(bytes32)": {
            "calls": 5,
            "min": 117786,
            "mean": 117786,
            "median": 117786,
            "max": 117786
          },
          "repayWithATokens(bytes32)": {
            "calls": 5,
            "min": 131027,
            "mean": 131027,
            "median": 131027,
            "max": 131027
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 164603,
            "mean": 170816,
            "median": 170509,
            "max": 172628
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 49431,
            "mean": 49431,
            "median": 49431,
            "max": 49431
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2115,
            "min": 5494,
            "mean": 6577,
            "median": 7213,
            "max": 16494
          },
          "setConfiguration(address,(uint256))": {
            "calls": 10395,
            "min": 3361,
            "mean": 5690,
            "median": 3361,
            "max": 25581
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3840,
            "min": 6918,
            "mean": 12083,
            "median": 11432,
            "max": 18015
          },
          "setUserEMode(uint8)": {
            "calls": 35,
            "min": 19160,
            "mean": 40020,
            "median": 38779,
            "max": 84189
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1285,
            "min": 2934,
            "mean": 3083,
            "median": 2934,
            "max": 41363
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1380,
            "min": 11354,
            "mean": 12768,
            "median": 11354,
            "max": 59429
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 5,
            "min": 27193,
            "mean": 27193,
            "median": 27193,
            "max": 27193
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1310,
            "min": 3535,
            "mean": 4300,
            "median": 3535,
            "max": 57629
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 2715,
            "min": 151794,
            "mean": 202594,
            "median": 203094,
            "max": 203094
          },
          "supply(bytes32)": {
            "calls": 35,
            "min": 206211,
            "mean": 206211,
            "median": 206211,
            "max": 206211
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 254392,
            "mean": 254392,
            "median": 254392,
            "max": 254392
          },
          "syncIndexesState(address)": {
            "calls": 825,
            "min": 9504,
            "mean": 16137,
            "median": 9504,
            "max": 29404
          },
          "syncRatesState(address)": {
            "calls": 825,
            "min": 15790,
            "mean": 15790,
            "median": 15790,
            "max": 15790
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1625,
            "min": 6684,
            "mean": 10001,
            "median": 6684,
            "max": 22308
          },
          "withdraw(bytes32)": {
            "calls": 10,
            "min": 120135,
            "mean": 122555,
            "median": 122555,
            "max": 124976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3605346,
          "size": 16354
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 8960,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 23135,
            "min": 14638,
            "mean": 26323,
            "median": 15122,
            "max": 88984
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 2570,
            "min": 17128,
            "mean": 28917,
            "median": 31184,
            "max": 40689
          },
          "dropReserve(address)": {
            "calls": 1305,
            "min": 14133,
            "mean": 14986,
            "median": 14133,
            "max": 102394
          },
          "getConfiguratorLogic()": {
            "calls": 5,
            "min": 596,
            "mean": 596,
            "median": 596,
            "max": 596
          },
          "getPendingLtv(address)": {
            "calls": 3855,
            "min": 2803,
            "mean": 2803,
            "median": 2803,
            "max": 2803
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 14120,
            "min": 17324,
            "mean": 20637762,
            "median": 1372919,
            "max": 179371522
          },
          "initialize(address)": {
            "calls": 4025,
            "min": 72898,
            "mean": 90753,
            "median": 90798,
            "max": 90798
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 9060,
            "min": 20355,
            "mean": 84166,
            "median": 84255,
            "max": 98524
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 19485,
            "min": 18032,
            "mean": 71671,
            "median": 81628,
            "max": 81936
          },
          "setBorrowCap(address,uint256)": {
            "calls": 12920,
            "min": 13951,
            "mean": 14543,
            "median": 13951,
            "max": 46971
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 11675,
            "min": 13153,
            "mean": 13458,
            "median": 13153,
            "max": 46426
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 12960,
            "min": 17753,
            "mean": 38763,
            "median": 38480,
            "max": 88433
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 16915,
            "min": 17726,
            "mean": 77173,
            "median": 82249,
            "max": 82315
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 11630,
            "min": 13506,
            "mean": 13680,
            "median": 13506,
            "max": 46526
          },
          "setPoolPause(bool)": {
            "calls": 2575,
            "min": 17380,
            "mean": 17853,
            "median": 17380,
            "max": 98638
          },
          "setPoolPause(bool,uint40)": {
            "calls": 2565,
            "min": 17130,
            "mean": 66825,
            "median": 65855,
            "max": 118705
          },
          "setReserveActive(address,bool)": {
            "calls": 1350,
            "min": 14535,
            "mean": 17350,
            "median": 14535,
            "max": 85242
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 16740,
            "min": 13420,
            "mean": 20910,
            "median": 13640,
            "max": 44231
          },
          "setReserveFactor(address,uint256)": {
            "calls": 12880,
            "min": 17442,
            "mean": 44796,
            "median": 41063,
            "max": 111154
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 14155,
            "min": 13772,
            "mean": 19430,
            "median": 13772,
            "max": 46803
          },
          "setReserveFreeze(address,bool)": {
            "calls": 3910,
            "min": 20932,
            "mean": 50029,
            "median": 55722,
            "max": 75828
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 1500,
            "min": 17744,
            "mean": 29556,
            "median": 17744,
            "max": 98286
          },
          "setReservePause(address,bool)": {
            "calls": 2565,
            "min": 17332,
            "mean": 31568,
            "median": 45749,
            "max": 45749
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 15420,
            "min": 14702,
            "mean": 41513,
            "median": 50491,
            "max": 52920
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 11615,
            "min": 13956,
            "mean": 14140,
            "median": 13956,
            "max": 73869
          },
          "setSupplyCap(address,uint256)": {
            "calls": 14235,
            "min": 13555,
            "mean": 17681,
            "median": 13555,
            "max": 46575
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 1525,
            "min": 13972,
            "mean": 29321,
            "median": 13972,
            "max": 109515
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 5305,
            "min": 14353,
            "mean": 27384,
            "median": 31534,
            "max": 36434
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 1285,
            "min": 14500,
            "mean": 14865,
            "median": 14500,
            "max": 108316
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4200593,
          "size": 19540
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 32135,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 3755,
            "min": 2366,
            "mean": 2366,
            "median": 2366,
            "max": 2366
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 10,
            "min": 685,
            "mean": 685,
            "median": 685,
            "max": 685
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 2570,
            "min": 1565,
            "mean": 1565,
            "median": 1565,
            "max": 1565
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 236244,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 2620,
            "min": 3661,
            "mean": 25420,
            "median": 25495,
            "max": 25495
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 36670,
            "min": 21988,
            "mean": 216835,
            "median": 225006,
            "max": 297228
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 15570,
            "min": 6519,
            "mean": 46288,
            "median": 49908,
            "max": 49908
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 9050,
            "min": 3186,
            "mean": 25049,
            "median": 25086,
            "max": 25086
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 15575,
            "min": 2447,
            "mean": 7239,
            "median": 7247,
            "max": 7247
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 50075,
            "min": 33916,
            "mean": 194650,
            "median": 203857,
            "max": 203857
          },
          "dropReserve(address)": {
            "calls": 1310,
            "min": 6267,
            "mean": 7081,
            "median": 6267,
            "max": 79465
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 10245,
            "min": 6522,
            "mean": 54865,
            "median": 96034,
            "max": 104775
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 22290,
            "min": 9744,
            "mean": 49585,
            "median": 52370,
            "max": 111024
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 1360,
            "min": 29486,
            "mean": 109341,
            "median": 84945,
            "max": 504486
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 65,
            "min": 23508,
            "mean": 293554,
            "median": 159442,
            "max": 687334
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "getConfiguration(address)": {
            "calls": 261068,
            "min": 1696,
            "mean": 2862,
            "median": 3696,
            "max": 3696
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 9240,
            "min": 1092,
            "mean": 3087,
            "median": 3092,
            "max": 3092
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 23530,
            "min": 1378,
            "mean": 3375,
            "median": 3378,
            "max": 3378
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 715,
            "min": 2138,
            "mean": 4110,
            "median": 4138,
            "max": 4138
          },
          "getEModeCategoryData(uint8)": {
            "calls": 15,
            "min": 4331,
            "mean": 5661,
            "median": 6322,
            "max": 6331
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 170,
            "min": 3086,
            "mean": 3086,
            "median": 3086,
            "max": 3086
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 1542,
            "mean": 1542,
            "median": 1542,
            "max": 1542
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 398,
            "mean": 398,
            "median": 398,
            "max": 398
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 28128,
            "min": 865,
            "mean": 1575,
            "median": 865,
            "max": 2865
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 882,
            "mean": 882,
            "median": 882,
            "max": 882
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 1410,
            "mean": 1410,
            "median": 1410,
            "max": 1410
          },
          "getReserveAToken(address)": {
            "calls": 107539,
            "min": 1597,
            "mean": 3201,
            "median": 3597,
            "max": 3597
          },
          "getReserveAddressById(uint16)": {
            "calls": 5,
            "min": 2775,
            "mean": 2775,
            "median": 2775,
            "max": 2775
          },
          "getReserveData(address)": {
            "calls": 73095,
            "min": 4449,
            "mean": 18131,
            "median": 22449,
            "max": 24949
          },
          "getReserveDeficit(address)": {
            "calls": 11130,
            "min": 1553,
            "mean": 3401,
            "median": 3553,
            "max": 3553
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 210080,
            "min": 1827,
            "mean": 3330,
            "median": 1827,
            "max": 6068
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20408,
            "min": 888,
            "mean": 2652,
            "median": 888,
            "max": 5347
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 71639,
            "min": 695,
            "mean": 2440,
            "median": 2695,
            "max": 2695
          },
          "getReservesList()": {
            "calls": 18445,
            "min": 4367,
            "mean": 19601,
            "median": 12367,
            "max": 363252
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 838,
            "mean": 838,
            "median": 838,
            "max": 838
          },
          "getUserAccountData(address)": {
            "calls": 29875,
            "min": 5473,
            "mean": 66573,
            "median": 82501,
            "max": 125486
          },
          "getUserConfiguration(address)": {
            "calls": 16890,
            "min": 948,
            "mean": 2026,
            "median": 2948,
            "max": 2948
          },
          "getUserEMode(address)": {
            "calls": 13100,
            "min": 1733,
            "mean": 2524,
            "median": 1733,
            "max": 3733
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 9765,
            "min": 991,
            "mean": 2720,
            "median": 2991,
            "max": 2991
          },
          "initReserve(address,address,address)": {
            "calls": 227259,
            "min": 6681,
            "mean": 159058,
            "median": 158746,
            "max": 187172
          },
          "initialize(address)": {
            "calls": 3710,
            "min": 27257,
            "mean": 46184,
            "median": 46236,
            "max": 46236
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 4016,
            "mean": 4016,
            "median": 4016,
            "max": 4016
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 31930,
            "min": 29012,
            "mean": 256342,
            "median": 299156,
            "max": 453726
          },
          "mintToTreasury(address[])": {
            "calls": 45,
            "min": 3187,
            "mean": 48969,
            "median": 52162,
            "max": 133736
          },
          "multicall(bytes[])": {
            "calls": 1465,
            "min": 154234,
            "mean": 219511,
            "median": 220322,
            "max": 480549
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 8626,
            "mean": 8626,
            "median": 8626,
            "max": 8626
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 165,
            "min": 15328,
            "mean": 90977,
            "median": 97202,
            "max": 126848
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 1325,
            "min": 80288,
            "mean": 126074,
            "median": 126443,
            "max": 138252
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 117194,
            "mean": 142146,
            "median": 131324,
            "max": 172947
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 49321,
            "mean": 49321,
            "median": 49321,
            "max": 49321
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 12055,
            "min": 5340,
            "mean": 5531,
            "median": 5340,
            "max": 16340
          },
          "setConfiguration(address,(uint256))": {
            "calls": 363674,
            "min": 3207,
            "mean": 17167,
            "median": 25207,
            "max": 25427
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 17493,
            "min": 5896,
            "mean": 13082,
            "median": 13405,
            "max": 17905
          },
          "setUserEMode(uint8)": {
            "calls": 12935,
            "min": 5606,
            "mean": 44935,
            "median": 38778,
            "max": 109414
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1295,
            "min": 2934,
            "mean": 3835,
            "median": 2934,
            "max": 111999
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1650,
            "min": 7280,
            "mean": 14183,
            "median": 11280,
            "max": 92164
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1320,
            "min": 3425,
            "mean": 4482,
            "median": 3425,
            "max": 57530
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 35200,
            "min": 30336,
            "mean": 184860,
            "median": 203021,
            "max": 210639
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 109600,
            "mean": 191217,
            "median": 212280,
            "max": 251784
          },
          "syncIndexesState(address)": {
            "calls": 10990,
            "min": 9394,
            "mean": 16364,
            "median": 9394,
            "max": 48817
          },
          "syncRatesState(address)": {
            "calls": 10990,
            "min": 15680,
            "mean": 15739,
            "median": 15680,
            "max": 20180
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 4955,
            "min": 6574,
            "mean": 18146,
            "median": 22198,
            "max": 22198
          },
          "withdraw(address,uint256,address)": {
            "calls": 2870,
            "min": 35003,
            "mean": 129483,
            "median": 131689,
            "max": 195367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1681536,
          "size": 8296
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 47539,
            "min": 2724,
            "mean": 2724,
            "median": 2724,
            "max": 2724
          },
          "approveDelegation(address,uint256)": {
            "calls": 25,
            "min": 27328,
            "mean": 27328,
            "median": 27328,
            "max": 27328
          },
          "balanceOf(address)": {
            "calls": 18610,
            "min": 773,
            "mean": 9943,
            "median": 4843,
            "max": 18302
          },
          "borrowAllowance(address,address)": {
            "calls": 25,
            "min": 2836,
            "mean": 2836,
            "median": 2836,
            "max": 2836
          },
          "burn(address,uint256,uint256)": {
            "calls": 29800,
            "min": 12429,
            "mean": 24218,
            "median": 24229,
            "max": 24229
          },
          "decimals()": {
            "calls": 51399,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 35,
            "min": 563,
            "mean": 28492,
            "median": 21636,
            "max": 55836
          },
          "getIncentivesController()": {
            "calls": 47539,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 225524,
            "min": 123203,
            "mean": 206567,
            "median": 208283,
            "max": 298321
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 36665,
            "min": 23973,
            "mean": 60073,
            "median": 60173,
            "max": 69831
          },
          "name()": {
            "calls": 48044,
            "min": 2786,
            "mean": 5058,
            "median": 3676,
            "max": 9404
          },
          "nonces(address)": {
            "calls": 5,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "scaledBalanceOf(address)": {
            "calls": 93545,
            "min": 535,
            "mean": 1813,
            "median": 2535,
            "max": 2535
          },
          "scaledTotalSupply()": {
            "calls": 224670,
            "min": 722,
            "mean": 2613,
            "median": 2722,
            "max": 2722
          },
          "symbol()": {
            "calls": 48009,
            "min": 3179,
            "mean": 5454,
            "median": 4500,
            "max": 9770
          },
          "totalSupply()": {
            "calls": 950,
            "min": 2444,
            "mean": 5689,
            "median": 6444,
            "max": 17903
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3198
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 15,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 5,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "getAssetPrice(address)": {
            "calls": 291740,
            "min": 0,
            "mean": 5632,
            "median": 7844,
            "max": 15297
          },
          "getAssetsPrices(address[])": {
            "calls": 15,
            "min": 5593,
            "mean": 7589,
            "median": 8588,
            "max": 8588
          },
          "getFallbackOracle()": {
            "calls": 15,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "getSourceOfAsset(address)": {
            "calls": 5780,
            "min": 2511,
            "mean": 2511,
            "median": 2511,
            "max": 2511
          },
          "setAssetSources(address[],address[])": {
            "calls": 130,
            "min": 36938,
            "mean": 58426,
            "median": 61291,
            "max": 62411
          },
          "setFallbackOracle(address)": {
            "calls": 20,
            "min": 59369,
            "mean": 59369,
            "median": 59369,
            "max": 59369
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 814671,
          "size": 3715
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5125,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "MAX_BORROW_RATE()": {
            "calls": 26910,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 212905,
            "min": 0,
            "mean": 4210,
            "median": 3990,
            "max": 5335
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 14605,
            "min": 2743,
            "mean": 2743,
            "median": 2743,
            "max": 2743
          },
          "getInterestRateData(address)": {
            "calls": 1280,
            "min": 3694,
            "mean": 3694,
            "median": 3694,
            "max": 3694
          },
          "getInterestRateDataBps(address)": {
            "calls": 1280,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 6875,
            "min": 2983,
            "mean": 2983,
            "median": 2983,
            "max": 2983
          },
          "getOptimalUsageRatio(address)": {
            "calls": 10745,
            "min": 2671,
            "mean": 2671,
            "median": 2671,
            "max": 2671
          },
          "getVariableRateSlope1(address)": {
            "calls": 10765,
            "min": 2545,
            "mean": 2545,
            "median": 2545,
            "max": 2545
          },
          "getVariableRateSlope2(address)": {
            "calls": 6905,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 14080,
            "min": 28058,
            "mean": 29408,
            "median": 28716,
            "max": 36703
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 32025,
            "min": 28329,
            "mean": 32876,
            "median": 29519,
            "max": 37081
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 392243,
          "size": 1638
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "getGracePeriod()": {
            "calls": 5,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "getSequencerOracle()": {
            "calls": 5,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "isBorrowAllowed()": {
            "calls": 25,
            "min": 9953,
            "mean": 10807,
            "median": 9953,
            "max": 12088
          },
          "isLiquidationAllowed()": {
            "calls": 25,
            "min": 9975,
            "mean": 10829,
            "median": 9975,
            "max": 12110
          },
          "setGracePeriod(uint256)": {
            "calls": 10,
            "min": 36233,
            "mean": 39241,
            "median": 39241,
            "max": 42249
          },
          "setSequencerOracle(address)": {
            "calls": 10,
            "min": 32908,
            "mean": 33524,
            "median": 33524,
            "max": 34140
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 339168,
          "size": 1510
        },
        "functions": {
          "admin()": {
            "calls": 40,
            "min": 21371,
            "mean": 21371,
            "median": 21371,
            "max": 21371
          },
          "fallback()": {
            "calls": 2829295,
            "min": 0,
            "mean": 123245,
            "median": 7733,
            "max": 181086618
          },
          "upgradeTo(address)": {
            "calls": 10,
            "min": 26731,
            "mean": 28626,
            "median": 28626,
            "max": 30522
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 40,
            "min": 28589,
            "mean": 151970,
            "median": 186652,
            "max": 186652
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 475114,
          "size": 2236
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43523,
            "mean": 43523,
            "median": 43523,
            "max": 43523
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43654,
            "mean": 43654,
            "median": 43654,
            "max": 43654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 349321,
          "size": 1653
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43545,
            "mean": 43545,
            "median": 43545,
            "max": 43545
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43654,
            "mean": 43654,
            "median": 43654,
            "max": 43654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4256273,
          "size": 19708
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 29158,
            "mean": 29158,
            "median": 29158,
            "max": 29158
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 113748,
          "size": 336
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 20860,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "decimals()": {
            "calls": 470,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "description()": {
            "calls": 470,
            "min": 152,
            "mean": 152,
            "median": 152,
            "max": 152
          },
          "latestAnswer()": {
            "calls": 282560,
            "min": 277,
            "mean": 1745,
            "median": 2277,
            "max": 2277
          },
          "name()": {
            "calls": 470,
            "min": 152,
            "mean": 152,
            "median": 152,
            "max": 152
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 133239,
          "size": 396
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 15,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "setAssetPrice(address,uint256)": {
            "calls": 15,
            "min": 25625,
            "mean": 38919,
            "median": 45561,
            "max": 45573
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 227580,
          "size": 1010
        },
        "functions": {
          "latestRoundData()": {
            "calls": 50,
            "min": 4532,
            "mean": 4542,
            "median": 4549,
            "max": 4549
          },
          "setAnswer(bool,uint256)": {
            "calls": 380,
            "min": 26034,
            "mean": 27230,
            "median": 26034,
            "max": 45946
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 422133,
          "size": 1732
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 30,
            "min": 133299,
            "mean": 133299,
            "median": 133299,
            "max": 133299
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 45,
            "min": 133367,
            "mean": 133380,
            "median": 133391,
            "max": 133391
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 85510,
          "size": 297
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 330,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1024440,
          "size": 5517
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1280,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "allowance(address,address)": {
            "calls": 45,
            "min": 991,
            "mean": 2102,
            "median": 2991,
            "max": 2991
          },
          "approve(address,uint256)": {
            "calls": 115090,
            "min": 26032,
            "mean": 45540,
            "median": 46076,
            "max": 46316
          },
          "balanceOf(address)": {
            "calls": 447165,
            "min": 603,
            "mean": 2601,
            "median": 2603,
            "max": 2603
          },
          "decimals()": {
            "calls": 420101,
            "min": 372,
            "mean": 2367,
            "median": 2372,
            "max": 2372
          },
          "mint(address,uint256)": {
            "calls": 32320,
            "min": 36229,
            "mean": 62361,
            "median": 70441,
            "max": 70549
          },
          "name()": {
            "calls": 10400,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "nonces(address)": {
            "calls": 1280,
            "min": 2670,
            "mean": 2670,
            "median": 2670,
            "max": 2670
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 2560,
            "min": 76521,
            "mean": 76578,
            "median": 76567,
            "max": 76721
          },
          "symbol()": {
            "calls": 480,
            "min": 3049,
            "mean": 3049,
            "median": 3049,
            "max": 3049
          },
          "totalSupply()": {
            "calls": 57725,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "transfer(address,uint256)": {
            "calls": 35,
            "min": 46940,
            "mean": 51032,
            "median": 51716,
            "max": 51716
          },
          "transferOwnership(address)": {
            "calls": 155,
            "min": 28773,
            "mean": 28773,
            "median": 28773,
            "max": 28773
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 109021,
          "size": 283
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 2170,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 3349,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "percentDiv(uint256,uint256)": {
            "calls": 1295,
            "min": 219,
            "mean": 253,
            "median": 256,
            "max": 256
          },
          "percentMul(uint256,uint256)": {
            "calls": 1295,
            "min": 247,
            "mean": 275,
            "median": 287,
            "max": 287
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 230240,
          "size": 848
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 5,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "HALF_WAD()": {
            "calls": 2161,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "RAY()": {
            "calls": 5,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "WAD()": {
            "calls": 3219,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "WAD_RAY_RATIO()": {
            "calls": 8839,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "rayDiv(uint256,uint256)": {
            "calls": 20,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "rayMul(uint256,uint256)": {
            "calls": 15,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "rayToWad(uint256)": {
            "calls": 2575,
            "min": 231,
            "mean": 236,
            "median": 231,
            "max": 249
          },
          "wadDiv(uint256,uint256)": {
            "calls": 1300,
            "min": 426,
            "mean": 456,
            "median": 463,
            "max": 463
          },
          "wadMul(uint256,uint256)": {
            "calls": 1310,
            "min": 335,
            "mean": 363,
            "median": 375,
            "max": 375
          },
          "wadToRay(uint256)": {
            "calls": 2454,
            "min": 175,
            "mean": 195,
            "median": 196,
            "max": 196
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2349985,
          "size": 11547
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 5,
            "min": 728,
            "mean": 728,
            "median": 728,
            "max": 728
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 552,
            "mean": 552,
            "median": 552,
            "max": 552
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 56081,
            "mean": 56081,
            "median": 56081,
            "max": 56081
          },
          "name()": {
            "calls": 5,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "scaledBalanceOf(address)": {
            "calls": 20,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 5,
            "min": 67988,
            "mean": 67988,
            "median": 67988,
            "max": 67988
          },
          "symbol()": {
            "calls": 5,
            "min": 3298,
            "mean": 3298,
            "median": 3298,
            "max": 3298
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 5,
            "min": 63822,
            "mean": 63822,
            "median": 63822,
            "max": 63822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1681508,
          "size": 8295
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 5,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 55404,
            "mean": 55404,
            "median": 55404,
            "max": 55404
          },
          "name()": {
            "calls": 5,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "symbol()": {
            "calls": 5,
            "min": 3188,
            "mean": 3188,
            "median": 3188,
            "max": 3188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 413421,
          "size": 1594
        },
        "functions": {
          "REVISION()": {
            "calls": 30,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 30,
            "min": 156865,
            "mean": 156865,
            "median": 156865,
            "max": 156865
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 5195,
            "mean": 5195,
            "median": 5195,
            "max": 5195
          },
          "text()": {
            "calls": 30,
            "min": 2711,
            "mean": 2711,
            "median": 2711,
            "max": 2711
          },
          "upgradeTo(address)": {
            "calls": 5,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "value()": {
            "calls": 35,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "values(uint256)": {
            "calls": 60,
            "min": 4519,
            "mean": 4519,
            "median": 4519,
            "max": 4519
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 413853,
          "size": 1596
        },
        "functions": {
          "REVISION()": {
            "calls": 10,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 5,
            "min": 51465,
            "mean": 51465,
            "median": 51465,
            "max": 51465
          },
          "setValue(uint256)": {
            "calls": 10,
            "min": 5195,
            "mean": 5195,
            "median": 5195,
            "max": 5195
          },
          "text()": {
            "calls": 10,
            "min": 2711,
            "mean": 2711,
            "median": 2711,
            "max": 2711
          },
          "value()": {
            "calls": 20,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "values(uint256)": {
            "calls": 20,
            "min": 4519,
            "mean": 4519,
            "median": 4519,
            "max": 4519
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132032,
          "size": 291
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 44876,
            "mean": 44876,
            "median": 44876,
            "max": 44876
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 132032,
          "size": 291
        },
        "functions": {
          "initialize(address)": {
            "calls": 5,
            "min": 27776,
            "mean": 27776,
            "median": 27776,
            "max": 27776
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1372170,
          "size": 6407
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 8130,
            "min": 724,
            "mean": 724,
            "median": 724,
            "max": 724
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 100,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 4015,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "addAssetListingAdmin(address)": {
            "calls": 15,
            "min": 51063,
            "mean": 51063,
            "median": 51063,
            "max": 51063
          },
          "addBridge(address)": {
            "calls": 10,
            "min": 51041,
            "mean": 51041,
            "median": 51041,
            "max": 51041
          },
          "addEmergencyAdmin(address)": {
            "calls": 15,
            "min": 50623,
            "mean": 50623,
            "median": 50623,
            "max": 50623
          },
          "addFlashBorrower(address)": {
            "calls": 20,
            "min": 48746,
            "mean": 50500,
            "median": 51085,
            "max": 51085
          },
          "addPoolAdmin(address)": {
            "calls": 3965,
            "min": 50655,
            "mean": 50666,
            "median": 50667,
            "max": 50667
          },
          "addRiskAdmin(address)": {
            "calls": 70,
            "min": 50865,
            "mean": 50865,
            "median": 50865,
            "max": 50865
          },
          "grantRole(bytes32,address)": {
            "calls": 40,
            "min": 48954,
            "mean": 51050,
            "median": 51350,
            "max": 51350
          },
          "hasRole(bytes32,address)": {
            "calls": 95,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "isAssetListingAdmin(address)": {
            "calls": 19440,
            "min": 535,
            "mean": 2136,
            "median": 2535,
            "max": 2535
          },
          "isEmergencyAdmin(address)": {
            "calls": 21825,
            "min": 2645,
            "mean": 2645,
            "median": 2645,
            "max": 2645
          },
          "isFlashBorrower(address)": {
            "calls": 1365,
            "min": 3170,
            "mean": 3170,
            "median": 3170,
            "max": 3170
          },
          "isPoolAdmin(address)": {
            "calls": 283400,
            "min": 931,
            "mean": 2020,
            "median": 2931,
            "max": 2931
          },
          "isRiskAdmin(address)": {
            "calls": 205625,
            "min": 821,
            "mean": 1731,
            "median": 821,
            "max": 2821
          },
          "removeAssetListingAdmin(address)": {
            "calls": 10,
            "min": 29220,
            "mean": 29220,
            "median": 29220,
            "max": 29220
          },
          "removeBridge(address)": {
            "calls": 5,
            "min": 28648,
            "mean": 28648,
            "median": 28648,
            "max": 28648
          },
          "removeEmergencyAdmin(address)": {
            "calls": 5,
            "min": 29066,
            "mean": 29066,
            "median": 29066,
            "max": 29066
          },
          "removeFlashBorrower(address)": {
            "calls": 10,
            "min": 28824,
            "mean": 38609,
            "median": 38609,
            "max": 48394
          },
          "removePoolAdmin(address)": {
            "calls": 5,
            "min": 29285,
            "mean": 29285,
            "median": 29285,
            "max": 29285
          },
          "removeRiskAdmin(address)": {
            "calls": 5,
            "min": 28890,
            "mean": 28890,
            "median": 28890,
            "max": 28890
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 30,
            "min": 46613,
            "mean": 48325,
            "median": 48668,
            "max": 48668
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1582423,
          "size": 8012
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 5450,
            "min": 319,
            "mean": 845,
            "median": 319,
            "max": 2319
          },
          "getACLManager()": {
            "calls": 259285,
            "min": 531,
            "mean": 1535,
            "median": 2531,
            "max": 2531
          },
          "getAddress(bytes32)": {
            "calls": 93565,
            "min": 377,
            "mean": 1905,
            "median": 2377,
            "max": 2377
          },
          "getMarketId()": {
            "calls": 30,
            "min": 2873,
            "mean": 2873,
            "median": 2873,
            "max": 2873
          },
          "getPool()": {
            "calls": 13135,
            "min": 297,
            "mean": 1021,
            "median": 297,
            "max": 2297
          },
          "getPoolConfigurator()": {
            "calls": 993220,
            "min": 509,
            "mean": 824,
            "median": 509,
            "max": 2509
          },
          "getPoolDataProvider()": {
            "calls": 13200,
            "min": 729,
            "mean": 1560,
            "median": 729,
            "max": 2729
          },
          "getPriceOracle()": {
            "calls": 165425,
            "min": 812,
            "mean": 2667,
            "median": 2812,
            "max": 2812
          },
          "getPriceOracleSentinel()": {
            "calls": 79215,
            "min": 487,
            "mean": 2486,
            "median": 2487,
            "max": 2487
          },
          "owner()": {
            "calls": 4030,
            "min": 2538,
            "mean": 2538,
            "median": 2538,
            "max": 2538
          },
          "setACLAdmin(address)": {
            "calls": 340,
            "min": 24115,
            "mean": 47320,
            "median": 47967,
            "max": 47967
          },
          "setACLManager(address)": {
            "calls": 20,
            "min": 24269,
            "mean": 37883,
            "median": 39571,
            "max": 48121
          },
          "setAddress(bytes32,address)": {
            "calls": 9075,
            "min": 24699,
            "mean": 48522,
            "median": 48638,
            "max": 48914
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 25,
            "min": 24275,
            "mean": 181039,
            "median": 56442,
            "max": 399989
          },
          "setMarketId(string)": {
            "calls": 10,
            "min": 24634,
            "mean": 28465,
            "median": 28465,
            "max": 32296
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 20,
            "min": 24225,
            "mean": 233648,
            "median": 241748,
            "max": 426872
          },
          "setPoolDataProvider(address)": {
            "calls": 20,
            "min": 24203,
            "mean": 37817,
            "median": 39505,
            "max": 48055
          },
          "setPoolImpl(address)": {
            "calls": 20,
            "min": 24159,
            "mean": 220254,
            "median": 228358,
            "max": 400144
          },
          "setPriceOracle(address)": {
            "calls": 20,
            "min": 23936,
            "mean": 37391,
            "median": 39026,
            "max": 47576
          },
          "setPriceOracleSentinel(address)": {
            "calls": 30,
            "min": 24093,
            "mean": 41119,
            "median": 47945,
            "max": 47945
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 1982
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 20,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 30,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          },
          "getAddressesProvidersList()": {
            "calls": 25,
            "min": 2506,
            "mean": 4813,
            "median": 4813,
            "max": 7120
          },
          "owner()": {
            "calls": 4015,
            "min": 2359,
            "mean": 2359,
            "median": 2359,
            "max": 2359
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 30,
            "min": 24123,
            "mean": 103955,
            "median": 119922,
            "max": 119922
          },
          "unregisterAddressesProvider(address)": {
            "calls": 20,
            "min": 26014,
            "mean": 38822,
            "median": 39852,
            "max": 49570
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 716541,
          "size": 3270
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 210941,
            "mean": 284128,
            "median": 284098,
            "max": 289806
          },
          "getEmissionAdmin(address)": {
            "calls": 30,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "getRewardsController()": {
            "calls": 10,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "owner()": {
            "calls": 10,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 59330,
            "mean": 59330,
            "median": 59330,
            "max": 59330
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 43937,
            "mean": 43937,
            "median": 43937,
            "max": 43937
          },
          "setEmissionAdmin(address,address)": {
            "calls": 235,
            "min": 48659,
            "mean": 48666,
            "median": 48671,
            "max": 48671
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 60623,
            "mean": 60623,
            "median": 60623,
            "max": 60623
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 46814,
            "mean": 46814,
            "median": 46814,
            "max": 46814
          },
          "setRewardsController(address)": {
            "calls": 5,
            "min": 28754,
            "mean": 28754,
            "median": 28754,
            "max": 28754
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 44916,
            "mean": 44916,
            "median": 44916,
            "max": 44916
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 2421138,
          "size": 11056
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 4030,
            "min": 728,
            "mean": 728,
            "median": 728,
            "max": 728
          },
          "claimAllRewards(address[],address)": {
            "calls": 5,
            "min": 91344,
            "mean": 91344,
            "median": 91344,
            "max": 91344
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 5,
            "min": 93626,
            "mean": 93626,
            "median": 93626,
            "max": 93626
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 5,
            "min": 91221,
            "mean": 91221,
            "median": 91221,
            "max": 91221
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 3596,
            "min": 682,
            "mean": 72770,
            "median": 83391,
            "max": 118726
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 5,
            "min": 86736,
            "mean": 86736,
            "median": 86736,
            "max": 86736
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 5,
            "min": 84345,
            "mean": 84345,
            "median": 84345,
            "max": 84345
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 173758,
            "mean": 246958,
            "median": 246939,
            "max": 252623
          },
          "getAllUserRewards(address[],address)": {
            "calls": 5,
            "min": 29065,
            "mean": 29065,
            "median": 29065,
            "max": 29065
          },
          "getAssetDecimals(address)": {
            "calls": 10,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "getAssetIndex(address,address)": {
            "calls": 48635,
            "min": 3170,
            "mean": 10700,
            "median": 11045,
            "max": 16503
          },
          "getClaimer(address)": {
            "calls": 2570,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "getDistributionEnd(address,address)": {
            "calls": 5,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "getEmissionManager()": {
            "calls": 20,
            "min": 508,
            "mean": 508,
            "median": 508,
            "max": 508
          },
          "getRewardOracle(address)": {
            "calls": 5,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "getRewardsByAsset(address)": {
            "calls": 12105,
            "min": 3163,
            "mean": 5606,
            "median": 5692,
            "max": 8221
          },
          "getRewardsData(address,address)": {
            "calls": 15,
            "min": 2998,
            "mean": 2998,
            "median": 2998,
            "max": 2998
          },
          "getRewardsList()": {
            "calls": 150,
            "min": 5301,
            "mean": 5301,
            "median": 5301,
            "max": 5301
          },
          "getTransferStrategy(address)": {
            "calls": 5,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 5,
            "min": 7506,
            "mean": 7506,
            "median": 7506,
            "max": 7506
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 5,
            "min": 2861,
            "mean": 2861,
            "median": 2861,
            "max": 2861
          },
          "getUserRewards(address[],address,address)": {
            "calls": 1335,
            "min": 12161,
            "mean": 18016,
            "median": 17936,
            "max": 22978
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 271700,
            "min": 605,
            "mean": 2231,
            "median": 2605,
            "max": 37505
          },
          "initialize(address)": {
            "calls": 4015,
            "min": 26426,
            "mean": 45391,
            "median": 45415,
            "max": 45415
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 24708,
            "mean": 24708,
            "median": 24708,
            "max": 24708
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 9139,
            "mean": 9139,
            "median": 9139,
            "max": 9139
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 24251,
            "mean": 24251,
            "median": 24251,
            "max": 24251
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 12345,
            "mean": 12345,
            "median": 12345,
            "max": 12345
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 10257,
            "mean": 10257,
            "median": 10257,
            "max": 10257
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 285742,
          "size": 1373
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 5,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 479112,
          "size": 2642
        },
        "functions": {
          "dropApproval()": {
            "calls": 5,
            "min": 25848,
            "mean": 25848,
            "median": 25848,
            "max": 25848
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 5,
            "min": 52701,
            "mean": 52701,
            "median": 52701,
            "max": 52701
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "getRewardsAdmin()": {
            "calls": 5,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getStakeContract()": {
            "calls": 5,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getUnderlyingToken()": {
            "calls": 5,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "performTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 26927,
            "mean": 26927,
            "median": 26927,
            "max": 26927
          },
          "renewApproval()": {
            "calls": 5,
            "min": 28024,
            "mean": 28024,
            "median": 28024,
            "max": 28024
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1310611,
          "size": 5901
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 445,
            "min": 404,
            "mean": 404,
            "median": 404,
            "max": 404
          },
          "approve(address,address,uint256)": {
            "calls": 40,
            "min": 2934,
            "mean": 16554,
            "median": 16554,
            "max": 30174
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 19747,
            "mean": 19881,
            "median": 19881,
            "max": 20015
          },
          "cancelStream(uint256)": {
            "calls": 20,
            "min": 7618,
            "mean": 42201,
            "median": 35030,
            "max": 91127
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 85,
            "min": 2880,
            "mean": 122399,
            "median": 206007,
            "max": 206007
          },
          "getNextStreamId()": {
            "calls": 5,
            "min": 2278,
            "mean": 2278,
            "median": 2278,
            "max": 2278
          },
          "getStream(uint256)": {
            "calls": 30,
            "min": 2552,
            "mean": 7598,
            "median": 2552,
            "max": 17691
          },
          "grantRole(bytes32,address)": {
            "calls": 440,
            "min": 7148,
            "mean": 18253,
            "median": 18253,
            "max": 29359
          },
          "initialize(uint256,address)": {
            "calls": 4365,
            "min": 95869,
            "mean": 116872,
            "median": 117987,
            "max": 117987
          },
          "isFundsAdmin(address)": {
            "calls": 15,
            "min": 2884,
            "mean": 2884,
            "median": 2884,
            "max": 2884
          },
          "receive()": {
            "calls": 20,
            "min": 67,
            "mean": 67,
            "median": 67,
            "max": 67
          },
          "transfer(address,address,uint256)": {
            "calls": 40,
            "min": 2846,
            "mean": 19256,
            "median": 19256,
            "max": 35666
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 30,
            "min": 7646,
            "mean": 35402,
            "median": 20362,
            "max": 87348
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 457832,
          "size": 2153
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 1290,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "RECIPIENT_B()": {
            "calls": 1290,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 11565,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "receive()": {
            "calls": 1290,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 1295,
            "min": 23675,
            "mean": 90913,
            "median": 92593,
            "max": 92593
          },
          "splitRevenue(address[])": {
            "calls": 2590,
            "min": 24316,
            "mean": 132531,
            "median": 134999,
            "max": 134999
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 2420523,
          "size": 19207
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 4130,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 2677199,
          "size": 15866
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 4005,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 5971953,
          "size": 28651
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 3880,
            "min": 17852,
            "mean": 17852,
            "median": 17852,
            "max": 17852
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 6961277,
          "size": 30340
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 3880,
            "min": 9001,
            "mean": 9001,
            "median": 9001,
            "max": 9001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8142916,
          "size": 37570
        },
        "functions": {
          "getPoolReport()": {
            "calls": 405,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 944472,
          "size": 6030
        },
        "functions": {
          "getMiscReport()": {
            "calls": 4130,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 4795425,
          "size": 24424
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 165,
            "min": 6817,
            "mean": 6817,
            "median": 6817,
            "max": 6817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 6392306,
          "size": 31256
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 4130,
            "min": 17852,
            "mean": 17852,
            "median": 17852,
            "max": 17852
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 7917592,
          "size": 36530
        },
        "functions": {
          "getPoolReport()": {
            "calls": 3725,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5918141,
          "size": 30628
        },
        "functions": {
          "getInitialReport()": {
            "calls": 4130,
            "min": 6932,
            "mean": 6932,
            "median": 6932,
            "max": 6932
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 3880,
            "min": 649756,
            "mean": 652013,
            "median": 649756,
            "max": 770560
          },
          "setProtocolDataProvider(address)": {
            "calls": 4005,
            "min": 60045,
            "mean": 60056,
            "median": 60057,
            "max": 60057
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 4015,
            "min": 2399349,
            "mean": 2785239,
            "median": 2785195,
            "max": 2811586
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 4005,
            "min": 47975,
            "mean": 47979,
            "median": 47975,
            "max": 48047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4062003,
          "size": 20086
        },
        "functions": {
          "getTokensReport()": {
            "calls": 4005,
            "min": 4639,
            "mean": 4639,
            "median": 4639,
            "max": 4639
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 1563085,
          "size": 7206
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 1280,
            "min": 57483,
            "mean": 109600,
            "median": 57858,
            "max": 170139
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 3840,
            "min": 34496,
            "mean": 84477,
            "median": 58760,
            "max": 174754
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1280,
            "min": 57280,
            "mean": 107925,
            "median": 57655,
            "max": 169936
          },
          "collectAndUpdateRewards(address)": {
            "calls": 1285,
            "min": 47982,
            "mean": 86848,
            "median": 56755,
            "max": 129068
          },
          "getClaimableRewards(address,address)": {
            "calls": 17121,
            "min": 26554,
            "mean": 29606,
            "median": 29692,
            "max": 29697
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "getTotalClaimableRewards(address)": {
            "calls": 1285,
            "min": 28774,
            "mean": 34481,
            "median": 34549,
            "max": 34554
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 5576,
            "min": 2901,
            "mean": 2901,
            "median": 2901,
            "max": 2901
          },
          "isRegisteredRewardToken(address)": {
            "calls": 15,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "mint(address,uint256)": {
            "calls": 12284,
            "min": 53293,
            "mean": 96397,
            "median": 97030,
            "max": 100163
          },
          "mockInit(address)": {
            "calls": 85,
            "min": 79813,
            "mean": 79813,
            "median": 79813,
            "max": 79813
          },
          "refreshRewardTokens()": {
            "calls": 11535,
            "min": 116623,
            "mean": 116642,
            "median": 116643,
            "max": 116998
          },
          "rewardTokens()": {
            "calls": 5,
            "min": 5300,
            "mean": 5300,
            "median": 5300,
            "max": 5300
          },
          "transfer(address,uint256)": {
            "calls": 2560,
            "min": 59371,
            "mean": 75153,
            "median": 71595,
            "max": 102350
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1041576,
          "size": 5596
        },
        "functions": {
          "decimals()": {
            "calls": 11535,
            "min": 2416,
            "mean": 2416,
            "median": 2416,
            "max": 2416
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 4851,
            "min": 2567,
            "mean": 3626,
            "median": 4567,
            "max": 4567
          },
          "mint(address,uint256)": {
            "calls": 12284,
            "min": 51028,
            "mean": 67340,
            "median": 68409,
            "max": 68409
          },
          "scaledTotalSupply()": {
            "calls": 60145,
            "min": 2696,
            "mean": 2696,
            "median": 2696,
            "max": 2696
          },
          "transfer(address,uint256)": {
            "calls": 12284,
            "min": 29862,
            "mean": 45994,
            "median": 47056,
            "max": 47056
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2016957,
          "size": 9402
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2560,
            "min": 26100,
            "mean": 45685,
            "median": 46050,
            "max": 46144
          },
          "balanceOf(address)": {
            "calls": 12805,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "convertToAssets(uint256)": {
            "calls": 1280,
            "min": 16298,
            "mean": 16298,
            "median": 16298,
            "max": 16298
          },
          "convertToShares(uint256)": {
            "calls": 1280,
            "min": 16848,
            "mean": 16848,
            "median": 16848,
            "max": 16848
          },
          "decimals()": {
            "calls": 1280,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "depositATokens(uint256,address)": {
            "calls": 14085,
            "min": 60534,
            "mean": 196008,
            "median": 209200,
            "max": 214358
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 6400,
            "min": 76566,
            "mean": 243039,
            "median": 265784,
            "max": 348604
          },
          "latestAnswer()": {
            "calls": 1285,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "maxDeposit(address)": {
            "calls": 1295,
            "min": 37220,
            "mean": 51310,
            "median": 51475,
            "max": 51475
          },
          "maxMint(address)": {
            "calls": 5,
            "min": 37809,
            "mean": 37809,
            "median": 37809,
            "max": 37809
          },
          "maxRedeem(address)": {
            "calls": 3840,
            "min": 14908,
            "mean": 23774,
            "median": 28206,
            "max": 28210
          },
          "mint(uint256,address)": {
            "calls": 2560,
            "min": 68426,
            "mean": 187063,
            "median": 187024,
            "max": 305623
          },
          "mockInit(address)": {
            "calls": 140,
            "min": 133210,
            "mean": 133210,
            "median": 133210,
            "max": 133210
          },
          "previewDeposit(uint256)": {
            "calls": 3840,
            "min": 16979,
            "mean": 16979,
            "median": 16979,
            "max": 16979
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 16832,
            "mean": 16832,
            "median": 16832,
            "max": 16832
          },
          "previewRedeem(uint256)": {
            "calls": 2560,
            "min": 16540,
            "mean": 16540,
            "median": 16540,
            "max": 16540
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 16458,
            "mean": 16458,
            "median": 16458,
            "max": 16458
          },
          "redeem(uint256,address,address)": {
            "calls": 1280,
            "min": 169799,
            "mean": 170003,
            "median": 170052,
            "max": 170147
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 3840,
            "min": 40854,
            "mean": 119536,
            "median": 158450,
            "max": 159345
          },
          "totalAssets()": {
            "calls": 1290,
            "min": 18370,
            "mean": 18370,
            "median": 18370,
            "max": 18370
          },
          "withdraw(uint256,address,address)": {
            "calls": 2560,
            "min": 53017,
            "mean": 113203,
            "median": 113168,
            "max": 173319
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 833976,
          "size": 3920
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 219092,
            "mean": 219092,
            "median": 219092,
            "max": 219092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 825756,
          "size": 3819
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 166596,
            "mean": 166596,
            "median": 166596,
            "max": 166596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 825540,
          "size": 3818
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 44602,
            "mean": 44602,
            "median": 44602,
            "max": 44602
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 790313,
          "size": 3655
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 86050,
            "mean": 86050,
            "median": 86050,
            "max": 86050
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 826428,
          "size": 3822
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 825564,
          "size": 3818
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 32292,
            "mean": 32292,
            "median": 32292,
            "max": 32292
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 826428,
          "size": 3822
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 88938,
            "mean": 88938,
            "median": 88938,
            "max": 88938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 827292,
          "size": 3826
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 32578,
            "mean": 32578,
            "median": 32578,
            "max": 32578
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 917935,
          "size": 4403
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 380221,
            "mean": 380221,
            "median": 380221,
            "max": 380221
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 778943,
          "size": 3518
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 95712,
            "mean": 95712,
            "median": 95712,
            "max": 95712
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 805784,
          "size": 3642
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 53695,
            "mean": 53695,
            "median": 53695,
            "max": 53695
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 778739,
          "size": 3517
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 47221,
            "mean": 47221,
            "median": 47221,
            "max": 47221
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 883884,
          "size": 4151
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1535212,
            "mean": 1535212,
            "median": 1535212,
            "max": 1535212
          },
          "newListings()": {
            "calls": 20,
            "min": 2906,
            "mean": 2906,
            "median": 2906,
            "max": 2906
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 949815,
          "size": 4582
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1534838,
            "mean": 1534838,
            "median": 1534838,
            "max": 1534838
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 3655,
            "mean": 3655,
            "median": 3655,
            "max": 3655
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1027628,
          "size": 4950
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1677576,
            "mean": 1677576,
            "median": 1677576,
            "max": 1677576
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 3655,
            "mean": 3655,
            "median": 3655,
            "max": 3655
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 960184,
          "size": 4512
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1677949,
            "mean": 1677949,
            "median": 1677949,
            "max": 1677949
          },
          "newListings()": {
            "calls": 20,
            "min": 2906,
            "mean": 2906,
            "median": 2906,
            "max": 2906
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 837657,
          "size": 3937
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 64023,
            "mean": 64023,
            "median": 64023,
            "max": 64023
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 821895,
          "size": 3801
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 140541,
            "mean": 140541,
            "median": 140541,
            "max": 140541
          },
          "rateStrategiesUpdates()": {
            "calls": 20,
            "min": 1664,
            "mean": 1664,
            "median": 1664,
            "max": 1664
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1683943,
          "size": 8307
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 14090,
            "min": 663,
            "mean": 663,
            "median": 663,
            "max": 663
          },
          "POOL()": {
            "calls": 14090,
            "min": 442,
            "mean": 442,
            "median": 442,
            "max": 442
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 19210,
            "min": 2724,
            "mean": 2724,
            "median": 2724,
            "max": 2724
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 924,
            "mean": 924,
            "median": 924,
            "max": 924
          },
          "approve(address,uint256)": {
            "calls": 5,
            "min": 21562,
            "mean": 21562,
            "median": 21562,
            "max": 21562
          },
          "approveDelegation(address,uint256)": {
            "calls": 1280,
            "min": 27350,
            "mean": 27350,
            "median": 27350,
            "max": 27350
          },
          "burn(address,uint256,uint256)": {
            "calls": 2560,
            "min": 28251,
            "mean": 28251,
            "median": 28251,
            "max": 28251
          },
          "decimals()": {
            "calls": 14090,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21936,
            "mean": 21936,
            "median": 21936,
            "max": 21936
          },
          "getIncentivesController()": {
            "calls": 14090,
            "min": 464,
            "mean": 464,
            "median": 464,
            "max": 464
          },
          "increaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21738,
            "mean": 21738,
            "median": 21738,
            "max": 21738
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 7680,
            "min": 46289,
            "mean": 181641,
            "median": 208176,
            "max": 293809
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 5120,
            "min": 62173,
            "mean": 64587,
            "median": 62173,
            "max": 71831
          },
          "name()": {
            "calls": 14090,
            "min": 2786,
            "mean": 3827,
            "median": 2795,
            "max": 9404
          },
          "scaledBalanceOf(address)": {
            "calls": 5120,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "symbol()": {
            "calls": 14090,
            "min": 3179,
            "mean": 4219,
            "median": 3188,
            "max": 9770
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 21958,
            "mean": 21958,
            "median": 21958,
            "max": 21958
          },
          "transferFrom(address,address,uint256)": {
            "calls": 5,
            "min": 21867,
            "mean": 21867,
            "median": 21867,
            "max": 21867
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 75513659,
          "size": 376200
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 15,
            "min": 76130,
            "mean": 76325,
            "median": 76418,
            "max": 76428
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 10,
            "min": 78021,
            "mean": 78021,
            "median": 78021,
            "max": 78021
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 5,
            "min": 156792,
            "mean": 156792,
            "median": 156792,
            "max": 156792
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 110,
            "min": 434458,
            "mean": 793821,
            "median": 853876,
            "max": 856746
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 5,
            "min": 730325,
            "mean": 730325,
            "median": 730325,
            "max": 730325
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 10,
            "min": 60364,
            "mean": 76291,
            "median": 76291,
            "max": 92219
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 35,
            "min": 63519,
            "mean": 75202,
            "median": 77189,
            "max": 77199
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 10,
            "min": 477844,
            "mean": 726796,
            "median": 726796,
            "max": 975748
          },
          "mintToTreasury(uint8)": {
            "calls": 15,
            "min": 561390,
            "mean": 582015,
            "median": 581890,
            "max": 602767
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 25,
            "min": 462209,
            "mean": 598295,
            "median": 643929,
            "max": 709348
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 10,
            "min": 649103,
            "mean": 687572,
            "median": 687572,
            "max": 726042
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 162464,
            "mean": 162464,
            "median": 162464,
            "max": 162464
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 130374,
            "mean": 139894,
            "median": 144655,
            "max": 144655
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 25,
            "min": 591214,
            "mean": 627855,
            "median": 619396,
            "max": 667743
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 5,
            "min": 646193,
            "mean": 646193,
            "median": 646193,
            "max": 646193
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 20,
            "min": 575046,
            "mean": 586714,
            "median": 575046,
            "max": 621719
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 25,
            "min": 36630,
            "mean": 36865,
            "median": 37002,
            "max": 37014
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 5,
            "min": 594872,
            "mean": 594872,
            "median": 594872,
            "max": 594872
          },
          "setPoolPause(bool,uint40)": {
            "calls": 5,
            "min": 624398,
            "mean": 624398,
            "median": 624398,
            "max": 624398
          },
          "setReserveActive(bool,uint8)": {
            "calls": 15,
            "min": 621946,
            "mean": 678732,
            "median": 627551,
            "max": 786699
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 30,
            "min": 594556,
            "mean": 631694,
            "median": 626619,
            "max": 687076
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 15,
            "min": 592689,
            "mean": 646159,
            "median": 648449,
            "max": 697341
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 5,
            "min": 627308,
            "mean": 627308,
            "median": 627308,
            "max": 627308
          },
          "setUserEMode(uint8)": {
            "calls": 25,
            "min": 480012,
            "mean": 644133,
            "median": 709257,
            "max": 709257
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 15,
            "min": 431676,
            "mean": 566667,
            "median": 621397,
            "max": 646929
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 115,
            "min": 701831,
            "mean": 1158036,
            "median": 1297598,
            "max": 1306319
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 514103,
            "mean": 514103,
            "median": 514103,
            "max": 514103
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 5,
            "min": 706237,
            "mean": 706237,
            "median": 706237,
            "max": 706237
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 755886,
            "mean": 755886,
            "median": 755886,
            "max": 755886
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 130390,
          "size": 413
        },
        "functions": {
          "latestAnswer()": {
            "calls": 1465,
            "min": 299,
            "mean": 1097,
            "median": 299,
            "max": 2299
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 3418855,
          "size": 13565
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 3840,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "WBTC_ADDRESS()": {
            "calls": 3840,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "execute()": {
            "calls": 3855,
            "min": 4355483,
            "mean": 4356203,
            "median": 4355483,
            "max": 4365581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 80019,
          "size": 147
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 525,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 259
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 120311,
          "size": 336
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 25,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3233917,
          "size": 15634
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 1230,
            "min": 509,
            "mean": 509,
            "median": 509,
            "max": 509
          },
          "approve(address,uint256)": {
            "calls": 100,
            "min": 24371,
            "mean": 24371,
            "median": 24371,
            "max": 24371
          },
          "balanceOf(address)": {
            "calls": 1265,
            "min": 18956,
            "mean": 19139,
            "median": 19197,
            "max": 19197
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 50,
            "min": 47694,
            "mean": 74955,
            "median": 71083,
            "max": 88183
          },
          "delegate(address)": {
            "calls": 130,
            "min": 7153,
            "mean": 68441,
            "median": 71665,
            "max": 91565
          },
          "delegateByType(address,uint8)": {
            "calls": 185,
            "min": 28043,
            "mean": 47310,
            "median": 50052,
            "max": 62063
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 150,
            "min": 5820,
            "mean": 6998,
            "median": 8024,
            "max": 8031
          },
          "getDelegates(address)": {
            "calls": 620,
            "min": 5558,
            "mean": 8314,
            "median": 9969,
            "max": 9969
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 2590,
            "min": 6327,
            "mean": 6513,
            "median": 6515,
            "max": 6521
          },
          "getPowersCurrent(address)": {
            "calls": 45,
            "min": 6807,
            "mean": 7100,
            "median": 7184,
            "max": 7184
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 240,
            "min": 56191,
            "mean": 56191,
            "median": 56191,
            "max": 56191
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 235,
            "min": 31608,
            "mean": 56156,
            "median": 48708,
            "max": 89197
          },
          "scaledBalanceOf(address)": {
            "calls": 1325,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply()": {
            "calls": 25,
            "min": 7418,
            "mean": 7418,
            "median": 7418,
            "max": 7418
          },
          "transfer(address,uint256)": {
            "calls": 80,
            "min": 86183,
            "mean": 122091,
            "median": 123928,
            "max": 141916
          },
          "transferFrom(address,address,uint256)": {
            "calls": 100,
            "min": 93029,
            "mean": 138140,
            "median": 134846,
            "max": 194101
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 75,
            "min": 40498,
            "mean": 75172,
            "median": 73676,
            "max": 121476
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 25,
            "min": 33446,
            "mean": 33446,
            "median": 33446,
            "max": 33446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 270528,
          "size": 1381
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 10,
            "min": 1372,
            "mean": 1372,
            "median": 1372,
            "max": 1372
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 53320,
          "size": 296
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 105,
            "min": 565,
            "mean": 1874,
            "median": 3065,
            "max": 3065
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 823931,
          "size": 3593
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 2810,
            "mean": 2810,
            "median": 2810,
            "max": 2810
          },
          "balanceOf(address)": {
            "calls": 42535,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "initialize(string,string,uint8)": {
            "calls": 590,
            "min": 157609,
            "mean": 157609,
            "median": 157609,
            "max": 157609
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1245
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 761255,
          "size": 3607
        },
        "functions": {
          "fallback()": {
            "calls": 70835,
            "min": 5175,
            "mean": 27079,
            "median": 7333,
            "max": 2690044
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 530447,
          "size": 2330
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 100,
            "min": 799,
            "mean": 2399,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 17765,
            "min": 28991,
            "mean": 44952,
            "median": 46199,
            "max": 46463
          },
          "balanceOf(address)": {
            "calls": 98085,
            "min": 538,
            "mean": 2534,
            "median": 2538,
            "max": 2538
          },
          "decimals()": {
            "calls": 12190,
            "min": 312,
            "mean": 2270,
            "median": 2312,
            "max": 2312
          },
          "deposit()": {
            "calls": 255,
            "min": 44976,
            "mean": 44976,
            "median": 44976,
            "max": 44976
          },
          "name()": {
            "calls": 80,
            "min": 3077,
            "mean": 3077,
            "median": 3077,
            "max": 3077
          },
          "symbol()": {
            "calls": 230,
            "min": 3121,
            "mean": 3121,
            "median": 3121,
            "max": 3121
          },
          "transfer(address,uint256)": {
            "calls": 255,
            "min": 47047,
            "mean": 47047,
            "median": 47047,
            "max": 47047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1878917,
          "size": 9298
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 326177,
            "mean": 416976,
            "median": 448888,
            "max": 475863
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 2003830,
          "size": 9963
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "rescueTokens(address)": {
            "calls": 5,
            "min": 36113,
            "mean": 36113,
            "median": 36113,
            "max": 36113
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 20,
            "min": 357734,
            "mean": 459416,
            "median": 483264,
            "max": 513403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1561933,
          "size": 7750
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 326114,
            "mean": 355983,
            "median": 350586,
            "max": 391251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3530
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 5,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "createStataTokens(address[])": {
            "calls": 110,
            "min": 2662624,
            "mean": 2662624,
            "median": 2662624,
            "max": 2662624
          },
          "getStataToken(address)": {
            "calls": 110,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "initialize()": {
            "calls": 3985,
            "min": 23515,
            "mean": 24075,
            "median": 24089,
            "max": 24089
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 19639
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 15,
            "min": 6513,
            "mean": 6513,
            "median": 6513,
            "max": 6513
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 5,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "aToken()": {
            "calls": 5,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 2805,
            "mean": 2805,
            "median": 2805,
            "max": 2805
          },
          "asset()": {
            "calls": 5,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "balanceOf(address)": {
            "calls": 5,
            "min": 2650,
            "mean": 2650,
            "median": 2650,
            "max": 2650
          },
          "canPause(address)": {
            "calls": 1285,
            "min": 11507,
            "mean": 11507,
            "median": 11507,
            "max": 11507
          },
          "claimRewards(address,address[])": {
            "calls": 5,
            "min": 332132,
            "mean": 332132,
            "median": 332132,
            "max": 332132
          },
          "claimRewardsToSelf(address[])": {
            "calls": 5,
            "min": 3160,
            "mean": 3160,
            "median": 3160,
            "max": 3160
          },
          "decimals()": {
            "calls": 5,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "deposit(uint256,address)": {
            "calls": 10,
            "min": 258033,
            "mean": 267756,
            "median": 267756,
            "max": 277480
          },
          "depositATokens(uint256,address)": {
            "calls": 1310,
            "min": 155521,
            "mean": 156476,
            "median": 155521,
            "max": 197233
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1295,
            "min": 5919,
            "mean": 121489,
            "median": 122157,
            "max": 143966
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "initialize(address,string,string)": {
            "calls": 335,
            "min": 25518,
            "mean": 230315,
            "median": 231125,
            "max": 238125
          },
          "maxRedeem(address)": {
            "calls": 10,
            "min": 26566,
            "mean": 26566,
            "median": 26566,
            "max": 26566
          },
          "maxWithdraw(address)": {
            "calls": 5,
            "min": 29319,
            "mean": 29319,
            "median": 29319,
            "max": 29319
          },
          "mint(uint256,address)": {
            "calls": 5,
            "min": 258126,
            "mean": 258126,
            "median": 258126,
            "max": 258126
          },
          "name()": {
            "calls": 5,
            "min": 3269,
            "mean": 3269,
            "median": 3269,
            "max": 3269
          },
          "nonces(address)": {
            "calls": 15,
            "min": 2776,
            "mean": 2776,
            "median": 2776,
            "max": 2776
          },
          "paused()": {
            "calls": 10,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 777,
            "mean": 30644,
            "median": 33447,
            "max": 57709
          },
          "previewDeposit(uint256)": {
            "calls": 5,
            "min": 16046,
            "mean": 16046,
            "median": 16046,
            "max": 16046
          },
          "redeem(uint256,address,address)": {
            "calls": 10,
            "min": 31858,
            "mean": 105619,
            "median": 105619,
            "max": 179380
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 5,
            "min": 130290,
            "mean": 130290,
            "median": 130290,
            "max": 130290
          },
          "refreshRewardTokens()": {
            "calls": 5,
            "min": 156130,
            "mean": 156130,
            "median": 156130,
            "max": 156130
          },
          "setPaused(bool)": {
            "calls": 1315,
            "min": 11489,
            "mean": 12111,
            "median": 11489,
            "max": 34887
          },
          "symbol()": {
            "calls": 5,
            "min": 3281,
            "mean": 3281,
            "median": 3281,
            "max": 3281
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 2759,
            "mean": 2759,
            "median": 2759,
            "max": 2759
          },
          "withdraw(uint256,address,address)": {
            "calls": 5,
            "min": 34612,
            "mean": 34612,
            "median": 34612,
            "max": 34612
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 9880
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 45,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 15,
            "min": 132782,
            "mean": 199991,
            "median": 132782,
            "max": 334410
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 1720106,
            "mean": 1720106,
            "median": 1720106,
            "max": 1720106
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 3865,
            "min": 1719548,
            "mean": 4945851,
            "median": 4954089,
            "max": 4955937
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 5,
            "min": 180574,
            "mean": 180574,
            "median": 180574,
            "max": 180574
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 18820,
            "mean": 73576,
            "median": 73576,
            "max": 128333
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 5,
            "min": 58161,
            "mean": 58161,
            "median": 58161,
            "max": 58161
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 25,
            "min": 7617,
            "mean": 28859,
            "median": 7656,
            "max": 60685
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 20,
            "min": 20356,
            "mean": 33769,
            "median": 23635,
            "max": 67452
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 5,
            "min": 38010,
            "mean": 38010,
            "median": 38010,
            "max": 38010
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 5,
            "min": 110458,
            "mean": 110458,
            "median": 110458,
            "max": 110458
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7910
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 13010,
            "min": 3553,
            "mean": 6728,
            "median": 5553,
            "max": 30085
          },
          "getDebtCeiling(address)": {
            "calls": 25,
            "min": 11351,
            "mean": 11351,
            "median": 11351,
            "max": 11351
          },
          "getDebtCeilingDecimals()": {
            "calls": 5,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "getFlashLoanEnabled(address)": {
            "calls": 2565,
            "min": 11346,
            "mean": 11346,
            "median": 11346,
            "max": 11346
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 40,
            "min": 8811,
            "mean": 8811,
            "median": 8811,
            "max": 8811
          },
          "getIsVirtualAccActive(address)": {
            "calls": 44771,
            "min": 463,
            "mean": 463,
            "median": 463,
            "max": 463
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 50,
            "min": 11373,
            "mean": 11373,
            "median": 11373,
            "max": 11373
          },
          "getPaused(address)": {
            "calls": 46106,
            "min": 11440,
            "mean": 11461,
            "median": 11462,
            "max": 11462
          },
          "getReserveCaps(address)": {
            "calls": 240,
            "min": 11383,
            "mean": 11383,
            "median": 11383,
            "max": 11383
          },
          "getReserveConfigurationData(address)": {
            "calls": 52751,
            "min": 11797,
            "mean": 11818,
            "median": 11819,
            "max": 11819
          },
          "getReserveTokensAddresses(address)": {
            "calls": 45356,
            "min": 14934,
            "mean": 14934,
            "median": 14934,
            "max": 14979
          },
          "getSiloedBorrowing(address)": {
            "calls": 10,
            "min": 11399,
            "mean": 11399,
            "median": 11399,
            "max": 11399
          },
          "getTotalDebt(address)": {
            "calls": 20,
            "min": 6109,
            "mean": 23641,
            "median": 29486,
            "max": 29486
          },
          "getUnbackedMintCap(address)": {
            "calls": 5,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "getUserReserveData(address,address)": {
            "calls": 1340,
            "min": 66386,
            "mean": 66840,
            "median": 66846,
            "max": 70414
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 5,
            "min": 11144,
            "mean": 11144,
            "median": 11144,
            "max": 11144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3812
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 15,
            "min": 35195,
            "mean": 35195,
            "median": 35195,
            "max": 35195
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 5,
            "min": 58427,
            "mean": 58427,
            "median": 58427,
            "max": 58427
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 35079,
            "mean": 35079,
            "median": 35079,
            "max": 35079
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 35106,
            "mean": 35106,
            "median": 35106,
            "max": 35106
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 35565,
            "mean": 35565,
            "median": 35565,
            "max": 35565
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 5,
            "min": 35021,
            "mean": 35021,
            "median": 35021,
            "max": 35021
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 35,
            "min": 35124,
            "mean": 35124,
            "median": 35124,
            "max": 35124
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 35480,
            "mean": 35480,
            "median": 35480,
            "max": 35480
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 10,
            "min": 34965,
            "mean": 34998,
            "median": 34998,
            "max": 35032
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1677119,
          "size": 7853
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 10,
            "min": 172474,
            "mean": 172750,
            "median": 172750,
            "max": 173026
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 9050,
            "min": 142738,
            "mean": 171784,
            "median": 173508,
            "max": 213618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 6326
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 10,
            "min": 235164,
            "mean": 238263,
            "median": 238263,
            "max": 241362
          },
          "depositETH(address,address,uint16)": {
            "calls": 50,
            "min": 194700,
            "mean": 229032,
            "median": 232847,
            "max": 232847
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 5,
            "min": 33756,
            "mean": 33756,
            "median": 33756,
            "max": 33756
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 52882,
            "mean": 52882,
            "median": 52882,
            "max": 52882
          },
          "fallback()": {
            "calls": 10,
            "min": 21596,
            "mean": 21596,
            "median": 21596,
            "max": 21596
          },
          "getWETHAddress()": {
            "calls": 5,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "owner()": {
            "calls": 10,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "receive()": {
            "calls": 5,
            "min": 21206,
            "mean": 21206,
            "median": 21206,
            "max": 21206
          },
          "repayETH(address,uint256,address)": {
            "calls": 30,
            "min": 150472,
            "mean": 157180,
            "median": 153710,
            "max": 170609
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 15,
            "min": 216854,
            "mean": 227854,
            "median": 221441,
            "max": 245269
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 233262,
            "mean": 251417,
            "median": 257632,
            "max": 263358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2301071,
          "size": 11182
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1300,
            "min": 2455,
            "mean": 2459,
            "median": 2455,
            "max": 3539
          },
          "POOL()": {
            "calls": 535,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 58981,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "REWARDS_CONTROLLER()": {
            "calls": 5,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 45221,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "allowance(address,address)": {
            "calls": 130,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "approve(address,uint256)": {
            "calls": 15540,
            "min": 24585,
            "mean": 24585,
            "median": 24585,
            "max": 24585
          },
          "balanceOf(address)": {
            "calls": 90471,
            "min": 2743,
            "mean": 11540,
            "median": 17743,
            "max": 18203
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 32415,
            "min": 591,
            "mean": 40556,
            "median": 35049,
            "max": 61149
          },
          "decimals()": {
            "calls": 48721,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 7704,
            "mean": 7704,
            "median": 7704,
            "max": 7704
          },
          "getIncentivesController()": {
            "calls": 44761,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getPreviousIndex(address)": {
            "calls": 80,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 115,
            "min": 825,
            "mean": 4564,
            "median": 4825,
            "max": 4825
          },
          "increaseAllowance(address,uint256)": {
            "calls": 55,
            "min": 7771,
            "mean": 21761,
            "median": 24871,
            "max": 24871
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 222731,
            "min": 123674,
            "mean": 206872,
            "median": 208912,
            "max": 298803
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 91620,
            "min": 572,
            "mean": 58595,
            "median": 62135,
            "max": 69886
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 50,
            "min": 351,
            "mean": 41149,
            "median": 44783,
            "max": 61883
          },
          "name()": {
            "calls": 45641,
            "min": 2997,
            "mean": 5329,
            "median": 3176,
            "max": 9554
          },
          "nonces(address)": {
            "calls": 1320,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3925,
            "min": 709,
            "mean": 24207,
            "median": 9265,
            "max": 53570
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 15,
            "min": 11555,
            "mean": 23984,
            "median": 13708,
            "max": 46689
          },
          "scaledBalanceOf(address)": {
            "calls": 131036,
            "min": 665,
            "mean": 2414,
            "median": 2665,
            "max": 2665
          },
          "scaledTotalSupply()": {
            "calls": 3140,
            "min": 373,
            "mean": 1580,
            "median": 2373,
            "max": 2373
          },
          "symbol()": {
            "calls": 45546,
            "min": 3062,
            "mean": 5402,
            "median": 3653,
            "max": 9619
          },
          "totalSupply()": {
            "calls": 49950,
            "min": 406,
            "mean": 5527,
            "median": 6478,
            "max": 17938
          },
          "transfer(address,uint256)": {
            "calls": 5280,
            "min": 535,
            "mean": 101056,
            "median": 106157,
            "max": 175585
          },
          "transferFrom(address,address,uint256)": {
            "calls": 19395,
            "min": 2974,
            "mean": 92102,
            "median": 109568,
            "max": 145496
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 14250,
            "min": 592,
            "mean": 29780,
            "median": 34397,
            "max": 41466
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 36745,
            "min": 440,
            "mean": 27935,
            "median": 33520,
            "max": 33559
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 22463
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 980,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 345,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 1100,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "approvePositionManager(address,bool)": {
            "calls": 2610,
            "min": 2756,
            "mean": 24543,
            "median": 24618,
            "max": 24618
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 1330,
            "min": 186092,
            "mean": 192940,
            "median": 191692,
            "max": 235669
          },
          "borrow(bytes32)": {
            "calls": 15,
            "min": 191727,
            "mean": 191727,
            "median": 191727,
            "max": 191727
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 2595,
            "min": 5991,
            "mean": 28113,
            "median": 49647,
            "max": 49647
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 10,
            "min": 23735,
            "mean": 23735,
            "median": 23735,
            "max": 23735
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 2630,
            "min": 6629,
            "mean": 6629,
            "median": 6629,
            "max": 6629
          },
          "dropReserve(address)": {
            "calls": 1285,
            "min": 5825,
            "mean": 6109,
            "median": 5825,
            "max": 79050
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 369,
            "mean": 369,
            "median": 369,
            "max": 369
          },
          "getConfiguration(address)": {
            "calls": 8330,
            "min": 723,
            "mean": 741,
            "median": 723,
            "max": 2723
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 10,
            "min": 2666,
            "mean": 2666,
            "median": 2666,
            "max": 2666
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 2630,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 1280,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "getReserveAToken(address)": {
            "calls": 860,
            "min": 654,
            "mean": 700,
            "median": 654,
            "max": 2654
          },
          "getReserveData(address)": {
            "calls": 6170,
            "min": 6072,
            "mean": 21104,
            "median": 22072,
            "max": 24572
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 1365,
            "min": 867,
            "mean": 897,
            "median": 867,
            "max": 4867
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20,
            "min": 912,
            "mean": 3723,
            "median": 4223,
            "max": 5535
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 20,
            "min": 2699,
            "mean": 2699,
            "median": 2699,
            "max": 2699
          },
          "getReservesList()": {
            "calls": 10,
            "min": 10982,
            "mean": 10982,
            "median": 10982,
            "max": 10982
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "getUserAccountData(address)": {
            "calls": 5,
            "min": 80899,
            "mean": 80899,
            "median": 80899,
            "max": 80899
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 20,
            "min": 2680,
            "mean": 2680,
            "median": 2680,
            "max": 2680
          },
          "initReserve(address,address,address)": {
            "calls": 3385,
            "min": 5993,
            "mean": 38793,
            "median": 5993,
            "max": 144632
          },
          "initialize(address)": {
            "calls": 345,
            "min": 45373,
            "mean": 45373,
            "median": 45373,
            "max": 45373
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 2815,
            "mean": 2815,
            "median": 2815,
            "max": 2815
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 5,
            "min": 361278,
            "mean": 361278,
            "median": 361278,
            "max": 361278
          },
          "mintToTreasury(address[])": {
            "calls": 10,
            "min": 72784,
            "mean": 74145,
            "median": 74145,
            "max": 75506
          },
          "multicall(bytes[])": {
            "calls": 1295,
            "min": 217089,
            "mean": 217089,
            "median": 217089,
            "max": 217089
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 7416,
            "mean": 7416,
            "median": 7416,
            "max": 7416
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 10,
            "min": 124170,
            "mean": 124170,
            "median": 124170,
            "max": 124170
          },
          "repay(bytes32)": {
            "calls": 5,
            "min": 116050,
            "mean": 116050,
            "median": 116050,
            "max": 116050
          },
          "repayWithATokens(bytes32)": {
            "calls": 5,
            "min": 125992,
            "mean": 125992,
            "median": 125992,
            "max": 125992
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 162856,
            "mean": 169501,
            "median": 169291,
            "max": 171088
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 48002,
            "mean": 48002,
            "median": 48002,
            "max": 48002
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2115,
            "min": 4197,
            "mean": 5251,
            "median": 5868,
            "max": 15197
          },
          "setConfiguration(address,(uint256))": {
            "calls": 10395,
            "min": 1904,
            "mean": 4219,
            "median": 1904,
            "max": 24059
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3840,
            "min": 5928,
            "mean": 10992,
            "median": 10347,
            "max": 16798
          },
          "setUserEMode(uint8)": {
            "calls": 35,
            "min": 18799,
            "mean": 39708,
            "median": 38529,
            "max": 83617
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1285,
            "min": 2842,
            "mean": 2990,
            "median": 2842,
            "max": 40936
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1380,
            "min": 10480,
            "mean": 11901,
            "median": 10480,
            "max": 58619
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 5,
            "min": 26682,
            "mean": 26682,
            "median": 26682,
            "max": 26682
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1310,
            "min": 2926,
            "mean": 3680,
            "median": 2926,
            "max": 56434
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 2715,
            "min": 150008,
            "mean": 200806,
            "median": 201308,
            "max": 201308
          },
          "supply(bytes32)": {
            "calls": 35,
            "min": 203491,
            "mean": 203491,
            "median": 203491,
            "max": 203491
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 252980,
            "mean": 252980,
            "median": 252980,
            "max": 252980
          },
          "syncIndexesState(address)": {
            "calls": 825,
            "min": 7757,
            "mean": 14390,
            "median": 7757,
            "max": 27657
          },
          "syncRatesState(address)": {
            "calls": 825,
            "min": 14052,
            "mean": 14052,
            "median": 14052,
            "max": 14052
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1625,
            "min": 5809,
            "mean": 9129,
            "median": 5809,
            "max": 21449
          },
          "withdraw(bytes32)": {
            "calls": 10,
            "min": 117208,
            "mean": 119633,
            "median": 119633,
            "max": 122058
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3656968,
          "size": 16598
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 8960,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 23135,
            "min": 11342,
            "mean": 23521,
            "median": 11551,
            "max": 84039
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 2570,
            "min": 16751,
            "mean": 27943,
            "median": 29645,
            "max": 39123
          },
          "dropReserve(address)": {
            "calls": 1305,
            "min": 13570,
            "mean": 14411,
            "median": 13570,
            "max": 101270
          },
          "getConfiguratorLogic()": {
            "calls": 5,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "getPendingLtv(address)": {
            "calls": 3855,
            "min": 2640,
            "mean": 2640,
            "median": 2640,
            "max": 2640
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 14120,
            "min": 16955,
            "mean": 23591142,
            "median": 1580661,
            "max": 203675084
          },
          "initialize(address)": {
            "calls": 4025,
            "min": 72440,
            "mean": 90295,
            "median": 90340,
            "max": 90340
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 9060,
            "min": 18016,
            "mean": 81822,
            "median": 81916,
            "max": 94887
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 19485,
            "min": 16986,
            "mean": 68568,
            "median": 77852,
            "max": 77897
          },
          "setBorrowCap(address,uint256)": {
            "calls": 12920,
            "min": 10599,
            "mean": 11385,
            "median": 10599,
            "max": 43554
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 11675,
            "min": 10318,
            "mean": 10586,
            "median": 10318,
            "max": 43318
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 12960,
            "min": 16770,
            "mean": 33080,
            "median": 32328,
            "max": 83516
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 16915,
            "min": 16790,
            "mean": 76083,
            "median": 81102,
            "max": 81191
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 11630,
            "min": 10616,
            "mean": 10756,
            "median": 10616,
            "max": 43571
          },
          "setPoolPause(bool)": {
            "calls": 2575,
            "min": 16739,
            "mean": 17150,
            "median": 16739,
            "max": 87493
          },
          "setPoolPause(bool,uint40)": {
            "calls": 2565,
            "min": 16850,
            "mean": 59928,
            "median": 55454,
            "max": 104578
          },
          "setReserveActive(address,bool)": {
            "calls": 1350,
            "min": 13702,
            "mean": 16336,
            "median": 13702,
            "max": 80102
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 16740,
            "min": 10405,
            "mean": 18044,
            "median": 10560,
            "max": 41214
          },
          "setReserveFactor(address,uint256)": {
            "calls": 12880,
            "min": 16815,
            "mean": 38820,
            "median": 34543,
            "max": 105316
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 14155,
            "min": 10404,
            "mean": 16032,
            "median": 10404,
            "max": 43368
          },
          "setReserveFreeze(address,bool)": {
            "calls": 3910,
            "min": 20040,
            "mean": 47423,
            "median": 52229,
            "max": 72428
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 1500,
            "min": 17071,
            "mean": 28300,
            "median": 17071,
            "max": 93636
          },
          "setReservePause(address,bool)": {
            "calls": 2565,
            "min": 16861,
            "mean": 29692,
            "median": 42475,
            "max": 42475
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 15420,
            "min": 13876,
            "mean": 38254,
            "median": 46191,
            "max": 48501
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 11615,
            "min": 10775,
            "mean": 10923,
            "median": 10775,
            "max": 70071
          },
          "setSupplyCap(address,uint256)": {
            "calls": 14235,
            "min": 10645,
            "mean": 14941,
            "median": 10645,
            "max": 43600
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 1525,
            "min": 13666,
            "mean": 28904,
            "median": 13666,
            "max": 108517
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 5305,
            "min": 13614,
            "mean": 26128,
            "median": 30128,
            "max": 35028
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 1285,
            "min": 13686,
            "mean": 14052,
            "median": 13686,
            "max": 107954
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4537988,
          "size": 21163
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 32135,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 3755,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 10,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 2570,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 233451,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "approvePositionManager(address,bool)": {
            "calls": 2620,
            "min": 2778,
            "mean": 24565,
            "median": 24640,
            "max": 24640
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 36670,
            "min": 19661,
            "mean": 212207,
            "median": 220335,
            "max": 292660
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 15570,
            "min": 5902,
            "mean": 45916,
            "median": 49558,
            "max": 49558
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 9050,
            "min": 1835,
            "mean": 23698,
            "median": 23735,
            "max": 23735
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 15575,
            "min": 1829,
            "mean": 6621,
            "median": 6629,
            "max": 6629
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 50075,
            "min": 31615,
            "mean": 192108,
            "median": 201307,
            "max": 201307
          },
          "dropReserve(address)": {
            "calls": 1310,
            "min": 5825,
            "mean": 6634,
            "median": 5825,
            "max": 78983
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 10245,
            "min": 5967,
            "mean": 53173,
            "median": 92294,
            "max": 102383
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 22290,
            "min": 8134,
            "mean": 47373,
            "median": 50123,
            "max": 108551
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 1360,
            "min": 27385,
            "mean": 88850,
            "median": 71197,
            "max": 488086
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 65,
            "min": 23256,
            "mean": 289354,
            "median": 157228,
            "max": 676533
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "getConfiguration(address)": {
            "calls": 255482,
            "min": 745,
            "mean": 1893,
            "median": 2745,
            "max": 2745
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 9240,
            "min": 666,
            "mean": 2661,
            "median": 2666,
            "max": 2666
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 23530,
            "min": 672,
            "mean": 2669,
            "median": 2672,
            "max": 2672
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 715,
            "min": 848,
            "mean": 2820,
            "median": 2848,
            "max": 2848
          },
          "getEModeCategoryData(uint8)": {
            "calls": 15,
            "min": 4015,
            "mean": 5288,
            "median": 5836,
            "max": 6015
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 170,
            "min": 3478,
            "mean": 3478,
            "median": 3478,
            "max": 3478
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 28179,
            "min": 701,
            "mean": 1413,
            "median": 701,
            "max": 2701
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "getReserveAToken(address)": {
            "calls": 104746,
            "min": 676,
            "mean": 2269,
            "median": 2676,
            "max": 2676
          },
          "getReserveAddressById(uint16)": {
            "calls": 5,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "getReserveData(address)": {
            "calls": 73095,
            "min": 4094,
            "mean": 17776,
            "median": 22094,
            "max": 24594
          },
          "getReserveDeficit(address)": {
            "calls": 11130,
            "min": 609,
            "mean": 2457,
            "median": 2609,
            "max": 2609
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 210086,
            "min": 889,
            "mean": 2406,
            "median": 889,
            "max": 5349
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20403,
            "min": 845,
            "mean": 2655,
            "median": 845,
            "max": 5468
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 68846,
            "min": 632,
            "mean": 2367,
            "median": 2632,
            "max": 2632
          },
          "getReservesList()": {
            "calls": 18445,
            "min": 2915,
            "mean": 17534,
            "median": 10915,
            "max": 349320
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "getUserAccountData(address)": {
            "calls": 29875,
            "min": 4222,
            "mean": 64920,
            "median": 80862,
            "max": 124537
          },
          "getUserConfiguration(address)": {
            "calls": 16890,
            "min": 746,
            "mean": 1824,
            "median": 2746,
            "max": 2746
          },
          "getUserEMode(address)": {
            "calls": 13100,
            "min": 612,
            "mean": 1403,
            "median": 612,
            "max": 2612
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 9765,
            "min": 680,
            "mean": 2409,
            "median": 2680,
            "max": 2680
          },
          "initReserve(address,address,address)": {
            "calls": 224466,
            "min": 5993,
            "mean": 152201,
            "median": 153422,
            "max": 173184
          },
          "initialize(address)": {
            "calls": 3710,
            "min": 26381,
            "mean": 45343,
            "median": 45395,
            "max": 45395
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 2837,
            "mean": 2837,
            "median": 2837,
            "max": 2837
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 31936,
            "min": 25967,
            "mean": 250539,
            "median": 292309,
            "max": 444655
          },
          "mintToTreasury(address[])": {
            "calls": 45,
            "min": 2412,
            "mean": 48128,
            "median": 51262,
            "max": 132908
          },
          "multicall(bytes[])": {
            "calls": 1465,
            "min": 150842,
            "mean": 216218,
            "median": 217089,
            "max": 467361
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 7416,
            "mean": 7416,
            "median": 7416,
            "max": 7416
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 165,
            "min": 14299,
            "mean": 89683,
            "median": 96217,
            "max": 125728
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 1325,
            "min": 78073,
            "mean": 124184,
            "median": 124640,
            "max": 135267
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 115666,
            "mean": 140270,
            "median": 129538,
            "max": 170817
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 48024,
            "mean": 48024,
            "median": 48024,
            "max": 48024
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 12055,
            "min": 4197,
            "mean": 4383,
            "median": 4197,
            "max": 15197
          },
          "setConfiguration(address,(uint256))": {
            "calls": 360881,
            "min": 1828,
            "mean": 15716,
            "median": 23828,
            "max": 23983
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 17548,
            "min": 4843,
            "mean": 12009,
            "median": 12298,
            "max": 16798
          },
          "setUserEMode(uint8)": {
            "calls": 12935,
            "min": 5302,
            "mean": 44547,
            "median": 38529,
            "max": 108726
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1295,
            "min": 2886,
            "mean": 3782,
            "median": 2886,
            "max": 111177
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1650,
            "min": 6480,
            "mean": 13395,
            "median": 10480,
            "max": 91385
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1320,
            "min": 2904,
            "mean": 3946,
            "median": 2904,
            "max": 56412
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 35200,
            "min": 29351,
            "mean": 183165,
            "median": 201308,
            "max": 209059
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 109054,
            "mean": 190401,
            "median": 211334,
            "max": 250816
          },
          "syncIndexesState(address)": {
            "calls": 10990,
            "min": 7735,
            "mean": 14704,
            "median": 7735,
            "max": 47602
          },
          "syncRatesState(address)": {
            "calls": 10990,
            "min": 14030,
            "mean": 14089,
            "median": 14030,
            "max": 18530
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 4955,
            "min": 5876,
            "mean": 17460,
            "median": 21516,
            "max": 21516
          },
          "withdraw(address,uint256,address)": {
            "calls": 2870,
            "min": 33040,
            "mean": 126783,
            "median": 128952,
            "max": 193186
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1671293,
          "size": 8105
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 44746,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "approveDelegation(address,uint256)": {
            "calls": 25,
            "min": 27030,
            "mean": 27030,
            "median": 27030,
            "max": 27030
          },
          "balanceOf(address)": {
            "calls": 18610,
            "min": 674,
            "mean": 9837,
            "median": 4702,
            "max": 18392
          },
          "borrowAllowance(address,address)": {
            "calls": 25,
            "min": 2827,
            "mean": 2827,
            "median": 2827,
            "max": 2827
          },
          "burn(address,uint256,uint256)": {
            "calls": 29800,
            "min": 12242,
            "mean": 24031,
            "median": 24042,
            "max": 24043
          },
          "decimals()": {
            "calls": 48606,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 35,
            "min": 689,
            "mean": 28619,
            "median": 21779,
            "max": 55979
          },
          "getIncentivesController()": {
            "calls": 44746,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 222731,
            "min": 123201,
            "mean": 206625,
            "median": 208481,
            "max": 298327
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 36665,
            "min": 23985,
            "mean": 60085,
            "median": 60185,
            "max": 69972
          },
          "name()": {
            "calls": 45251,
            "min": 2997,
            "mean": 5343,
            "median": 4824,
            "max": 9554
          },
          "nonces(address)": {
            "calls": 5,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "scaledBalanceOf(address)": {
            "calls": 93557,
            "min": 687,
            "mean": 1965,
            "median": 2687,
            "max": 2687
          },
          "scaledTotalSupply()": {
            "calls": 224676,
            "min": 439,
            "mean": 2330,
            "median": 2439,
            "max": 2439
          },
          "symbol()": {
            "calls": 45216,
            "min": 3040,
            "mean": 5387,
            "median": 4043,
            "max": 9597
          },
          "totalSupply()": {
            "calls": 950,
            "min": 2416,
            "mean": 5731,
            "median": 6416,
            "max": 18039
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3718
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 15,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 5,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "getAssetPrice(address)": {
            "calls": 291752,
            "min": 0,
            "mean": 5651,
            "median": 7865,
            "max": 15388
          },
          "getAssetsPrices(address[])": {
            "calls": 15,
            "min": 5602,
            "mean": 7675,
            "median": 8712,
            "max": 8712
          },
          "getFallbackOracle()": {
            "calls": 15,
            "min": 2364,
            "mean": 2364,
            "median": 2364,
            "max": 2364
          },
          "getSourceOfAsset(address)": {
            "calls": 5780,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setAssetSources(address[],address[])": {
            "calls": 130,
            "min": 36887,
            "mean": 57572,
            "median": 60249,
            "max": 61841
          },
          "setFallbackOracle(address)": {
            "calls": 20,
            "min": 59354,
            "mean": 59354,
            "median": 59354,
            "max": 59354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 827932,
          "size": 3791
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5125,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "MAX_BORROW_RATE()": {
            "calls": 26910,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 212905,
            "min": 0,
            "mean": 4279,
            "median": 3969,
            "max": 5688
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 14605,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          },
          "getInterestRateData(address)": {
            "calls": 1280,
            "min": 3788,
            "mean": 3788,
            "median": 3788,
            "max": 3788
          },
          "getInterestRateDataBps(address)": {
            "calls": 1280,
            "min": 2970,
            "mean": 2970,
            "median": 2970,
            "max": 2970
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 6875,
            "min": 2958,
            "mean": 2958,
            "median": 2958,
            "max": 2958
          },
          "getOptimalUsageRatio(address)": {
            "calls": 10745,
            "min": 2734,
            "mean": 2734,
            "median": 2734,
            "max": 2734
          },
          "getVariableRateSlope1(address)": {
            "calls": 10765,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "getVariableRateSlope2(address)": {
            "calls": 6905,
            "min": 2795,
            "mean": 2795,
            "median": 2795,
            "max": 2795
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 14080,
            "min": 27833,
            "mean": 29173,
            "median": 28518,
            "max": 36366
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 32025,
            "min": 28162,
            "mean": 32560,
            "median": 29154,
            "max": 36701
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 431441,
          "size": 1842
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getGracePeriod()": {
            "calls": 5,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "getSequencerOracle()": {
            "calls": 5,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          },
          "isBorrowAllowed()": {
            "calls": 25,
            "min": 10307,
            "mean": 11177,
            "median": 10307,
            "max": 12484
          },
          "isLiquidationAllowed()": {
            "calls": 25,
            "min": 10262,
            "mean": 11132,
            "median": 10262,
            "max": 12439
          },
          "setGracePeriod(uint256)": {
            "calls": 10,
            "min": 35724,
            "mean": 38744,
            "median": 38744,
            "max": 41765
          },
          "setSequencerOracle(address)": {
            "calls": 10,
            "min": 32590,
            "mean": 33231,
            "median": 33231,
            "max": 33873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 451714,
          "size": 2040
        },
        "functions": {
          "admin()": {
            "calls": 40,
            "min": 21388,
            "mean": 21388,
            "median": 21388,
            "max": 21388
          },
          "fallback()": {
            "calls": 2784660,
            "min": 0,
            "mean": 138663,
            "median": 7539,
            "max": 205791437
          },
          "upgradeTo(address)": {
            "calls": 10,
            "min": 26838,
            "mean": 28730,
            "median": 28730,
            "max": 30622
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 40,
            "min": 28725,
            "mean": 152584,
            "median": 187354,
            "max": 187354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 545865,
          "size": 2554
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43635,
            "mean": 43635,
            "median": 43635,
            "max": 43635
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43679,
            "mean": 43679,
            "median": 43679,
            "max": 43679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 383040,
          "size": 1801
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43657,
            "mean": 43657,
            "median": 43657,
            "max": 43657
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43679,
            "mean": 43679,
            "median": 43679,
            "max": 43679
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4596073,
          "size": 21402
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 28321,
            "mean": 28321,
            "median": 28321,
            "max": 28321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 108459,
          "size": 305
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 20860,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "decimals()": {
            "calls": 470,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "description()": {
            "calls": 470,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          },
          "latestAnswer()": {
            "calls": 282572,
            "min": 279,
            "mean": 1747,
            "median": 2279,
            "max": 2279
          },
          "name()": {
            "calls": 470,
            "min": 167,
            "mean": 167,
            "median": 167,
            "max": 167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 154707,
          "size": 497
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 15,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "setAssetPrice(address,uint256)": {
            "calls": 15,
            "min": 25767,
            "mean": 39061,
            "median": 45703,
            "max": 45715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 273602,
          "size": 1358
        },
        "functions": {
          "latestRoundData()": {
            "calls": 50,
            "min": 4721,
            "mean": 4724,
            "median": 4726,
            "max": 4726
          },
          "setAnswer(bool,uint256)": {
            "calls": 380,
            "min": 26202,
            "mean": 27398,
            "median": 26202,
            "max": 46114
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 472482,
          "size": 1967
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 30,
            "min": 133431,
            "mean": 133431,
            "median": 133431,
            "max": 133431
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 45,
            "min": 133499,
            "mean": 133512,
            "median": 133523,
            "max": 133523
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 93907,
          "size": 334
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 330,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1108657,
          "size": 5931
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1280,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "allowance(address,address)": {
            "calls": 45,
            "min": 832,
            "mean": 1943,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 115090,
            "min": 26299,
            "mean": 45819,
            "median": 46343,
            "max": 46583
          },
          "balanceOf(address)": {
            "calls": 447165,
            "min": 648,
            "mean": 2646,
            "median": 2648,
            "max": 2648
          },
          "decimals()": {
            "calls": 408929,
            "min": 311,
            "mean": 2305,
            "median": 2311,
            "max": 2311
          },
          "mint(address,uint256)": {
            "calls": 32320,
            "min": 36474,
            "mean": 62606,
            "median": 70686,
            "max": 70794
          },
          "name()": {
            "calls": 10400,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "nonces(address)": {
            "calls": 1280,
            "min": 2601,
            "mean": 2601,
            "median": 2601,
            "max": 2601
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 2560,
            "min": 76767,
            "mean": 76820,
            "median": 76810,
            "max": 76966
          },
          "symbol()": {
            "calls": 480,
            "min": 3240,
            "mean": 3240,
            "median": 3240,
            "max": 3240
          },
          "totalSupply()": {
            "calls": 57725,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 35,
            "min": 46924,
            "mean": 51016,
            "median": 51700,
            "max": 51700
          },
          "transferOwnership(address)": {
            "calls": 155,
            "min": 28797,
            "mean": 28797,
            "median": 28797,
            "max": 28797
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 117443,
          "size": 325
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 2170,
            "min": 146,
            "mean": 146,
            "median": 146,
            "max": 146
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 3370,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "percentDiv(uint256,uint256)": {
            "calls": 1295,
            "min": 314,
            "mean": 420,
            "median": 427,
            "max": 427
          },
          "percentMul(uint256,uint256)": {
            "calls": 1295,
            "min": 331,
            "mean": 401,
            "median": 430,
            "max": 430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 229220,
          "size": 844
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 5,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "HALF_WAD()": {
            "calls": 2178,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "RAY()": {
            "calls": 5,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "WAD()": {
            "calls": 3234,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          },
          "WAD_RAY_RATIO()": {
            "calls": 8848,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "rayDiv(uint256,uint256)": {
            "calls": 20,
            "min": 493,
            "mean": 493,
            "median": 493,
            "max": 493
          },
          "rayMul(uint256,uint256)": {
            "calls": 15,
            "min": 496,
            "mean": 496,
            "median": 496,
            "max": 496
          },
          "rayToWad(uint256)": {
            "calls": 2575,
            "min": 384,
            "mean": 387,
            "median": 384,
            "max": 398
          },
          "wadDiv(uint256,uint256)": {
            "calls": 1300,
            "min": 424,
            "mean": 517,
            "median": 537,
            "max": 537
          },
          "wadMul(uint256,uint256)": {
            "calls": 1310,
            "min": 331,
            "mean": 401,
            "median": 430,
            "max": 430
          },
          "wadToRay(uint256)": {
            "calls": 2463,
            "min": 279,
            "mean": 353,
            "median": 357,
            "max": 357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2360651,
          "size": 11509
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 5,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 56152,
            "mean": 56152,
            "median": 56152,
            "max": 56152
          },
          "name()": {
            "calls": 5,
            "min": 3176,
            "mean": 3176,
            "median": 3176,
            "max": 3176
          },
          "scaledBalanceOf(address)": {
            "calls": 20,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2687
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 5,
            "min": 67806,
            "mean": 67806,
            "median": 67806,
            "max": 67806
          },
          "symbol()": {
            "calls": 5,
            "min": 3174,
            "mean": 3174,
            "median": 3174,
            "max": 3174
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 5,
            "min": 63785,
            "mean": 63785,
            "median": 63785,
            "max": 63785
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1677678,
          "size": 8219
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 5,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 55657,
            "mean": 55657,
            "median": 55657,
            "max": 55657
          },
          "name()": {
            "calls": 5,
            "min": 3176,
            "mean": 3176,
            "median": 3176,
            "max": 3176
          },
          "symbol()": {
            "calls": 5,
            "min": 3219,
            "mean": 3219,
            "median": 3219,
            "max": 3219
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 407218,
          "size": 1569
        },
        "functions": {
          "REVISION()": {
            "calls": 30,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 30,
            "min": 157367,
            "mean": 157367,
            "median": 157367,
            "max": 157367
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 5255,
            "mean": 5255,
            "median": 5255,
            "max": 5255
          },
          "text()": {
            "calls": 30,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "upgradeTo(address)": {
            "calls": 5,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5,
            "min": 168,
            "mean": 168,
            "median": 168,
            "max": 168
          },
          "value()": {
            "calls": 35,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "values(uint256)": {
            "calls": 60,
            "min": 4594,
            "mean": 4594,
            "median": 4594,
            "max": 4594
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 407650,
          "size": 1571
        },
        "functions": {
          "REVISION()": {
            "calls": 10,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 5,
            "min": 51970,
            "mean": 51970,
            "median": 51970,
            "max": 51970
          },
          "setValue(uint256)": {
            "calls": 10,
            "min": 5255,
            "mean": 5255,
            "median": 5255,
            "max": 5255
          },
          "text()": {
            "calls": 10,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "value()": {
            "calls": 20,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "values(uint256)": {
            "calls": 20,
            "min": 4594,
            "mean": 4594,
            "median": 4594,
            "max": 4594
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 142020,
          "size": 342
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 45128,
            "mean": 45128,
            "median": 45128,
            "max": 45128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 142452,
          "size": 344
        },
        "functions": {
          "initialize(address)": {
            "calls": 5,
            "min": 28031,
            "mean": 28031,
            "median": 28031,
            "max": 28031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 839430,
          "size": 3973
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 8130,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 100,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 4015,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "addAssetListingAdmin(address)": {
            "calls": 15,
            "min": 50952,
            "mean": 50952,
            "median": 50952,
            "max": 50952
          },
          "addBridge(address)": {
            "calls": 10,
            "min": 51018,
            "mean": 51018,
            "median": 51018,
            "max": 51018
          },
          "addEmergencyAdmin(address)": {
            "calls": 15,
            "min": 50953,
            "mean": 50953,
            "median": 50953,
            "max": 50953
          },
          "addFlashBorrower(address)": {
            "calls": 20,
            "min": 50974,
            "mean": 51933,
            "median": 50974,
            "max": 54813
          },
          "addPoolAdmin(address)": {
            "calls": 3965,
            "min": 50985,
            "mean": 50996,
            "median": 50997,
            "max": 50997
          },
          "addRiskAdmin(address)": {
            "calls": 70,
            "min": 51018,
            "mean": 51018,
            "median": 51018,
            "max": 51018
          },
          "grantRole(bytes32,address)": {
            "calls": 40,
            "min": 51473,
            "mean": 51954,
            "median": 51473,
            "max": 55323
          },
          "hasRole(bytes32,address)": {
            "calls": 95,
            "min": 2736,
            "mean": 2736,
            "median": 2736,
            "max": 2736
          },
          "isAssetListingAdmin(address)": {
            "calls": 19440,
            "min": 806,
            "mean": 2407,
            "median": 2806,
            "max": 2806
          },
          "isEmergencyAdmin(address)": {
            "calls": 21825,
            "min": 2739,
            "mean": 2739,
            "median": 2739,
            "max": 2739
          },
          "isFlashBorrower(address)": {
            "calls": 1365,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "isPoolAdmin(address)": {
            "calls": 283400,
            "min": 749,
            "mean": 1838,
            "median": 2749,
            "max": 2749
          },
          "isRiskAdmin(address)": {
            "calls": 205625,
            "min": 739,
            "mean": 1649,
            "median": 739,
            "max": 2739
          },
          "removeAssetListingAdmin(address)": {
            "calls": 10,
            "min": 29044,
            "mean": 29044,
            "median": 29044,
            "max": 29044
          },
          "removeBridge(address)": {
            "calls": 5,
            "min": 29013,
            "mean": 29013,
            "median": 29013,
            "max": 29013
          },
          "removeEmergencyAdmin(address)": {
            "calls": 5,
            "min": 28989,
            "mean": 28989,
            "median": 28989,
            "max": 28989
          },
          "removeFlashBorrower(address)": {
            "calls": 10,
            "min": 29012,
            "mean": 41913,
            "median": 41913,
            "max": 54814
          },
          "removePoolAdmin(address)": {
            "calls": 5,
            "min": 29042,
            "mean": 29042,
            "median": 29042,
            "max": 29042
          },
          "removeRiskAdmin(address)": {
            "calls": 5,
            "min": 28989,
            "mean": 28989,
            "median": 28989,
            "max": 28989
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 30,
            "min": 48882,
            "mean": 49597,
            "median": 48882,
            "max": 53174
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1615888,
          "size": 8284
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 5450,
            "min": 388,
            "mean": 914,
            "median": 388,
            "max": 2388
          },
          "getACLManager()": {
            "calls": 259285,
            "min": 431,
            "mean": 1435,
            "median": 2431,
            "max": 2431
          },
          "getAddress(bytes32)": {
            "calls": 93565,
            "min": 531,
            "mean": 2059,
            "median": 2531,
            "max": 2531
          },
          "getMarketId()": {
            "calls": 30,
            "min": 3241,
            "mean": 3241,
            "median": 3241,
            "max": 3241
          },
          "getPool()": {
            "calls": 13135,
            "min": 355,
            "mean": 1079,
            "median": 355,
            "max": 2355
          },
          "getPoolConfigurator()": {
            "calls": 984896,
            "min": 409,
            "mean": 726,
            "median": 409,
            "max": 2409
          },
          "getPoolDataProvider()": {
            "calls": 13200,
            "min": 386,
            "mean": 1217,
            "median": 386,
            "max": 2386
          },
          "getPriceOracle()": {
            "calls": 165431,
            "min": 474,
            "mean": 2329,
            "median": 2474,
            "max": 2474
          },
          "getPriceOracleSentinel()": {
            "calls": 79221,
            "min": 387,
            "mean": 2386,
            "median": 2387,
            "max": 2387
          },
          "owner()": {
            "calls": 4030,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "setACLAdmin(address)": {
            "calls": 340,
            "min": 24013,
            "mean": 46973,
            "median": 47617,
            "max": 47617
          },
          "setACLManager(address)": {
            "calls": 20,
            "min": 24056,
            "mean": 37484,
            "median": 39110,
            "max": 47660
          },
          "setAddress(bytes32,address)": {
            "calls": 9075,
            "min": 24621,
            "mean": 48241,
            "median": 48359,
            "max": 48635
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 25,
            "min": 24327,
            "mean": 223180,
            "median": 56885,
            "max": 505068
          },
          "setMarketId(string)": {
            "calls": 10,
            "min": 24399,
            "mean": 28404,
            "median": 28404,
            "max": 32410
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 20,
            "min": 24012,
            "mean": 285504,
            "median": 293502,
            "max": 531000
          },
          "setPoolDataProvider(address)": {
            "calls": 20,
            "min": 24101,
            "mean": 37529,
            "median": 39155,
            "max": 47705
          },
          "setPoolImpl(address)": {
            "calls": 20,
            "min": 24057,
            "mean": 272024,
            "median": 280020,
            "max": 504000
          },
          "setPriceOracle(address)": {
            "calls": 20,
            "min": 24080,
            "mean": 37508,
            "median": 39134,
            "max": 47684
          },
          "setPriceOracleSentinel(address)": {
            "calls": 30,
            "min": 24123,
            "mean": 40943,
            "median": 47727,
            "max": 47727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2439
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 20,
            "min": 2519,
            "mean": 2519,
            "median": 2519,
            "max": 2519
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 30,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getAddressesProvidersList()": {
            "calls": 25,
            "min": 2663,
            "mean": 4995,
            "median": 5009,
            "max": 7286
          },
          "owner()": {
            "calls": 4015,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 30,
            "min": 24147,
            "mean": 103773,
            "median": 119699,
            "max": 119699
          },
          "unregisterAddressesProvider(address)": {
            "calls": 20,
            "min": 26122,
            "mean": 38899,
            "median": 39940,
            "max": 49596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 831432,
          "size": 3937
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 211129,
            "mean": 284050,
            "median": 284019,
            "max": 289745
          },
          "getEmissionAdmin(address)": {
            "calls": 30,
            "min": 2547,
            "mean": 2547,
            "median": 2547,
            "max": 2547
          },
          "getRewardsController()": {
            "calls": 10,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "owner()": {
            "calls": 10,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 58787,
            "mean": 58787,
            "median": 58787,
            "max": 58787
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 43704,
            "mean": 43704,
            "median": 43704,
            "max": 43704
          },
          "setEmissionAdmin(address,address)": {
            "calls": 235,
            "min": 48601,
            "mean": 48608,
            "median": 48613,
            "max": 48613
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 60835,
            "mean": 60835,
            "median": 60835,
            "max": 60835
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 46867,
            "mean": 46867,
            "median": 46867,
            "max": 46867
          },
          "setRewardsController(address)": {
            "calls": 5,
            "min": 28729,
            "mean": 28729,
            "median": 28729,
            "max": 28729
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 44414,
            "mean": 44414,
            "median": 44414,
            "max": 44414
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3095547,
          "size": 14187
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 4030,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "claimAllRewards(address[],address)": {
            "calls": 5,
            "min": 91905,
            "mean": 91905,
            "median": 91905,
            "max": 91905
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 5,
            "min": 94203,
            "mean": 94203,
            "median": 94203,
            "max": 94203
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 5,
            "min": 91704,
            "mean": 91704,
            "median": 91704,
            "max": 91704
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 3641,
            "min": 949,
            "mean": 75081,
            "median": 84682,
            "max": 120615
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 5,
            "min": 88143,
            "mean": 88143,
            "median": 88143,
            "max": 88143
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 5,
            "min": 85647,
            "mean": 85647,
            "median": 85647,
            "max": 85647
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 173491,
            "mean": 246425,
            "median": 246405,
            "max": 252107
          },
          "getAllUserRewards(address[],address)": {
            "calls": 5,
            "min": 29353,
            "mean": 29353,
            "median": 29353,
            "max": 29353
          },
          "getAssetDecimals(address)": {
            "calls": 10,
            "min": 2656,
            "mean": 2656,
            "median": 2656,
            "max": 2656
          },
          "getAssetIndex(address,address)": {
            "calls": 48600,
            "min": 3062,
            "mean": 10669,
            "median": 10983,
            "max": 16470
          },
          "getClaimer(address)": {
            "calls": 2570,
            "min": 2625,
            "mean": 2625,
            "median": 2625,
            "max": 2625
          },
          "getDistributionEnd(address,address)": {
            "calls": 5,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "getEmissionManager()": {
            "calls": 20,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "getRewardOracle(address)": {
            "calls": 5,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "getRewardsByAsset(address)": {
            "calls": 12105,
            "min": 3041,
            "mean": 5579,
            "median": 5668,
            "max": 8256
          },
          "getRewardsData(address,address)": {
            "calls": 15,
            "min": 2975,
            "mean": 2975,
            "median": 2975,
            "max": 2975
          },
          "getRewardsList()": {
            "calls": 150,
            "min": 5109,
            "mean": 5109,
            "median": 5109,
            "max": 5109
          },
          "getTransferStrategy(address)": {
            "calls": 5,
            "min": 2648,
            "mean": 2648,
            "median": 2648,
            "max": 2648
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 5,
            "min": 7574,
            "mean": 7574,
            "median": 7574,
            "max": 7574
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 5,
            "min": 3004,
            "mean": 3004,
            "median": 3004,
            "max": 3004
          },
          "getUserRewards(address[],address,address)": {
            "calls": 1335,
            "min": 12230,
            "mean": 18523,
            "median": 18443,
            "max": 23648
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 271700,
            "min": 727,
            "mean": 2353,
            "median": 2727,
            "max": 38060
          },
          "initialize(address)": {
            "calls": 4015,
            "min": 26065,
            "mean": 45226,
            "median": 45250,
            "max": 45250
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 24278,
            "mean": 24278,
            "median": 24278,
            "max": 24278
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 8883,
            "mean": 8883,
            "median": 8883,
            "max": 8883
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 24237,
            "mean": 24237,
            "median": 24237,
            "max": 24237
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 12317,
            "mean": 12317,
            "median": 12317,
            "max": 12317
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 9854,
            "mean": 9854,
            "median": 9854,
            "max": 9854
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 309033,
          "size": 1494
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 5,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 493587,
          "size": 2778
        },
        "functions": {
          "dropApproval()": {
            "calls": 5,
            "min": 25880,
            "mean": 25880,
            "median": 25880,
            "max": 25880
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 5,
            "min": 52964,
            "mean": 52964,
            "median": 52964,
            "max": 52964
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "getRewardsAdmin()": {
            "calls": 5,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getStakeContract()": {
            "calls": 5,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "getUnderlyingToken()": {
            "calls": 5,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "performTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 27082,
            "mean": 27082,
            "median": 27082,
            "max": 27082
          },
          "renewApproval()": {
            "calls": 5,
            "min": 27971,
            "mean": 27971,
            "median": 27971,
            "max": 27971
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1484455,
          "size": 6710
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 445,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "approve(address,address,uint256)": {
            "calls": 40,
            "min": 2937,
            "mean": 16690,
            "median": 16690,
            "max": 30443
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 19753,
            "mean": 19941,
            "median": 19941,
            "max": 20130
          },
          "cancelStream(uint256)": {
            "calls": 20,
            "min": 7634,
            "mean": 42572,
            "median": 35360,
            "max": 91936
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 85,
            "min": 2911,
            "mean": 122835,
            "median": 206712,
            "max": 206712
          },
          "getNextStreamId()": {
            "calls": 5,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "getStream(uint256)": {
            "calls": 30,
            "min": 2675,
            "mean": 7749,
            "median": 2675,
            "max": 17898
          },
          "grantRole(bytes32,address)": {
            "calls": 440,
            "min": 7504,
            "mean": 18622,
            "median": 18622,
            "max": 29741
          },
          "initialize(uint256,address)": {
            "calls": 4365,
            "min": 96424,
            "mean": 117418,
            "median": 118533,
            "max": 118533
          },
          "isFundsAdmin(address)": {
            "calls": 15,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "receive()": {
            "calls": 20,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "transfer(address,address,uint256)": {
            "calls": 40,
            "min": 2960,
            "mean": 19489,
            "median": 19489,
            "max": 36019
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 30,
            "min": 7678,
            "mean": 35657,
            "median": 20509,
            "max": 88037
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 500248,
          "size": 2366
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 1290,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "RECIPIENT_B()": {
            "calls": 1290,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 11565,
            "min": 170,
            "mean": 170,
            "median": 170,
            "max": 170
          },
          "receive()": {
            "calls": 1290,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 1295,
            "min": 23633,
            "mean": 91406,
            "median": 92645,
            "max": 92645
          },
          "splitRevenue(address[])": {
            "calls": 2590,
            "min": 24230,
            "mean": 133235,
            "median": 135729,
            "max": 135729
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 2881932,
          "size": 22568
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 4130,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3104569,
          "size": 18867
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 4005,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 7395224,
          "size": 35544
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 3880,
            "min": 17693,
            "mean": 17693,
            "median": 17693,
            "max": 17693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 7110884,
          "size": 30758
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 3880,
            "min": 8968,
            "mean": 8968,
            "median": 8968,
            "max": 8968
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8578663,
          "size": 39711
        },
        "functions": {
          "getPoolReport()": {
            "calls": 405,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 950905,
          "size": 6288
        },
        "functions": {
          "getMiscReport()": {
            "calls": 4130,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5553853,
          "size": 28790
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 165,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 7618797,
          "size": 38002
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 4130,
            "min": 17693,
            "mean": 17693,
            "median": 17693,
            "max": 17693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 8297803,
          "size": 38411
        },
        "functions": {
          "getPoolReport()": {
            "calls": 3725,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5653909,
          "size": 30109
        },
        "functions": {
          "getInitialReport()": {
            "calls": 4130,
            "min": 6848,
            "mean": 6848,
            "median": 6848,
            "max": 6848
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 3880,
            "min": 652531,
            "mean": 654788,
            "median": 652531,
            "max": 773335
          },
          "setProtocolDataProvider(address)": {
            "calls": 4005,
            "min": 59524,
            "mean": 59535,
            "median": 59536,
            "max": 59536
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 4015,
            "min": 2107841,
            "mean": 2598111,
            "median": 2598230,
            "max": 2624015
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 4005,
            "min": 47667,
            "mean": 47671,
            "median": 47667,
            "max": 47739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4062096,
          "size": 19813
        },
        "functions": {
          "getTokensReport()": {
            "calls": 4005,
            "min": 4533,
            "mean": 4533,
            "median": 4533,
            "max": 4533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 1765931,
          "size": 8162
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 1280,
            "min": 58130,
            "mean": 110647,
            "median": 58556,
            "max": 172228
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 3840,
            "min": 34372,
            "mean": 86017,
            "median": 59085,
            "max": 176475
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1280,
            "min": 57641,
            "mean": 110357,
            "median": 58067,
            "max": 171739
          },
          "collectAndUpdateRewards(address)": {
            "calls": 1285,
            "min": 48125,
            "mean": 90534,
            "median": 57094,
            "max": 130232
          },
          "getClaimableRewards(address,address)": {
            "calls": 17093,
            "min": 26262,
            "mean": 29961,
            "median": 30062,
            "max": 30093
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          },
          "getTotalClaimableRewards(address)": {
            "calls": 1285,
            "min": 29005,
            "mean": 35146,
            "median": 35218,
            "max": 35227
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 5548,
            "min": 2817,
            "mean": 2817,
            "median": 2817,
            "max": 2817
          },
          "isRegisteredRewardToken(address)": {
            "calls": 15,
            "min": 2575,
            "mean": 2575,
            "median": 2575,
            "max": 2575
          },
          "mint(address,uint256)": {
            "calls": 12277,
            "min": 53648,
            "mean": 96925,
            "median": 97552,
            "max": 100760
          },
          "mockInit(address)": {
            "calls": 85,
            "min": 79933,
            "mean": 79933,
            "median": 79933,
            "max": 79933
          },
          "refreshRewardTokens()": {
            "calls": 11535,
            "min": 116360,
            "mean": 116368,
            "median": 116368,
            "max": 116786
          },
          "rewardTokens()": {
            "calls": 5,
            "min": 5007,
            "mean": 5007,
            "median": 5007,
            "max": 5007
          },
          "transfer(address,uint256)": {
            "calls": 2560,
            "min": 60041,
            "mean": 75464,
            "median": 72738,
            "max": 103007
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1134869,
          "size": 6059
        },
        "functions": {
          "decimals()": {
            "calls": 11535,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 4896,
            "min": 2735,
            "mean": 3785,
            "median": 4735,
            "max": 4735
          },
          "mint(address,uint256)": {
            "calls": 12277,
            "min": 51297,
            "mean": 67587,
            "median": 68647,
            "max": 68647
          },
          "scaledTotalSupply()": {
            "calls": 60110,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "transfer(address,uint256)": {
            "calls": 12277,
            "min": 29802,
            "mean": 45922,
            "median": 46974,
            "max": 46974
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2113246,
          "size": 9855
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2560,
            "min": 26447,
            "mean": 45955,
            "median": 46400,
            "max": 46491
          },
          "balanceOf(address)": {
            "calls": 12805,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "convertToAssets(uint256)": {
            "calls": 1280,
            "min": 16024,
            "mean": 16024,
            "median": 16024,
            "max": 16024
          },
          "convertToShares(uint256)": {
            "calls": 1280,
            "min": 16025,
            "mean": 16025,
            "median": 16025,
            "max": 16025
          },
          "decimals()": {
            "calls": 1280,
            "min": 2540,
            "mean": 2540,
            "median": 2540,
            "max": 2540
          },
          "depositATokens(uint256,address)": {
            "calls": 14085,
            "min": 58961,
            "mean": 191848,
            "median": 204785,
            "max": 209934
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 6400,
            "min": 74940,
            "mean": 240092,
            "median": 261250,
            "max": 346390
          },
          "latestAnswer()": {
            "calls": 1285,
            "min": 22235,
            "mean": 22235,
            "median": 22235,
            "max": 22235
          },
          "maxDeposit(address)": {
            "calls": 1295,
            "min": 37175,
            "mean": 50740,
            "median": 50897,
            "max": 50897
          },
          "maxMint(address)": {
            "calls": 5,
            "min": 37788,
            "mean": 37788,
            "median": 37788,
            "max": 37788
          },
          "maxRedeem(address)": {
            "calls": 3840,
            "min": 13586,
            "mean": 22217,
            "median": 26528,
            "max": 26538
          },
          "mint(uint256,address)": {
            "calls": 2560,
            "min": 68378,
            "mean": 185982,
            "median": 185950,
            "max": 303518
          },
          "mockInit(address)": {
            "calls": 140,
            "min": 133320,
            "mean": 133320,
            "median": 133320,
            "max": 133320
          },
          "previewDeposit(uint256)": {
            "calls": 3840,
            "min": 16068,
            "mean": 16068,
            "median": 16068,
            "max": 16068
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 16064,
            "mean": 16064,
            "median": 16064,
            "max": 16064
          },
          "previewRedeem(uint256)": {
            "calls": 2560,
            "min": 16000,
            "mean": 16000,
            "median": 16000,
            "max": 16000
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 16046,
            "mean": 16046,
            "median": 16046,
            "max": 16046
          },
          "redeem(uint256,address,address)": {
            "calls": 1280,
            "min": 165560,
            "mean": 165764,
            "median": 165808,
            "max": 165908
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 3840,
            "min": 40816,
            "mean": 117439,
            "median": 155305,
            "max": 156242
          },
          "totalAssets()": {
            "calls": 1290,
            "min": 18017,
            "mean": 18017,
            "median": 18017,
            "max": 18017
          },
          "withdraw(uint256,address,address)": {
            "calls": 2560,
            "min": 51322,
            "mean": 110061,
            "median": 110030,
            "max": 168739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 830217,
          "size": 3906
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 206881,
            "mean": 206881,
            "median": 206881,
            "max": 206881
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 805741,
          "size": 3726
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 154326,
            "mean": 154326,
            "median": 154326,
            "max": 154326
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 812193,
          "size": 3756
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 45036,
            "mean": 45036,
            "median": 45036,
            "max": 45036
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 793856,
          "size": 3671
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 83827,
            "mean": 83827,
            "median": 83827,
            "max": 83827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 806605,
          "size": 3730
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 86682,
            "mean": 86682,
            "median": 86682,
            "max": 86682
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 812457,
          "size": 3757
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 33875,
            "mean": 33875,
            "median": 33875,
            "max": 33875
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 806605,
          "size": 3730
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 86682,
            "mean": 86682,
            "median": 86682,
            "max": 86682
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 807481,
          "size": 3734
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 33420,
            "mean": 33420,
            "median": 33420,
            "max": 33420
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 892983,
          "size": 4303
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 363097,
            "mean": 363097,
            "median": 363097,
            "max": 363097
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 775051,
          "size": 3495
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 93473,
            "mean": 93473,
            "median": 93473,
            "max": 93473
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 775687,
          "size": 3498
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 52654,
            "mean": 52654,
            "median": 52654,
            "max": 52654
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 790404,
          "size": 3566
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 46603,
            "mean": 46603,
            "median": 46603,
            "max": 46603
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 868030,
          "size": 4081
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1708344,
            "mean": 1708344,
            "median": 1708344,
            "max": 1708344
          },
          "newListings()": {
            "calls": 20,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 932363,
          "size": 4519
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1708250,
            "mean": 1708250,
            "median": 1708250,
            "max": 1708250
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 2959,
            "mean": 2959,
            "median": 2959,
            "max": 2959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1035441,
          "size": 5012
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1843838,
            "mean": 1843838,
            "median": 1843838,
            "max": 1843838
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 2959,
            "mean": 2959,
            "median": 2959,
            "max": 2959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 970903,
          "size": 4573
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1843928,
            "mean": 1843928,
            "median": 1843928,
            "max": 1843928
          },
          "newListings()": {
            "calls": 20,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 796485,
          "size": 3750
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 63560,
            "mean": 63560,
            "median": 63560,
            "max": 63560
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 797752,
          "size": 3689
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 136315,
            "mean": 136315,
            "median": 136315,
            "max": 136315
          },
          "rateStrategiesUpdates()": {
            "calls": 20,
            "min": 1182,
            "mean": 1182,
            "median": 1182,
            "max": 1182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1675945,
          "size": 8165
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 14090,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "POOL()": {
            "calls": 14090,
            "min": 282,
            "mean": 282,
            "median": 282,
            "max": 282
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 19210,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 482,
            "mean": 482,
            "median": 482,
            "max": 482
          },
          "approve(address,uint256)": {
            "calls": 5,
            "min": 21747,
            "mean": 21747,
            "median": 21747,
            "max": 21747
          },
          "approveDelegation(address,uint256)": {
            "calls": 1280,
            "min": 27030,
            "mean": 27030,
            "median": 27030,
            "max": 27030
          },
          "burn(address,uint256,uint256)": {
            "calls": 2560,
            "min": 28042,
            "mean": 28042,
            "median": 28042,
            "max": 28042
          },
          "decimals()": {
            "calls": 14090,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21790,
            "mean": 21790,
            "median": 21790,
            "max": 21790
          },
          "getIncentivesController()": {
            "calls": 14090,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "increaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21768,
            "mean": 21768,
            "median": 21768,
            "max": 21768
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 7680,
            "min": 46168,
            "mean": 181960,
            "median": 208383,
            "max": 298317
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 5120,
            "min": 62251,
            "mean": 64697,
            "median": 62251,
            "max": 72038
          },
          "name()": {
            "calls": 14090,
            "min": 2997,
            "mean": 4177,
            "median": 3176,
            "max": 9554
          },
          "scaledBalanceOf(address)": {
            "calls": 5120,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2687
          },
          "symbol()": {
            "calls": 14090,
            "min": 3040,
            "mean": 4209,
            "median": 3219,
            "max": 9597
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 21723,
            "mean": 21723,
            "median": 21723,
            "max": 21723
          },
          "transferFrom(address,address,uint256)": {
            "calls": 5,
            "min": 22016,
            "mean": 22016,
            "median": 22016,
            "max": 22016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 79661491,
          "size": 395763
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 15,
            "min": 76220,
            "mean": 76415,
            "median": 76508,
            "max": 76517
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 10,
            "min": 78384,
            "mean": 78384,
            "median": 78384,
            "max": 78384
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 5,
            "min": 151591,
            "mean": 151591,
            "median": 151591,
            "max": 151591
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 110,
            "min": 416528,
            "mean": 756809,
            "median": 813419,
            "max": 817838
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 5,
            "min": 700079,
            "mean": 700079,
            "median": 700079,
            "max": 700079
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 10,
            "min": 59844,
            "mean": 75706,
            "median": 75706,
            "max": 91569
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 35,
            "min": 63064,
            "mean": 74747,
            "median": 76735,
            "max": 76744
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 10,
            "min": 461158,
            "mean": 700632,
            "median": 700632,
            "max": 940106
          },
          "mintToTreasury(uint8)": {
            "calls": 15,
            "min": 533452,
            "mean": 553089,
            "median": 553958,
            "max": 571858
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 25,
            "min": 447327,
            "mean": 571989,
            "median": 610248,
            "max": 677303
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 10,
            "min": 614458,
            "mean": 654907,
            "median": 654907,
            "max": 695356
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 158383,
            "mean": 158383,
            "median": 158383,
            "max": 158383
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 128356,
            "mean": 137011,
            "median": 141339,
            "max": 141339
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 25,
            "min": 561663,
            "mean": 597586,
            "median": 588647,
            "max": 636999
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 5,
            "min": 613122,
            "mean": 613122,
            "median": 613122,
            "max": 613122
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 20,
            "min": 552300,
            "mean": 564496,
            "median": 552300,
            "max": 601087
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 25,
            "min": 36172,
            "mean": 36407,
            "median": 36544,
            "max": 36556
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 5,
            "min": 564512,
            "mean": 564512,
            "median": 564512,
            "max": 564512
          },
          "setPoolPause(bool,uint40)": {
            "calls": 5,
            "min": 587349,
            "mean": 587349,
            "median": 587349,
            "max": 587349
          },
          "setReserveActive(bool,uint8)": {
            "calls": 15,
            "min": 590830,
            "mean": 647945,
            "median": 596878,
            "max": 756127
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 30,
            "min": 564521,
            "mean": 601451,
            "median": 595988,
            "max": 656970
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 15,
            "min": 562152,
            "mean": 615083,
            "median": 616394,
            "max": 666703
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 5,
            "min": 592799,
            "mean": 592799,
            "median": 592799,
            "max": 592799
          },
          "setUserEMode(uint8)": {
            "calls": 25,
            "min": 458776,
            "mean": 613394,
            "median": 674679,
            "max": 674679
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 15,
            "min": 417291,
            "mean": 542853,
            "median": 593397,
            "max": 617871
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 115,
            "min": 666463,
            "mean": 1121262,
            "median": 1260061,
            "max": 1271407
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 493224,
            "mean": 493224,
            "median": 493224,
            "max": 493224
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 5,
            "min": 685813,
            "mean": 685813,
            "median": 685813,
            "max": 685813
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 721508,
            "mean": 721508,
            "median": 721508,
            "max": 721508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 132089,
          "size": 418
        },
        "functions": {
          "latestAnswer()": {
            "calls": 1465,
            "min": 301,
            "mean": 1099,
            "median": 301,
            "max": 2301
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 3537962,
          "size": 13939
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 3840,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "WBTC_ADDRESS()": {
            "calls": 3840,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute()": {
            "calls": 3855,
            "min": 4869745,
            "mean": 4869876,
            "median": 4869745,
            "max": 4871593
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 88481,
          "size": 188
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 525,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 130081,
          "size": 383
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 25,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3099582,
          "size": 14931
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 1230,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "approve(address,uint256)": {
            "calls": 100,
            "min": 24585,
            "mean": 24585,
            "median": 24585,
            "max": 24585
          },
          "balanceOf(address)": {
            "calls": 1265,
            "min": 17809,
            "mean": 18159,
            "median": 18269,
            "max": 18269
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 50,
            "min": 47324,
            "mean": 73983,
            "median": 69961,
            "max": 87061
          },
          "delegate(address)": {
            "calls": 130,
            "min": 6439,
            "mean": 66460,
            "median": 69479,
            "max": 89379
          },
          "delegateByType(address,uint8)": {
            "calls": 185,
            "min": 26301,
            "mean": 45602,
            "median": 48303,
            "max": 60381
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 150,
            "min": 5407,
            "mean": 6582,
            "median": 7590,
            "max": 7612
          },
          "getDelegates(address)": {
            "calls": 620,
            "min": 5588,
            "mean": 8316,
            "median": 9954,
            "max": 9954
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 2590,
            "min": 5710,
            "mean": 5927,
            "median": 5931,
            "max": 5935
          },
          "getPowersCurrent(address)": {
            "calls": 45,
            "min": 6946,
            "mean": 7289,
            "median": 7388,
            "max": 7388
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 240,
            "min": 56174,
            "mean": 56174,
            "median": 56174,
            "max": 56174
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 235,
            "min": 31253,
            "mean": 55737,
            "median": 48353,
            "max": 88090
          },
          "scaledBalanceOf(address)": {
            "calls": 1325,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "totalSupply()": {
            "calls": 25,
            "min": 6478,
            "mean": 6478,
            "median": 6478,
            "max": 6478
          },
          "transfer(address,uint256)": {
            "calls": 80,
            "min": 82778,
            "mean": 117707,
            "median": 119354,
            "max": 137527
          },
          "transferFrom(address,address,uint256)": {
            "calls": 100,
            "min": 90149,
            "mean": 134150,
            "median": 130538,
            "max": 189527
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 75,
            "min": 39509,
            "mean": 73167,
            "median": 71184,
            "max": 118984
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 25,
            "min": 33648,
            "mean": 33648,
            "median": 33648,
            "max": 33648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 315578,
          "size": 1628
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 10,
            "min": 1450,
            "mean": 1450,
            "median": 1450,
            "max": 1450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 66140,
          "size": 382
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 105,
            "min": 712,
            "mean": 2021,
            "median": 3212,
            "max": 3212
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 989527,
          "size": 4365
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 2526,
            "mean": 2526,
            "median": 2526,
            "max": 2526
          },
          "balanceOf(address)": {
            "calls": 42535,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "initialize(string,string,uint8)": {
            "calls": 590,
            "min": 156901,
            "mean": 156901,
            "median": 156901,
            "max": 156901
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1465
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2279,
            "mean": 2279,
            "median": 2279,
            "max": 2279
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 714126,
          "size": 3468
        },
        "functions": {
          "fallback()": {
            "calls": 70835,
            "min": 5038,
            "mean": 26216,
            "median": 7183,
            "max": 2650197
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 547074,
          "size": 2336
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 100,
            "min": 523,
            "mean": 2123,
            "median": 2523,
            "max": 2523
          },
          "approve(address,uint256)": {
            "calls": 17765,
            "min": 28730,
            "mean": 44691,
            "median": 45938,
            "max": 46202
          },
          "balanceOf(address)": {
            "calls": 98085,
            "min": 406,
            "mean": 2402,
            "median": 2406,
            "max": 2406
          },
          "decimals()": {
            "calls": 12190,
            "min": 299,
            "mean": 2257,
            "median": 2299,
            "max": 2299
          },
          "deposit()": {
            "calls": 255,
            "min": 44879,
            "mean": 44879,
            "median": 44879,
            "max": 44879
          },
          "name()": {
            "calls": 80,
            "min": 2665,
            "mean": 2665,
            "median": 2665,
            "max": 2665
          },
          "symbol()": {
            "calls": 230,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "transfer(address,uint256)": {
            "calls": 255,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1961760,
          "size": 9579
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 306084,
            "mean": 393446,
            "median": 424149,
            "max": 450106
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 2006687,
          "size": 9864
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "rescueTokens(address)": {
            "calls": 5,
            "min": 35049,
            "mean": 35049,
            "median": 35049,
            "max": 35049
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 20,
            "min": 333978,
            "mean": 426814,
            "median": 447802,
            "max": 477674
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1496131,
          "size": 7407
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 306194,
            "mean": 336537,
            "median": 331881,
            "max": 371536
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3970
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 5,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "createStataTokens(address[])": {
            "calls": 110,
            "min": 2622892,
            "mean": 2622892,
            "median": 2622892,
            "max": 2622892
          },
          "getStataToken(address)": {
            "calls": 110,
            "min": 2389,
            "mean": 2389,
            "median": 2389,
            "max": 2389
          },
          "initialize()": {
            "calls": 3985,
            "min": 23430,
            "mean": 23571,
            "median": 23575,
            "max": 23575
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 37758
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 15,
            "min": 5287,
            "mean": 5287,
            "median": 5287,
            "max": 5287
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 5,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "aToken()": {
            "calls": 5,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 2580,
            "mean": 2580,
            "median": 2580,
            "max": 2580
          },
          "asset()": {
            "calls": 5,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "balanceOf(address)": {
            "calls": 5,
            "min": 2476,
            "mean": 2476,
            "median": 2476,
            "max": 2476
          },
          "canPause(address)": {
            "calls": 1285,
            "min": 10757,
            "mean": 10757,
            "median": 10757,
            "max": 10757
          },
          "claimRewards(address,address[])": {
            "calls": 5,
            "min": 312575,
            "mean": 312575,
            "median": 312575,
            "max": 312575
          },
          "claimRewardsToSelf(address[])": {
            "calls": 5,
            "min": 2784,
            "mean": 2784,
            "median": 2784,
            "max": 2784
          },
          "decimals()": {
            "calls": 5,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "deposit(uint256,address)": {
            "calls": 10,
            "min": 246410,
            "mean": 254950,
            "median": 254950,
            "max": 263491
          },
          "depositATokens(uint256,address)": {
            "calls": 1310,
            "min": 146212,
            "mean": 147163,
            "median": 146212,
            "max": 187744
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1295,
            "min": 5521,
            "mean": 112784,
            "median": 113391,
            "max": 135058
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "initialize(address,string,string)": {
            "calls": 335,
            "min": 25062,
            "mean": 225307,
            "median": 226050,
            "max": 233050
          },
          "maxRedeem(address)": {
            "calls": 10,
            "min": 24056,
            "mean": 24056,
            "median": 24056,
            "max": 24056
          },
          "maxWithdraw(address)": {
            "calls": 5,
            "min": 25749,
            "mean": 25749,
            "median": 25749,
            "max": 25749
          },
          "mint(uint256,address)": {
            "calls": 5,
            "min": 246492,
            "mean": 246492,
            "median": 246492,
            "max": 246492
          },
          "name()": {
            "calls": 5,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "nonces(address)": {
            "calls": 15,
            "min": 2482,
            "mean": 2482,
            "median": 2482,
            "max": 2482
          },
          "paused()": {
            "calls": 10,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 363,
            "mean": 28925,
            "median": 31163,
            "max": 55249
          },
          "previewDeposit(uint256)": {
            "calls": 5,
            "min": 15018,
            "mean": 15018,
            "median": 15018,
            "max": 15018
          },
          "redeem(uint256,address,address)": {
            "calls": 10,
            "min": 28042,
            "mean": 97519,
            "median": 97519,
            "max": 166997
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 5,
            "min": 122236,
            "mean": 122236,
            "median": 122236,
            "max": 122236
          },
          "refreshRewardTokens()": {
            "calls": 5,
            "min": 151706,
            "mean": 151706,
            "median": 151706,
            "max": 151706
          },
          "setPaused(bool)": {
            "calls": 1315,
            "min": 10747,
            "mean": 11363,
            "median": 10747,
            "max": 33916
          },
          "symbol()": {
            "calls": 5,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "withdraw(uint256,address,address)": {
            "calls": 5,
            "min": 29866,
            "mean": 29866,
            "median": 29866,
            "max": 29866
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 11326
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 45,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 15,
            "min": 113798,
            "mean": 174418,
            "median": 113798,
            "max": 295659
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 1637680,
            "mean": 1637680,
            "median": 1637680,
            "max": 1637680
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 3865,
            "min": 1637092,
            "mean": 4722057,
            "median": 4730066,
            "max": 4730066
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 5,
            "min": 157245,
            "mean": 157245,
            "median": 157245,
            "max": 157245
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 16084,
            "mean": 65234,
            "median": 65234,
            "max": 114385
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 5,
            "min": 54094,
            "mean": 54094,
            "median": 54094,
            "max": 54094
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 25,
            "min": 5533,
            "mean": 25520,
            "median": 5598,
            "max": 55470
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 20,
            "min": 17531,
            "mean": 29617,
            "median": 20072,
            "max": 60795
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 5,
            "min": 35119,
            "mean": 35119,
            "median": 35119,
            "max": 35119
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 5,
            "min": 101665,
            "mean": 101665,
            "median": 101665,
            "max": 101665
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 8441
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 13010,
            "min": 2487,
            "mean": 5611,
            "median": 4487,
            "max": 28226
          },
          "getDebtCeiling(address)": {
            "calls": 25,
            "min": 10770,
            "mean": 10770,
            "median": 10770,
            "max": 10770
          },
          "getDebtCeilingDecimals()": {
            "calls": 5,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "getFlashLoanEnabled(address)": {
            "calls": 2565,
            "min": 10787,
            "mean": 10787,
            "median": 10787,
            "max": 10787
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 40,
            "min": 8248,
            "mean": 8248,
            "median": 8248,
            "max": 8248
          },
          "getIsVirtualAccActive(address)": {
            "calls": 44966,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 50,
            "min": 10775,
            "mean": 10775,
            "median": 10775,
            "max": 10775
          },
          "getPaused(address)": {
            "calls": 46301,
            "min": 10849,
            "mean": 10880,
            "median": 10881,
            "max": 10881
          },
          "getReserveCaps(address)": {
            "calls": 240,
            "min": 10800,
            "mean": 10800,
            "median": 10800,
            "max": 10800
          },
          "getReserveConfigurationData(address)": {
            "calls": 52946,
            "min": 11058,
            "mean": 11089,
            "median": 11090,
            "max": 11090
          },
          "getReserveTokensAddresses(address)": {
            "calls": 45551,
            "min": 13715,
            "mean": 13715,
            "median": 13715,
            "max": 13763
          },
          "getSiloedBorrowing(address)": {
            "calls": 10,
            "min": 10789,
            "mean": 10789,
            "median": 10789,
            "max": 10789
          },
          "getTotalDebt(address)": {
            "calls": 20,
            "min": 4318,
            "mean": 22106,
            "median": 28036,
            "max": 28036
          },
          "getUnbackedMintCap(address)": {
            "calls": 5,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "getUserReserveData(address,address)": {
            "calls": 1340,
            "min": 60996,
            "mean": 61202,
            "median": 61199,
            "max": 64497
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 5,
            "min": 10470,
            "mean": 10470,
            "median": 10470,
            "max": 10470
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 3845
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 15,
            "min": 32299,
            "mean": 32299,
            "median": 32299,
            "max": 32299
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 5,
            "min": 52758,
            "mean": 52758,
            "median": 52758,
            "max": 52758
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 32258,
            "mean": 32258,
            "median": 32258,
            "max": 32258
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 32251,
            "mean": 32251,
            "median": 32251,
            "max": 32251
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 32398,
            "mean": 32398,
            "median": 32398,
            "max": 32398
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 5,
            "min": 32243,
            "mean": 32243,
            "median": 32243,
            "max": 32243
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 35,
            "min": 32259,
            "mean": 32259,
            "median": 32259,
            "max": 32259
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 32390,
            "mean": 32390,
            "median": 32390,
            "max": 32390
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 10,
            "min": 32156,
            "mean": 32172,
            "median": 32172,
            "max": 32189
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 2525633,
          "size": 11788
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 10,
            "min": 151612,
            "mean": 151753,
            "median": 151753,
            "max": 151895
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 9050,
            "min": 123556,
            "mean": 153066,
            "median": 154328,
            "max": 191068
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 5499
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 10,
            "min": 220839,
            "mean": 224639,
            "median": 224639,
            "max": 228440
          },
          "depositETH(address,address,uint16)": {
            "calls": 50,
            "min": 186114,
            "mean": 222291,
            "median": 226311,
            "max": 226311
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 5,
            "min": 33474,
            "mean": 33474,
            "median": 33474,
            "max": 33474
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 52014,
            "mean": 52014,
            "median": 52014,
            "max": 52014
          },
          "fallback()": {
            "calls": 10,
            "min": 21490,
            "mean": 21490,
            "median": 21490,
            "max": 21490
          },
          "getWETHAddress()": {
            "calls": 5,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "owner()": {
            "calls": 10,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "receive()": {
            "calls": 5,
            "min": 21159,
            "mean": 21159,
            "median": 21159,
            "max": 21159
          },
          "repayETH(address,uint256,address)": {
            "calls": 30,
            "min": 140897,
            "mean": 146968,
            "median": 143865,
            "max": 158497
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 15,
            "min": 203781,
            "mean": 211659,
            "median": 205263,
            "max": 225934
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 216060,
            "mean": 234058,
            "median": 240270,
            "max": 245846
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2780246,
          "size": 14000
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1300,
            "min": 2406,
            "mean": 2410,
            "median": 2406,
            "max": 3044
          },
          "POOL()": {
            "calls": 535,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 59176,
            "min": 269,
            "mean": 269,
            "median": 269,
            "max": 269
          },
          "REWARDS_CONTROLLER()": {
            "calls": 5,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 45416,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "allowance(address,address)": {
            "calls": 130,
            "min": 2565,
            "mean": 2565,
            "median": 2565,
            "max": 2565
          },
          "approve(address,uint256)": {
            "calls": 15540,
            "min": 24360,
            "mean": 24360,
            "median": 24360,
            "max": 24360
          },
          "balanceOf(address)": {
            "calls": 90455,
            "min": 2039,
            "mean": 10809,
            "median": 17039,
            "max": 17242
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 32415,
            "min": 401,
            "mean": 38272,
            "median": 32640,
            "max": 58740
          },
          "decimals()": {
            "calls": 48916,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 7407,
            "mean": 7407,
            "median": 7407,
            "max": 7407
          },
          "getIncentivesController()": {
            "calls": 44956,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getPreviousIndex(address)": {
            "calls": 80,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 115,
            "min": 533,
            "mean": 4272,
            "median": 4533,
            "max": 4533
          },
          "increaseAllowance(address,uint256)": {
            "calls": 55,
            "min": 7409,
            "mean": 21399,
            "median": 24509,
            "max": 24509
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 222926,
            "min": 121984,
            "mean": 205520,
            "median": 206963,
            "max": 297049
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 91620,
            "min": 418,
            "mean": 56888,
            "median": 60428,
            "max": 67645
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 50,
            "min": 267,
            "mean": 39713,
            "median": 43196,
            "max": 60296
          },
          "name()": {
            "calls": 45836,
            "min": 2733,
            "mean": 4961,
            "median": 3178,
            "max": 9298
          },
          "nonces(address)": {
            "calls": 1320,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3925,
            "min": 352,
            "mean": 23290,
            "median": 8391,
            "max": 52565
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 15,
            "min": 10678,
            "mean": 22928,
            "median": 12808,
            "max": 45299
          },
          "scaledBalanceOf(address)": {
            "calls": 131020,
            "min": 462,
            "mean": 2211,
            "median": 2462,
            "max": 2462
          },
          "scaledTotalSupply()": {
            "calls": 3140,
            "min": 339,
            "mean": 1546,
            "median": 2339,
            "max": 2339
          },
          "symbol()": {
            "calls": 45741,
            "min": 2748,
            "mean": 4982,
            "median": 3191,
            "max": 9303
          },
          "totalSupply()": {
            "calls": 49950,
            "min": 360,
            "mean": 5071,
            "median": 5896,
            "max": 17099
          },
          "transfer(address,uint256)": {
            "calls": 5280,
            "min": 325,
            "mean": 94974,
            "median": 100268,
            "max": 165803
          },
          "transferFrom(address,address,uint256)": {
            "calls": 19395,
            "min": 2670,
            "mean": 86775,
            "median": 103457,
            "max": 136352
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 14250,
            "min": 394,
            "mean": 27039,
            "median": 31655,
            "max": 38554
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 36745,
            "min": 279,
            "mean": 27317,
            "median": 32889,
            "max": 32889
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 23953
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 980,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 345,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 1100,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 2610,
            "min": 2551,
            "mean": 24275,
            "median": 24350,
            "max": 24350
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 1330,
            "min": 174505,
            "mean": 181543,
            "median": 180156,
            "max": 223386
          },
          "borrow(bytes32)": {
            "calls": 15,
            "min": 180280,
            "mean": 180280,
            "median": 180280,
            "max": 180280
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 2595,
            "min": 5627,
            "mean": 27385,
            "median": 48565,
            "max": 48565
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 10,
            "min": 23328,
            "mean": 23328,
            "median": 23328,
            "max": 23328
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 2630,
            "min": 6215,
            "mean": 6215,
            "median": 6215,
            "max": 6215
          },
          "dropReserve(address)": {
            "calls": 1285,
            "min": 5529,
            "mean": 5806,
            "median": 5529,
            "max": 76872
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "getConfiguration(address)": {
            "calls": 8330,
            "min": 620,
            "mean": 638,
            "median": 620,
            "max": 2620
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 10,
            "min": 2495,
            "mean": 2495,
            "median": 2495,
            "max": 2495
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 2630,
            "min": 2482,
            "mean": 2482,
            "median": 2482,
            "max": 2482
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 1280,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "getReserveAToken(address)": {
            "calls": 860,
            "min": 509,
            "mean": 555,
            "median": 509,
            "max": 2509
          },
          "getReserveData(address)": {
            "calls": 6170,
            "min": 4658,
            "mean": 19690,
            "median": 20658,
            "max": 23158
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 1365,
            "min": 629,
            "mean": 659,
            "median": 629,
            "max": 4629
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20,
            "min": 655,
            "mean": 3328,
            "median": 3828,
            "max": 5001
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 20,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "getReservesList()": {
            "calls": 10,
            "min": 10259,
            "mean": 10259,
            "median": 10259,
            "max": 10259
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "getUserAccountData(address)": {
            "calls": 5,
            "min": 75929,
            "mean": 75929,
            "median": 75929,
            "max": 75929
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 20,
            "min": 2484,
            "mean": 2484,
            "median": 2484,
            "max": 2484
          },
          "initReserve(address,address,address)": {
            "calls": 3385,
            "min": 5561,
            "mean": 37960,
            "median": 5561,
            "max": 142608
          },
          "initialize(address)": {
            "calls": 345,
            "min": 44814,
            "mean": 44814,
            "median": 44814,
            "max": 44814
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 2578,
            "mean": 2578,
            "median": 2578,
            "max": 2578
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 5,
            "min": 326584,
            "mean": 326584,
            "median": 326584,
            "max": 326584
          },
          "mintToTreasury(address[])": {
            "calls": 10,
            "min": 70108,
            "mean": 71347,
            "median": 71347,
            "max": 72586
          },
          "multicall(bytes[])": {
            "calls": 1295,
            "min": 208008,
            "mean": 208008,
            "median": 208008,
            "max": 208008
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 7198,
            "mean": 7198,
            "median": 7198,
            "max": 7198
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 10,
            "min": 115565,
            "mean": 115565,
            "median": 115565,
            "max": 115565
          },
          "repay(bytes32)": {
            "calls": 5,
            "min": 108768,
            "mean": 108768,
            "median": 108768,
            "max": 108768
          },
          "repayWithATokens(bytes32)": {
            "calls": 5,
            "min": 116270,
            "mean": 116270,
            "median": 116270,
            "max": 116270
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 153363,
            "mean": 159311,
            "median": 159049,
            "max": 161412
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 46286,
            "mean": 46286,
            "median": 46286,
            "max": 46286
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2115,
            "min": 3582,
            "mean": 4807,
            "median": 5536,
            "max": 14582
          },
          "setConfiguration(address,(uint256))": {
            "calls": 10395,
            "min": 1452,
            "mean": 3772,
            "median": 1452,
            "max": 23600
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3840,
            "min": 5560,
            "mean": 10529,
            "median": 9927,
            "max": 16209
          },
          "setUserEMode(uint8)": {
            "calls": 35,
            "min": 17698,
            "mean": 37948,
            "median": 37216,
            "max": 78963
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1285,
            "min": 2580,
            "mean": 2723,
            "median": 2580,
            "max": 39560
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1380,
            "min": 9161,
            "mean": 10544,
            "median": 9161,
            "max": 55260
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 5,
            "min": 24693,
            "mean": 24693,
            "median": 24693,
            "max": 24693
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1310,
            "min": 2604,
            "mean": 3323,
            "median": 2604,
            "max": 54471
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 2715,
            "min": 143944,
            "mean": 194735,
            "median": 195244,
            "max": 195244
          },
          "supply(bytes32)": {
            "calls": 35,
            "min": 197422,
            "mean": 197422,
            "median": 197422,
            "max": 197422
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 245477,
            "mean": 245477,
            "median": 245477,
            "max": 245477
          },
          "syncIndexesState(address)": {
            "calls": 825,
            "min": 6923,
            "mean": 13556,
            "median": 6923,
            "max": 26823
          },
          "syncRatesState(address)": {
            "calls": 825,
            "min": 11715,
            "mean": 11715,
            "median": 11715,
            "max": 11715
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1625,
            "min": 5512,
            "mean": 8832,
            "median": 5512,
            "max": 21151
          },
          "withdraw(bytes32)": {
            "calls": 10,
            "min": 110316,
            "mean": 112534,
            "median": 112534,
            "max": 114753
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 4073201,
          "size": 18535
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 8960,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 23135,
            "min": 8942,
            "mean": 21178,
            "median": 9100,
            "max": 77480
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 2570,
            "min": 15600,
            "mean": 26642,
            "median": 28199,
            "max": 37673
          },
          "dropReserve(address)": {
            "calls": 1305,
            "min": 12823,
            "mean": 13633,
            "median": 12823,
            "max": 98293
          },
          "getConfiguratorLogic()": {
            "calls": 5,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "getPendingLtv(address)": {
            "calls": 3855,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 14120,
            "min": 15648,
            "mean": 23235868,
            "median": 1557408,
            "max": 201659034
          },
          "initialize(address)": {
            "calls": 4025,
            "min": 71813,
            "mean": 89668,
            "median": 89713,
            "max": 89713
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 9060,
            "min": 12554,
            "mean": 76355,
            "median": 76454,
            "max": 88118
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 19485,
            "min": 12577,
            "mean": 62647,
            "median": 71042,
            "max": 71055
          },
          "setBorrowCap(address,uint256)": {
            "calls": 12920,
            "min": 8276,
            "mean": 9180,
            "median": 8286,
            "max": 41234
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 11675,
            "min": 7861,
            "mean": 8132,
            "median": 7871,
            "max": 40819
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 12960,
            "min": 15601,
            "mean": 26221,
            "median": 24836,
            "max": 76855
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 16915,
            "min": 15852,
            "mean": 73198,
            "median": 78100,
            "max": 78136
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 11630,
            "min": 8265,
            "mean": 8410,
            "median": 8275,
            "max": 41223
          },
          "setPoolPause(bool)": {
            "calls": 2575,
            "min": 15600,
            "mean": 15965,
            "median": 15600,
            "max": 78378
          },
          "setPoolPause(bool,uint40)": {
            "calls": 2565,
            "min": 15624,
            "mean": 53503,
            "median": 47200,
            "max": 93479
          },
          "setReserveActive(address,bool)": {
            "calls": 1350,
            "min": 12849,
            "mean": 15252,
            "median": 12849,
            "max": 73817
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 16740,
            "min": 7967,
            "mean": 15700,
            "median": 8125,
            "max": 38777
          },
          "setReserveFactor(address,uint256)": {
            "calls": 12880,
            "min": 15601,
            "mean": 33315,
            "median": 28571,
            "max": 97339
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 14155,
            "min": 7970,
            "mean": 13601,
            "median": 7980,
            "max": 40928
          },
          "setReserveFreeze(address,bool)": {
            "calls": 3910,
            "min": 18288,
            "mean": 45021,
            "median": 49517,
            "max": 69264
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 1500,
            "min": 15749,
            "mean": 26225,
            "median": 15749,
            "max": 87178
          },
          "setReservePause(address,bool)": {
            "calls": 2565,
            "min": 15641,
            "mean": 27722,
            "median": 39756,
            "max": 39756
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 15420,
            "min": 13004,
            "mean": 35913,
            "median": 43246,
            "max": 45542
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 11615,
            "min": 8300,
            "mean": 8448,
            "median": 8310,
            "max": 65868
          },
          "setSupplyCap(address,uint256)": {
            "calls": 14235,
            "min": 8275,
            "mean": 12678,
            "median": 8285,
            "max": 41233
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 1525,
            "min": 12870,
            "mean": 27264,
            "median": 12870,
            "max": 102471
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 5305,
            "min": 12836,
            "mean": 24623,
            "median": 28386,
            "max": 33286
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 1285,
            "min": 12873,
            "mean": 13219,
            "median": 12873,
            "max": 102019
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 4589817,
          "size": 21415
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 32135,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 3755,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 10,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 2570,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 233646,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "approvePositionManager(address,bool)": {
            "calls": 2620,
            "min": 2567,
            "mean": 24291,
            "median": 24366,
            "max": 24366
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 36670,
            "min": 16512,
            "mean": 200635,
            "median": 208732,
            "max": 276636
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 15570,
            "min": 5589,
            "mean": 44946,
            "median": 48529,
            "max": 48529
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 9050,
            "min": 1428,
            "mean": 23291,
            "median": 23328,
            "max": 23328
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 15575,
            "min": 1415,
            "mean": 6207,
            "median": 6215,
            "max": 6215
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 50075,
            "min": 25599,
            "mean": 186098,
            "median": 195310,
            "max": 195310
          },
          "dropReserve(address)": {
            "calls": 1310,
            "min": 5528,
            "mean": 6308,
            "median": 5528,
            "max": 76849
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 10245,
            "min": 5510,
            "mean": 49722,
            "median": 87451,
            "max": 95488
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 22290,
            "min": 6142,
            "mean": 45109,
            "median": 47866,
            "max": 102401
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 1360,
            "min": 24000,
            "mean": 97160,
            "median": 71664,
            "max": 439444
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 65,
            "min": 21471,
            "mean": 269818,
            "median": 148436,
            "max": 633594
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "getConfiguration(address)": {
            "calls": 255872,
            "min": 652,
            "mean": 1802,
            "median": 2652,
            "max": 2652
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 9240,
            "min": 495,
            "mean": 2490,
            "median": 2495,
            "max": 2495
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 23530,
            "min": 482,
            "mean": 2479,
            "median": 2482,
            "max": 2482
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 715,
            "min": 875,
            "mean": 2847,
            "median": 2875,
            "max": 2875
          },
          "getEModeCategoryData(uint8)": {
            "calls": 15,
            "min": 3413,
            "mean": 4743,
            "median": 5404,
            "max": 5413
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 170,
            "min": 2882,
            "mean": 2882,
            "median": 2882,
            "max": 2882
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 273,
            "mean": 273,
            "median": 273,
            "max": 273
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 28074,
            "min": 503,
            "mean": 1210,
            "median": 503,
            "max": 2503
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "getReserveAToken(address)": {
            "calls": 104941,
            "min": 494,
            "mean": 2088,
            "median": 2494,
            "max": 2494
          },
          "getReserveAddressById(uint16)": {
            "calls": 5,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "getReserveData(address)": {
            "calls": 73095,
            "min": 2674,
            "mean": 16356,
            "median": 20674,
            "max": 23174
          },
          "getReserveDeficit(address)": {
            "calls": 11130,
            "min": 493,
            "mean": 2341,
            "median": 2493,
            "max": 2493
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 210070,
            "min": 645,
            "mean": 2144,
            "median": 645,
            "max": 4848
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20396,
            "min": 633,
            "mean": 2359,
            "median": 633,
            "max": 4975
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 69041,
            "min": 482,
            "mean": 2219,
            "median": 2482,
            "max": 2482
          },
          "getReservesList()": {
            "calls": 18445,
            "min": 2240,
            "mean": 16473,
            "median": 10240,
            "max": 325519
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "getUserAccountData(address)": {
            "calls": 29875,
            "min": 2544,
            "mean": 60573,
            "median": 75917,
            "max": 116515
          },
          "getUserConfiguration(address)": {
            "calls": 16890,
            "min": 640,
            "mean": 1718,
            "median": 2640,
            "max": 2640
          },
          "getUserEMode(address)": {
            "calls": 13100,
            "min": 493,
            "mean": 1284,
            "median": 493,
            "max": 2493
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 9765,
            "min": 484,
            "mean": 2213,
            "median": 2484,
            "max": 2484
          },
          "initReserve(address,address,address)": {
            "calls": 224661,
            "min": 5561,
            "mean": 147160,
            "median": 148392,
            "max": 164171
          },
          "initialize(address)": {
            "calls": 3710,
            "min": 26172,
            "mean": 44776,
            "median": 44827,
            "max": 44827
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 2563,
            "mean": 2563,
            "median": 2563,
            "max": 2563
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 31920,
            "min": 20832,
            "mean": 231249,
            "median": 267375,
            "max": 402389
          },
          "mintToTreasury(address[])": {
            "calls": 45,
            "min": 1837,
            "mean": 45995,
            "median": 48592,
            "max": 127413
          },
          "multicall(bytes[])": {
            "calls": 1465,
            "min": 140878,
            "mean": 206934,
            "median": 208170,
            "max": 411011
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 7198,
            "mean": 7198,
            "median": 7198,
            "max": 7198
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 165,
            "min": 11892,
            "mean": 82788,
            "median": 86764,
            "max": 117372
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 1325,
            "min": 68711,
            "mean": 113609,
            "median": 113965,
            "max": 123731
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 105808,
            "mean": 130260,
            "median": 119374,
            "max": 161098
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 46302,
            "mean": 46302,
            "median": 46302,
            "max": 46302
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 12055,
            "min": 3578,
            "mean": 3794,
            "median": 3578,
            "max": 14578
          },
          "setConfiguration(address,(uint256))": {
            "calls": 361076,
            "min": 1430,
            "mean": 15322,
            "median": 23430,
            "max": 23578
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 17430,
            "min": 4255,
            "mean": 11462,
            "median": 11703,
            "max": 16203
          },
          "setUserEMode(uint8)": {
            "calls": 12935,
            "min": 4517,
            "mean": 42584,
            "median": 37214,
            "max": 103339
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1295,
            "min": 2618,
            "mean": 3470,
            "median": 2618,
            "max": 105717
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1650,
            "min": 5258,
            "mean": 12089,
            "median": 9258,
            "max": 86106
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1320,
            "min": 2619,
            "mean": 3614,
            "median": 2619,
            "max": 54488
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 35200,
            "min": 28028,
            "mean": 177079,
            "median": 195309,
            "max": 202526
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 104062,
            "mean": 183807,
            "median": 203998,
            "max": 243361
          },
          "syncIndexesState(address)": {
            "calls": 10990,
            "min": 6901,
            "mean": 13871,
            "median": 6901,
            "max": 45417
          },
          "syncRatesState(address)": {
            "calls": 10990,
            "min": 11699,
            "mean": 11758,
            "median": 11699,
            "max": 16199
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 4955,
            "min": 5528,
            "mean": 17111,
            "median": 21167,
            "max": 21167
          },
          "withdraw(address,uint256,address)": {
            "calls": 2870,
            "min": 29208,
            "mean": 119316,
            "median": 121515,
            "max": 180420
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1906106,
          "size": 9803
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 44941,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "approveDelegation(address,uint256)": {
            "calls": 25,
            "min": 26809,
            "mean": 26809,
            "median": 26809,
            "max": 26809
          },
          "balanceOf(address)": {
            "calls": 18610,
            "min": 453,
            "mean": 9078,
            "median": 3954,
            "max": 17322
          },
          "borrowAllowance(address,address)": {
            "calls": 25,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "burn(address,uint256,uint256)": {
            "calls": 29800,
            "min": 10324,
            "mean": 22114,
            "median": 22124,
            "max": 22139
          },
          "decimals()": {
            "calls": 48801,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 35,
            "min": 334,
            "mean": 27842,
            "median": 20809,
            "max": 55009
          },
          "getIncentivesController()": {
            "calls": 44941,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 222926,
            "min": 121619,
            "mean": 205272,
            "median": 206663,
            "max": 296684
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 36665,
            "min": 22170,
            "mean": 58270,
            "median": 58370,
            "max": 67939
          },
          "name()": {
            "calls": 45446,
            "min": 2711,
            "mean": 4954,
            "median": 3592,
            "max": 9276
          },
          "nonces(address)": {
            "calls": 5,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "scaledBalanceOf(address)": {
            "calls": 93525,
            "min": 447,
            "mean": 1725,
            "median": 2447,
            "max": 2447
          },
          "scaledTotalSupply()": {
            "calls": 224660,
            "min": 356,
            "mean": 2247,
            "median": 2356,
            "max": 2356
          },
          "symbol()": {
            "calls": 45411,
            "min": 2747,
            "mean": 4992,
            "median": 3190,
            "max": 9302
          },
          "totalSupply()": {
            "calls": 950,
            "min": 1907,
            "mean": 5088,
            "median": 5907,
            "max": 17249
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 4701
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 15,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 5,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          },
          "getAssetPrice(address)": {
            "calls": 291720,
            "min": 0,
            "mean": 5431,
            "median": 7630,
            "max": 14857
          },
          "getAssetsPrices(address[])": {
            "calls": 15,
            "min": 5170,
            "mean": 7116,
            "median": 8089,
            "max": 8089
          },
          "getFallbackOracle()": {
            "calls": 15,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "getSourceOfAsset(address)": {
            "calls": 5780,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setAssetSources(address[],address[])": {
            "calls": 130,
            "min": 35617,
            "mean": 56313,
            "median": 58965,
            "max": 60617
          },
          "setFallbackOracle(address)": {
            "calls": 20,
            "min": 58174,
            "mean": 58174,
            "median": 58174,
            "max": 58174
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 853663,
          "size": 3935
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5125,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          },
          "MAX_BORROW_RATE()": {
            "calls": 26910,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 212905,
            "min": 0,
            "mean": 3244,
            "median": 3127,
            "max": 4026
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 14605,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "getInterestRateData(address)": {
            "calls": 1280,
            "min": 3148,
            "mean": 3148,
            "median": 3148,
            "max": 3148
          },
          "getInterestRateDataBps(address)": {
            "calls": 1280,
            "min": 2802,
            "mean": 2802,
            "median": 2802,
            "max": 2802
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 6875,
            "min": 2751,
            "mean": 2751,
            "median": 2751,
            "max": 2751
          },
          "getOptimalUsageRatio(address)": {
            "calls": 10745,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "getVariableRateSlope1(address)": {
            "calls": 10765,
            "min": 2441,
            "mean": 2441,
            "median": 2441,
            "max": 2441
          },
          "getVariableRateSlope2(address)": {
            "calls": 6905,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 14080,
            "min": 27392,
            "mean": 28411,
            "median": 27784,
            "max": 35318
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 32025,
            "min": 27780,
            "mean": 31767,
            "median": 28351,
            "max": 35723
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 407787,
          "size": 1759
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "getGracePeriod()": {
            "calls": 5,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "getSequencerOracle()": {
            "calls": 5,
            "min": 2298,
            "mean": 2298,
            "median": 2298,
            "max": 2298
          },
          "isBorrowAllowed()": {
            "calls": 25,
            "min": 9673,
            "mean": 10535,
            "median": 9673,
            "max": 11829
          },
          "isLiquidationAllowed()": {
            "calls": 25,
            "min": 9668,
            "mean": 10530,
            "median": 9668,
            "max": 11824
          },
          "setGracePeriod(uint256)": {
            "calls": 10,
            "min": 34579,
            "mean": 37584,
            "median": 37584,
            "max": 40589
          },
          "setSequencerOracle(address)": {
            "calls": 10,
            "min": 31789,
            "mean": 32410,
            "median": 32410,
            "max": 33031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 447719,
          "size": 2041
        },
        "functions": {
          "admin()": {
            "calls": 40,
            "min": 21289,
            "mean": 21289,
            "median": 21289,
            "max": 21289
          },
          "fallback()": {
            "calls": 2787471,
            "min": 0,
            "mean": 135613,
            "median": 7304,
            "max": 203895341
          },
          "upgradeTo(address)": {
            "calls": 10,
            "min": 26572,
            "mean": 28499,
            "median": 28499,
            "max": 30426
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 40,
            "min": 28435,
            "mean": 151451,
            "median": 186063,
            "max": 186063
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 585425,
          "size": 2763
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43544,
            "mean": 43544,
            "median": 43544,
            "max": 43544
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43549,
            "mean": 43549,
            "median": 43549,
            "max": 43549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 366857,
          "size": 1751
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43529,
            "mean": 43529,
            "median": 43529,
            "max": 43529
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43549,
            "mean": 43549,
            "median": 43549,
            "max": 43549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 4640057,
          "size": 21559
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 27690,
            "mean": 27690,
            "median": 27690,
            "max": 27690
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 120134,
          "size": 378
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 20860,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "decimals()": {
            "calls": 470,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "latestAnswer()": {
            "calls": 282540,
            "min": 286,
            "mean": 1754,
            "median": 2286,
            "max": 2286
          },
          "name()": {
            "calls": 470,
            "min": 120,
            "mean": 120,
            "median": 120,
            "max": 120
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 138929,
          "size": 428
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 15,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "setAssetPrice(address,uint256)": {
            "calls": 15,
            "min": 25586,
            "mean": 38880,
            "median": 45522,
            "max": 45534
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 273578,
          "size": 1283
        },
        "functions": {
          "latestRoundData()": {
            "calls": 50,
            "min": 4463,
            "mean": 4463,
            "median": 4463,
            "max": 4463
          },
          "setAnswer(bool,uint256)": {
            "calls": 380,
            "min": 26013,
            "mean": 27209,
            "median": 26013,
            "max": 45925
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 476877,
          "size": 1999
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 30,
            "min": 133185,
            "mean": 133185,
            "median": 133185,
            "max": 133185
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 45,
            "min": 133221,
            "mean": 133234,
            "median": 133245,
            "max": 133245
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 97497,
          "size": 377
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 330,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1141343,
          "size": 6553
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1280,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "allowance(address,address)": {
            "calls": 45,
            "min": 542,
            "mean": 1653,
            "median": 2542,
            "max": 2542
          },
          "approve(address,uint256)": {
            "calls": 115090,
            "min": 26021,
            "mean": 45519,
            "median": 46065,
            "max": 46305
          },
          "balanceOf(address)": {
            "calls": 447165,
            "min": 457,
            "mean": 2455,
            "median": 2457,
            "max": 2457
          },
          "decimals()": {
            "calls": 409709,
            "min": 322,
            "mean": 2316,
            "median": 2322,
            "max": 2322
          },
          "mint(address,uint256)": {
            "calls": 32320,
            "min": 36052,
            "mean": 62184,
            "median": 70264,
            "max": 70372
          },
          "name()": {
            "calls": 10400,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "nonces(address)": {
            "calls": 1280,
            "min": 2431,
            "mean": 2431,
            "median": 2431,
            "max": 2431
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 2560,
            "min": 72177,
            "mean": 75638,
            "median": 75633,
            "max": 75789
          },
          "symbol()": {
            "calls": 480,
            "min": 2767,
            "mean": 2767,
            "median": 2767,
            "max": 2767
          },
          "totalSupply()": {
            "calls": 57725,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 35,
            "min": 46510,
            "mean": 50602,
            "median": 51286,
            "max": 51286
          },
          "transferOwnership(address)": {
            "calls": 155,
            "min": 28293,
            "mean": 28293,
            "median": 28293,
            "max": 28293
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 2174,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 3348,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "percentDiv(uint256,uint256)": {
            "calls": 1295,
            "min": 236,
            "mean": 276,
            "median": 280,
            "max": 280
          },
          "percentMul(uint256,uint256)": {
            "calls": 1295,
            "min": 206,
            "mean": 253,
            "median": 274,
            "max": 274
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 227378,
          "size": 839
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 5,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "HALF_WAD()": {
            "calls": 2154,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "RAY()": {
            "calls": 5,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "WAD()": {
            "calls": 3194,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "WAD_RAY_RATIO()": {
            "calls": 8850,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "rayDiv(uint256,uint256)": {
            "calls": 20,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "rayMul(uint256,uint256)": {
            "calls": 15,
            "min": 317,
            "mean": 317,
            "median": 317,
            "max": 317
          },
          "rayToWad(uint256)": {
            "calls": 2575,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "wadDiv(uint256,uint256)": {
            "calls": 1300,
            "min": 283,
            "mean": 319,
            "median": 328,
            "max": 328
          },
          "wadMul(uint256,uint256)": {
            "calls": 1310,
            "min": 250,
            "mean": 289,
            "median": 308,
            "max": 308
          },
          "wadToRay(uint256)": {
            "calls": 2465,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2843860,
          "size": 14295
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 5,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 307,
            "mean": 307,
            "median": 307,
            "max": 307
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 54141,
            "mean": 54141,
            "median": 54141,
            "max": 54141
          },
          "name()": {
            "calls": 5,
            "min": 2742,
            "mean": 2742,
            "median": 2742,
            "max": 2742
          },
          "scaledBalanceOf(address)": {
            "calls": 20,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 5,
            "min": 67627,
            "mean": 67627,
            "median": 67627,
            "max": 67627
          },
          "symbol()": {
            "calls": 5,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 5,
            "min": 60759,
            "mean": 60759,
            "median": 60759,
            "max": 60759
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1906106,
          "size": 9803
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 5,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 53763,
            "mean": 53763,
            "median": 53763,
            "max": 53763
          },
          "name()": {
            "calls": 5,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "symbol()": {
            "calls": 5,
            "min": 2759,
            "mean": 2759,
            "median": 2759,
            "max": 2759
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 473609,
          "size": 1879
        },
        "functions": {
          "REVISION()": {
            "calls": 30,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 30,
            "min": 156405,
            "mean": 156405,
            "median": 156405,
            "max": 156405
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 5204,
            "mean": 5204,
            "median": 5204,
            "max": 5204
          },
          "text()": {
            "calls": 30,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "upgradeTo(address)": {
            "calls": 5,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "value()": {
            "calls": 35,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "values(uint256)": {
            "calls": 60,
            "min": 4467,
            "mean": 4467,
            "median": 4467,
            "max": 4467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 474689,
          "size": 1884
        },
        "functions": {
          "REVISION()": {
            "calls": 10,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 5,
            "min": 51014,
            "mean": 51014,
            "median": 51014,
            "max": 51014
          },
          "setValue(uint256)": {
            "calls": 10,
            "min": 5204,
            "mean": 5204,
            "median": 5204,
            "max": 5204
          },
          "text()": {
            "calls": 10,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "value()": {
            "calls": 20,
            "min": 2293,
            "mean": 2293,
            "median": 2293,
            "max": 2293
          },
          "values(uint256)": {
            "calls": 20,
            "min": 4467,
            "mean": 4467,
            "median": 4467,
            "max": 4467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132782,
          "size": 302
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 24624,
            "mean": 24624,
            "median": 24624,
            "max": 24624
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 133646,
          "size": 306
        },
        "functions": {
          "initialize(address)": {
            "calls": 5,
            "min": 7533,
            "mean": 7533,
            "median": 7533,
            "max": 7533
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 1575282,
          "size": 7384
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 8130,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 100,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 4015,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "addAssetListingAdmin(address)": {
            "calls": 15,
            "min": 50374,
            "mean": 50374,
            "median": 50374,
            "max": 50374
          },
          "addBridge(address)": {
            "calls": 10,
            "min": 50391,
            "mean": 50391,
            "median": 50391,
            "max": 50391
          },
          "addEmergencyAdmin(address)": {
            "calls": 15,
            "min": 50373,
            "mean": 50373,
            "median": 50373,
            "max": 50373
          },
          "addFlashBorrower(address)": {
            "calls": 20,
            "min": 39768,
            "mean": 47734,
            "median": 50390,
            "max": 50390
          },
          "addPoolAdmin(address)": {
            "calls": 3965,
            "min": 50362,
            "mean": 50373,
            "median": 50374,
            "max": 50374
          },
          "addRiskAdmin(address)": {
            "calls": 70,
            "min": 50380,
            "mean": 50380,
            "median": 50380,
            "max": 50380
          },
          "grantRole(bytes32,address)": {
            "calls": 40,
            "min": 40317,
            "mean": 49724,
            "median": 51068,
            "max": 51068
          },
          "hasRole(bytes32,address)": {
            "calls": 95,
            "min": 2519,
            "mean": 2519,
            "median": 2519,
            "max": 2519
          },
          "isAssetListingAdmin(address)": {
            "calls": 19440,
            "min": 460,
            "mean": 2061,
            "median": 2460,
            "max": 2460
          },
          "isEmergencyAdmin(address)": {
            "calls": 21825,
            "min": 2455,
            "mean": 2455,
            "median": 2455,
            "max": 2455
          },
          "isFlashBorrower(address)": {
            "calls": 1365,
            "min": 2497,
            "mean": 2497,
            "median": 2497,
            "max": 2497
          },
          "isPoolAdmin(address)": {
            "calls": 283400,
            "min": 472,
            "mean": 1561,
            "median": 2472,
            "max": 2472
          },
          "isRiskAdmin(address)": {
            "calls": 205625,
            "min": 455,
            "mean": 1365,
            "median": 455,
            "max": 2455
          },
          "removeAssetListingAdmin(address)": {
            "calls": 10,
            "min": 28477,
            "mean": 28477,
            "median": 28477,
            "max": 28477
          },
          "removeBridge(address)": {
            "calls": 5,
            "min": 28474,
            "mean": 28474,
            "median": 28474,
            "max": 28474
          },
          "removeEmergencyAdmin(address)": {
            "calls": 5,
            "min": 28460,
            "mean": 28460,
            "median": 28460,
            "max": 28460
          },
          "removeFlashBorrower(address)": {
            "calls": 10,
            "min": 28475,
            "mean": 34121,
            "median": 34121,
            "max": 39767
          },
          "removePoolAdmin(address)": {
            "calls": 5,
            "min": 28461,
            "mean": 28461,
            "median": 28461,
            "max": 28461
          },
          "removeRiskAdmin(address)": {
            "calls": 5,
            "min": 28460,
            "mean": 28460,
            "median": 28460,
            "max": 28460
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 30,
            "min": 38172,
            "mean": 46852,
            "median": 48589,
            "max": 48589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 2018422,
          "size": 10319
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 5450,
            "min": 359,
            "mean": 885,
            "median": 359,
            "max": 2359
          },
          "getACLManager()": {
            "calls": 259285,
            "min": 339,
            "mean": 1343,
            "median": 2339,
            "max": 2339
          },
          "getAddress(bytes32)": {
            "calls": 93565,
            "min": 386,
            "mean": 1914,
            "median": 2386,
            "max": 2386
          },
          "getMarketId()": {
            "calls": 30,
            "min": 2747,
            "mean": 2747,
            "median": 2747,
            "max": 2747
          },
          "getPool()": {
            "calls": 13135,
            "min": 343,
            "mean": 1067,
            "median": 343,
            "max": 2343
          },
          "getPoolConfigurator()": {
            "calls": 985363,
            "min": 376,
            "mean": 693,
            "median": 376,
            "max": 2376
          },
          "getPoolDataProvider()": {
            "calls": 13200,
            "min": 361,
            "mean": 1192,
            "median": 361,
            "max": 2361
          },
          "getPriceOracle()": {
            "calls": 165415,
            "min": 379,
            "mean": 2234,
            "median": 2379,
            "max": 2379
          },
          "getPriceOracleSentinel()": {
            "calls": 79205,
            "min": 360,
            "mean": 2359,
            "median": 2360,
            "max": 2360
          },
          "owner()": {
            "calls": 4030,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "setACLAdmin(address)": {
            "calls": 340,
            "min": 23870,
            "mean": 46852,
            "median": 47496,
            "max": 47496
          },
          "setACLManager(address)": {
            "calls": 20,
            "min": 23909,
            "mean": 37349,
            "median": 38979,
            "max": 47529
          },
          "setAddress(bytes32,address)": {
            "calls": 9075,
            "min": 24405,
            "mean": 48036,
            "median": 48154,
            "max": 48430
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 25,
            "min": 24118,
            "mean": 219330,
            "median": 49252,
            "max": 499468
          },
          "setMarketId(string)": {
            "calls": 10,
            "min": 24173,
            "mean": 27883,
            "median": 27883,
            "max": 31593
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 20,
            "min": 23835,
            "mean": 282310,
            "median": 289984,
            "max": 525440
          },
          "setPoolDataProvider(address)": {
            "calls": 20,
            "min": 23909,
            "mean": 37349,
            "median": 38979,
            "max": 47529
          },
          "setPoolImpl(address)": {
            "calls": 20,
            "min": 23835,
            "mean": 268823,
            "median": 276497,
            "max": 498463
          },
          "setPriceOracle(address)": {
            "calls": 20,
            "min": 23892,
            "mean": 37332,
            "median": 38962,
            "max": 47512
          },
          "setPriceOracleSentinel(address)": {
            "calls": 30,
            "min": 23909,
            "mean": 40742,
            "median": 47529,
            "max": 47529
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2595
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 20,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 30,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getAddressesProvidersList()": {
            "calls": 25,
            "min": 2501,
            "mean": 4794,
            "median": 4793,
            "max": 7092
          },
          "owner()": {
            "calls": 4015,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 30,
            "min": 23927,
            "mean": 103639,
            "median": 119582,
            "max": 119582
          },
          "unregisterAddressesProvider(address)": {
            "calls": 20,
            "min": 25958,
            "mean": 38588,
            "median": 39664,
            "max": 49067
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 861834,
          "size": 4008
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 204939,
            "mean": 278075,
            "median": 278047,
            "max": 283429
          },
          "getEmissionAdmin(address)": {
            "calls": 30,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "getRewardsController()": {
            "calls": 10,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "owner()": {
            "calls": 10,
            "min": 2298,
            "mean": 2298,
            "median": 2298,
            "max": 2298
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 58188,
            "mean": 58188,
            "median": 58188,
            "max": 58188
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 43787,
            "mean": 43787,
            "median": 43787,
            "max": 43787
          },
          "setEmissionAdmin(address,address)": {
            "calls": 235,
            "min": 48303,
            "mean": 48310,
            "median": 48315,
            "max": 48315
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 57401,
            "mean": 57401,
            "median": 57401,
            "max": 57401
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 46267,
            "mean": 46267,
            "median": 46267,
            "max": 46267
          },
          "setRewardsController(address)": {
            "calls": 5,
            "min": 28580,
            "mean": 28580,
            "median": 28580,
            "max": 28580
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 43843,
            "mean": 43843,
            "median": 43843,
            "max": 43843
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3467273,
          "size": 15946
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 4030,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "claimAllRewards(address[],address)": {
            "calls": 5,
            "min": 86667,
            "mean": 86667,
            "median": 86667,
            "max": 86667
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 5,
            "min": 88953,
            "mean": 88953,
            "median": 88953,
            "max": 88953
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 5,
            "min": 86544,
            "mean": 86544,
            "median": 86544,
            "max": 86544
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 3682,
            "min": 665,
            "mean": 71331,
            "median": 80422,
            "max": 114568
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 5,
            "min": 83524,
            "mean": 83524,
            "median": 83524,
            "max": 83524
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 5,
            "min": 81181,
            "mean": 81181,
            "median": 81181,
            "max": 81181
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 168352,
            "mean": 241500,
            "median": 241484,
            "max": 246842
          },
          "getAllUserRewards(address[],address)": {
            "calls": 5,
            "min": 26676,
            "mean": 26676,
            "median": 26676,
            "max": 26676
          },
          "getAssetDecimals(address)": {
            "calls": 10,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getAssetIndex(address,address)": {
            "calls": 48515,
            "min": 2089,
            "mean": 9744,
            "median": 10171,
            "max": 15271
          },
          "getClaimer(address)": {
            "calls": 2570,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "getDistributionEnd(address,address)": {
            "calls": 5,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "getEmissionManager()": {
            "calls": 20,
            "min": 234,
            "mean": 234,
            "median": 234,
            "max": 234
          },
          "getRewardOracle(address)": {
            "calls": 5,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "getRewardsByAsset(address)": {
            "calls": 12105,
            "min": 2759,
            "mean": 5109,
            "median": 5192,
            "max": 7623
          },
          "getRewardsData(address,address)": {
            "calls": 15,
            "min": 3268,
            "mean": 3268,
            "median": 3268,
            "max": 3268
          },
          "getRewardsList()": {
            "calls": 150,
            "min": 4880,
            "mean": 4880,
            "median": 4880,
            "max": 4880
          },
          "getTransferStrategy(address)": {
            "calls": 5,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 5,
            "min": 6908,
            "mean": 6908,
            "median": 6908,
            "max": 6908
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 5,
            "min": 2658,
            "mean": 2658,
            "median": 2658,
            "max": 2658
          },
          "getUserRewards(address[],address,address)": {
            "calls": 1335,
            "min": 10950,
            "mean": 16349,
            "median": 16249,
            "max": 21173
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 271700,
            "min": 517,
            "mean": 2143,
            "median": 2517,
            "max": 36337
          },
          "initialize(address)": {
            "calls": 4015,
            "min": 24729,
            "mean": 24730,
            "median": 24729,
            "max": 25882
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 24036,
            "mean": 24036,
            "median": 24036,
            "max": 24036
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 9381,
            "mean": 9381,
            "median": 9381,
            "max": 9381
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 21741,
            "mean": 21741,
            "median": 21741,
            "max": 21741
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 12087,
            "mean": 12087,
            "median": 12087,
            "max": 12087
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 9627,
            "mean": 9627,
            "median": 9627,
            "max": 9627
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 311340,
          "size": 1539
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 5,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 505888,
          "size": 2911
        },
        "functions": {
          "dropApproval()": {
            "calls": 5,
            "min": 25646,
            "mean": 25646,
            "median": 25646,
            "max": 25646
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 5,
            "min": 52043,
            "mean": 52043,
            "median": 52043,
            "max": 52043
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 199,
            "mean": 199,
            "median": 199,
            "max": 199
          },
          "getRewardsAdmin()": {
            "calls": 5,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          },
          "getStakeContract()": {
            "calls": 5,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "getUnderlyingToken()": {
            "calls": 5,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "performTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 26677,
            "mean": 26677,
            "median": 26677,
            "max": 26677
          },
          "renewApproval()": {
            "calls": 5,
            "min": 27515,
            "mean": 27515,
            "median": 27515,
            "max": 27515
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1487936,
          "size": 6731
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 445,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "approve(address,address,uint256)": {
            "calls": 40,
            "min": 2469,
            "mean": 15969,
            "median": 15969,
            "max": 29469
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 19374,
            "mean": 19418,
            "median": 19418,
            "max": 19462
          },
          "cancelStream(uint256)": {
            "calls": 20,
            "min": 7445,
            "mean": 41426,
            "median": 34361,
            "max": 89539
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 85,
            "min": 2446,
            "mean": 121711,
            "median": 205141,
            "max": 205141
          },
          "getNextStreamId()": {
            "calls": 5,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "getStream(uint256)": {
            "calls": 30,
            "min": 2455,
            "mean": 7538,
            "median": 2455,
            "max": 17706
          },
          "grantRole(bytes32,address)": {
            "calls": 440,
            "min": 6943,
            "mean": 18017,
            "median": 18017,
            "max": 29092
          },
          "initialize(uint256,address)": {
            "calls": 4365,
            "min": 94429,
            "mean": 115423,
            "median": 116538,
            "max": 116538
          },
          "isFundsAdmin(address)": {
            "calls": 15,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "receive()": {
            "calls": 20,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "transfer(address,address,uint256)": {
            "calls": 40,
            "min": 2481,
            "mean": 18675,
            "median": 18675,
            "max": 34869
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 30,
            "min": 7467,
            "mean": 34772,
            "median": 19876,
            "max": 86154
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 540074,
          "size": 2547
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 1290,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "RECIPIENT_B()": {
            "calls": 1290,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 11565,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "receive()": {
            "calls": 1290,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 1295,
            "min": 23595,
            "mean": 90066,
            "median": 92477,
            "max": 92477
          },
          "splitRevenue(address[])": {
            "calls": 2590,
            "min": 24077,
            "mean": 129232,
            "median": 132049,
            "max": 132049
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 3557749,
          "size": 26906
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 4130,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 3093981,
          "size": 18770
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 4005,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 6955709,
          "size": 34031
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 3880,
            "min": 17612,
            "mean": 17612,
            "median": 17612,
            "max": 17612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 11164724,
          "size": 49791
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 3880,
            "min": 8929,
            "mean": 8929,
            "median": 8929,
            "max": 8929
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 9333192,
          "size": 43234
        },
        "functions": {
          "getPoolReport()": {
            "calls": 405,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 992914,
          "size": 6456
        },
        "functions": {
          "getMiscReport()": {
            "calls": 4130,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5586889,
          "size": 28842
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 165,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 8206310,
          "size": 40898
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 4130,
            "min": 17612,
            "mean": 17612,
            "median": 17612,
            "max": 17612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 8783872,
          "size": 40696
        },
        "functions": {
          "getPoolReport()": {
            "calls": 3725,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 6996584,
          "size": 36995
        },
        "functions": {
          "getInitialReport()": {
            "calls": 4130,
            "min": 6754,
            "mean": 6754,
            "median": 6754,
            "max": 6754
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 3880,
            "min": 648594,
            "mean": 650851,
            "median": 648594,
            "max": 769398
          },
          "setProtocolDataProvider(address)": {
            "calls": 4005,
            "min": 59221,
            "mean": 59232,
            "median": 59233,
            "max": 59233
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 4015,
            "min": 2770854,
            "mean": 3254633,
            "median": 3254743,
            "max": 3280317
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 4005,
            "min": 46540,
            "mean": 46544,
            "median": 46540,
            "max": 46612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4795784,
          "size": 24485
        },
        "functions": {
          "getTokensReport()": {
            "calls": 4005,
            "min": 4582,
            "mean": 4582,
            "median": 4582,
            "max": 4582
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 2426234,
          "size": 11249
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 1280,
            "min": 55375,
            "mean": 104501,
            "median": 55647,
            "max": 163395
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 3840,
            "min": 33431,
            "mean": 82789,
            "median": 56674,
            "max": 167097
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1280,
            "min": 54957,
            "mean": 105814,
            "median": 65043,
            "max": 162977
          },
          "collectAndUpdateRewards(address)": {
            "calls": 1285,
            "min": 45851,
            "mean": 86776,
            "median": 68390,
            "max": 125331
          },
          "getClaimableRewards(address,address)": {
            "calls": 17025,
            "min": 24827,
            "mean": 27605,
            "median": 27662,
            "max": 27665
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "getTotalClaimableRewards(address)": {
            "calls": 1285,
            "min": 26545,
            "mean": 31797,
            "median": 31844,
            "max": 31847
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 5480,
            "min": 2538,
            "mean": 2538,
            "median": 2538,
            "max": 2538
          },
          "isRegisteredRewardToken(address)": {
            "calls": 15,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "mint(address,uint256)": {
            "calls": 12260,
            "min": 53022,
            "mean": 94511,
            "median": 95143,
            "max": 98125
          },
          "mockInit(address)": {
            "calls": 85,
            "min": 78279,
            "mean": 78279,
            "median": 78279,
            "max": 78279
          },
          "refreshRewardTokens()": {
            "calls": 11535,
            "min": 113916,
            "mean": 113916,
            "median": 113916,
            "max": 114188
          },
          "rewardTokens()": {
            "calls": 5,
            "min": 4879,
            "mean": 4879,
            "median": 4879,
            "max": 4879
          },
          "transfer(address,uint256)": {
            "calls": 2560,
            "min": 56820,
            "mean": 71921,
            "median": 68145,
            "max": 99454
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1160425,
          "size": 6641
        },
        "functions": {
          "decimals()": {
            "calls": 11535,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 4937,
            "min": 2541,
            "mean": 3582,
            "median": 4541,
            "max": 4541
          },
          "mint(address,uint256)": {
            "calls": 12260,
            "min": 50848,
            "mean": 67164,
            "median": 68202,
            "max": 68202
          },
          "scaledTotalSupply()": {
            "calls": 60025,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "transfer(address,uint256)": {
            "calls": 12260,
            "min": 29382,
            "mean": 45536,
            "median": 46566,
            "max": 46566
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2904826,
          "size": 13552
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2560,
            "min": 26003,
            "mean": 45549,
            "median": 45951,
            "max": 46047
          },
          "balanceOf(address)": {
            "calls": 12805,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "convertToAssets(uint256)": {
            "calls": 1280,
            "min": 14934,
            "mean": 14934,
            "median": 14934,
            "max": 14934
          },
          "convertToShares(uint256)": {
            "calls": 1280,
            "min": 14983,
            "mean": 14983,
            "median": 14983,
            "max": 14983
          },
          "decimals()": {
            "calls": 1280,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "depositATokens(uint256,address)": {
            "calls": 14085,
            "min": 56006,
            "mean": 183181,
            "median": 195539,
            "max": 200675
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 6400,
            "min": 70633,
            "mean": 230744,
            "median": 250483,
            "max": 335845
          },
          "latestAnswer()": {
            "calls": 1285,
            "min": 20975,
            "mean": 20975,
            "median": 20975,
            "max": 20975
          },
          "maxDeposit(address)": {
            "calls": 1295,
            "min": 34336,
            "mean": 46195,
            "median": 46334,
            "max": 46334
          },
          "maxMint(address)": {
            "calls": 5,
            "min": 34510,
            "mean": 34510,
            "median": 34510,
            "max": 34510
          },
          "maxRedeem(address)": {
            "calls": 3840,
            "min": 12945,
            "mean": 20345,
            "median": 24039,
            "max": 24051
          },
          "mint(uint256,address)": {
            "calls": 2560,
            "min": 63465,
            "mean": 177577,
            "median": 177542,
            "max": 291613
          },
          "mockInit(address)": {
            "calls": 140,
            "min": 130672,
            "mean": 130672,
            "median": 130672,
            "max": 130672
          },
          "previewDeposit(uint256)": {
            "calls": 3840,
            "min": 15023,
            "mean": 15023,
            "median": 15023,
            "max": 15023
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 14979,
            "mean": 14979,
            "median": 14979,
            "max": 14979
          },
          "previewRedeem(uint256)": {
            "calls": 2560,
            "min": 14941,
            "mean": 14941,
            "median": 14941,
            "max": 14941
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 15074,
            "mean": 15074,
            "median": 15074,
            "max": 15074
          },
          "redeem(uint256,address,address)": {
            "calls": 1280,
            "min": 153592,
            "mean": 153792,
            "median": 153842,
            "max": 153938
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 3840,
            "min": 39292,
            "mean": 111521,
            "median": 147306,
            "max": 148008
          },
          "totalAssets()": {
            "calls": 1290,
            "min": 17020,
            "mean": 17020,
            "median": 17020,
            "max": 17020
          },
          "withdraw(uint256,address,address)": {
            "calls": 2560,
            "min": 47522,
            "mean": 101673,
            "median": 101643,
            "max": 155764
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 1068304,
          "size": 5056
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 182768,
            "mean": 182768,
            "median": 182768,
            "max": 182768
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 1056554,
          "size": 4918
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 139483,
            "mean": 139483,
            "median": 139483,
            "max": 139483
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 1055906,
          "size": 4915
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 41183,
            "mean": 41183,
            "median": 41183,
            "max": 41183
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 1002839,
          "size": 4662
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 78983,
            "mean": 78983,
            "median": 78983,
            "max": 78983
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 1058246,
          "size": 4927
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 80569,
            "mean": 80569,
            "median": 80569,
            "max": 80569
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 1056950,
          "size": 4921
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 30632,
            "mean": 30632,
            "median": 30632,
            "max": 30632
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 1058246,
          "size": 4927
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 80569,
            "mean": 80569,
            "median": 80569,
            "max": 80569
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 1059119,
          "size": 4931
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 30713,
            "mean": 30713,
            "median": 30713,
            "max": 30713
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 1319756,
          "size": 6354
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 322911,
            "mean": 322911,
            "median": 322911,
            "max": 322911
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 997651,
          "size": 4566
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 86013,
            "mean": 86013,
            "median": 86013,
            "max": 86013
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 1034486,
          "size": 4736
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 47850,
            "mean": 47850,
            "median": 47850,
            "max": 47850
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 996847,
          "size": 4562
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 42755,
            "mean": 42755,
            "median": 42755,
            "max": 42755
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 1108544,
          "size": 5233
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1624798,
            "mean": 1624798,
            "median": 1624798,
            "max": 1624798
          },
          "newListings()": {
            "calls": 20,
            "min": 2170,
            "mean": 2170,
            "median": 2170,
            "max": 2170
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 1207310,
          "size": 5866
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1624644,
            "mean": 1624644,
            "median": 1624644,
            "max": 1624644
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 2609,
            "mean": 2609,
            "median": 2609,
            "max": 2609
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1341132,
          "size": 6510
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1740580,
            "mean": 1740580,
            "median": 1740580,
            "max": 1740580
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 2620,
            "mean": 2620,
            "median": 2620,
            "max": 2620
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 1241920,
          "size": 5875
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1740727,
            "mean": 1740727,
            "median": 1740727,
            "max": 1740727
          },
          "newListings()": {
            "calls": 20,
            "min": 2181,
            "mean": 2181,
            "median": 2181,
            "max": 2181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 1107699,
          "size": 5237
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 59983,
            "mean": 59983,
            "median": 59983,
            "max": 59983
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 1057622,
          "size": 4923
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 126813,
            "mean": 126813,
            "median": 126813,
            "max": 126813
          },
          "rateStrategiesUpdates()": {
            "calls": 20,
            "min": 1031,
            "mean": 1031,
            "median": 1031,
            "max": 1031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1911491,
          "size": 9828
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 14090,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "POOL()": {
            "calls": 14090,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 19210,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "approve(address,uint256)": {
            "calls": 5,
            "min": 21604,
            "mean": 21604,
            "median": 21604,
            "max": 21604
          },
          "approveDelegation(address,uint256)": {
            "calls": 1280,
            "min": 26809,
            "mean": 26809,
            "median": 26809,
            "max": 26809
          },
          "burn(address,uint256,uint256)": {
            "calls": 2560,
            "min": 26124,
            "mean": 26124,
            "median": 26124,
            "max": 26124
          },
          "decimals()": {
            "calls": 14090,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21611,
            "mean": 21611,
            "median": 21611,
            "max": 21611
          },
          "getIncentivesController()": {
            "calls": 14090,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "increaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21606,
            "mean": 21606,
            "median": 21606,
            "max": 21606
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 7680,
            "min": 45535,
            "mean": 180065,
            "median": 206590,
            "max": 296684
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 5120,
            "min": 60388,
            "mean": 62780,
            "median": 60388,
            "max": 69957
          },
          "name()": {
            "calls": 14090,
            "min": 2711,
            "mean": 3727,
            "median": 2720,
            "max": 9276
          },
          "scaledBalanceOf(address)": {
            "calls": 5120,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "symbol()": {
            "calls": 14090,
            "min": 2732,
            "mean": 3781,
            "median": 2744,
            "max": 9287
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 21606,
            "mean": 21606,
            "median": 21606,
            "max": 21606
          },
          "transferFrom(address,address,uint256)": {
            "calls": 5,
            "min": 21753,
            "mean": 21753,
            "median": 21753,
            "max": 21753
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 93203605,
          "size": 463866
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 15,
            "min": 74589,
            "mean": 74784,
            "median": 74877,
            "max": 74887
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 10,
            "min": 76726,
            "mean": 76726,
            "median": 76726,
            "max": 76726
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 5,
            "min": 143419,
            "mean": 143419,
            "median": 143419,
            "max": 143419
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 110,
            "min": 381680,
            "mean": 686278,
            "median": 739732,
            "max": 741618
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 5,
            "min": 629720,
            "mean": 629720,
            "median": 629720,
            "max": 629720
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 10,
            "min": 58588,
            "mean": 74293,
            "median": 74293,
            "max": 89998
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 35,
            "min": 61324,
            "mean": 73007,
            "median": 74995,
            "max": 75004
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 10,
            "min": 418630,
            "mean": 628427,
            "median": 628427,
            "max": 838224
          },
          "mintToTreasury(uint8)": {
            "calls": 15,
            "min": 468059,
            "mean": 488755,
            "median": 488535,
            "max": 509673
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 25,
            "min": 413113,
            "mean": 515658,
            "median": 540038,
            "max": 603860
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 10,
            "min": 546191,
            "mean": 583854,
            "median": 583854,
            "max": 621518
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 150617,
            "mean": 150617,
            "median": 150617,
            "max": 150617
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 121887,
            "mean": 129671,
            "median": 133564,
            "max": 133564
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 25,
            "min": 495600,
            "mean": 528197,
            "median": 517062,
            "max": 565170
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 5,
            "min": 537154,
            "mean": 537154,
            "median": 537154,
            "max": 537154
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 20,
            "min": 510456,
            "mean": 522044,
            "median": 510456,
            "max": 556809
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 25,
            "min": 35768,
            "mean": 36003,
            "median": 36140,
            "max": 36152
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 5,
            "min": 498591,
            "mean": 498591,
            "median": 498591,
            "max": 498591
          },
          "setPoolPause(bool,uint40)": {
            "calls": 5,
            "min": 515699,
            "mean": 515699,
            "median": 515699,
            "max": 515699
          },
          "setReserveActive(bool,uint8)": {
            "calls": 15,
            "min": 521147,
            "mean": 577188,
            "median": 525537,
            "max": 684880
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 30,
            "min": 498636,
            "mean": 534647,
            "median": 527426,
            "max": 591291
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 15,
            "min": 496100,
            "mean": 546508,
            "median": 542502,
            "max": 600923
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 5,
            "min": 532934,
            "mean": 532934,
            "median": 532934,
            "max": 532934
          },
          "setUserEMode(uint8)": {
            "calls": 25,
            "min": 410916,
            "mean": 547425,
            "median": 603325,
            "max": 603325
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 15,
            "min": 383585,
            "mean": 486018,
            "median": 527887,
            "max": 546584
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 115,
            "min": 588659,
            "mean": 1054845,
            "median": 1196411,
            "max": 1203503
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 443243,
            "mean": 443243,
            "median": 443243,
            "max": 443243
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 5,
            "min": 624666,
            "mean": 624666,
            "median": 624666,
            "max": 624666
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 642926,
            "mean": 642926,
            "median": 642926,
            "max": 642926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 136370,
          "size": 453
        },
        "functions": {
          "latestAnswer()": {
            "calls": 1465,
            "min": 270,
            "mean": 1068,
            "median": 270,
            "max": 2270
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 4023012,
          "size": 17073
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 3840,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "WBTC_ADDRESS()": {
            "calls": 3840,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "execute()": {
            "calls": 3855,
            "min": 4643490,
            "mean": 4643570,
            "median": 4643577,
            "max": 4643577
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 84001,
          "size": 174
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 525,
            "min": 179,
            "mean": 179,
            "median": 179,
            "max": 179
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 128989,
          "size": 382
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 25,
            "min": 157,
            "mean": 157,
            "median": 157,
            "max": 157
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 4663006,
          "size": 22740
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 1230,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "approve(address,uint256)": {
            "calls": 100,
            "min": 24360,
            "mean": 24360,
            "median": 24360,
            "max": 24360
          },
          "balanceOf(address)": {
            "calls": 1265,
            "min": 17046,
            "mean": 17200,
            "median": 17249,
            "max": 17249
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 50,
            "min": 44478,
            "mean": 70264,
            "median": 66023,
            "max": 83123
          },
          "delegate(address)": {
            "calls": 130,
            "min": 5745,
            "mean": 63749,
            "median": 66503,
            "max": 86403
          },
          "delegateByType(address,uint8)": {
            "calls": 185,
            "min": 24821,
            "mean": 43955,
            "median": 46525,
            "max": 58845
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 150,
            "min": 5120,
            "mean": 6275,
            "median": 7281,
            "max": 7293
          },
          "getDelegates(address)": {
            "calls": 620,
            "min": 5119,
            "mean": 7849,
            "median": 9487,
            "max": 9487
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 2590,
            "min": 5076,
            "mean": 5257,
            "median": 5259,
            "max": 5265
          },
          "getPowersCurrent(address)": {
            "calls": 45,
            "min": 5730,
            "mean": 5984,
            "median": 6057,
            "max": 6057
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 240,
            "min": 54152,
            "mean": 54152,
            "median": 54152,
            "max": 54152
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 235,
            "min": 29009,
            "mean": 53390,
            "median": 46109,
            "max": 84639
          },
          "scaledBalanceOf(address)": {
            "calls": 1325,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "totalSupply()": {
            "calls": 25,
            "min": 5896,
            "mean": 5896,
            "median": 5896,
            "max": 5896
          },
          "transfer(address,uint256)": {
            "calls": 80,
            "min": 75809,
            "mean": 109100,
            "median": 110373,
            "max": 129188
          },
          "transferFrom(address,address,uint256)": {
            "calls": 100,
            "min": 83046,
            "mean": 125289,
            "median": 120918,
            "max": 179972
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 75,
            "min": 36059,
            "mean": 67910,
            "median": 65312,
            "max": 113112
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 25,
            "min": 32818,
            "mean": 32818,
            "median": 32818,
            "max": 32818
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 311358,
          "size": 1588
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 10,
            "min": 1226,
            "mean": 1226,
            "median": 1226,
            "max": 1226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 53113,
          "size": 298
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 105,
            "min": 422,
            "mean": 1731,
            "median": 2922,
            "max": 2922
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908573,
          "size": 3990
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 20,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "balanceOf(address)": {
            "calls": 42535,
            "min": 2439,
            "mean": 2439,
            "median": 2439,
            "max": 2439
          },
          "initialize(string,string,uint8)": {
            "calls": 590,
            "min": 156683,
            "mean": 156683,
            "median": 156683,
            "max": 156683
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "deployment": {
          "gas": 0,
          "size": 1123
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2256,
            "mean": 2256,
            "median": 2256,
            "max": 2256
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
        "deployment": {
          "gas": 593292,
          "size": 2944
        },
        "functions": {
          "fallback()": {
            "calls": 70835,
            "min": 5024,
            "mean": 25896,
            "median": 7202,
            "max": 2419503
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/dependencies/weth/WETH9.sol:WETH9",
        "deployment": {
          "gas": 510542,
          "size": 2231
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 100,
            "min": 537,
            "mean": 2137,
            "median": 2537,
            "max": 2537
          },
          "approve(address,uint256)": {
            "calls": 17765,
            "min": 28784,
            "mean": 44745,
            "median": 45992,
            "max": 46256
          },
          "balanceOf(address)": {
            "calls": 98085,
            "min": 421,
            "mean": 2417,
            "median": 2421,
            "max": 2421
          },
          "decimals()": {
            "calls": 12190,
            "min": 283,
            "mean": 2241,
            "median": 2283,
            "max": 2283
          },
          "deposit()": {
            "calls": 255,
            "min": 44893,
            "mean": 44893,
            "median": 44893,
            "max": 44893
          },
          "name()": {
            "calls": 80,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "symbol()": {
            "calls": 230,
            "min": 2621,
            "mean": 2621,
            "median": 2621,
            "max": 2621
          },
          "transfer(address,uint256)": {
            "calls": 255,
            "min": 46552,
            "mean": 46552,
            "median": 46552,
            "max": 46552
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapLiquiditySwapAdapter.sol:ParaSwapLiquiditySwapAdapter",
        "deployment": {
          "gas": 1708749,
          "size": 8319
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "swapAndDeposit(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 306301,
            "mean": 393195,
            "median": 423618,
            "max": 449668
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapRepayAdapter.sol:ParaSwapRepayAdapter",
        "deployment": {
          "gas": 1904264,
          "size": 9300
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "rescueTokens(address)": {
            "calls": 5,
            "min": 35163,
            "mean": 35163,
            "median": 35163,
            "max": 35163
          },
          "swapAndRepay(address,address,uint256,uint256,uint256,uint256,bytes,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 20,
            "min": 333873,
            "mean": 426616,
            "median": 447700,
            "max": 477192
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/extensions/paraswap-adapters/ParaSwapWithdrawSwapAdapter.sol:ParaSwapWithdrawSwapAdapter",
        "deployment": {
          "gas": 1363943,
          "size": 6710
        },
        "functions": {
          "owner()": {
            "calls": 10,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "withdrawAndSwap(address,address,uint256,uint256,uint256,bytes,address,(uint256,uint256,uint8,bytes32,bytes32))": {
            "calls": 15,
            "min": 306369,
            "mean": 336640,
            "median": 331920,
            "max": 371632
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenFactory.sol:StataTokenFactory",
        "deployment": {
          "gas": 0,
          "size": 3607
        },
        "functions": {
          "STATA_TOKEN_IMPL()": {
            "calls": 5,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "createStataTokens(address[])": {
            "calls": 110,
            "min": 2392195,
            "mean": 2392195,
            "median": 2392195,
            "max": 2392195
          },
          "getStataToken(address)": {
            "calls": 110,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "initialize()": {
            "calls": 3985,
            "min": 23412,
            "mean": 23541,
            "median": 23545,
            "max": 23545
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/extensions/stata-token/StataTokenV2.sol:StataTokenV2",
        "deployment": {
          "gas": 0,
          "size": 26295
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 15,
            "min": 5230,
            "mean": 5230,
            "median": 5230,
            "max": 5230
          },
          "INCENTIVES_CONTROLLER()": {
            "calls": 5,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "aToken()": {
            "calls": 5,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 2691,
            "mean": 2691,
            "median": 2691,
            "max": 2691
          },
          "asset()": {
            "calls": 5,
            "min": 2387,
            "mean": 2387,
            "median": 2387,
            "max": 2387
          },
          "balanceOf(address)": {
            "calls": 5,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "canPause(address)": {
            "calls": 1285,
            "min": 10907,
            "mean": 10907,
            "median": 10907,
            "max": 10907
          },
          "claimRewards(address,address[])": {
            "calls": 5,
            "min": 313240,
            "mean": 313240,
            "median": 313240,
            "max": 313240
          },
          "claimRewardsToSelf(address[])": {
            "calls": 5,
            "min": 2825,
            "mean": 2825,
            "median": 2825,
            "max": 2825
          },
          "decimals()": {
            "calls": 5,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          },
          "deposit(uint256,address)": {
            "calls": 10,
            "min": 246179,
            "mean": 254711,
            "median": 254711,
            "max": 263243
          },
          "depositATokens(uint256,address)": {
            "calls": 1310,
            "min": 146548,
            "mean": 147499,
            "median": 146548,
            "max": 188092
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 1295,
            "min": 5565,
            "mean": 112716,
            "median": 113322,
            "max": 135101
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "initialize(address,string,string)": {
            "calls": 335,
            "min": 25076,
            "mean": 224554,
            "median": 225297,
            "max": 232297
          },
          "maxRedeem(address)": {
            "calls": 10,
            "min": 24185,
            "mean": 24185,
            "median": 24185,
            "max": 24185
          },
          "maxWithdraw(address)": {
            "calls": 5,
            "min": 25922,
            "mean": 25922,
            "median": 25922,
            "max": 25922
          },
          "mint(uint256,address)": {
            "calls": 5,
            "min": 246257,
            "mean": 246257,
            "median": 246257,
            "max": 246257
          },
          "name()": {
            "calls": 5,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "nonces(address)": {
            "calls": 15,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "paused()": {
            "calls": 10,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 409,
            "mean": 28959,
            "median": 31208,
            "max": 55260
          },
          "previewDeposit(uint256)": {
            "calls": 5,
            "min": 15106,
            "mean": 15106,
            "median": 15106,
            "max": 15106
          },
          "redeem(uint256,address,address)": {
            "calls": 10,
            "min": 28273,
            "mean": 97765,
            "median": 97765,
            "max": 167258
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 5,
            "min": 122366,
            "mean": 122366,
            "median": 122366,
            "max": 122366
          },
          "refreshRewardTokens()": {
            "calls": 5,
            "min": 151667,
            "mean": 151667,
            "median": 151667,
            "max": 151667
          },
          "setPaused(bool)": {
            "calls": 1315,
            "min": 10900,
            "mean": 11515,
            "median": 10900,
            "max": 34043
          },
          "symbol()": {
            "calls": 5,
            "min": 2675,
            "mean": 2675,
            "median": 2675,
            "max": 2675
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 2605,
            "mean": 2605,
            "median": 2605,
            "max": 2605
          },
          "withdraw(uint256,address,address)": {
            "calls": 5,
            "min": 30078,
            "mean": 30078,
            "median": 30078,
            "max": 30078
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/extensions/v3-config-engine/AaveV3ConfigEngine.sol:AaveV3ConfigEngine",
        "deployment": {
          "gas": 0,
          "size": 11825
        },
        "functions": {
          "DEFAULT_INTEREST_RATE_STRATEGY()": {
            "calls": 45,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "createEModeCategories((uint256,uint256,uint256,string,address[],address[])[])": {
            "calls": 15,
            "min": 114492,
            "mean": 175365,
            "median": 114492,
            "max": 297112
          },
          "listAssets((string,string),(address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 1596040,
            "mean": 1596040,
            "median": 1596040,
            "max": 1596040
          },
          "listAssetsCustom((string,string),((address,string,address,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(address,address))[])": {
            "calls": 3865,
            "min": 1595730,
            "mean": 4598248,
            "median": 4606044,
            "max": 4606044
          },
          "updateAssetsEMode((address,uint8,uint256,uint256)[])": {
            "calls": 5,
            "min": 157986,
            "mean": 157986,
            "median": 157986,
            "max": 157986
          },
          "updateBorrowSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 10,
            "min": 15950,
            "mean": 65115,
            "median": 65115,
            "max": 114280
          },
          "updateCaps((address,uint256,uint256)[])": {
            "calls": 5,
            "min": 54198,
            "mean": 54198,
            "median": 54198,
            "max": 54198
          },
          "updateCollateralSide((address,uint256,uint256,uint256,uint256,uint256)[])": {
            "calls": 25,
            "min": 5488,
            "mean": 25473,
            "median": 5540,
            "max": 55425
          },
          "updateEModeCategories((uint8,uint256,uint256,uint256,string)[])": {
            "calls": 20,
            "min": 17466,
            "mean": 29446,
            "median": 19887,
            "max": 60544
          },
          "updatePriceFeeds((address,address)[])": {
            "calls": 5,
            "min": 34572,
            "mean": 34572,
            "median": 34572,
            "max": 34572
          },
          "updateRateStrategies((address,(uint256,uint256,uint256,uint256))[])": {
            "calls": 5,
            "min": 101183,
            "mean": 101183,
            "median": 101183,
            "max": 101183
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/helpers/AaveProtocolDataProvider.sol:AaveProtocolDataProvider",
        "deployment": {
          "gas": 0,
          "size": 7670
        },
        "functions": {
          "getATokenTotalSupply(address)": {
            "calls": 13010,
            "min": 2618,
            "mean": 5742,
            "median": 4618,
            "max": 28374
          },
          "getDebtCeiling(address)": {
            "calls": 25,
            "min": 10643,
            "mean": 10643,
            "median": 10643,
            "max": 10643
          },
          "getDebtCeilingDecimals()": {
            "calls": 5,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "getFlashLoanEnabled(address)": {
            "calls": 2565,
            "min": 10650,
            "mean": 10650,
            "median": 10650,
            "max": 10650
          },
          "getInterestRateStrategyAddress(address)": {
            "calls": 40,
            "min": 8294,
            "mean": 8294,
            "median": 8294,
            "max": 8294
          },
          "getIsVirtualAccActive(address)": {
            "calls": 45897,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "getLiquidationProtocolFee(address)": {
            "calls": 50,
            "min": 10648,
            "mean": 10648,
            "median": 10648,
            "max": 10648
          },
          "getPaused(address)": {
            "calls": 47232,
            "min": 10700,
            "mean": 10732,
            "median": 10733,
            "max": 10733
          },
          "getReserveCaps(address)": {
            "calls": 240,
            "min": 10657,
            "mean": 10657,
            "median": 10657,
            "max": 10657
          },
          "getReserveConfigurationData(address)": {
            "calls": 53877,
            "min": 10909,
            "mean": 10941,
            "median": 10942,
            "max": 10942
          },
          "getReserveTokensAddresses(address)": {
            "calls": 46482,
            "min": 13904,
            "mean": 13904,
            "median": 13904,
            "max": 13935
          },
          "getSiloedBorrowing(address)": {
            "calls": 10,
            "min": 10655,
            "mean": 10655,
            "median": 10655,
            "max": 10655
          },
          "getTotalDebt(address)": {
            "calls": 20,
            "min": 4521,
            "mean": 22302,
            "median": 28230,
            "max": 28230
          },
          "getUnbackedMintCap(address)": {
            "calls": 5,
            "min": 272,
            "mean": 272,
            "median": 272,
            "max": 272
          },
          "getUserReserveData(address,address)": {
            "calls": 1340,
            "min": 61063,
            "mean": 61274,
            "median": 61271,
            "max": 64594
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 5,
            "min": 10535,
            "mean": 10535,
            "median": 10535,
            "max": 10535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/helpers/L2Encoder.sol:L2Encoder",
        "deployment": {
          "gas": 0,
          "size": 7641
        },
        "functions": {
          "encodeBorrowParams(address,uint256,uint256,uint16)": {
            "calls": 15,
            "min": 32221,
            "mean": 32221,
            "median": 32221,
            "max": 32221
          },
          "encodeLiquidationCall(address,address,address,uint256,bool)": {
            "calls": 5,
            "min": 52590,
            "mean": 52590,
            "median": 52590,
            "max": 52590
          },
          "encodeRepayParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 32261,
            "mean": 32261,
            "median": 32261,
            "max": 32261
          },
          "encodeRepayWithATokensParams(address,uint256,uint256)": {
            "calls": 5,
            "min": 32234,
            "mean": 32234,
            "median": 32234,
            "max": 32234
          },
          "encodeRepayWithPermitParams(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 32380,
            "mean": 32380,
            "median": 32380,
            "max": 32380
          },
          "encodeSetUserUseReserveAsCollateral(address,bool)": {
            "calls": 5,
            "min": 32103,
            "mean": 32103,
            "median": 32103,
            "max": 32103
          },
          "encodeSupplyParams(address,uint256,uint16)": {
            "calls": 35,
            "min": 32142,
            "mean": 32142,
            "median": 32142,
            "max": 32142
          },
          "encodeSupplyWithPermitParams(address,uint256,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 1280,
            "min": 32296,
            "mean": 32296,
            "median": 32296,
            "max": 32296
          },
          "encodeWithdrawParams(address,uint256)": {
            "calls": 10,
            "min": 32095,
            "mean": 32123,
            "median": 32123,
            "max": 32151
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/helpers/LiquidationDataProvider.sol:LiquidationDataProvider",
        "deployment": {
          "gas": 1912723,
          "size": 8824
        },
        "functions": {
          "getLiquidationInfo(address,address,address)": {
            "calls": 10,
            "min": 150505,
            "mean": 150645,
            "median": 150645,
            "max": 150785
          },
          "getLiquidationInfo(address,address,address,uint256)": {
            "calls": 9050,
            "min": 122674,
            "mean": 152070,
            "median": 153301,
            "max": 190247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/helpers/WrappedTokenGatewayV3.sol:WrappedTokenGatewayV3",
        "deployment": {
          "gas": 0,
          "size": 5004
        },
        "functions": {
          "borrowETH(address,uint256,uint16)": {
            "calls": 10,
            "min": 220385,
            "mean": 224165,
            "median": 224165,
            "max": 227945
          },
          "depositETH(address,address,uint16)": {
            "calls": 50,
            "min": 185507,
            "mean": 221696,
            "median": 225717,
            "max": 225717
          },
          "emergencyEtherTransfer(address,uint256)": {
            "calls": 5,
            "min": 33454,
            "mean": 33454,
            "median": 33454,
            "max": 33454
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 52057,
            "mean": 52057,
            "median": 52057,
            "max": 52057
          },
          "fallback()": {
            "calls": 10,
            "min": 21489,
            "mean": 21489,
            "median": 21489,
            "max": 21489
          },
          "getWETHAddress()": {
            "calls": 5,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "owner()": {
            "calls": 10,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "receive()": {
            "calls": 5,
            "min": 21164,
            "mean": 21164,
            "median": 21164,
            "max": 21164
          },
          "repayETH(address,uint256,address)": {
            "calls": 30,
            "min": 141013,
            "mean": 147091,
            "median": 143993,
            "max": 158613
          },
          "withdrawETH(address,uint256,address)": {
            "calls": 15,
            "min": 204137,
            "mean": 212039,
            "median": 205576,
            "max": 226405
          },
          "withdrawETHWithPermit(address,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 15,
            "min": 216345,
            "mean": 234391,
            "median": 240578,
            "max": 246251
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/instances/ATokenInstance.sol:ATokenInstance",
        "deployment": {
          "gas": 2552119,
          "size": 12711
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1300,
            "min": 2429,
            "mean": 2431,
            "median": 2429,
            "max": 3028
          },
          "POOL()": {
            "calls": 535,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 60107,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "REWARDS_CONTROLLER()": {
            "calls": 5,
            "min": 252,
            "mean": 252,
            "median": 252,
            "max": 252
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 46347,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "allowance(address,address)": {
            "calls": 130,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "approve(address,uint256)": {
            "calls": 15540,
            "min": 24454,
            "mean": 24454,
            "median": 24454,
            "max": 24454
          },
          "balanceOf(address)": {
            "calls": 90455,
            "min": 2151,
            "mean": 10923,
            "median": 17151,
            "max": 17359
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 32415,
            "min": 359,
            "mean": 38435,
            "median": 32815,
            "max": 58915
          },
          "decimals()": {
            "calls": 49847,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 7497,
            "mean": 7497,
            "median": 7497,
            "max": 7497
          },
          "getIncentivesController()": {
            "calls": 45887,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "getPreviousIndex(address)": {
            "calls": 80,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 115,
            "min": 659,
            "mean": 4398,
            "median": 4659,
            "max": 4659
          },
          "increaseAllowance(address,uint256)": {
            "calls": 55,
            "min": 7510,
            "mean": 21500,
            "median": 24610,
            "max": 24610
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 223857,
            "min": 121623,
            "mean": 206073,
            "median": 206898,
            "max": 296723
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 91620,
            "min": 375,
            "mean": 56941,
            "median": 60481,
            "max": 67747
          },
          "mintToTreasury(uint256,uint256)": {
            "calls": 50,
            "min": 296,
            "mean": 39781,
            "median": 43269,
            "max": 60369
          },
          "name()": {
            "calls": 46767,
            "min": 2659,
            "mean": 4885,
            "median": 2694,
            "max": 9215
          },
          "nonces(address)": {
            "calls": 1320,
            "min": 2496,
            "mean": 2496,
            "median": 2496,
            "max": 2496
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 3925,
            "min": 388,
            "mean": 23374,
            "median": 8479,
            "max": 52641
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 15,
            "min": 10856,
            "mean": 23118,
            "median": 13000,
            "max": 45500
          },
          "scaledBalanceOf(address)": {
            "calls": 131020,
            "min": 569,
            "mean": 2318,
            "median": 2569,
            "max": 2569
          },
          "scaledTotalSupply()": {
            "calls": 3140,
            "min": 339,
            "mean": 1546,
            "median": 2339,
            "max": 2339
          },
          "symbol()": {
            "calls": 46672,
            "min": 2600,
            "mean": 4867,
            "median": 3074,
            "max": 9170
          },
          "totalSupply()": {
            "calls": 49950,
            "min": 380,
            "mean": 5100,
            "median": 5928,
            "max": 17136
          },
          "transfer(address,uint256)": {
            "calls": 5280,
            "min": 421,
            "mean": 94745,
            "median": 100148,
            "max": 165491
          },
          "transferFrom(address,address,uint256)": {
            "calls": 19395,
            "min": 2685,
            "mean": 86658,
            "median": 103339,
            "max": 135945
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 14250,
            "min": 360,
            "mean": 26823,
            "median": 31439,
            "max": 38377
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 36745,
            "min": 337,
            "mean": 27394,
            "median": 32969,
            "max": 32969
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/instances/L2PoolInstance.sol:L2PoolInstance",
        "deployment": {
          "gas": 0,
          "size": 20415
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 980,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 345,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 1100,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "approvePositionManager(address,bool)": {
            "calls": 2610,
            "min": 2622,
            "mean": 24347,
            "median": 24422,
            "max": 24422
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 1330,
            "min": 174062,
            "mean": 181194,
            "median": 179730,
            "max": 223008
          },
          "borrow(bytes32)": {
            "calls": 15,
            "min": 179840,
            "mean": 179840,
            "median": 179840,
            "max": 179840
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 2595,
            "min": 5644,
            "mean": 27362,
            "median": 48503,
            "max": 48503
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 10,
            "min": 23309,
            "mean": 23309,
            "median": 23309,
            "max": 23309
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 2630,
            "min": 6201,
            "mean": 6201,
            "median": 6201,
            "max": 6201
          },
          "dropReserve(address)": {
            "calls": 1285,
            "min": 5562,
            "mean": 5840,
            "median": 5562,
            "max": 77260
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 334,
            "mean": 334,
            "median": 334,
            "max": 334
          },
          "getConfiguration(address)": {
            "calls": 8330,
            "min": 518,
            "mean": 536,
            "median": 518,
            "max": 2518
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 10,
            "min": 2540,
            "mean": 2540,
            "median": 2540,
            "max": 2540
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 2630,
            "min": 2518,
            "mean": 2518,
            "median": 2518,
            "max": 2518
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 314,
            "mean": 314,
            "median": 314,
            "max": 314
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 1280,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 327,
            "mean": 327,
            "median": 327,
            "max": 327
          },
          "getReserveAToken(address)": {
            "calls": 860,
            "min": 551,
            "mean": 597,
            "median": 551,
            "max": 2551
          },
          "getReserveData(address)": {
            "calls": 6170,
            "min": 4620,
            "mean": 19652,
            "median": 20620,
            "max": 23120
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 1365,
            "min": 658,
            "mean": 688,
            "median": 658,
            "max": 4658
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20,
            "min": 706,
            "mean": 3385,
            "median": 3885,
            "max": 5064
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 20,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "getReservesList()": {
            "calls": 10,
            "min": 10256,
            "mean": 10256,
            "median": 10256,
            "max": 10256
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 287,
            "mean": 287,
            "median": 287,
            "max": 287
          },
          "getUserAccountData(address)": {
            "calls": 5,
            "min": 75906,
            "mean": 75906,
            "median": 75906,
            "max": 75906
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 20,
            "min": 2526,
            "mean": 2526,
            "median": 2526,
            "max": 2526
          },
          "initReserve(address,address,address)": {
            "calls": 3385,
            "min": 5579,
            "mean": 37961,
            "median": 5579,
            "max": 142522
          },
          "initialize(address)": {
            "calls": 345,
            "min": 44849,
            "mean": 44849,
            "median": 44849,
            "max": 44849
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 2607,
            "mean": 2607,
            "median": 2607,
            "max": 2607
          },
          "liquidationCall(bytes32,bytes32)": {
            "calls": 5,
            "min": 326855,
            "mean": 326855,
            "median": 326855,
            "max": 326855
          },
          "mintToTreasury(address[])": {
            "calls": 10,
            "min": 70133,
            "mean": 71361,
            "median": 71361,
            "max": 72589
          },
          "multicall(bytes[])": {
            "calls": 1295,
            "min": 207689,
            "mean": 207689,
            "median": 207689,
            "max": 207689
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 7259,
            "mean": 7259,
            "median": 7259,
            "max": 7259
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 10,
            "min": 115534,
            "mean": 115534,
            "median": 115534,
            "max": 115534
          },
          "repay(bytes32)": {
            "calls": 5,
            "min": 108693,
            "mean": 108693,
            "median": 108693,
            "max": 108693
          },
          "repayWithATokens(bytes32)": {
            "calls": 5,
            "min": 116486,
            "mean": 116486,
            "median": 116486,
            "max": 116486
          },
          "repayWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 153317,
            "mean": 159290,
            "median": 159031,
            "max": 161353
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 46430,
            "mean": 46430,
            "median": 46430,
            "max": 46430
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 2115,
            "min": 3525,
            "mean": 4799,
            "median": 5559,
            "max": 14525
          },
          "setConfiguration(address,(uint256))": {
            "calls": 10395,
            "min": 1428,
            "mean": 3753,
            "median": 1428,
            "max": 23576
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 3840,
            "min": 5576,
            "mean": 10512,
            "median": 9953,
            "max": 16141
          },
          "setUserEMode(uint8)": {
            "calls": 35,
            "min": 17658,
            "mean": 37856,
            "median": 37107,
            "max": 78901
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1285,
            "min": 2671,
            "mean": 2814,
            "median": 2671,
            "max": 39437
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1380,
            "min": 9143,
            "mean": 10540,
            "median": 9143,
            "max": 55515
          },
          "setUserUseReserveAsCollateral(bytes32)": {
            "calls": 5,
            "min": 24985,
            "mean": 24985,
            "median": 24985,
            "max": 24985
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1310,
            "min": 2676,
            "mean": 3394,
            "median": 2676,
            "max": 54494
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 2715,
            "min": 143635,
            "mean": 194426,
            "median": 194935,
            "max": 194935
          },
          "supply(bytes32)": {
            "calls": 35,
            "min": 197094,
            "mean": 197094,
            "median": 197094,
            "max": 197094
          },
          "supplyWithPermit(bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 245134,
            "mean": 245134,
            "median": 245134,
            "max": 245134
          },
          "syncIndexesState(address)": {
            "calls": 825,
            "min": 6661,
            "mean": 13294,
            "median": 6661,
            "max": 26561
          },
          "syncRatesState(address)": {
            "calls": 825,
            "min": 11414,
            "mean": 11414,
            "median": 11414,
            "max": 11414
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 1625,
            "min": 5537,
            "mean": 8846,
            "median": 5537,
            "max": 21127
          },
          "withdraw(bytes32)": {
            "calls": 10,
            "min": 110343,
            "mean": 112740,
            "median": 112740,
            "max": 115137
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/instances/PoolConfiguratorInstance.sol:PoolConfiguratorInstance",
        "deployment": {
          "gas": 3719633,
          "size": 16903
        },
        "functions": {
          "MAX_GRACE_PERIOD()": {
            "calls": 8960,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "configureReserveAsCollateral(address,uint256,uint256,uint256)": {
            "calls": 23135,
            "min": 8930,
            "mean": 21236,
            "median": 9087,
            "max": 77423
          },
          "disableLiquidationGracePeriod(address)": {
            "calls": 2570,
            "min": 15877,
            "mean": 26756,
            "median": 28152,
            "max": 37626
          },
          "dropReserve(address)": {
            "calls": 1305,
            "min": 12971,
            "mean": 13784,
            "median": 12971,
            "max": 98717
          },
          "getConfiguratorLogic()": {
            "calls": 5,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "getPendingLtv(address)": {
            "calls": 3855,
            "min": 2484,
            "mean": 2484,
            "median": 2484,
            "max": 2484
          },
          "initReserves((address,address,address,string,string,string,string,bytes,bytes)[])": {
            "calls": 14120,
            "min": 15991,
            "mean": 22710913,
            "median": 1516606,
            "max": 198364640
          },
          "initialize(address)": {
            "calls": 4025,
            "min": 71820,
            "mean": 89675,
            "median": 89720,
            "max": 89720
          },
          "setAssetBorrowableInEMode(address,uint8,bool)": {
            "calls": 9060,
            "min": 12825,
            "mean": 76626,
            "median": 76725,
            "max": 88466
          },
          "setAssetCollateralInEMode(address,uint8,bool)": {
            "calls": 19485,
            "min": 12835,
            "mean": 62943,
            "median": 71369,
            "max": 71382
          },
          "setBorrowCap(address,uint256)": {
            "calls": 12920,
            "min": 8385,
            "mean": 9304,
            "median": 8394,
            "max": 41342
          },
          "setBorrowableInIsolation(address,bool)": {
            "calls": 11675,
            "min": 8001,
            "mean": 8271,
            "median": 8010,
            "max": 40958
          },
          "setDebtCeiling(address,uint256)": {
            "calls": 12960,
            "min": 15370,
            "mean": 26339,
            "median": 24937,
            "max": 76993
          },
          "setEModeCategory(uint8,uint16,uint16,uint16,string)": {
            "calls": 16915,
            "min": 16078,
            "mean": 73180,
            "median": 78060,
            "max": 78108
          },
          "setLiquidationProtocolFee(address,uint256)": {
            "calls": 11630,
            "min": 8381,
            "mean": 8525,
            "median": 8390,
            "max": 41338
          },
          "setPoolPause(bool)": {
            "calls": 2575,
            "min": 15862,
            "mean": 16230,
            "median": 15862,
            "max": 79048
          },
          "setPoolPause(bool,uint40)": {
            "calls": 2565,
            "min": 15921,
            "mean": 54156,
            "median": 47522,
            "max": 93813
          },
          "setReserveActive(address,bool)": {
            "calls": 1350,
            "min": 12991,
            "mean": 15385,
            "median": 12991,
            "max": 73780
          },
          "setReserveBorrowing(address,bool)": {
            "calls": 16740,
            "min": 8098,
            "mean": 15841,
            "median": 8255,
            "max": 38907
          },
          "setReserveFactor(address,uint256)": {
            "calls": 12880,
            "min": 15881,
            "mean": 32990,
            "median": 28180,
            "max": 97015
          },
          "setReserveFlashLoaning(address,bool)": {
            "calls": 14155,
            "min": 8099,
            "mean": 13729,
            "median": 8108,
            "max": 41056
          },
          "setReserveFreeze(address,bool)": {
            "calls": 3910,
            "min": 18792,
            "mean": 45318,
            "median": 49713,
            "max": 69622
          },
          "setReserveInterestRateData(address,bytes)": {
            "calls": 1500,
            "min": 16013,
            "mean": 26406,
            "median": 16013,
            "max": 86876
          },
          "setReservePause(address,bool)": {
            "calls": 2565,
            "min": 15924,
            "mean": 27932,
            "median": 39894,
            "max": 39894
          },
          "setReservePause(address,bool,uint40)": {
            "calls": 15420,
            "min": 13154,
            "mean": 35929,
            "median": 43173,
            "max": 45469
          },
          "setSiloedBorrowing(address,bool)": {
            "calls": 11615,
            "min": 8409,
            "mean": 8557,
            "median": 8418,
            "max": 66104
          },
          "setSupplyCap(address,uint256)": {
            "calls": 14235,
            "min": 8395,
            "mean": 12812,
            "median": 8404,
            "max": 41352
          },
          "updateAToken((address,string,string,address,bytes))": {
            "calls": 1525,
            "min": 13025,
            "mean": 27291,
            "median": 13025,
            "max": 101828
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 5305,
            "min": 12954,
            "mean": 24738,
            "median": 28501,
            "max": 33401
          },
          "updateVariableDebtToken((address,string,string,address,bytes))": {
            "calls": 1285,
            "min": 13018,
            "mean": 13362,
            "median": 13018,
            "max": 101561
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/instances/PoolInstance.sol:PoolInstance",
        "deployment": {
          "gas": 3928740,
          "size": 18252
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 32135,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "FLASHLOAN_PREMIUM_TOTAL()": {
            "calls": 3755,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          },
          "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
            "calls": 10,
            "min": 296,
            "mean": 296,
            "median": 296,
            "max": 296
          },
          "MAX_NUMBER_RESERVES()": {
            "calls": 2570,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "RESERVE_INTEREST_RATE_STRATEGY()": {
            "calls": 234577,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "approvePositionManager(address,bool)": {
            "calls": 2620,
            "min": 2638,
            "mean": 24363,
            "median": 24438,
            "max": 24438
          },
          "borrow(address,uint256,uint256,uint16,address)": {
            "calls": 36670,
            "min": 16238,
            "mean": 200181,
            "median": 208306,
            "max": 276122
          },
          "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
            "calls": 15570,
            "min": 5600,
            "mean": 44879,
            "median": 48455,
            "max": 48455
          },
          "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
            "calls": 9050,
            "min": 1409,
            "mean": 23272,
            "median": 23309,
            "max": 23309
          },
          "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
            "calls": 15575,
            "min": 1401,
            "mean": 6193,
            "median": 6201,
            "max": 6201
          },
          "deposit(address,uint256,address,uint16)": {
            "calls": 50075,
            "min": 25088,
            "mean": 185494,
            "median": 194700,
            "max": 194700
          },
          "dropReserve(address)": {
            "calls": 1310,
            "min": 5562,
            "mean": 6346,
            "median": 5562,
            "max": 77233
          },
          "eliminateReserveDeficit(address,uint256)": {
            "calls": 10245,
            "min": 5579,
            "mean": 49934,
            "median": 87131,
            "max": 95969
          },
          "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
            "calls": 22290,
            "min": 5957,
            "mean": 45099,
            "median": 47900,
            "max": 102243
          },
          "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
            "calls": 1360,
            "min": 23081,
            "mean": 80015,
            "median": 59915,
            "max": 436834
          },
          "flashLoanSimple(address,address,uint256,bytes,uint16)": {
            "calls": 65,
            "min": 21284,
            "mean": 269704,
            "median": 148044,
            "max": 632950
          },
          "getBorrowLogic()": {
            "calls": 5,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "getConfiguration(address)": {
            "calls": 257734,
            "min": 551,
            "mean": 1707,
            "median": 2551,
            "max": 2551
          },
          "getEModeCategoryBorrowableBitmap(uint8)": {
            "calls": 9240,
            "min": 529,
            "mean": 2524,
            "median": 2529,
            "max": 2529
          },
          "getEModeCategoryCollateralBitmap(uint8)": {
            "calls": 23530,
            "min": 518,
            "mean": 2515,
            "median": 2518,
            "max": 2518
          },
          "getEModeCategoryCollateralConfig(uint8)": {
            "calls": 715,
            "min": 908,
            "mean": 2880,
            "median": 2908,
            "max": 2908
          },
          "getEModeCategoryData(uint8)": {
            "calls": 15,
            "min": 3214,
            "mean": 4536,
            "median": 5180,
            "max": 5214
          },
          "getEModeCategoryLabel(uint8)": {
            "calls": 170,
            "min": 2806,
            "mean": 2806,
            "median": 2806,
            "max": 2806
          },
          "getEModeLogic()": {
            "calls": 5,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "getFlashLoanLogic()": {
            "calls": 5,
            "min": 296,
            "mean": 296,
            "median": 296,
            "max": 296
          },
          "getLiquidationGracePeriod(address)": {
            "calls": 28179,
            "min": 556,
            "mean": 1268,
            "median": 556,
            "max": 2556
          },
          "getLiquidationLogic()": {
            "calls": 5,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getPoolLogic()": {
            "calls": 5,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getReserveAToken(address)": {
            "calls": 105872,
            "min": 547,
            "mean": 2145,
            "median": 2547,
            "max": 2547
          },
          "getReserveAddressById(uint16)": {
            "calls": 5,
            "min": 2544,
            "mean": 2544,
            "median": 2544,
            "max": 2544
          },
          "getReserveData(address)": {
            "calls": 73095,
            "min": 2633,
            "mean": 16315,
            "median": 20633,
            "max": 23133
          },
          "getReserveDeficit(address)": {
            "calls": 11130,
            "min": 546,
            "mean": 2394,
            "median": 2546,
            "max": 2546
          },
          "getReserveNormalizedIncome(address)": {
            "calls": 210070,
            "min": 674,
            "mean": 2174,
            "median": 674,
            "max": 4882
          },
          "getReserveNormalizedVariableDebt(address)": {
            "calls": 20418,
            "min": 679,
            "mean": 2412,
            "median": 679,
            "max": 5039
          },
          "getReserveVariableDebtToken(address)": {
            "calls": 69972,
            "min": 552,
            "mean": 2292,
            "median": 2552,
            "max": 2552
          },
          "getReservesList()": {
            "calls": 18445,
            "min": 2232,
            "mean": 16637,
            "median": 10232,
            "max": 329150
          },
          "getSupplyLogic()": {
            "calls": 5,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          },
          "getUserAccountData(address)": {
            "calls": 29875,
            "min": 2562,
            "mean": 60562,
            "median": 75896,
            "max": 116570
          },
          "getUserConfiguration(address)": {
            "calls": 16890,
            "min": 547,
            "mean": 1625,
            "median": 2547,
            "max": 2547
          },
          "getUserEMode(address)": {
            "calls": 13100,
            "min": 544,
            "mean": 1335,
            "median": 544,
            "max": 2544
          },
          "getVirtualUnderlyingBalance(address)": {
            "calls": 9765,
            "min": 532,
            "mean": 2261,
            "median": 2532,
            "max": 2532
          },
          "initReserve(address,address,address)": {
            "calls": 225592,
            "min": 5579,
            "mean": 148361,
            "median": 149512,
            "max": 167031
          },
          "initialize(address)": {
            "calls": 3710,
            "min": 26210,
            "mean": 44814,
            "median": 44865,
            "max": 44865
          },
          "isApprovedPositionManager(address,address)": {
            "calls": 30,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "liquidationCall(address,address,address,uint256,bool)": {
            "calls": 31920,
            "min": 20465,
            "mean": 230990,
            "median": 266942,
            "max": 402745
          },
          "mintToTreasury(address[])": {
            "calls": 45,
            "min": 1770,
            "mean": 45987,
            "median": 48628,
            "max": 127514
          },
          "multicall(bytes[])": {
            "calls": 1465,
            "min": 140467,
            "mean": 206218,
            "median": 207412,
            "max": 410873
          },
          "renouncePositionManagerRole(address)": {
            "calls": 5,
            "min": 7259,
            "mean": 7259,
            "median": 7259,
            "max": 7259
          },
          "repay(address,uint256,uint256,address)": {
            "calls": 165,
            "min": 11690,
            "mean": 82656,
            "median": 86654,
            "max": 117282
          },
          "repayWithATokens(address,uint256,uint256)": {
            "calls": 1325,
            "min": 68785,
            "mean": 113656,
            "median": 114108,
            "max": 123786
          },
          "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 106167,
            "mean": 130134,
            "median": 119327,
            "max": 160975
          },
          "rescueTokens(address,address,uint256)": {
            "calls": 1280,
            "min": 46435,
            "mean": 46435,
            "median": 46435,
            "max": 46435
          },
          "resetIsolationModeTotalDebt(address)": {
            "calls": 12055,
            "min": 3510,
            "mean": 3736,
            "median": 3510,
            "max": 14510
          },
          "setConfiguration(address,(uint256))": {
            "calls": 362007,
            "min": 1404,
            "mean": 15317,
            "median": 23404,
            "max": 23552
          },
          "setLiquidationGracePeriod(address,uint40)": {
            "calls": 17540,
            "min": 4187,
            "mean": 11388,
            "median": 11635,
            "max": 16135
          },
          "setUserEMode(uint8)": {
            "calls": 12935,
            "min": 4375,
            "mean": 42431,
            "median": 37090,
            "max": 103111
          },
          "setUserEModeOnBehalfOf(uint8,address)": {
            "calls": 1295,
            "min": 2704,
            "mean": 3553,
            "median": 2704,
            "max": 105480
          },
          "setUserUseReserveAsCollateral(address,bool)": {
            "calls": 1650,
            "min": 5091,
            "mean": 11952,
            "median": 9091,
            "max": 86156
          },
          "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
            "calls": 1320,
            "min": 2691,
            "mean": 3684,
            "median": 2691,
            "max": 54499
          },
          "supply(address,uint256,address,uint16)": {
            "calls": 35200,
            "min": 27698,
            "mean": 176497,
            "median": 194710,
            "max": 201976
          },
          "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
            "calls": 3840,
            "min": 103643,
            "mean": 183351,
            "median": 203543,
            "max": 242869
          },
          "syncIndexesState(address)": {
            "calls": 10990,
            "min": 6628,
            "mean": 13599,
            "median": 6628,
            "max": 45265
          },
          "syncRatesState(address)": {
            "calls": 10990,
            "min": 11420,
            "mean": 11479,
            "median": 11420,
            "max": 15920
          },
          "updateFlashloanPremium(uint128)": {
            "calls": 4955,
            "min": 5555,
            "mean": 17102,
            "median": 21145,
            "max": 21145
          },
          "withdraw(address,uint256,address)": {
            "calls": 2870,
            "min": 29003,
            "mean": 119682,
            "median": 121893,
            "max": 180281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/instances/VariableDebtTokenInstance.sol:VariableDebtTokenInstance",
        "deployment": {
          "gas": 1782254,
          "size": 9041
        },
        "functions": {
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 45872,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "approveDelegation(address,uint256)": {
            "calls": 25,
            "min": 26851,
            "mean": 26851,
            "median": 26851,
            "max": 26851
          },
          "balanceOf(address)": {
            "calls": 18610,
            "min": 522,
            "mean": 9194,
            "median": 4053,
            "max": 17438
          },
          "borrowAllowance(address,address)": {
            "calls": 25,
            "min": 2615,
            "mean": 2615,
            "median": 2615,
            "max": 2615
          },
          "burn(address,uint256,uint256)": {
            "calls": 29800,
            "min": 10571,
            "mean": 22361,
            "median": 22371,
            "max": 22383
          },
          "decimals()": {
            "calls": 49732,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 35,
            "min": 369,
            "mean": 27913,
            "median": 20890,
            "max": 55090
          },
          "getIncentivesController()": {
            "calls": 45872,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 223857,
            "min": 121451,
            "mean": 204971,
            "median": 206539,
            "max": 296551
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 36665,
            "min": 22341,
            "mean": 58441,
            "median": 58541,
            "max": 68110
          },
          "name()": {
            "calls": 46377,
            "min": 2637,
            "mean": 4915,
            "median": 4407,
            "max": 9193
          },
          "nonces(address)": {
            "calls": 5,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "scaledBalanceOf(address)": {
            "calls": 93525,
            "min": 554,
            "mean": 1832,
            "median": 2554,
            "max": 2554
          },
          "scaledTotalSupply()": {
            "calls": 224660,
            "min": 356,
            "mean": 2247,
            "median": 2356,
            "max": 2356
          },
          "symbol()": {
            "calls": 46342,
            "min": 2601,
            "mean": 4881,
            "median": 3947,
            "max": 9171
          },
          "totalSupply()": {
            "calls": 950,
            "min": 1962,
            "mean": 5148,
            "median": 5962,
            "max": 17322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/misc/AaveOracle.sol:AaveOracle",
        "deployment": {
          "gas": 0,
          "size": 3900
        },
        "functions": {
          "BASE_CURRENCY()": {
            "calls": 15,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "BASE_CURRENCY_UNIT()": {
            "calls": 5,
            "min": 195,
            "mean": 195,
            "median": 195,
            "max": 195
          },
          "getAssetPrice(address)": {
            "calls": 291720,
            "min": 0,
            "mean": 5394,
            "median": 7590,
            "max": 14811
          },
          "getAssetsPrices(address[])": {
            "calls": 15,
            "min": 5087,
            "mean": 7017,
            "median": 7983,
            "max": 7983
          },
          "getFallbackOracle()": {
            "calls": 15,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "getSourceOfAsset(address)": {
            "calls": 5780,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setAssetSources(address[],address[])": {
            "calls": 130,
            "min": 35862,
            "mean": 55889,
            "median": 58389,
            "max": 60419
          },
          "setFallbackOracle(address)": {
            "calls": 20,
            "min": 58412,
            "mean": 58412,
            "median": 58412,
            "max": 58412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/misc/DefaultReserveInterestRateStrategyV2.sol:DefaultReserveInterestRateStrategyV2",
        "deployment": {
          "gas": 763221,
          "size": 3461
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5125,
            "min": 199,
            "mean": 199,
            "median": 199,
            "max": 199
          },
          "MAX_BORROW_RATE()": {
            "calls": 26910,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "MAX_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "MIN_OPTIMAL_POINT()": {
            "calls": 34590,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "calculateInterestRates((uint256,uint256,uint256,uint256,uint256,address,bool,uint256))": {
            "calls": 212905,
            "min": 0,
            "mean": 3183,
            "median": 3078,
            "max": 3958
          },
          "getBaseVariableBorrowRate(address)": {
            "calls": 14605,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getInterestRateData(address)": {
            "calls": 1280,
            "min": 2980,
            "mean": 2980,
            "median": 2980,
            "max": 2980
          },
          "getInterestRateDataBps(address)": {
            "calls": 1280,
            "min": 2610,
            "mean": 2610,
            "median": 2610,
            "max": 2610
          },
          "getMaxVariableBorrowRate(address)": {
            "calls": 6875,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "getOptimalUsageRatio(address)": {
            "calls": 10745,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "getVariableRateSlope1(address)": {
            "calls": 10765,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          },
          "getVariableRateSlope2(address)": {
            "calls": 6905,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "setInterestRateParams(address,(uint16,uint32,uint32,uint32))": {
            "calls": 14080,
            "min": 27406,
            "mean": 28453,
            "median": 27833,
            "max": 35324
          },
          "setInterestRateParams(address,bytes)": {
            "calls": 32025,
            "min": 27797,
            "mean": 31809,
            "median": 28407,
            "max": 35757
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/misc/PriceOracleSentinel.sol:PriceOracleSentinel",
        "deployment": {
          "gas": 391964,
          "size": 1631
        },
        "functions": {
          "ADDRESSES_PROVIDER()": {
            "calls": 5,
            "min": 158,
            "mean": 158,
            "median": 158,
            "max": 158
          },
          "getGracePeriod()": {
            "calls": 5,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "getSequencerOracle()": {
            "calls": 5,
            "min": 2290,
            "mean": 2290,
            "median": 2290,
            "max": 2290
          },
          "isBorrowAllowed()": {
            "calls": 25,
            "min": 9634,
            "mean": 10487,
            "median": 9634,
            "max": 11768
          },
          "isLiquidationAllowed()": {
            "calls": 25,
            "min": 9621,
            "mean": 10474,
            "median": 9621,
            "max": 11755
          },
          "setGracePeriod(uint256)": {
            "calls": 10,
            "min": 34892,
            "mean": 37895,
            "median": 37895,
            "max": 40899
          },
          "setSequencerOracle(address)": {
            "calls": 10,
            "min": 31949,
            "mean": 32568,
            "median": 32568,
            "max": 33187
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/misc/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol:InitializableImmutableAdminUpgradeabilityProxy",
        "deployment": {
          "gas": 425490,
          "size": 1870
        },
        "functions": {
          "admin()": {
            "calls": 40,
            "min": 21278,
            "mean": 21278,
            "median": 21278,
            "max": 21278
          },
          "fallback()": {
            "calls": 2802659,
            "min": 0,
            "mean": 132429,
            "median": 7309,
            "max": 200460844
          },
          "upgradeTo(address)": {
            "calls": 10,
            "min": 26617,
            "mean": 28523,
            "median": 28523,
            "max": 30429
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 40,
            "min": 28485,
            "mean": 151542,
            "median": 186163,
            "max": 186163
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockFlashLoanReceiver.sol:MockFlashLoanReceiver",
        "deployment": {
          "gas": 595974,
          "size": 2726
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43547,
            "mean": 43547,
            "median": 43547,
            "max": 43547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/flashloan/MockSimpleFlashLoanReceiver.sol:MockFlashLoanSimpleReceiver",
        "deployment": {
          "gas": 332806,
          "size": 1506
        },
        "functions": {
          "setFailExecutionTransfer(bool)": {
            "calls": 5,
            "min": 43536,
            "mean": 43536,
            "median": 43536,
            "max": 43536
          },
          "setSimulateEOA(bool)": {
            "calls": 5,
            "min": 43547,
            "mean": 43547,
            "median": 43547,
            "max": 43547
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/helpers/MockPool.sol:MockPoolInherited",
        "deployment": {
          "gas": 3984076,
          "size": 18420
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 27727,
            "mean": 27727,
            "median": 27727,
            "max": 27727
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/CLAggregators/MockAggregator.sol:MockAggregator",
        "deployment": {
          "gas": 111234,
          "size": 300
        },
        "functions": {
          "_latestAnswer()": {
            "calls": 20860,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          },
          "decimals()": {
            "calls": 470,
            "min": 147,
            "mean": 147,
            "median": 147,
            "max": 147
          },
          "latestAnswer()": {
            "calls": 282540,
            "min": 263,
            "mean": 1731,
            "median": 2263,
            "max": 2263
          },
          "name()": {
            "calls": 470,
            "min": 136,
            "mean": 136,
            "median": 136,
            "max": 136
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/PriceOracle.sol:PriceOracle",
        "deployment": {
          "gas": 126739,
          "size": 369
        },
        "functions": {
          "getAssetPrice(address)": {
            "calls": 15,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "setAssetPrice(address,uint256)": {
            "calls": 15,
            "min": 25593,
            "mean": 38887,
            "median": 45529,
            "max": 45541
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/oracle/SequencerOracle.sol:SequencerOracle",
        "deployment": {
          "gas": 251763,
          "size": 1269
        },
        "functions": {
          "latestRoundData()": {
            "calls": 50,
            "min": 4439,
            "mean": 4439,
            "median": 4439,
            "max": 4439
          },
          "setAnswer(bool,uint256)": {
            "calls": 380,
            "min": 25979,
            "mean": 27175,
            "median": 25979,
            "max": 45891
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustus.sol:MockParaSwapAugustus",
        "deployment": {
          "gas": 417984,
          "size": 1723
        },
        "functions": {
          "expectBuy(address,address,uint256,uint256,uint256)": {
            "calls": 30,
            "min": 133133,
            "mean": 133133,
            "median": 133133,
            "max": 133133
          },
          "expectSwap(address,address,uint256,uint256,uint256)": {
            "calls": 45,
            "min": 133169,
            "mean": 133182,
            "median": 133193,
            "max": 133193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/swap/MockParaSwapAugustusRegistry.sol:MockParaSwapAugustusRegistry",
        "deployment": {
          "gas": 96315,
          "size": 321
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 330,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/testnet-helpers/TestnetERC20.sol:TestnetERC20",
        "deployment": {
          "gas": 1051718,
          "size": 6204
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 1280,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "allowance(address,address)": {
            "calls": 45,
            "min": 569,
            "mean": 1680,
            "median": 2569,
            "max": 2569
          },
          "approve(address,uint256)": {
            "calls": 115090,
            "min": 26105,
            "mean": 45602,
            "median": 46149,
            "max": 46389
          },
          "balanceOf(address)": {
            "calls": 447165,
            "min": 505,
            "mean": 2503,
            "median": 2505,
            "max": 2505
          },
          "decimals()": {
            "calls": 413433,
            "min": 310,
            "mean": 2304,
            "median": 2310,
            "max": 2310
          },
          "mint(address,uint256)": {
            "calls": 32320,
            "min": 36101,
            "mean": 62233,
            "median": 70313,
            "max": 70421
          },
          "name()": {
            "calls": 10400,
            "min": 2598,
            "mean": 2598,
            "median": 2598,
            "max": 2598
          },
          "nonces(address)": {
            "calls": 1280,
            "min": 2451,
            "mean": 2451,
            "median": 2451,
            "max": 2451
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 2560,
            "min": 75651,
            "mean": 75705,
            "median": 75694,
            "max": 75850
          },
          "symbol()": {
            "calls": 480,
            "min": 2641,
            "mean": 2641,
            "median": 2641,
            "max": 2641
          },
          "totalSupply()": {
            "calls": 57725,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "transfer(address,uint256)": {
            "calls": 35,
            "min": 46557,
            "mean": 50649,
            "median": 51333,
            "max": 51333
          },
          "transferOwnership(address)": {
            "calls": 155,
            "min": 28431,
            "mean": 28431,
            "median": 28431,
            "max": 28431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/PercentageMathWrapper.sol:PercentageMathWrapper",
        "deployment": {
          "gas": 107071,
          "size": 278
        },
        "functions": {
          "HALF_PERCENTAGE_FACTOR()": {
            "calls": 2142,
            "min": 147,
            "mean": 147,
            "median": 147,
            "max": 147
          },
          "PERCENTAGE_FACTOR()": {
            "calls": 3317,
            "min": 153,
            "mean": 153,
            "median": 153,
            "max": 153
          },
          "percentDiv(uint256,uint256)": {
            "calls": 1295,
            "min": 242,
            "mean": 292,
            "median": 297,
            "max": 297
          },
          "percentMul(uint256,uint256)": {
            "calls": 1295,
            "min": 212,
            "mean": 250,
            "median": 269,
            "max": 269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/tests/WadRayMathWrapper.sol:WadRayMathWrapper",
        "deployment": {
          "gas": 203303,
          "size": 725
        },
        "functions": {
          "HALF_RAY()": {
            "calls": 5,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "HALF_WAD()": {
            "calls": 2137,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "RAY()": {
            "calls": 5,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          },
          "WAD()": {
            "calls": 3187,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "WAD_RAY_RATIO()": {
            "calls": 8827,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "rayDiv(uint256,uint256)": {
            "calls": 20,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "rayMul(uint256,uint256)": {
            "calls": 15,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          },
          "rayToWad(uint256)": {
            "calls": 2575,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "wadDiv(uint256,uint256)": {
            "calls": 1300,
            "min": 295,
            "mean": 341,
            "median": 351,
            "max": 351
          },
          "wadMul(uint256,uint256)": {
            "calls": 1310,
            "min": 263,
            "mean": 309,
            "median": 332,
            "max": 332
          },
          "wadToRay(uint256)": {
            "calls": 2442,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockAToken.sol:MockAToken",
        "deployment": {
          "gas": 2617832,
          "size": 13015
        },
        "functions": {
          "RESERVE_TREASURY_ADDRESS()": {
            "calls": 5,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 53796,
            "mean": 53796,
            "median": 53796,
            "max": 53796
          },
          "name()": {
            "calls": 5,
            "min": 2694,
            "mean": 2694,
            "median": 2694,
            "max": 2694
          },
          "scaledBalanceOf(address)": {
            "calls": 20,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "setStorage(address,address,uint256,uint256,uint256)": {
            "calls": 5,
            "min": 67647,
            "mean": 67647,
            "median": 67647,
            "max": 67647
          },
          "symbol()": {
            "calls": 5,
            "min": 2619,
            "mean": 2619,
            "median": 2619,
            "max": 2619
          },
          "transferWithIndex(address,address,uint256,uint256)": {
            "calls": 5,
            "min": 60657,
            "mean": 60657,
            "median": 60657,
            "max": 60657
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/tokens/MockDebtTokens.sol:MockVariableDebtToken",
        "deployment": {
          "gas": 1782254,
          "size": 9041
        },
        "functions": {
          "getIncentivesController()": {
            "calls": 5,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 5,
            "min": 53610,
            "mean": 53610,
            "median": 53610,
            "max": 53610
          },
          "name()": {
            "calls": 5,
            "min": 2672,
            "mean": 2672,
            "median": 2672,
            "max": 2672
          },
          "symbol()": {
            "calls": 5,
            "min": 2639,
            "mean": 2639,
            "median": 2639,
            "max": 2639
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImple",
        "deployment": {
          "gas": 461737,
          "size": 1826
        },
        "functions": {
          "REVISION()": {
            "calls": 30,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 30,
            "min": 156486,
            "mean": 156486,
            "median": 156486,
            "max": 156486
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 5207,
            "mean": 5207,
            "median": 5207,
            "max": 5207
          },
          "text()": {
            "calls": 30,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "upgradeTo(address)": {
            "calls": 5,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "value()": {
            "calls": 35,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "values(uint256)": {
            "calls": 60,
            "min": 4480,
            "mean": 4480,
            "median": 4480,
            "max": 4480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableImpleV2",
        "deployment": {
          "gas": 462589,
          "size": 1830
        },
        "functions": {
          "REVISION()": {
            "calls": 10,
            "min": 183,
            "mean": 183,
            "median": 183,
            "max": 183
          },
          "initialize(uint256,string,uint256[])": {
            "calls": 5,
            "min": 51092,
            "mean": 51092,
            "median": 51092,
            "max": 51092
          },
          "setValue(uint256)": {
            "calls": 10,
            "min": 5207,
            "mean": 5207,
            "median": 5207,
            "max": 5207
          },
          "text()": {
            "calls": 10,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "value()": {
            "calls": 20,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "values(uint256)": {
            "calls": 20,
            "min": 4480,
            "mean": 4480,
            "median": 4480,
            "max": 4480
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV1",
        "deployment": {
          "gas": 132229,
          "size": 300
        },
        "functions": {
          "initialize(address)": {
            "calls": 10,
            "min": 24617,
            "mean": 24617,
            "median": 24617,
            "max": 24617
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/mocks/upgradeability/MockInitializableImplementation.sol:MockInitializableV2",
        "deployment": {
          "gas": 133093,
          "size": 304
        },
        "functions": {
          "initialize(address)": {
            "calls": 5,
            "min": 7526,
            "mean": 7526,
            "median": 7526,
            "max": 7526
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/ACLManager.sol:ACLManager",
        "deployment": {
          "gas": 924952,
          "size": 4306
        },
        "functions": {
          "DEFAULT_ADMIN_ROLE()": {
            "calls": 8130,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "FLASH_BORROWER_ROLE()": {
            "calls": 100,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "POOL_ADMIN_ROLE()": {
            "calls": 4015,
            "min": 253,
            "mean": 253,
            "median": 253,
            "max": 253
          },
          "addAssetListingAdmin(address)": {
            "calls": 15,
            "min": 50596,
            "mean": 50596,
            "median": 50596,
            "max": 50596
          },
          "addBridge(address)": {
            "calls": 10,
            "min": 50613,
            "mean": 50613,
            "median": 50613,
            "max": 50613
          },
          "addEmergencyAdmin(address)": {
            "calls": 15,
            "min": 50603,
            "mean": 50603,
            "median": 50603,
            "max": 50603
          },
          "addFlashBorrower(address)": {
            "calls": 20,
            "min": 39155,
            "mean": 47747,
            "median": 50612,
            "max": 50612
          },
          "addPoolAdmin(address)": {
            "calls": 3965,
            "min": 50592,
            "mean": 50603,
            "median": 50604,
            "max": 50604
          },
          "addRiskAdmin(address)": {
            "calls": 70,
            "min": 50619,
            "mean": 50619,
            "median": 50619,
            "max": 50619
          },
          "grantRole(bytes32,address)": {
            "calls": 40,
            "min": 39662,
            "mean": 49686,
            "median": 51119,
            "max": 51119
          },
          "hasRole(bytes32,address)": {
            "calls": 95,
            "min": 2604,
            "mean": 2604,
            "median": 2604,
            "max": 2604
          },
          "isAssetListingAdmin(address)": {
            "calls": 19440,
            "min": 614,
            "mean": 2215,
            "median": 2614,
            "max": 2614
          },
          "isEmergencyAdmin(address)": {
            "calls": 21825,
            "min": 2607,
            "mean": 2607,
            "median": 2607,
            "max": 2607
          },
          "isFlashBorrower(address)": {
            "calls": 1365,
            "min": 2638,
            "mean": 2638,
            "median": 2638,
            "max": 2638
          },
          "isPoolAdmin(address)": {
            "calls": 283400,
            "min": 616,
            "mean": 1705,
            "median": 2616,
            "max": 2616
          },
          "isRiskAdmin(address)": {
            "calls": 205625,
            "min": 607,
            "mean": 1517,
            "median": 607,
            "max": 2607
          },
          "removeAssetListingAdmin(address)": {
            "calls": 10,
            "min": 28704,
            "mean": 28704,
            "median": 28704,
            "max": 28704
          },
          "removeBridge(address)": {
            "calls": 5,
            "min": 28711,
            "mean": 28711,
            "median": 28711,
            "max": 28711
          },
          "removeEmergencyAdmin(address)": {
            "calls": 5,
            "min": 28687,
            "mean": 28687,
            "median": 28687,
            "max": 28687
          },
          "removeFlashBorrower(address)": {
            "calls": 10,
            "min": 28710,
            "mean": 33936,
            "median": 33936,
            "max": 39162
          },
          "removePoolAdmin(address)": {
            "calls": 5,
            "min": 28697,
            "mean": 28697,
            "median": 28697,
            "max": 28697
          },
          "removeRiskAdmin(address)": {
            "calls": 5,
            "min": 28693,
            "mean": 28693,
            "median": 28693,
            "max": 28693
          },
          "setRoleAdmin(bytes32,bytes32)": {
            "calls": 30,
            "min": 37578,
            "mean": 46861,
            "median": 48718,
            "max": 48718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "deployment": {
          "gas": 1657758,
          "size": 8593
        },
        "functions": {
          "getACLAdmin()": {
            "calls": 5450,
            "min": 363,
            "mean": 889,
            "median": 363,
            "max": 2363
          },
          "getACLManager()": {
            "calls": 259285,
            "min": 341,
            "mean": 1345,
            "median": 2341,
            "max": 2341
          },
          "getAddress(bytes32)": {
            "calls": 93565,
            "min": 419,
            "mean": 1947,
            "median": 2419,
            "max": 2419
          },
          "getMarketId()": {
            "calls": 30,
            "min": 2640,
            "mean": 2640,
            "median": 2640,
            "max": 2640
          },
          "getPool()": {
            "calls": 13135,
            "min": 347,
            "mean": 1071,
            "median": 347,
            "max": 2347
          },
          "getPoolConfigurator()": {
            "calls": 988266,
            "min": 378,
            "mean": 695,
            "median": 378,
            "max": 2378
          },
          "getPoolDataProvider()": {
            "calls": 13200,
            "min": 352,
            "mean": 1183,
            "median": 352,
            "max": 2352
          },
          "getPriceOracle()": {
            "calls": 165415,
            "min": 369,
            "mean": 2224,
            "median": 2369,
            "max": 2369
          },
          "getPriceOracleSentinel()": {
            "calls": 79205,
            "min": 362,
            "mean": 2361,
            "median": 2362,
            "max": 2362
          },
          "owner()": {
            "calls": 4030,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "setACLAdmin(address)": {
            "calls": 340,
            "min": 23861,
            "mean": 46841,
            "median": 47485,
            "max": 47485
          },
          "setACLManager(address)": {
            "calls": 20,
            "min": 23898,
            "mean": 37336,
            "median": 38966,
            "max": 47516
          },
          "setAddress(bytes32,address)": {
            "calls": 9075,
            "min": 24396,
            "mean": 48026,
            "median": 48142,
            "max": 48418
          },
          "setAddressAsProxy(bytes32,address)": {
            "calls": 25,
            "min": 24154,
            "mean": 211433,
            "median": 49580,
            "max": 479525
          },
          "setMarketId(string)": {
            "calls": 10,
            "min": 24214,
            "mean": 27760,
            "median": 27760,
            "max": 31307
          },
          "setPoolConfiguratorImpl(address)": {
            "calls": 20,
            "min": 23860,
            "mean": 272383,
            "median": 280100,
            "max": 505471
          },
          "setPoolDataProvider(address)": {
            "calls": 20,
            "min": 23900,
            "mean": 37330,
            "median": 38957,
            "max": 47507
          },
          "setPoolImpl(address)": {
            "calls": 20,
            "min": 23862,
            "mean": 258904,
            "median": 266620,
            "max": 478513
          },
          "setPriceOracle(address)": {
            "calls": 20,
            "min": 23894,
            "mean": 37332,
            "median": 38962,
            "max": 47512
          },
          "setPriceOracleSentinel(address)": {
            "calls": 30,
            "min": 23912,
            "mean": 40744,
            "median": 47531,
            "max": 47531
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol:PoolAddressesProviderRegistry",
        "deployment": {
          "gas": 0,
          "size": 2418
        },
        "functions": {
          "getAddressesProviderAddressById(uint256)": {
            "calls": 20,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "getAddressesProviderIdByAddress(address)": {
            "calls": 30,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          },
          "getAddressesProvidersList()": {
            "calls": 25,
            "min": 2431,
            "mean": 4688,
            "median": 4685,
            "max": 6956
          },
          "owner()": {
            "calls": 4015,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "registerAddressesProvider(address,uint256)": {
            "calls": 30,
            "min": 23955,
            "mean": 103581,
            "median": 119507,
            "max": 119507
          },
          "unregisterAddressesProvider(address)": {
            "calls": 20,
            "min": 25977,
            "mean": 38504,
            "median": 39544,
            "max": 48953
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/rewards/EmissionManager.sol:EmissionManager",
        "deployment": {
          "gas": 791386,
          "size": 3772
        },
        "functions": {
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 205180,
            "mean": 278241,
            "median": 278212,
            "max": 283651
          },
          "getEmissionAdmin(address)": {
            "calls": 30,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "getRewardsController()": {
            "calls": 10,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "owner()": {
            "calls": 10,
            "min": 2284,
            "mean": 2284,
            "median": 2284,
            "max": 2284
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 58112,
            "mean": 58112,
            "median": 58112,
            "max": 58112
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 43644,
            "mean": 43644,
            "median": 43644,
            "max": 43644
          },
          "setEmissionAdmin(address,address)": {
            "calls": 235,
            "min": 48294,
            "mean": 48301,
            "median": 48306,
            "max": 48306
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 57286,
            "mean": 57286,
            "median": 57286,
            "max": 57286
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 46105,
            "mean": 46105,
            "median": 46105,
            "max": 46105
          },
          "setRewardsController(address)": {
            "calls": 5,
            "min": 28568,
            "mean": 28568,
            "median": 28568,
            "max": 28568
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 43727,
            "mean": 43727,
            "median": 43727,
            "max": 43727
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/rewards/RewardsController.sol:RewardsController",
        "deployment": {
          "gas": 3320371,
          "size": 15213
        },
        "functions": {
          "EMISSION_MANAGER()": {
            "calls": 4030,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "claimAllRewards(address[],address)": {
            "calls": 5,
            "min": 86573,
            "mean": 86573,
            "median": 86573,
            "max": 86573
          },
          "claimAllRewardsOnBehalf(address[],address,address)": {
            "calls": 5,
            "min": 88813,
            "mean": 88813,
            "median": 88813,
            "max": 88813
          },
          "claimAllRewardsToSelf(address[])": {
            "calls": 5,
            "min": 86500,
            "mean": 86500,
            "median": 86500,
            "max": 86500
          },
          "claimRewards(address[],uint256,address,address)": {
            "calls": 3736,
            "min": 658,
            "mean": 70852,
            "median": 80391,
            "max": 114657
          },
          "claimRewardsOnBehalf(address[],uint256,address,address,address)": {
            "calls": 5,
            "min": 83564,
            "mean": 83564,
            "median": 83564,
            "max": 83564
          },
          "claimRewardsToSelf(address[],uint256,address)": {
            "calls": 5,
            "min": 81273,
            "mean": 81273,
            "median": 81273,
            "max": 81273
          },
          "configureAssets((uint88,uint256,uint32,address,address,address,address)[])": {
            "calls": 11645,
            "min": 168640,
            "mean": 241713,
            "median": 241696,
            "max": 247111
          },
          "getAllUserRewards(address[],address)": {
            "calls": 5,
            "min": 26426,
            "mean": 26426,
            "median": 26426,
            "max": 26426
          },
          "getAssetDecimals(address)": {
            "calls": 10,
            "min": 2514,
            "mean": 2514,
            "median": 2514,
            "max": 2514
          },
          "getAssetIndex(address,address)": {
            "calls": 48680,
            "min": 2162,
            "mean": 9794,
            "median": 10217,
            "max": 15354
          },
          "getClaimer(address)": {
            "calls": 2570,
            "min": 2513,
            "mean": 2513,
            "median": 2513,
            "max": 2513
          },
          "getDistributionEnd(address,address)": {
            "calls": 5,
            "min": 2556,
            "mean": 2556,
            "median": 2556,
            "max": 2556
          },
          "getEmissionManager()": {
            "calls": 20,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "getRewardOracle(address)": {
            "calls": 5,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "getRewardsByAsset(address)": {
            "calls": 12105,
            "min": 2648,
            "mean": 5015,
            "median": 5098,
            "max": 7543
          },
          "getRewardsData(address,address)": {
            "calls": 15,
            "min": 3315,
            "mean": 3315,
            "median": 3315,
            "max": 3315
          },
          "getRewardsList()": {
            "calls": 150,
            "min": 4731,
            "mean": 4731,
            "median": 4731,
            "max": 4731
          },
          "getTransferStrategy(address)": {
            "calls": 5,
            "min": 2505,
            "mean": 2505,
            "median": 2505,
            "max": 2505
          },
          "getUserAccruedRewards(address,address)": {
            "calls": 5,
            "min": 6960,
            "mean": 6960,
            "median": 6960,
            "max": 6960
          },
          "getUserAssetIndex(address,address,address)": {
            "calls": 5,
            "min": 2695,
            "mean": 2695,
            "median": 2695,
            "max": 2695
          },
          "getUserRewards(address[],address,address)": {
            "calls": 1335,
            "min": 10834,
            "mean": 16267,
            "median": 16159,
            "max": 21187
          },
          "handleAction(address,uint256,uint256)": {
            "calls": 271700,
            "min": 534,
            "mean": 2160,
            "median": 2534,
            "max": 36400
          },
          "initialize(address)": {
            "calls": 4015,
            "min": 24762,
            "mean": 24763,
            "median": 24762,
            "max": 25920
          },
          "setClaimer(address,address)": {
            "calls": 1300,
            "min": 24043,
            "mean": 24043,
            "median": 24043,
            "max": 24043
          },
          "setDistributionEnd(address,address,uint32)": {
            "calls": 10,
            "min": 9330,
            "mean": 9330,
            "median": 9330,
            "max": 9330
          },
          "setEmissionPerSecond(address,address[],uint88[])": {
            "calls": 10,
            "min": 21699,
            "mean": 21699,
            "median": 21699,
            "max": 21699
          },
          "setRewardOracle(address,address)": {
            "calls": 10,
            "min": 12020,
            "mean": 12020,
            "median": 12020,
            "max": 12020
          },
          "setTransferStrategy(address,address)": {
            "calls": 10,
            "min": 9612,
            "mean": 9612,
            "median": 9612,
            "max": 9612
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/PullRewardsTransferStrategy.sol:PullRewardsTransferStrategy",
        "deployment": {
          "gas": 300878,
          "size": 1420
        },
        "functions": {
          "getRewardsVault()": {
            "calls": 5,
            "min": 192,
            "mean": 192,
            "median": 192,
            "max": 192
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/rewards/transfer-strategies/StakedTokenTransferStrategy.sol:StakedTokenTransferStrategy",
        "deployment": {
          "gas": 451106,
          "size": 2475
        },
        "functions": {
          "dropApproval()": {
            "calls": 5,
            "min": 25535,
            "mean": 25535,
            "median": 25535,
            "max": 25535
          },
          "emergencyWithdrawal(address,address,uint256)": {
            "calls": 5,
            "min": 52124,
            "mean": 52124,
            "median": 52124,
            "max": 52124
          },
          "getIncentivesController()": {
            "calls": 5,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          },
          "getRewardsAdmin()": {
            "calls": 5,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "getStakeContract()": {
            "calls": 5,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "getUnderlyingToken()": {
            "calls": 5,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "performTransfer(address,address,uint256)": {
            "calls": 5,
            "min": 26571,
            "mean": 26571,
            "median": 26571,
            "max": 26571
          },
          "renewApproval()": {
            "calls": 5,
            "min": 27322,
            "mean": 27322,
            "median": 27322,
            "max": 27322
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/treasury/Collector.sol:Collector",
        "deployment": {
          "gas": 1460020,
          "size": 6604
        },
        "functions": {
          "FUNDS_ADMIN_ROLE()": {
            "calls": 445,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "approve(address,address,uint256)": {
            "calls": 40,
            "min": 2516,
            "mean": 16043,
            "median": 16043,
            "max": 29571
          },
          "balanceOf(uint256,address)": {
            "calls": 20,
            "min": 19328,
            "mean": 19383,
            "median": 19383,
            "max": 19438
          },
          "cancelStream(uint256)": {
            "calls": 20,
            "min": 7457,
            "mean": 41552,
            "median": 34478,
            "max": 89794
          },
          "createStream(address,uint256,address,uint256,uint256)": {
            "calls": 85,
            "min": 2491,
            "mean": 121737,
            "median": 205166,
            "max": 205166
          },
          "getNextStreamId()": {
            "calls": 5,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "getStream(uint256)": {
            "calls": 30,
            "min": 2467,
            "mean": 7551,
            "median": 2467,
            "max": 17721
          },
          "grantRole(bytes32,address)": {
            "calls": 440,
            "min": 7024,
            "mean": 18088,
            "median": 18088,
            "max": 29153
          },
          "initialize(uint256,address)": {
            "calls": 4365,
            "min": 94786,
            "mean": 115792,
            "median": 116907,
            "max": 116907
          },
          "isFundsAdmin(address)": {
            "calls": 15,
            "min": 2595,
            "mean": 2595,
            "median": 2595,
            "max": 2595
          },
          "receive()": {
            "calls": 20,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "transfer(address,address,uint256)": {
            "calls": 40,
            "min": 2536,
            "mean": 18760,
            "median": 18760,
            "max": 34984
          },
          "withdrawFromStream(uint256,uint256)": {
            "calls": 30,
            "min": 7479,
            "mean": 34847,
            "median": 19861,
            "max": 86533
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/contracts/treasury/RevenueSplitter.sol:RevenueSplitter",
        "deployment": {
          "gas": 493359,
          "size": 2267
        },
        "functions": {
          "RECIPIENT_A()": {
            "calls": 1290,
            "min": 154,
            "mean": 154,
            "median": 154,
            "max": 154
          },
          "RECIPIENT_B()": {
            "calls": 1290,
            "min": 192,
            "mean": 192,
            "median": 192,
            "max": 192
          },
          "SPLIT_PERCENTAGE_RECIPIENT_A()": {
            "calls": 11565,
            "min": 142,
            "mean": 142,
            "median": 142,
            "max": 142
          },
          "receive()": {
            "calls": 1290,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "splitNativeRevenue()": {
            "calls": 1295,
            "min": 23567,
            "mean": 90574,
            "median": 92395,
            "max": 92395
          },
          "splitRevenue(address[])": {
            "calls": 2590,
            "min": 24072,
            "mean": 129576,
            "median": 132310,
            "max": 132310
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchOne.sol:AaveV3GettersBatchOne",
        "deployment": {
          "gas": 3522998,
          "size": 24920
        },
        "functions": {
          "getGettersReportOne()": {
            "calls": 4130,
            "min": 6549,
            "mean": 6549,
            "median": 6549,
            "max": 6549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3GettersBatchTwo.sol:AaveV3GettersBatchTwo",
        "deployment": {
          "gas": 2881911,
          "size": 21060
        },
        "functions": {
          "getGettersReportTwo()": {
            "calls": 4005,
            "min": 6549,
            "mean": 6549,
            "median": 6549,
            "max": 6549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchOne.sol:AaveV3HelpersBatchOne",
        "deployment": {
          "gas": 6595846,
          "size": 32323
        },
        "functions": {
          "getConfigEngineReport()": {
            "calls": 3880,
            "min": 17261,
            "mean": 17261,
            "median": 17261,
            "max": 17261
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3HelpersBatchTwo.sol:AaveV3HelpersBatchTwo",
        "deployment": {
          "gas": 8295859,
          "size": 36458
        },
        "functions": {
          "staticATokenReport()": {
            "calls": 3880,
            "min": 8690,
            "mean": 8690,
            "median": 8690,
            "max": 8690
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3L2PoolBatch.sol:AaveV3L2PoolBatch",
        "deployment": {
          "gas": 8219933,
          "size": 37856
        },
        "functions": {
          "getPoolReport()": {
            "calls": 405,
            "min": 4405,
            "mean": 4405,
            "median": 4405,
            "max": 4405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3MiscBatch.sol:AaveV3MiscBatch",
        "deployment": {
          "gas": 884056,
          "size": 5666
        },
        "functions": {
          "getMiscReport()": {
            "calls": 4130,
            "min": 4405,
            "mean": 4405,
            "median": 4405,
            "max": 4405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3ParaswapBatch.sol:AaveV3ParaswapBatch",
        "deployment": {
          "gas": 5079253,
          "size": 26027
        },
        "functions": {
          "getParaswapReport()": {
            "calls": 165,
            "min": 6549,
            "mean": 6549,
            "median": 6549,
            "max": 6549
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PeripheryBatch.sol:AaveV3PeripheryBatch",
        "deployment": {
          "gas": 7620667,
          "size": 37892
        },
        "functions": {
          "getPeripheryReport()": {
            "calls": 4130,
            "min": 17261,
            "mean": 17261,
            "median": 17261,
            "max": 17261
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3PoolBatch.sol:AaveV3PoolBatch",
        "deployment": {
          "gas": 7751397,
          "size": 35693
        },
        "functions": {
          "getPoolReport()": {
            "calls": 3725,
            "min": 4405,
            "mean": 4405,
            "median": 4405,
            "max": 4405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3SetupBatch.sol:AaveV3SetupBatch",
        "deployment": {
          "gas": 5601948,
          "size": 30507
        },
        "functions": {
          "getInitialReport()": {
            "calls": 4130,
            "min": 6612,
            "mean": 6612,
            "median": 6612,
            "max": 6612
          },
          "setMarketReport((address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address))": {
            "calls": 3880,
            "min": 648360,
            "mean": 650617,
            "median": 648360,
            "max": 769164
          },
          "setProtocolDataProvider(address)": {
            "calls": 4005,
            "min": 59023,
            "mean": 59034,
            "median": 59035,
            "max": 59035
          },
          "setupAaveV3Market((address,address,address),(address,address,string,uint8,address,address,uint256,uint256,bytes32,address,uint128,address,address,address,uint16),address,address,address,address,address)": {
            "calls": 4015,
            "min": 2128437,
            "mean": 2592485,
            "median": 2592571,
            "max": 2618138
          },
          "transferMarketOwnership((address,address,address))": {
            "calls": 4005,
            "min": 46410,
            "mean": 46414,
            "median": 46410,
            "max": 46482
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/deployments/projects/aave-v3-batched/batches/AaveV3TokensBatch.sol:AaveV3TokensBatch",
        "deployment": {
          "gas": 4426430,
          "size": 22207
        },
        "functions": {
          "getTokensReport()": {
            "calls": 4005,
            "min": 4405,
            "mean": 4405,
            "median": 4405,
            "max": 4405
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockERC20AaveLMUpgradeable",
        "deployment": {
          "gas": 2045094,
          "size": 9432
        },
        "functions": {
          "claimRewards(address,address[])": {
            "calls": 1280,
            "min": 55292,
            "mean": 107492,
            "median": 77128,
            "max": 163347
          },
          "claimRewardsOnBehalf(address,address,address[])": {
            "calls": 3840,
            "min": 33410,
            "mean": 83253,
            "median": 56002,
            "max": 167048
          },
          "claimRewardsToSelf(address[])": {
            "calls": 1280,
            "min": 54866,
            "mean": 105679,
            "median": 55151,
            "max": 162921
          },
          "collectAndUpdateRewards(address)": {
            "calls": 1285,
            "min": 45778,
            "mean": 85046,
            "median": 66444,
            "max": 125321
          },
          "getClaimableRewards(address,address)": {
            "calls": 17157,
            "min": 24836,
            "mean": 27598,
            "median": 27646,
            "max": 27660
          },
          "getReferenceAsset()": {
            "calls": 5,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "getTotalClaimableRewards(address)": {
            "calls": 1285,
            "min": 26367,
            "mean": 31650,
            "median": 31692,
            "max": 31705
          },
          "getUnclaimedRewards(address,address)": {
            "calls": 5612,
            "min": 2578,
            "mean": 2578,
            "median": 2578,
            "max": 2578
          },
          "isRegisteredRewardToken(address)": {
            "calls": 15,
            "min": 2510,
            "mean": 2510,
            "median": 2510,
            "max": 2510
          },
          "mint(address,uint256)": {
            "calls": 12293,
            "min": 53170,
            "mean": 94858,
            "median": 95444,
            "max": 98436
          },
          "mockInit(address)": {
            "calls": 85,
            "min": 78208,
            "mean": 78208,
            "median": 78208,
            "max": 78208
          },
          "refreshRewardTokens()": {
            "calls": 11535,
            "min": 113792,
            "mean": 113792,
            "median": 113792,
            "max": 114077
          },
          "rewardTokens()": {
            "calls": 5,
            "min": 4720,
            "mean": 4720,
            "median": 4720,
            "max": 4720
          },
          "transfer(address,uint256)": {
            "calls": 2560,
            "min": 56947,
            "mean": 72673,
            "median": 68538,
            "max": 99691
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC20AaveLMUpgradable.t.sol:MockScaledTestnetERC20",
        "deployment": {
          "gas": 1065187,
          "size": 6266
        },
        "functions": {
          "decimals()": {
            "calls": 11535,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "getScaledUserBalanceAndSupply(address)": {
            "calls": 4991,
            "min": 2580,
            "mean": 3610,
            "median": 4580,
            "max": 4580
          },
          "mint(address,uint256)": {
            "calls": 12293,
            "min": 50928,
            "mean": 67198,
            "median": 68278,
            "max": 68278
          },
          "scaledTotalSupply()": {
            "calls": 60190,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "transfer(address,uint256)": {
            "calls": 12293,
            "min": 29441,
            "mean": 45540,
            "median": 46613,
            "max": 46613
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/stata-token/ERC4626StataTokenUpgradeable.t.sol:MockERC4626StataTokenUpgradeable",
        "deployment": {
          "gas": 2666279,
          "size": 12364
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 2560,
            "min": 26166,
            "mean": 45789,
            "median": 46114,
            "max": 46210
          },
          "balanceOf(address)": {
            "calls": 12805,
            "min": 2479,
            "mean": 2479,
            "median": 2479,
            "max": 2479
          },
          "convertToAssets(uint256)": {
            "calls": 1280,
            "min": 15029,
            "mean": 15029,
            "median": 15029,
            "max": 15029
          },
          "convertToShares(uint256)": {
            "calls": 1280,
            "min": 15066,
            "mean": 15066,
            "median": 15066,
            "max": 15066
          },
          "decimals()": {
            "calls": 1280,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "depositATokens(uint256,address)": {
            "calls": 14085,
            "min": 56287,
            "mean": 183346,
            "median": 195701,
            "max": 200829
          },
          "depositWithPermit(uint256,address,uint256,(uint8,bytes32,bytes32),bool)": {
            "calls": 6400,
            "min": 70949,
            "mean": 230704,
            "median": 250665,
            "max": 335423
          },
          "latestAnswer()": {
            "calls": 1285,
            "min": 20977,
            "mean": 20977,
            "median": 20977,
            "max": 20977
          },
          "maxDeposit(address)": {
            "calls": 1295,
            "min": 34337,
            "mean": 46198,
            "median": 46337,
            "max": 46337
          },
          "maxMint(address)": {
            "calls": 5,
            "min": 34607,
            "mean": 34607,
            "median": 34607,
            "max": 34607
          },
          "maxRedeem(address)": {
            "calls": 3840,
            "min": 12854,
            "mean": 20394,
            "median": 24159,
            "max": 24171
          },
          "mint(uint256,address)": {
            "calls": 2560,
            "min": 63642,
            "mean": 177478,
            "median": 177447,
            "max": 291258
          },
          "mockInit(address)": {
            "calls": 140,
            "min": 130818,
            "mean": 130818,
            "median": 130818,
            "max": 130818
          },
          "previewDeposit(uint256)": {
            "calls": 3840,
            "min": 15103,
            "mean": 15103,
            "median": 15103,
            "max": 15103
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 15057,
            "mean": 15057,
            "median": 15057,
            "max": 15057
          },
          "previewRedeem(uint256)": {
            "calls": 2560,
            "min": 15045,
            "mean": 15045,
            "median": 15045,
            "max": 15045
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 15138,
            "mean": 15138,
            "median": 15138,
            "max": 15138
          },
          "redeem(uint256,address,address)": {
            "calls": 1280,
            "min": 154214,
            "mean": 154414,
            "median": 154459,
            "max": 154562
          },
          "redeemATokens(uint256,address,address)": {
            "calls": 3840,
            "min": 39553,
            "mean": 111625,
            "median": 147345,
            "max": 148027
          },
          "totalAssets()": {
            "calls": 1290,
            "min": 17065,
            "mean": 17065,
            "median": 17065,
            "max": 17065
          },
          "withdraw(uint256,address,address)": {
            "calls": 2560,
            "min": 47716,
            "mean": 102079,
            "median": 102042,
            "max": 156369
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockAssetEModeUpdate.sol:AaveV3MockAssetEModeUpdate",
        "deployment": {
          "gas": 1527816,
          "size": 7107
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 183466,
            "mean": 183466,
            "median": 183466,
            "max": 183466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdate.sol:AaveV3MockBorrowUpdate",
        "deployment": {
          "gas": 1484442,
          "size": 6821
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 139353,
            "mean": 139353,
            "median": 139353,
            "max": 139353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockBorrowUpdateNoChange.sol:AaveV3MockBorrowUpdateNoChange",
        "deployment": {
          "gas": 1483794,
          "size": 6818
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 41024,
            "mean": 41024,
            "median": 41024,
            "max": 41024
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCapUpdate.sol:AaveV3MockCapUpdate",
        "deployment": {
          "gas": 1464431,
          "size": 6722
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 79044,
            "mean": 79044,
            "median": 79044,
            "max": 79044
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdate.sol:AaveV3MockCollateralUpdate",
        "deployment": {
          "gas": 1485942,
          "size": 6828
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 80499,
            "mean": 80499,
            "median": 80499,
            "max": 80499
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateNoChange.sol:AaveV3MockCollateralUpdateNoChange",
        "deployment": {
          "gas": 1484646,
          "size": 6822
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 30562,
            "mean": 30562,
            "median": 30562,
            "max": 30562
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateCorrectBonus",
        "deployment": {
          "gas": 1485942,
          "size": 6828
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 80499,
            "mean": 80499,
            "median": 80499,
            "max": 80499
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockCollateralUpdateWrongBonus.sol:AaveV3MockCollateralUpdateWrongBonus",
        "deployment": {
          "gas": 1486813,
          "size": 6832
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 30532,
            "mean": 30532,
            "median": 30532,
            "max": 30532
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryCreation.sol:AaveV3MockEModeCategoryCreation",
        "deployment": {
          "gas": 1560789,
          "size": 7400
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 324335,
            "mean": 324335,
            "median": 324335,
            "max": 324335
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdate",
        "deployment": {
          "gas": 1460519,
          "size": 6651
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 85720,
            "mean": 85720,
            "median": 85720,
            "max": 85720
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdate.sol:AaveV3MockEModeCategoryUpdateEdgeBonus",
        "deployment": {
          "gas": 1460159,
          "size": 6649
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 47402,
            "mean": 47402,
            "median": 47402,
            "max": 47402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockEModeCategoryUpdateNoChange.sol:AaveV3MockEModeCategoryUpdateNoChange",
        "deployment": {
          "gas": 1459511,
          "size": 6646
        },
        "functions": {
          "execute()": {
            "calls": 10,
            "min": 42645,
            "mean": 42645,
            "median": 42645,
            "max": 42645
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListing.sol:AaveV3MockListing",
        "deployment": {
          "gas": 1548632,
          "size": 7197
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1583087,
            "mean": 1583087,
            "median": 1583087,
            "max": 1583087
          },
          "newListings()": {
            "calls": 20,
            "min": 1998,
            "mean": 1998,
            "median": 1998,
            "max": 1998
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustom.sol:AaveV3MockListingCustom",
        "deployment": {
          "gas": 1622922,
          "size": 7713
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1583102,
            "mean": 1583102,
            "median": 1583102,
            "max": 1583102
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingCustomWithEModeCreation.sol:AaveV3MockListingCustomWithEModeCreation",
        "deployment": {
          "gas": 1725671,
          "size": 8208
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1699574,
            "mean": 1699574,
            "median": 1699574,
            "max": 1699574
          },
          "newListingsCustom()": {
            "calls": 20,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockListingWithEModeCreation.sol:AaveV3MockListingWithEModeCreation",
        "deployment": {
          "gas": 1652241,
          "size": 7696
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 1699558,
            "mean": 1699558,
            "median": 1699558,
            "max": 1699558
          },
          "newListings()": {
            "calls": 20,
            "min": 1998,
            "mean": 1998,
            "median": 1998,
            "max": 1998
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockPriceFeedUpdate.sol:AaveV3MockPriceFeedUpdate",
        "deployment": {
          "gas": 1495187,
          "size": 6956
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 59366,
            "mean": 59366,
            "median": 59366,
            "max": 59366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/extensions/v3-config-engine/mocks/AaveV3MockRatesUpdate.sol:AaveV3MockRatesUpdate",
        "deployment": {
          "gas": 1486837,
          "size": 6832
        },
        "functions": {
          "execute()": {
            "calls": 5,
            "min": 126249,
            "mean": 126249,
            "median": 126249,
            "max": 126249
          },
          "rateStrategiesUpdates()": {
            "calls": 20,
            "min": 885,
            "mean": 885,
            "median": 885,
            "max": 885
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/harness/VariableDebtToken.sol:VariableDebtTokenHarness",
        "deployment": {
          "gas": 1786780,
          "size": 9062
        },
        "functions": {
          "DEBT_TOKEN_REVISION()": {
            "calls": 14090,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "POOL()": {
            "calls": 14090,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "UNDERLYING_ASSET_ADDRESS()": {
            "calls": 19210,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "allowance(address,address)": {
            "calls": 5,
            "min": 354,
            "mean": 354,
            "median": 354,
            "max": 354
          },
          "approve(address,uint256)": {
            "calls": 5,
            "min": 21649,
            "mean": 21649,
            "median": 21649,
            "max": 21649
          },
          "approveDelegation(address,uint256)": {
            "calls": 1280,
            "min": 26851,
            "mean": 26851,
            "median": 26851,
            "max": 26851
          },
          "burn(address,uint256,uint256)": {
            "calls": 2560,
            "min": 26375,
            "mean": 26375,
            "median": 26375,
            "max": 26375
          },
          "decimals()": {
            "calls": 14090,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21648,
            "mean": 21648,
            "median": 21648,
            "max": 21648
          },
          "getIncentivesController()": {
            "calls": 14090,
            "min": 266,
            "mean": 266,
            "median": 266,
            "max": 266
          },
          "increaseAllowance(address,uint256)": {
            "calls": 5,
            "min": 21652,
            "mean": 21652,
            "median": 21652,
            "max": 21652
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 7680,
            "min": 45459,
            "mean": 180431,
            "median": 206469,
            "max": 292065
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 5120,
            "min": 60558,
            "mean": 62950,
            "median": 60558,
            "max": 70127
          },
          "name()": {
            "calls": 14090,
            "min": 2637,
            "mean": 3685,
            "median": 2672,
            "max": 9193
          },
          "scaledBalanceOf(address)": {
            "calls": 5120,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "symbol()": {
            "calls": 14090,
            "min": 2585,
            "mean": 3673,
            "median": 2623,
            "max": 9155
          },
          "transfer(address,uint256)": {
            "calls": 5,
            "min": 21641,
            "mean": 21641,
            "median": 21641,
            "max": 21641
          },
          "transferFrom(address,address,uint256)": {
            "calls": 5,
            "min": 21829,
            "mean": 21829,
            "median": 21829,
            "max": 21829
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/invariants/CryticToFoundry.t.sol:CryticToFoundry",
        "deployment": {
          "gas": 82818142,
          "size": 412069
        },
        "functions": {
          "approve(uint256,uint8,uint8)": {
            "calls": 15,
            "min": 74520,
            "mean": 74715,
            "median": 74808,
            "max": 74817
          },
          "approveDelegation(uint256,uint8,uint8)": {
            "calls": 10,
            "min": 76688,
            "mean": 76688,
            "median": 76688,
            "max": 76688
          },
          "assert_BORROWING_HSPOST_G(uint8)": {
            "calls": 5,
            "min": 143129,
            "mean": 143129,
            "median": 143129,
            "max": 143129
          },
          "borrow(uint256,uint8,uint8)": {
            "calls": 110,
            "min": 382008,
            "mean": 688918,
            "median": 742726,
            "max": 744733
          },
          "disableLiquidationGracePeriod(uint8)": {
            "calls": 5,
            "min": 633463,
            "mean": 633463,
            "median": 633463,
            "max": 633463
          },
          "donateUnderlying(uint256,uint8)": {
            "calls": 10,
            "min": 58696,
            "mean": 74415,
            "median": 74415,
            "max": 90134
          },
          "increaseAllowance(uint256,uint8,uint8)": {
            "calls": 35,
            "min": 61259,
            "mean": 72942,
            "median": 74929,
            "max": 74939
          },
          "liquidationCall(uint256,bool,uint8,uint8,uint8,uint8)": {
            "calls": 10,
            "min": 418772,
            "mean": 630204,
            "median": 630204,
            "max": 841637
          },
          "mintToTreasury(uint8)": {
            "calls": 15,
            "min": 472045,
            "mean": 492684,
            "median": 492521,
            "max": 513487
          },
          "repay(uint256,uint8,uint8)": {
            "calls": 25,
            "min": 413530,
            "mean": 517807,
            "median": 543411,
            "max": 607315
          },
          "repayWithATokens(uint256,uint8)": {
            "calls": 10,
            "min": 549608,
            "mean": 587441,
            "median": 587441,
            "max": 625275
          },
          "setAssetBorrowableInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 151029,
            "mean": 151029,
            "median": 151029,
            "max": 151029
          },
          "setAssetCollateralInEMode(bool,uint8,uint8)": {
            "calls": 15,
            "min": 122221,
            "mean": 130051,
            "median": 133967,
            "max": 133967
          },
          "setBorrowableInIsolation(bool,uint8)": {
            "calls": 25,
            "min": 499915,
            "mean": 532320,
            "median": 521031,
            "max": 569233
          },
          "setDebtCeiling(uint256,uint8)": {
            "calls": 5,
            "min": 541214,
            "mean": 541214,
            "median": 541214,
            "max": 541214
          },
          "setEModeCategory(uint8,uint16,uint16,uint16)": {
            "calls": 20,
            "min": 514781,
            "mean": 526349,
            "median": 514781,
            "max": 561054
          },
          "setLatestAnswer(int256,uint8)": {
            "calls": 25,
            "min": 35765,
            "mean": 36000,
            "median": 36137,
            "max": 36149
          },
          "setLiquidationProtocolFee(uint256,uint8)": {
            "calls": 5,
            "min": 502889,
            "mean": 502889,
            "median": 502889,
            "max": 502889
          },
          "setPoolPause(bool,uint40)": {
            "calls": 5,
            "min": 520262,
            "mean": 520262,
            "median": 520262,
            "max": 520262
          },
          "setReserveActive(bool,uint8)": {
            "calls": 15,
            "min": 525314,
            "mean": 581187,
            "median": 529470,
            "max": 688779
          },
          "setReserveBorrowing(bool,uint8)": {
            "calls": 30,
            "min": 502966,
            "mean": 538901,
            "median": 531549,
            "max": 595603
          },
          "setSiloedBorrowing(bool,uint8)": {
            "calls": 15,
            "min": 500394,
            "mean": 550763,
            "median": 546681,
            "max": 605215
          },
          "setSupplyCap(uint256,uint8)": {
            "calls": 5,
            "min": 537064,
            "mean": 537064,
            "median": 537064,
            "max": 537064
          },
          "setUserEMode(uint8)": {
            "calls": 25,
            "min": 414815,
            "mean": 551403,
            "median": 607357,
            "max": 607357
          },
          "setUserUseReserveAsCollateral(bool,uint8)": {
            "calls": 15,
            "min": 384238,
            "mean": 488671,
            "median": 531691,
            "max": 550086
          },
          "supply(uint256,uint8,uint8)": {
            "calls": 115,
            "min": 591357,
            "mean": 1057713,
            "median": 1199262,
            "max": 1206378
          },
          "transfer(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 446989,
            "mean": 446989,
            "median": 446989,
            "max": 446989
          },
          "transferFrom(uint256,uint8,uint8,uint256)": {
            "calls": 5,
            "min": 628414,
            "mean": 628414,
            "median": 628414,
            "max": 628414
          },
          "withdraw(uint256,uint8,uint8)": {
            "calls": 5,
            "min": 646786,
            "mean": 646786,
            "median": 646786,
            "max": 646786
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/invariants/utils/mocks/MockAggregatorSetPrice.sol:MockAggregatorSetPrice",
        "deployment": {
          "gas": 126355,
          "size": 370
        },
        "functions": {
          "latestAnswer()": {
            "calls": 1465,
            "min": 247,
            "mean": 1045,
            "median": 247,
            "max": 2247
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/mocks/AaveV3TestListing.sol:AaveV3TestListing",
        "deployment": {
          "gas": 4101442,
          "size": 17734
        },
        "functions": {
          "USDX_ADDRESS()": {
            "calls": 3840,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "WBTC_ADDRESS()": {
            "calls": 3840,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "execute()": {
            "calls": 3855,
            "min": 4519146,
            "mean": 4519237,
            "median": 4519245,
            "max": 4519245
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/mocks/AugustusRegistryMock.sol:AugustusRegistryMock",
        "deployment": {
          "gas": 83719,
          "size": 170
        },
        "functions": {
          "isValidAugustus(address)": {
            "calls": 525,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/mocks/StakeMock.sol:StakeMock",
        "deployment": {
          "gas": 118751,
          "size": 332
        },
        "functions": {
          "STAKED_TOKEN()": {
            "calls": 25,
            "min": 140,
            "mean": 140,
            "median": 140,
            "max": 140
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/protocol/tokenization/ATokenDelegation.t.sol:ATokenWithDelegationInstanceNext",
        "deployment": {
          "gas": 3467232,
          "size": 16964
        },
        "functions": {
          "POWER_SCALE_FACTOR()": {
            "calls": 1230,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "approve(address,uint256)": {
            "calls": 100,
            "min": 24454,
            "mean": 24454,
            "median": 24454,
            "max": 24454
          },
          "balanceOf(address)": {
            "calls": 1265,
            "min": 17158,
            "mean": 17316,
            "median": 17366,
            "max": 17366
          },
          "burn(address,address,uint256,uint256)": {
            "calls": 50,
            "min": 44848,
            "mean": 70849,
            "median": 66662,
            "max": 83762
          },
          "delegate(address)": {
            "calls": 130,
            "min": 6141,
            "mean": 64583,
            "median": 67398,
            "max": 87298
          },
          "delegateByType(address,uint8)": {
            "calls": 185,
            "min": 25130,
            "mean": 44372,
            "median": 47060,
            "max": 59163
          },
          "getDelegateeByType(address,uint8)": {
            "calls": 150,
            "min": 5249,
            "mean": 6405,
            "median": 7411,
            "max": 7423
          },
          "getDelegates(address)": {
            "calls": 620,
            "min": 5436,
            "mean": 8144,
            "median": 9770,
            "max": 9770
          },
          "getPowerCurrent(address,uint8)": {
            "calls": 2590,
            "min": 5244,
            "mean": 5394,
            "median": 5397,
            "max": 5400
          },
          "getPowersCurrent(address)": {
            "calls": 45,
            "min": 6023,
            "mean": 6261,
            "median": 6329,
            "max": 6329
          },
          "initialize(address,address,uint8,string,string,bytes)": {
            "calls": 240,
            "min": 53818,
            "mean": 53818,
            "median": 53818,
            "max": 53818
          },
          "mint(address,address,uint256,uint256)": {
            "calls": 235,
            "min": 29344,
            "mean": 53753,
            "median": 46444,
            "max": 85304
          },
          "scaledBalanceOf(address)": {
            "calls": 1325,
            "min": 2575,
            "mean": 2575,
            "median": 2575,
            "max": 2575
          },
          "totalSupply()": {
            "calls": 25,
            "min": 5928,
            "mean": 5928,
            "median": 5928,
            "max": 5928
          },
          "transfer(address,uint256)": {
            "calls": 80,
            "min": 75944,
            "mean": 109680,
            "median": 111036,
            "max": 129702
          },
          "transferFrom(address,address,uint256)": {
            "calls": 100,
            "min": 83187,
            "mean": 125877,
            "median": 121764,
            "max": 180735
          },
          "transferOnLiquidation(address,address,uint256,uint256)": {
            "calls": 75,
            "min": 36117,
            "mean": 68500,
            "median": 66092,
            "max": 113892
          },
          "transferUnderlyingTo(address,uint256)": {
            "calls": 25,
            "min": 32920,
            "mean": 32920,
            "median": 32920,
            "max": 32920
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/utils/EIP712SigUtils.sol:EIP712SigUtils",
        "deployment": {
          "gas": 389841,
          "size": 2005
        },
        "functions": {
          "getDomainSeparator(bytes,bytes,address)": {
            "calls": 10,
            "min": 1123,
            "mean": 1123,
            "median": 1123,
            "max": 1123
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "tests/utils/SlotParser.sol:SlotParser",
        "deployment": {
          "gas": 54519,
          "size": 330
        },
        "functions": {
          "loadAddressFromSlot(address,bytes32)": {
            "calls": 105,
            "min": 425,
            "mean": 1734,
            "median": 2925,
            "max": 2925
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "art-gobblers": {
    "solc": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 11014365,
          "size": 51684
        },
        "functions": {
          "artGobblers()": {
            "calls": 120,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 20,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 60,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "governorWallet()": {
            "calls": 20,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "pages()": {
            "calls": 80,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 20,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "run()": {
            "calls": 140,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 11024851,
          "size": 51751
        },
        "functions": {
          "artGobblers()": {
            "calls": 80,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "coldWallet()": {
            "calls": 20,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "goo()": {
            "calls": 60,
            "min": 2352,
            "mean": 2352,
            "median": 2352,
            "max": 2352
          },
          "mintStart()": {
            "calls": 20,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "pages()": {
            "calls": 80,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "root()": {
            "calls": 20,
            "min": 494,
            "mean": 494,
            "median": 494,
            "max": 494
          },
          "run()": {
            "calls": 100,
            "min": 8317172,
            "mean": 8317172,
            "median": 8317172,
            "max": 8317172
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2396,
            "mean": 2396,
            "median": 2396,
            "max": 2396
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4611156,
          "size": 23380
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 8275,
            "mean": 8275,
            "median": 8275,
            "max": 8275
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 20,
            "min": 1455,
            "mean": 1455,
            "median": 1455,
            "max": 1455
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 340,
            "min": 1125,
            "mean": 1125,
            "median": 1125,
            "max": 1125
          },
          "MAX_MINTABLE()": {
            "calls": 40,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "UNREVEALED_URI()": {
            "calls": 40,
            "min": 7717,
            "mean": 7717,
            "median": 7717,
            "max": 7717
          },
          "balanceOf(address)": {
            "calls": 40,
            "min": 3166,
            "mean": 3166,
            "median": 3166,
            "max": 3166
          },
          "claimGobbler(bytes32[])": {
            "calls": 140,
            "min": 22611,
            "mean": 51621,
            "median": 25166,
            "max": 115686
          },
          "getTargetSaleTime(int256)": {
            "calls": 60,
            "min": 984,
            "mean": 1433,
            "median": 1658,
            "max": 1658
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 49980,
            "min": 1628,
            "mean": 2702,
            "median": 2908,
            "max": 2908
          },
          "gobblerPrice()": {
            "calls": 1100,
            "min": 3484,
            "mean": 3921,
            "median": 3938,
            "max": 3938
          },
          "gobblerRevealsData()": {
            "calls": 20,
            "min": 2603,
            "mean": 2603,
            "median": 2603,
            "max": 2603
          },
          "merkleRoot()": {
            "calls": 20,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 40,
            "min": 29625,
            "mean": 29758,
            "median": 29758,
            "max": 29891
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 20,
            "min": 26550,
            "mean": 26550,
            "median": 26550,
            "max": 26550
          },
          "mintReservedGobblers(uint256)": {
            "calls": 20,
            "min": 46214,
            "mean": 46214,
            "median": 46214,
            "max": 46214
          },
          "mintStart()": {
            "calls": 20,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "owner()": {
            "calls": 20,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "ownerOf(uint256)": {
            "calls": 20,
            "min": 2909,
            "mean": 2909,
            "median": 2909,
            "max": 2909
          },
          "requestRandomSeed()": {
            "calls": 20,
            "min": 29974,
            "mean": 29974,
            "median": 29974,
            "max": 29974
          },
          "targetPrice()": {
            "calls": 20,
            "min": 1320,
            "mean": 1320,
            "median": 1320,
            "max": 1320
          },
          "tokenURI(uint256)": {
            "calls": 60,
            "min": 5592,
            "mean": 7076,
            "median": 7819,
            "max": 7819
          },
          "upgradeRandProvider(address)": {
            "calls": 20,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 1038342,
          "size": 5575
        },
        "functions": {
          "artGobblers()": {
            "calls": 40,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "balanceOf(address)": {
            "calls": 20,
            "min": 2569,
            "mean": 2569,
            "median": 2569,
            "max": 2569
          },
          "burnForGobblers(address,uint256)": {
            "calls": 40,
            "min": 24227,
            "mean": 29060,
            "median": 29060,
            "max": 33893
          },
          "burnForPages(address,uint256)": {
            "calls": 20,
            "min": 34015,
            "mean": 34015,
            "median": 34015,
            "max": 34015
          },
          "mintForGobblers(address,uint256)": {
            "calls": 260820,
            "min": 22010,
            "mean": 42060,
            "median": 28299,
            "max": 68195
          },
          "pages()": {
            "calls": 40,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "totalSupply()": {
            "calls": 80,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 2046045,
          "size": 11172
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 7602,
            "mean": 7602,
            "median": 7602,
            "max": 7602
          },
          "artGobblers()": {
            "calls": 40,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "currentId()": {
            "calls": 40,
            "min": 2773,
            "mean": 2773,
            "median": 2773,
            "max": 2773
          },
          "getTargetSaleTime(int256)": {
            "calls": 140,
            "min": 468,
            "mean": 778,
            "median": 1012,
            "max": 1012
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 174440,
            "min": 1012,
            "mean": 1828,
            "median": 1842,
            "max": 1842
          },
          "goo()": {
            "calls": 40,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "mintCommunityPages(uint256)": {
            "calls": 300,
            "min": 26880,
            "mean": 70865,
            "median": 58057,
            "max": 292408
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 259660,
            "min": 0,
            "mean": 67531,
            "median": 68821,
            "max": 103021
          },
          "numMintedForCommunity()": {
            "calls": 20,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "pagePrice()": {
            "calls": 259660,
            "min": 2909,
            "mean": 3521,
            "median": 3453,
            "max": 3754
          },
          "targetPrice()": {
            "calls": 60,
            "min": 642,
            "mean": 642,
            "median": 642,
            "max": 642
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 294021,
          "size": 1277
        },
        "functions": {
          "owner()": {
            "calls": 80,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 378808,
          "size": 1929
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 20,
            "min": 21280,
            "mean": 21280,
            "median": 21280,
            "max": 21280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 825912,
          "size": 3578
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 1940,
            "min": 36965,
            "mean": 36965,
            "median": 36965,
            "max": 36965
          },
          "predictContractAddress(address,uint256)": {
            "calls": 6240,
            "min": 25131,
            "mean": 25131,
            "median": 25131,
            "max": 25131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 10349425,
          "size": 48142
        },
        "functions": {
          "artGobblers()": {
            "calls": 120,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "coldWallet()": {
            "calls": 20,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 477,
            "mean": 477,
            "median": 477,
            "max": 477
          },
          "goo()": {
            "calls": 60,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "governorWallet()": {
            "calls": 20,
            "min": 270,
            "mean": 270,
            "median": 270,
            "max": 270
          },
          "pages()": {
            "calls": 80,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "root()": {
            "calls": 20,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "run()": {
            "calls": 140,
            "min": 8037032,
            "mean": 8037032,
            "median": 8037032,
            "max": 8037032
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 10347863,
          "size": 48174
        },
        "functions": {
          "artGobblers()": {
            "calls": 80,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "coldWallet()": {
            "calls": 20,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 477,
            "mean": 477,
            "median": 477,
            "max": 477
          },
          "goo()": {
            "calls": 60,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mintStart()": {
            "calls": 20,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "pages()": {
            "calls": 80,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "root()": {
            "calls": 20,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "run()": {
            "calls": 100,
            "min": 8037032,
            "mean": 8037032,
            "median": 8037032,
            "max": 8037032
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 4362762,
          "size": 22029
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 7427,
            "mean": 7427,
            "median": 7427,
            "max": 7427
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 20,
            "min": 486,
            "mean": 486,
            "median": 486,
            "max": 486
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 340,
            "min": 847,
            "mean": 847,
            "median": 847,
            "max": 847
          },
          "MAX_MINTABLE()": {
            "calls": 40,
            "min": 758,
            "mean": 758,
            "median": 758,
            "max": 758
          },
          "UNREVEALED_URI()": {
            "calls": 40,
            "min": 7361,
            "mean": 7361,
            "median": 7361,
            "max": 7361
          },
          "balanceOf(address)": {
            "calls": 60,
            "min": 2618,
            "mean": 2618,
            "median": 2618,
            "max": 2618
          },
          "claimGobbler(bytes32[])": {
            "calls": 140,
            "min": 21923,
            "mean": 76553,
            "median": 114627,
            "max": 121612
          },
          "getTargetSaleTime(int256)": {
            "calls": 60,
            "min": 520,
            "mean": 902,
            "median": 1094,
            "max": 1094
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 49980,
            "min": 569,
            "mean": 1519,
            "median": 1691,
            "max": 1691
          },
          "gobblerPrice()": {
            "calls": 1100,
            "min": 3498,
            "mean": 3828,
            "median": 3841,
            "max": 3841
          },
          "gobblerRevealsData()": {
            "calls": 20,
            "min": 2616,
            "mean": 2616,
            "median": 2616,
            "max": 2616
          },
          "merkleRoot()": {
            "calls": 20,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 40,
            "min": 29020,
            "mean": 29051,
            "median": 29051,
            "max": 29083
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 20,
            "min": 26664,
            "mean": 26664,
            "median": 26664,
            "max": 26664
          },
          "mintReservedGobblers(uint256)": {
            "calls": 20,
            "min": 45856,
            "mean": 45856,
            "median": 45856,
            "max": 45856
          },
          "mintStart()": {
            "calls": 20,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "owner()": {
            "calls": 20,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "ownerOf(uint256)": {
            "calls": 40,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "requestRandomSeed()": {
            "calls": 20,
            "min": 28847,
            "mean": 28847,
            "median": 28847,
            "max": 28847
          },
          "targetPrice()": {
            "calls": 20,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "tokenURI(uint256)": {
            "calls": 60,
            "min": 4868,
            "mean": 6447,
            "median": 7237,
            "max": 7237
          },
          "upgradeRandProvider(address)": {
            "calls": 20,
            "min": 24042,
            "mean": 24042,
            "median": 24042,
            "max": 24042
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 964891,
          "size": 4967
        },
        "functions": {
          "artGobblers()": {
            "calls": 40,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "balanceOf(address)": {
            "calls": 20,
            "min": 2549,
            "mean": 2549,
            "median": 2549,
            "max": 2549
          },
          "burnForGobblers(address,uint256)": {
            "calls": 40,
            "min": 24320,
            "mean": 29196,
            "median": 29196,
            "max": 34072
          },
          "burnForPages(address,uint256)": {
            "calls": 20,
            "min": 34040,
            "mean": 34040,
            "median": 34040,
            "max": 34040
          },
          "mintForGobblers(address,uint256)": {
            "calls": 260740,
            "min": 0,
            "mean": 42151,
            "median": 28404,
            "max": 68300
          },
          "pages()": {
            "calls": 40,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          },
          "totalSupply()": {
            "calls": 80,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1931435,
          "size": 10549
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 7360,
            "mean": 7360,
            "median": 7360,
            "max": 7360
          },
          "artGobblers()": {
            "calls": 40,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "currentId()": {
            "calls": 40,
            "min": 2378,
            "mean": 2378,
            "median": 2378,
            "max": 2378
          },
          "getTargetSaleTime(int256)": {
            "calls": 140,
            "min": 410,
            "mean": 799,
            "median": 1092,
            "max": 1092
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 174440,
            "min": 798,
            "mean": 1737,
            "median": 1754,
            "max": 1754
          },
          "goo()": {
            "calls": 40,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "mintCommunityPages(uint256)": {
            "calls": 300,
            "min": 26637,
            "mean": 70754,
            "median": 57954,
            "max": 292611
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 259560,
            "min": 22197,
            "mean": 67702,
            "median": 68981,
            "max": 103181
          },
          "numMintedForCommunity()": {
            "calls": 20,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "pagePrice()": {
            "calls": 259580,
            "min": 2916,
            "mean": 3672,
            "median": 3598,
            "max": 3941
          },
          "targetPrice()": {
            "calls": 60,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 318671,
          "size": 1419
        },
        "functions": {
          "owner()": {
            "calls": 80,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 374024,
          "size": 1918
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 20,
            "min": 21294,
            "mean": 21294,
            "median": 21294,
            "max": 21294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 805130,
          "size": 3473
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 1940,
            "min": 36851,
            "mean": 36851,
            "median": 36851,
            "max": 36851
          },
          "predictContractAddress(address,uint256)": {
            "calls": 6240,
            "min": 25264,
            "mean": 25264,
            "median": 25264,
            "max": 25264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 9384255,
          "size": 43797
        },
        "functions": {
          "artGobblers()": {
            "calls": 120,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "coldWallet()": {
            "calls": 20,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 377,
            "mean": 377,
            "median": 377,
            "max": 377
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "goo()": {
            "calls": 60,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "governorWallet()": {
            "calls": 20,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "pages()": {
            "calls": 80,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "root()": {
            "calls": 20,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "run()": {
            "calls": 140,
            "min": 6897341,
            "mean": 6897341,
            "median": 6897341,
            "max": 6897341
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 9388415,
          "size": 43757
        },
        "functions": {
          "artGobblers()": {
            "calls": 80,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "coldWallet()": {
            "calls": 20,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "goo()": {
            "calls": 60,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "mintStart()": {
            "calls": 20,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "pages()": {
            "calls": 80,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 418,
            "mean": 418,
            "median": 418,
            "max": 418
          },
          "root()": {
            "calls": 20,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "run()": {
            "calls": 100,
            "min": 6897341,
            "mean": 6897341,
            "median": 6897341,
            "max": 6897341
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 3702055,
          "size": 19624
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 7137,
            "mean": 7137,
            "median": 7137,
            "max": 7137
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 20,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 340,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "MAX_MINTABLE()": {
            "calls": 40,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "UNREVEALED_URI()": {
            "calls": 40,
            "min": 7128,
            "mean": 7128,
            "median": 7128,
            "max": 7128
          },
          "balanceOf(address)": {
            "calls": 40,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "claimGobbler(bytes32[])": {
            "calls": 140,
            "min": 21785,
            "mean": 50494,
            "median": 24078,
            "max": 114241
          },
          "getTargetSaleTime(int256)": {
            "calls": 60,
            "min": 480,
            "mean": 812,
            "median": 979,
            "max": 979
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 49980,
            "min": 505,
            "mean": 1430,
            "median": 1613,
            "max": 1613
          },
          "gobblerPrice()": {
            "calls": 1100,
            "min": 3365,
            "mean": 3763,
            "median": 3779,
            "max": 3779
          },
          "gobblerRevealsData()": {
            "calls": 20,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "merkleRoot()": {
            "calls": 20,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 40,
            "min": 28691,
            "mean": 28833,
            "median": 28833,
            "max": 28976
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 20,
            "min": 26152,
            "mean": 26152,
            "median": 26152,
            "max": 26152
          },
          "mintReservedGobblers(uint256)": {
            "calls": 20,
            "min": 45741,
            "mean": 45741,
            "median": 45741,
            "max": 45741
          },
          "mintStart()": {
            "calls": 20,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "owner()": {
            "calls": 20,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "ownerOf(uint256)": {
            "calls": 20,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "requestRandomSeed()": {
            "calls": 20,
            "min": 25661,
            "mean": 25661,
            "median": 25661,
            "max": 25661
          },
          "targetPrice()": {
            "calls": 20,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          },
          "tokenURI(uint256)": {
            "calls": 60,
            "min": 4655,
            "mean": 6081,
            "median": 6795,
            "max": 6795
          },
          "upgradeRandProvider(address)": {
            "calls": 20,
            "min": 23867,
            "mean": 23867,
            "median": 23867,
            "max": 23867
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 891590,
          "size": 5312
        },
        "functions": {
          "artGobblers()": {
            "calls": 40,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "balanceOf(address)": {
            "calls": 20,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burnForGobblers(address,uint256)": {
            "calls": 40,
            "min": 24090,
            "mean": 28925,
            "median": 28925,
            "max": 33760
          },
          "burnForPages(address,uint256)": {
            "calls": 20,
            "min": 33767,
            "mean": 33767,
            "median": 33767,
            "max": 33767
          },
          "mintForGobblers(address,uint256)": {
            "calls": 262540,
            "min": 0,
            "mean": 42042,
            "median": 28115,
            "max": 68011
          },
          "pages()": {
            "calls": 40,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "totalSupply()": {
            "calls": 80,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1746977,
          "size": 9965
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 7098,
            "mean": 7098,
            "median": 7098,
            "max": 7098
          },
          "artGobblers()": {
            "calls": 40,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "currentId()": {
            "calls": 40,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          },
          "getTargetSaleTime(int256)": {
            "calls": 140,
            "min": 434,
            "mean": 755,
            "median": 997,
            "max": 997
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 174440,
            "min": 735,
            "mean": 1633,
            "median": 1650,
            "max": 1651
          },
          "goo()": {
            "calls": 40,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "mintCommunityPages(uint256)": {
            "calls": 300,
            "min": 26517,
            "mean": 70490,
            "median": 57683,
            "max": 291998
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 261360,
            "min": 22028,
            "mean": 66955,
            "median": 68220,
            "max": 102420
          },
          "numMintedForCommunity()": {
            "calls": 20,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "pagePrice()": {
            "calls": 261380,
            "min": 2850,
            "mean": 3518,
            "median": 3413,
            "max": 3827
          },
          "targetPrice()": {
            "calls": 60,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 270791,
          "size": 1214
        },
        "functions": {
          "owner()": {
            "calls": 80,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 304889,
          "size": 1607
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 20,
            "min": 21265,
            "mean": 21265,
            "median": 21265,
            "max": 21265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 522014,
          "size": 2095
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 1940,
            "min": 35303,
            "mean": 35303,
            "median": 35303,
            "max": 35303
          },
          "predictContractAddress(address,uint256)": {
            "calls": 6240,
            "min": 24828,
            "mean": 24828,
            "median": 24828,
            "max": 24828
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "script/deploy/DeployMainnet.s.sol:DeployMainnet",
        "deployment": {
          "gas": 8591519,
          "size": 40335
        },
        "functions": {
          "artGobblers()": {
            "calls": 120,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "coldWallet()": {
            "calls": 20,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 289
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "goo()": {
            "calls": 60,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "governorWallet()": {
            "calls": 20,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "pages()": {
            "calls": 80,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "root()": {
            "calls": 20,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "run()": {
            "calls": 140,
            "min": 6454765,
            "mean": 6454765,
            "median": 6454765,
            "max": 6454765
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "script/deploy/DeployRinkeby.s.sol:DeployRinkeby",
        "deployment": {
          "gas": 8594182,
          "size": 40223
        },
        "functions": {
          "artGobblers()": {
            "calls": 80,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "coldWallet()": {
            "calls": 20,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "communityReserve()": {
            "calls": 20,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "gobblerBaseUri()": {
            "calls": 20,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "gobblerUnrevealedUri()": {
            "calls": 20,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "goo()": {
            "calls": 60,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "mintStart()": {
            "calls": 20,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "pages()": {
            "calls": 80,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "pagesBaseUri()": {
            "calls": 20,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "root()": {
            "calls": 20,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "run()": {
            "calls": 100,
            "min": 6454765,
            "mean": 6454765,
            "median": 6454765,
            "max": 6454765
          },
          "teamReserve()": {
            "calls": 20,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/ArtGobblers.sol:ArtGobblers",
        "deployment": {
          "gas": 3446811,
          "size": 18253
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 7017,
            "mean": 7017,
            "median": 7017,
            "max": 7017
          },
          "FIRST_LEGENDARY_GOBBLER_ID()": {
            "calls": 20,
            "min": 285,
            "mean": 285,
            "median": 285,
            "max": 285
          },
          "LEGENDARY_AUCTION_INTERVAL()": {
            "calls": 340,
            "min": 268,
            "mean": 268,
            "median": 268,
            "max": 268
          },
          "MAX_MINTABLE()": {
            "calls": 40,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "UNREVEALED_URI()": {
            "calls": 40,
            "min": 7008,
            "mean": 7008,
            "median": 7008,
            "max": 7008
          },
          "balanceOf(address)": {
            "calls": 60,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "claimGobbler(bytes32[])": {
            "calls": 140,
            "min": 21825,
            "mean": 76329,
            "median": 114325,
            "max": 121321
          },
          "getTargetSaleTime(int256)": {
            "calls": 60,
            "min": 543,
            "mean": 885,
            "median": 1056,
            "max": 1056
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 49980,
            "min": 559,
            "mean": 1492,
            "median": 1675,
            "max": 1675
          },
          "gobblerPrice()": {
            "calls": 1100,
            "min": 3407,
            "mean": 3803,
            "median": 3818,
            "max": 3818
          },
          "gobblerRevealsData()": {
            "calls": 20,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "merkleRoot()": {
            "calls": 20,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 40,
            "min": 28786,
            "mean": 28898,
            "median": 28898,
            "max": 29011
          },
          "mintLegendaryGobbler(uint256[])": {
            "calls": 20,
            "min": 26257,
            "mean": 26257,
            "median": 26257,
            "max": 26257
          },
          "mintReservedGobblers(uint256)": {
            "calls": 20,
            "min": 45794,
            "mean": 45794,
            "median": 45794,
            "max": 45794
          },
          "mintStart()": {
            "calls": 20,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          },
          "owner()": {
            "calls": 20,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "ownerOf(uint256)": {
            "calls": 40,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "requestRandomSeed()": {
            "calls": 20,
            "min": 28598,
            "mean": 28598,
            "median": 28598,
            "max": 28598
          },
          "targetPrice()": {
            "calls": 20,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "tokenURI(uint256)": {
            "calls": 60,
            "min": 4655,
            "mean": 6081,
            "median": 6795,
            "max": 6795
          },
          "upgradeRandProvider(address)": {
            "calls": 20,
            "min": 23926,
            "mean": 23926,
            "median": 23926,
            "max": 23926
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/Goo.sol:Goo",
        "deployment": {
          "gas": 810443,
          "size": 4753
        },
        "functions": {
          "artGobblers()": {
            "calls": 40,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          },
          "balanceOf(address)": {
            "calls": 20,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "burnForGobblers(address,uint256)": {
            "calls": 40,
            "min": 24150,
            "mean": 28995,
            "median": 28995,
            "max": 33841
          },
          "burnForPages(address,uint256)": {
            "calls": 20,
            "min": 33829,
            "mean": 33829,
            "median": 33829,
            "max": 33829
          },
          "mintForGobblers(address,uint256)": {
            "calls": 262360,
            "min": 21853,
            "mean": 42040,
            "median": 28126,
            "max": 68022
          },
          "pages()": {
            "calls": 40,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "totalSupply()": {
            "calls": 80,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/Pages.sol:Pages",
        "deployment": {
          "gas": 1606522,
          "size": 9183
        },
        "functions": {
          "BASE_URI()": {
            "calls": 40,
            "min": 6968,
            "mean": 6968,
            "median": 6968,
            "max": 6968
          },
          "artGobblers()": {
            "calls": 40,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "currentId()": {
            "calls": 40,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "getTargetSaleTime(int256)": {
            "calls": 140,
            "min": 480,
            "mean": 802,
            "median": 1045,
            "max": 1045
          },
          "getVRGDAPrice(int256,uint256)": {
            "calls": 174440,
            "min": 754,
            "mean": 1672,
            "median": 1689,
            "max": 1689
          },
          "goo()": {
            "calls": 40,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "mintCommunityPages(uint256)": {
            "calls": 300,
            "min": 26554,
            "mean": 70561,
            "median": 57760,
            "max": 292102
          },
          "mintFromGoo(uint256,bool)": {
            "calls": 261200,
            "min": 0,
            "mean": 67085,
            "median": 68355,
            "max": 102555
          },
          "numMintedForCommunity()": {
            "calls": 20,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2443,
            "mean": 2443,
            "median": 2443,
            "max": 2443
          },
          "pagePrice()": {
            "calls": 261200,
            "min": 2864,
            "mean": 3533,
            "median": 3429,
            "max": 3840
          },
          "targetPrice()": {
            "calls": 60,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/utils/GobblerReserve.sol:GobblerReserve",
        "deployment": {
          "gas": 239843,
          "size": 1030
        },
        "functions": {
          "owner()": {
            "calls": 80,
            "min": 2253,
            "mean": 2253,
            "median": 2253,
            "max": 2253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/utils/rand/ChainlinkV1RandProvider.sol:ChainlinkV1RandProvider",
        "deployment": {
          "gas": 289548,
          "size": 1473
        },
        "functions": {
          "requestRandomBytes()": {
            "calls": 20,
            "min": 21250,
            "mean": 21250,
            "median": 21250,
            "max": 21250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/Utilities.sol:Utilities",
        "deployment": {
          "gas": 478786,
          "size": 1909
        },
        "functions": {
          "createUsers(uint256)": {
            "calls": 1940,
            "min": 35043,
            "mean": 35043,
            "median": 35043,
            "max": 35043
          },
          "predictContractAddress(address,uint256)": {
            "calls": 6240,
            "min": 24856,
            "mean": 24856,
            "median": 24856,
            "max": 24856
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "balance-snapshot": {
    "solc": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 818597,
          "size": 3787
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 340,
            "min": 3230,
            "mean": 3230,
            "median": 3230,
            "max": 3230
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 850988,
          "size": 4294
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 340,
            "min": 2824,
            "mean": 2824,
            "median": 2824,
            "max": 2824
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 508708,
          "size": 2202
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 340,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/ERC20.sol:ERC20",
        "deployment": {
          "gas": 464010,
          "size": 2022
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 340,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "beefy": {
    "solc": [
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 794797,
          "size": 3455
        },
        "functions": {
          "getPrice(address)": {
            "calls": 20,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "initialize()": {
            "calls": 200,
            "min": 68917,
            "mean": 68917,
            "median": 68917,
            "max": 68917
          },
          "setOracle(address,address,bytes)": {
            "calls": 180,
            "min": 28688,
            "mean": 31519,
            "median": 31428,
            "max": 34992
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 20,
            "min": 34373,
            "mean": 34373,
            "median": 34373,
            "max": 34373
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 239129,
          "size": 890
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 180,
            "min": 806,
            "mean": 3028,
            "median": 3306,
            "max": 3306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1065587,
          "size": 4709
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 20,
            "min": 5070,
            "mean": 5070,
            "median": 5070,
            "max": 5070
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4004861,
          "size": 18301
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24387,
            "mean": 24387,
            "median": 24387,
            "max": 24387
          },
          "vault()": {
            "calls": 20,
            "min": 3846,
            "mean": 3846,
            "median": 3846,
            "max": 3846
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 3977628,
          "size": 18174
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24387,
            "mean": 24387,
            "median": 24387,
            "max": 24387
          },
          "vault()": {
            "calls": 20,
            "min": 3802,
            "mean": 3802,
            "median": 3802,
            "max": 3802
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 3485847,
          "size": 15900
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24496,
            "mean": 24496,
            "median": 24496,
            "max": 24496
          },
          "vault()": {
            "calls": 20,
            "min": 3707,
            "mean": 3707,
            "median": 3707,
            "max": 3707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 3445589,
          "size": 15713
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24452,
            "mean": 24452,
            "median": 24452,
            "max": 24452
          },
          "vault()": {
            "calls": 20,
            "min": 3663,
            "mean": 3663,
            "median": 3663,
            "max": 3663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 3251882,
          "size": 14816
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24459,
            "mean": 24459,
            "median": 24459,
            "max": 24459
          },
          "vault()": {
            "calls": 20,
            "min": 3823,
            "mean": 3823,
            "median": 3823,
            "max": 3823
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 2796289,
          "size": 12711
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24386,
            "mean": 24386,
            "median": 24386,
            "max": 24386
          },
          "vault()": {
            "calls": 20,
            "min": 3443,
            "mean": 3443,
            "median": 3443,
            "max": 3443
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2827107,
          "size": 12854
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24408,
            "mean": 24408,
            "median": 24408,
            "max": 24408
          },
          "vault()": {
            "calls": 20,
            "min": 3443,
            "mean": 3443,
            "median": 3443,
            "max": 3443
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3553343,
          "size": 16212
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24452,
            "mean": 24452,
            "median": 24452,
            "max": 24452
          },
          "vault()": {
            "calls": 20,
            "min": 3688,
            "mean": 3688,
            "median": 3688,
            "max": 3688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 3220455,
          "size": 14672
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24540,
            "mean": 24540,
            "median": 24540,
            "max": 24540
          },
          "vault()": {
            "calls": 20,
            "min": 3619,
            "mean": 3619,
            "median": 3619,
            "max": 3619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 4890893,
          "size": 22397
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24404,
            "mean": 24404,
            "median": 24404,
            "max": 24404
          },
          "vault()": {
            "calls": 20,
            "min": 3509,
            "mean": 3509,
            "median": 3509,
            "max": 3509
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 1835837,
          "size": 8269
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 200,
            "min": 162850,
            "mean": 162850,
            "median": 162850,
            "max": 162850
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2008827,
          "size": 9031
        },
        "functions": {
          "clone(address)": {
            "calls": 20,
            "min": 65629,
            "mean": 65629,
            "median": 65629,
            "max": 65629
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 428247,
          "size": 1760
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 40,
            "min": 29552,
            "mean": 29582,
            "median": 29582,
            "max": 29612
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 852921,
          "size": 3726
        },
        "functions": {
          "getPrice(address)": {
            "calls": 20,
            "min": 2546,
            "mean": 2546,
            "median": 2546,
            "max": 2546
          },
          "initialize()": {
            "calls": 200,
            "min": 69267,
            "mean": 69267,
            "median": 69267,
            "max": 69267
          },
          "setOracle(address,address,bytes)": {
            "calls": 180,
            "min": 28955,
            "mean": 31849,
            "median": 31695,
            "max": 35825
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 20,
            "min": 34907,
            "mean": 34907,
            "median": 34907,
            "max": 34907
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 327245,
          "size": 1318
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 180,
            "min": 821,
            "mean": 3043,
            "median": 3321,
            "max": 3321
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1329397,
          "size": 5931
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 20,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4167834,
          "size": 19055
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24081,
            "mean": 24081,
            "median": 24081,
            "max": 24081
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 4103421,
          "size": 18756
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 2951233,
          "size": 13429
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24058,
            "mean": 24058,
            "median": 24058,
            "max": 24058
          },
          "vault()": {
            "calls": 20,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 2896124,
          "size": 13174
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 2866914,
          "size": 13039
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24059,
            "mean": 24059,
            "median": 24059,
            "max": 24059
          },
          "vault()": {
            "calls": 20,
            "min": 2490,
            "mean": 2490,
            "median": 2490,
            "max": 2490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 2505329,
          "size": 11367
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24058,
            "mean": 24058,
            "median": 24058,
            "max": 24058
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 2526585,
          "size": 11465
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24080,
            "mean": 24080,
            "median": 24080,
            "max": 24080
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3213046,
          "size": 14639
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24103,
            "mean": 24103,
            "median": 24103,
            "max": 24103
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 2913085,
          "size": 13252
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24124,
            "mean": 24124,
            "median": 24124,
            "max": 24124
          },
          "vault()": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 3527383,
          "size": 16094
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24125,
            "mean": 24125,
            "median": 24125,
            "max": 24125
          },
          "vault()": {
            "calls": 20,
            "min": 2446,
            "mean": 2446,
            "median": 2446,
            "max": 2446
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 1870786,
          "size": 8433
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 200,
            "min": 163810,
            "mean": 163810,
            "median": 163810,
            "max": 163810
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2157534,
          "size": 9704
        },
        "functions": {
          "clone(address)": {
            "calls": 20,
            "min": 65732,
            "mean": 65732,
            "median": 65732,
            "max": 65732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 489893,
          "size": 2047
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 40,
            "min": 29103,
            "mean": 29133,
            "median": 29133,
            "max": 29163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 945916,
          "size": 4169
        },
        "functions": {
          "getPrice(address)": {
            "calls": 20,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "initialize()": {
            "calls": 200,
            "min": 68459,
            "mean": 68459,
            "median": 68459,
            "max": 68459
          },
          "setOracle(address,address,bytes)": {
            "calls": 180,
            "min": 28292,
            "mean": 31087,
            "median": 31032,
            "max": 34269
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 20,
            "min": 33786,
            "mean": 33786,
            "median": 33786,
            "max": 33786
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 241423,
          "size": 903
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 180,
            "min": 572,
            "mean": 2794,
            "median": 3072,
            "max": 3072
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1088599,
          "size": 4823
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 20,
            "min": 4509,
            "mean": 4509,
            "median": 4509,
            "max": 4509
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 6097066,
          "size": 28008
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23929,
            "mean": 23929,
            "median": 23929,
            "max": 23929
          },
          "vault()": {
            "calls": 20,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 6011777,
          "size": 27615
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 20,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 5263018,
          "size": 24167
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 20,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 5282336,
          "size": 24256
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 20,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 4352184,
          "size": 19948
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23913,
            "mean": 23913,
            "median": 23913,
            "max": 23913
          },
          "vault()": {
            "calls": 20,
            "min": 2421,
            "mean": 2421,
            "median": 2421,
            "max": 2421
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 4251636,
          "size": 19480
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 20,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 4190055,
          "size": 19190
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 20,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 5133342,
          "size": 23563
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23914,
            "mean": 23914,
            "median": 23914,
            "max": 23914
          },
          "vault()": {
            "calls": 20,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 4634977,
          "size": 21246
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23931,
            "mean": 23931,
            "median": 23931,
            "max": 23931
          },
          "vault()": {
            "calls": 20,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 6581475,
          "size": 30266
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23930,
            "mean": 23930,
            "median": 23930,
            "max": 23930
          },
          "vault()": {
            "calls": 20,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 2482440,
          "size": 11281
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 200,
            "min": 162077,
            "mean": 162077,
            "median": 162077,
            "max": 162077
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2693782,
          "size": 12227
        },
        "functions": {
          "clone(address)": {
            "calls": 20,
            "min": 65548,
            "mean": 65548,
            "median": 65548,
            "max": 65548
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 489302,
          "size": 2051
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 40,
            "min": 28466,
            "mean": 28496,
            "median": 28496,
            "max": 28526
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracle.sol:BeefyOracle",
        "deployment": {
          "gas": 850665,
          "size": 3726
        },
        "functions": {
          "getPrice(address)": {
            "calls": 20,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "initialize()": {
            "calls": 200,
            "min": 68391,
            "mean": 68391,
            "median": 68391,
            "max": 68391
          },
          "setOracle(address,address,bytes)": {
            "calls": 180,
            "min": 28321,
            "mean": 31106,
            "median": 31061,
            "max": 34210
          },
          "setOracles(address[],address[],bytes[])": {
            "calls": 20,
            "min": 33797,
            "mean": 33797,
            "median": 33797,
            "max": 33797
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleChainlink.sol:BeefyOracleChainlink",
        "deployment": {
          "gas": 265558,
          "size": 1040
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 180,
            "min": 555,
            "mean": 2777,
            "median": 3055,
            "max": 3055
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/infra/BeefyOracle/BeefyOracleUniswapV3.sol:BeefyOracleUniswapV3",
        "deployment": {
          "gas": 1155313,
          "size": 5138
        },
        "functions": {
          "validateData(bytes)": {
            "calls": 20,
            "min": 4404,
            "mean": 4404,
            "median": 4404,
            "max": 4404
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexCRV.sol:StrategyConvexCRV",
        "deployment": {
          "gas": 4387561,
          "size": 20105
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24000,
            "mean": 24000,
            "median": 24000,
            "max": 24000
          },
          "vault()": {
            "calls": 20,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyConvexStaking.sol:StrategyConvexStaking",
        "deployment": {
          "gas": 4314198,
          "size": 19767
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23985,
            "mean": 23985,
            "median": 23985,
            "max": 23985
          },
          "vault()": {
            "calls": 20,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexFactory.sol:StrategyCurveConvexFactory",
        "deployment": {
          "gas": 3516011,
          "size": 16074
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23974,
            "mean": 23974,
            "median": 23974,
            "max": 23974
          },
          "vault()": {
            "calls": 20,
            "min": 2424,
            "mean": 2424,
            "median": 2424,
            "max": 2424
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyCurveConvexL2Factory.sol:StrategyCurveConvexL2Factory",
        "deployment": {
          "gas": 3518951,
          "size": 16087
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23982,
            "mean": 23982,
            "median": 23982,
            "max": 23982
          },
          "vault()": {
            "calls": 20,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyFxConvex.sol:StrategyFxConvex",
        "deployment": {
          "gas": 3540205,
          "size": 16192
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23988,
            "mean": 23988,
            "median": 23988,
            "max": 23988
          },
          "vault()": {
            "calls": 20,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Curve/StrategyStakeDao.sol:StrategyStakeDao",
        "deployment": {
          "gas": 3031375,
          "size": 13827
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23974,
            "mean": 23974,
            "median": 23974,
            "max": 23974
          },
          "vault()": {
            "calls": 20,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Morpho/StrategyMorpho.sol:StrategyMorpho",
        "deployment": {
          "gas": 3006124,
          "size": 13710
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23990,
            "mean": 23990,
            "median": 23990,
            "max": 23990
          },
          "vault()": {
            "calls": 20,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyEquilibria.sol:StrategyEquilibria",
        "deployment": {
          "gas": 3720865,
          "size": 17021
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 23982,
            "mean": 23982,
            "median": 23982,
            "max": 23982
          },
          "vault()": {
            "calls": 20,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Pendle/StrategyPenpie.sol:StrategyPenpie",
        "deployment": {
          "gas": 3382048,
          "size": 15449
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24000,
            "mean": 24000,
            "median": 24000,
            "max": 24000
          },
          "vault()": {
            "calls": 20,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/strategies/Velodrome/StrategyVelodromeGaugeV2.sol:StrategyVelodromeGaugeV2",
        "deployment": {
          "gas": 4574573,
          "size": 20992
        },
        "functions": {
          "setVault(address)": {
            "calls": 20,
            "min": 24004,
            "mean": 24004,
            "median": 24004,
            "max": 24004
          },
          "vault()": {
            "calls": 20,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyVaultV7.sol:BeefyVaultV7",
        "deployment": {
          "gas": 2193426,
          "size": 9941
        },
        "functions": {
          "initialize(address,string,string,uint256)": {
            "calls": 200,
            "min": 161771,
            "mean": 161771,
            "median": 161771,
            "max": 161771
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/BIFI/vaults/BeefyWrapperFactory.sol:BeefyWrapperFactory",
        "deployment": {
          "gas": 2464649,
          "size": 11135
        },
        "functions": {
          "clone(address)": {
            "calls": 20,
            "min": 65506,
            "mean": 65506,
            "median": 65506,
            "max": 65506
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "forge/test/vault/util/AddressBook.sol:AddressBook",
        "deployment": {
          "gas": 473802,
          "size": 1978
        },
        "functions": {
          "getBeefyPlatformConfig(string)": {
            "calls": 40,
            "min": 28371,
            "mean": 28401,
            "median": 28401,
            "max": 28431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "diamond-foundry": {
    "solc": [],
    "solx": []
  },
  "diamonds": {
    "solc": [
      {
        "contract": "contracts/Diamond.sol:Diamond",
        "deployment": {
          "gas": 531436,
          "size": 7493
        },
        "functions": {
          "fallback()": {
            "calls": 40,
            "min": 17102,
            "mean": 221836,
            "median": 221836,
            "max": 426570
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/facets/DiamondCutFacet.sol:DiamondCutFacet",
        "deployment": {
          "gas": 1495873,
          "size": 6716
        },
        "functions": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "calls": 20,
            "min": 396013,
            "mean": 396013,
            "median": 396013,
            "max": 396013
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet",
        "deployment": {
          "gas": 803413,
          "size": 3512
        },
        "functions": {
          "facetAddresses()": {
            "calls": 20,
            "min": 11479,
            "mean": 11479,
            "median": 11479,
            "max": 11479
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/Diamond.sol:Diamond",
        "deployment": {
          "gas": 481800,
          "size": 8082
        },
        "functions": {
          "fallback()": {
            "calls": 40,
            "min": 15574,
            "mean": 211133,
            "median": 211133,
            "max": 406693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/facets/DiamondCutFacet.sol:DiamondCutFacet",
        "deployment": {
          "gas": 1712104,
          "size": 7735
        },
        "functions": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "calls": 20,
            "min": 376681,
            "mean": 376681,
            "median": 376681,
            "max": 376681
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet",
        "deployment": {
          "gas": 669570,
          "size": 2883
        },
        "functions": {
          "facetAddresses()": {
            "calls": 20,
            "min": 10496,
            "mean": 10496,
            "median": 10496,
            "max": 10496
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/Diamond.sol:Diamond",
        "deployment": {
          "gas": 353205,
          "size": 4421
        },
        "functions": {
          "fallback()": {
            "calls": 40,
            "min": 14319,
            "mean": 204262,
            "median": 204262,
            "max": 394205
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/facets/DiamondCutFacet.sol:DiamondCutFacet",
        "deployment": {
          "gas": 1036939,
          "size": 4588
        },
        "functions": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "calls": 20,
            "min": 364316,
            "mean": 364316,
            "median": 364316,
            "max": 364316
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet",
        "deployment": {
          "gas": 515018,
          "size": 2168
        },
        "functions": {
          "facetAddresses()": {
            "calls": 20,
            "min": 9364,
            "mean": 9364,
            "median": 9364,
            "max": 9364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/Diamond.sol:Diamond",
        "deployment": {
          "gas": 358155,
          "size": 4308
        },
        "functions": {
          "fallback()": {
            "calls": 40,
            "min": 14167,
            "mean": 204316,
            "median": 204316,
            "max": 394466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/facets/DiamondCutFacet.sol:DiamondCutFacet",
        "deployment": {
          "gas": 1029722,
          "size": 4554
        },
        "functions": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "calls": 20,
            "min": 364563,
            "mean": 364563,
            "median": 364563,
            "max": 364563
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet",
        "deployment": {
          "gas": 418020,
          "size": 1716
        },
        "functions": {
          "facetAddresses()": {
            "calls": 20,
            "min": 9198,
            "mean": 9198,
            "median": 9198,
            "max": 9198
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "forge-std": {
    "solc": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1288751,
          "size": 6463
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 10240,
            "min": 45970,
            "mean": 53183,
            "median": 51305,
            "max": 64353
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 206570,
          "size": 1055
        },
        "functions": {
          "fallback()": {
            "calls": 40960,
            "min": 25578,
            "mean": 29258,
            "median": 27908,
            "max": 35842
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3753777,
          "size": 16965
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 100,
            "min": 22643,
            "mean": 3559645,
            "median": 5905860,
            "max": 5907443
          },
          "exposed_getChain(uint256)": {
            "calls": 80,
            "min": 22121,
            "mean": 4436985,
            "median": 5907889,
            "max": 5910040
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 120,
            "min": 24003,
            "mean": 2995052,
            "median": 2967194,
            "max": 6014073
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 20,
            "min": 21767,
            "mean": 21767,
            "median": 21767,
            "max": 21767
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 195803,
          "size": 508
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 300,
            "min": 2471,
            "mean": 2471,
            "median": 2471,
            "max": 2471
          },
          "bar(address)": {
            "calls": 160,
            "min": 21511,
            "mean": 21565,
            "median": 21511,
            "max": 21727
          },
          "origin(address)": {
            "calls": 60,
            "min": 21537,
            "mean": 21537,
            "median": 21537,
            "max": 21537
          },
          "origin(address,address)": {
            "calls": 80,
            "min": 21807,
            "mean": 21807,
            "median": 21807,
            "max": 21807
          },
          "totalSupply()": {
            "calls": 180,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 144252,
          "size": 320
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 300,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "totalSupply(uint256)": {
            "calls": 180,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 212270,
          "size": 419
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 420,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2341,
            "mean": 2341,
            "median": 2341,
            "max": 2341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 10240,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "isBlacklisted(address)": {
            "calls": 15380,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 107055,
          "size": 273
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 15380,
            "min": 2428,
            "mean": 2428,
            "median": 2428,
            "max": 2428
          },
          "isBlacklisted(address)": {
            "calls": 10260,
            "min": 100,
            "mean": 100,
            "median": 100,
            "max": 100
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 44020,
            "mean": 44020,
            "median": 44020,
            "max": 44020
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 415237,
          "size": 1701
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 60,
            "min": 3025,
            "mean": 7268,
            "median": 8907,
            "max": 9872
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 100,
            "min": 33533,
            "mean": 208023094,
            "median": 60741,
            "max": 1039924527
          },
          "exposed_assumePayable(address)": {
            "calls": 100,
            "min": 33490,
            "mean": 208022411,
            "median": 60882,
            "max": 1039920900
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10576867,
          "size": 52639
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 20,
            "min": 27286,
            "mean": 27286,
            "median": 27286,
            "max": 27286
          },
          "deployCodeHelper(string)": {
            "calls": 20,
            "min": 58554,
            "mean": 58554,
            "median": 58554,
            "max": 58554
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 213952,
          "size": 770
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 20,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "assertionError()": {
            "calls": 20,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "divError(uint256)": {
            "calls": 20,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "encodeStgError()": {
            "calls": 20,
            "min": 43395,
            "mean": 43395,
            "median": 43395,
            "max": 43395
          },
          "enumConversion(uint256)": {
            "calls": 20,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "indexOOBError(uint256)": {
            "calls": 20,
            "min": 390,
            "mean": 390,
            "median": 390,
            "max": 390
          },
          "intern()": {
            "calls": 20,
            "min": 21235,
            "mean": 21235,
            "median": 21235,
            "max": 21235
          },
          "mem()": {
            "calls": 20,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "modError(uint256)": {
            "calls": 20,
            "min": 349,
            "mean": 349,
            "median": 349,
            "max": 349
          },
          "pop()": {
            "calls": 20,
            "min": 23445,
            "mean": 23445,
            "median": 23445,
            "max": 23445
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 942916,
          "size": 3961
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 20,
            "min": 934,
            "mean": 934,
            "median": 934,
            "max": 934
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 20,
            "min": 653,
            "mean": 653,
            "median": 653,
            "max": 653
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 7090279,
          "size": 35237
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 20,
            "min": 179351,
            "mean": 179351,
            "median": 179351,
            "max": 179351
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 931527,
          "size": 2923
        },
        "functions": {
          "basic()": {
            "calls": 400,
            "min": 4434,
            "mean": 4434,
            "median": 4434,
            "max": 4434
          },
          "const()": {
            "calls": 20,
            "min": 298,
            "mean": 298,
            "median": 298,
            "max": 298
          },
          "deep_map(address,address)": {
            "calls": 160,
            "min": 2963,
            "mean": 2963,
            "median": 2963,
            "max": 2963
          },
          "deep_map_struct(address,address)": {
            "calls": 400,
            "min": 4738,
            "mean": 4738,
            "median": 4738,
            "max": 4738
          },
          "edgeCaseArray(uint256)": {
            "calls": 100,
            "min": 4956,
            "mean": 4956,
            "median": 4956,
            "max": 4956
          },
          "exists()": {
            "calls": 220,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "extra_sload()": {
            "calls": 60,
            "min": 4874,
            "mean": 4874,
            "median": 4874,
            "max": 4874
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 12906184,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 5181440,
            "min": 3816,
            "mean": 4500,
            "median": 4500,
            "max": 5184
          },
          "hidden()": {
            "calls": 260,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2722
          },
          "map_addr(address)": {
            "calls": 220,
            "min": 2828,
            "mean": 2828,
            "median": 2828,
            "max": 2828
          },
          "map_bool(address)": {
            "calls": 100,
            "min": 2774,
            "mean": 2774,
            "median": 2774,
            "max": 2774
          },
          "map_packed(address)": {
            "calls": 100,
            "min": 2674,
            "mean": 2674,
            "median": 2674,
            "max": 2674
          },
          "map_struct(address)": {
            "calls": 400,
            "min": 4808,
            "mean": 4808,
            "median": 4808,
            "max": 4808
          },
          "map_uint(uint256)": {
            "calls": 160,
            "min": 2633,
            "mean": 2633,
            "median": 2633,
            "max": 2633
          },
          "read_struct_lower(address)": {
            "calls": 691220,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "read_struct_upper(address)": {
            "calls": 691200,
            "min": 2570,
            "mean": 2570,
            "median": 2570,
            "max": 2570
          },
          "setRandomPacking(uint256)": {
            "calls": 20480,
            "min": 23975,
            "mean": 29025,
            "median": 24160,
            "max": 44259
          },
          "tA()": {
            "calls": 76800,
            "min": 2614,
            "mean": 2614,
            "median": 2614,
            "max": 2614
          },
          "tB()": {
            "calls": 1305660,
            "min": 2514,
            "mean": 2514,
            "median": 2514,
            "max": 2514
          },
          "tC()": {
            "calls": 1305600,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "tD()": {
            "calls": 76800,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2772
          },
          "tE()": {
            "calls": 120,
            "min": 744,
            "mean": 2077,
            "median": 2744,
            "max": 2744
          },
          "tF()": {
            "calls": 60,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "tG()": {
            "calls": 160,
            "min": 2788,
            "mean": 2788,
            "median": 2788,
            "max": 2788
          },
          "tH()": {
            "calls": 60,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 974022,
          "size": 4316
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 20,
            "min": 94144,
            "mean": 94144,
            "median": 94144,
            "max": 94144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 728643,
          "size": 3149
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 5140,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 20,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 40,
            "min": 25496,
            "mean": 28451,
            "median": 28451,
            "max": 31406
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1216259,
          "size": 6103
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 10240,
            "min": 47254,
            "mean": 54274,
            "median": 52448,
            "max": 65718
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 208593,
          "size": 1076
        },
        "functions": {
          "fallback()": {
            "calls": 40960,
            "min": 25824,
            "mean": 29472,
            "median": 28128,
            "max": 35974
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 3608692,
          "size": 16297
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 100,
            "min": 22452,
            "mean": 3548168,
            "median": 5886797,
            "max": 5888124
          },
          "exposed_getChain(uint256)": {
            "calls": 80,
            "min": 21838,
            "mean": 4422454,
            "median": 5888672,
            "max": 5890636
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 120,
            "min": 24123,
            "mean": 2985506,
            "median": 2957610,
            "max": 5994894
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 20,
            "min": 21688,
            "mean": 21688,
            "median": 21688,
            "max": 21688
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 233643,
          "size": 678
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 300,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "bar(address)": {
            "calls": 160,
            "min": 21556,
            "mean": 21610,
            "median": 21556,
            "max": 21772
          },
          "origin(address)": {
            "calls": 60,
            "min": 21574,
            "mean": 21574,
            "median": 21574,
            "max": 21574
          },
          "origin(address,address)": {
            "calls": 80,
            "min": 21895,
            "mean": 21895,
            "median": 21895,
            "max": 21895
          },
          "totalSupply()": {
            "calls": 180,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 157662,
          "size": 383
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 300,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "totalSupply(uint256)": {
            "calls": 180,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 229155,
          "size": 499
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 420,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 10240,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "isBlacklisted(address)": {
            "calls": 15380,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 128311,
          "size": 375
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 15380,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "isBlacklisted(address)": {
            "calls": 10260,
            "min": 123,
            "mean": 123,
            "median": 123,
            "max": 123
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 44131,
            "mean": 44131,
            "median": 44131,
            "max": 44131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 457357,
          "size": 1897
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 60,
            "min": 3180,
            "mean": 7478,
            "median": 9149,
            "max": 10106
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 100,
            "min": 33037,
            "mean": 208014852,
            "median": 60423,
            "max": 1039884927
          },
          "exposed_assumePayable(address)": {
            "calls": 100,
            "min": 33065,
            "mean": 208014172,
            "median": 60457,
            "max": 1039881356
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 10117770,
          "size": 50353
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 20,
            "min": 26363,
            "mean": 26363,
            "median": 26363,
            "max": 26363
          },
          "deployCodeHelper(string)": {
            "calls": 20,
            "min": 58482,
            "mean": 58482,
            "median": 58482,
            "max": 58482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 286297,
          "size": 1106
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 20,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "assertionError()": {
            "calls": 20,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "divError(uint256)": {
            "calls": 20,
            "min": 380,
            "mean": 380,
            "median": 380,
            "max": 380
          },
          "encodeStgError()": {
            "calls": 20,
            "min": 43616,
            "mean": 43616,
            "median": 43616,
            "max": 43616
          },
          "enumConversion(uint256)": {
            "calls": 20,
            "min": 319,
            "mean": 319,
            "median": 319,
            "max": 319
          },
          "indexOOBError(uint256)": {
            "calls": 20,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 353
          },
          "intern()": {
            "calls": 20,
            "min": 21293,
            "mean": 21293,
            "median": 21293,
            "max": 21293
          },
          "mem()": {
            "calls": 20,
            "min": 256,
            "mean": 256,
            "median": 256,
            "max": 256
          },
          "modError(uint256)": {
            "calls": 20,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "pop()": {
            "calls": 20,
            "min": 23362,
            "mean": 23362,
            "median": 23362,
            "max": 23362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 934124,
          "size": 3924
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 20,
            "min": 1109,
            "mean": 1109,
            "median": 1109,
            "max": 1109
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 20,
            "min": 637,
            "mean": 637,
            "median": 637,
            "max": 637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 5941894,
          "size": 29509
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 20,
            "min": 181163,
            "mean": 181163,
            "median": 181163,
            "max": 181163
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 864361,
          "size": 2534
        },
        "functions": {
          "basic()": {
            "calls": 400,
            "min": 4484,
            "mean": 4484,
            "median": 4484,
            "max": 4484
          },
          "const()": {
            "calls": 20,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deep_map(address,address)": {
            "calls": 160,
            "min": 2756,
            "mean": 2756,
            "median": 2756,
            "max": 2756
          },
          "deep_map_struct(address,address)": {
            "calls": 400,
            "min": 4841,
            "mean": 4841,
            "median": 4841,
            "max": 4841
          },
          "edgeCaseArray(uint256)": {
            "calls": 100,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "exists()": {
            "calls": 220,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "extra_sload()": {
            "calls": 60,
            "min": 4614,
            "mean": 4614,
            "median": 4614,
            "max": 4614
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 12972691,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 5181440,
            "min": 3698,
            "mean": 4271,
            "median": 4271,
            "max": 4844
          },
          "hidden()": {
            "calls": 260,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "map_addr(address)": {
            "calls": 220,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_bool(address)": {
            "calls": 100,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "map_packed(address)": {
            "calls": 100,
            "min": 2627,
            "mean": 2627,
            "median": 2627,
            "max": 2627
          },
          "map_struct(address)": {
            "calls": 400,
            "min": 4711,
            "mean": 4711,
            "median": 4711,
            "max": 4711
          },
          "map_uint(uint256)": {
            "calls": 160,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "read_struct_lower(address)": {
            "calls": 691220,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "read_struct_upper(address)": {
            "calls": 691200,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "setRandomPacking(uint256)": {
            "calls": 20480,
            "min": 23648,
            "mean": 28692,
            "median": 23822,
            "max": 43931
          },
          "tA()": {
            "calls": 76800,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "tB()": {
            "calls": 1305660,
            "min": 2415,
            "mean": 2415,
            "median": 2415,
            "max": 2415
          },
          "tC()": {
            "calls": 1305600,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "tD()": {
            "calls": 76800,
            "min": 2391,
            "mean": 2391,
            "median": 2391,
            "max": 2391
          },
          "tE()": {
            "calls": 120,
            "min": 383,
            "mean": 1716,
            "median": 2383,
            "max": 2383
          },
          "tF()": {
            "calls": 60,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "tG()": {
            "calls": 160,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "tH()": {
            "calls": 60,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1088965,
          "size": 4844
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 20,
            "min": 96208,
            "mean": 96208,
            "median": 96208,
            "max": 96208
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 884029,
          "size": 3871
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 5140,
            "min": 468,
            "mean": 468,
            "median": 468,
            "max": 468
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 446,
            "mean": 446,
            "median": 446,
            "max": 446
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 20,
            "min": 821,
            "mean": 821,
            "median": 821,
            "max": 821
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 40,
            "min": 25745,
            "mean": 28534,
            "median": 28534,
            "max": 31324
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1990718,
          "size": 9976
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 10240,
            "min": 45401,
            "mean": 52696,
            "median": 50988,
            "max": 63641
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 217144,
          "size": 1296
        },
        "functions": {
          "fallback()": {
            "calls": 40960,
            "min": 25487,
            "mean": 29134,
            "median": 27796,
            "max": 35757
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 4993757,
          "size": 22760
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 100,
            "min": 22268,
            "mean": 3501498,
            "median": 5809904,
            "max": 5813474
          },
          "exposed_getChain(uint256)": {
            "calls": 80,
            "min": 21780,
            "mean": 4365809,
            "median": 5812840,
            "max": 5815779
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 120,
            "min": 23679,
            "mean": 2947353,
            "median": 2919476,
            "max": 5919037
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 20,
            "min": 21630,
            "mean": 21630,
            "median": 21630,
            "max": 21630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 211569,
          "size": 576
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 300,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "bar(address)": {
            "calls": 160,
            "min": 21422,
            "mean": 21476,
            "median": 21422,
            "max": 21638
          },
          "origin(address)": {
            "calls": 60,
            "min": 21497,
            "mean": 21497,
            "median": 21497,
            "max": 21497
          },
          "origin(address,address)": {
            "calls": 80,
            "min": 21698,
            "mean": 21698,
            "median": 21698,
            "max": 21698
          },
          "totalSupply()": {
            "calls": 180,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 147914,
          "size": 340
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 300,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "totalSupply(uint256)": {
            "calls": 180,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 221503,
          "size": 504
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 420,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 10240,
            "min": 98,
            "mean": 98,
            "median": 98,
            "max": 98
          },
          "isBlacklisted(address)": {
            "calls": 15380,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 114069,
          "size": 313
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 15380,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "isBlacklisted(address)": {
            "calls": 10260,
            "min": 98,
            "mean": 98,
            "median": 98,
            "max": 98
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 43933,
            "mean": 43933,
            "median": 43933,
            "max": 43933
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 481209,
          "size": 2013
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 60,
            "min": 2898,
            "mean": 6846,
            "median": 8462,
            "max": 9180
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 100,
            "min": 32645,
            "mean": 208010038,
            "median": 59912,
            "max": 1039862683
          },
          "exposed_assumePayable(address)": {
            "calls": 100,
            "min": 32609,
            "mean": 208009424,
            "median": 60001,
            "max": 1039859423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 13941120,
          "size": 69429
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 20,
            "min": 25444,
            "mean": 25444,
            "median": 25444,
            "max": 25444
          },
          "deployCodeHelper(string)": {
            "calls": 20,
            "min": 57826,
            "mean": 57826,
            "median": 57826,
            "max": 57826
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 213970,
          "size": 775
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 20,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "assertionError()": {
            "calls": 20,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "divError(uint256)": {
            "calls": 20,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "encodeStgError()": {
            "calls": 20,
            "min": 43396,
            "mean": 43396,
            "median": 43396,
            "max": 43396
          },
          "enumConversion(uint256)": {
            "calls": 20,
            "min": 262,
            "mean": 262,
            "median": 262,
            "max": 262
          },
          "indexOOBError(uint256)": {
            "calls": 20,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "intern()": {
            "calls": 20,
            "min": 21269,
            "mean": 21269,
            "median": 21269,
            "max": 21269
          },
          "mem()": {
            "calls": 20,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "modError(uint256)": {
            "calls": 20,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "pop()": {
            "calls": 20,
            "min": 23385,
            "mean": 23385,
            "median": 23385,
            "max": 23385
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1246350,
          "size": 5367
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 20,
            "min": 526,
            "mean": 526,
            "median": 526,
            "max": 526
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 20,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 10975645,
          "size": 54633
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 20,
            "min": 165966,
            "mean": 165966,
            "median": 165966,
            "max": 165966
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 924149,
          "size": 3013
        },
        "functions": {
          "basic()": {
            "calls": 400,
            "min": 4453,
            "mean": 4453,
            "median": 4453,
            "max": 4453
          },
          "const()": {
            "calls": 20,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "deep_map(address,address)": {
            "calls": 160,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "deep_map_struct(address,address)": {
            "calls": 400,
            "min": 4623,
            "mean": 4623,
            "median": 4623,
            "max": 4623
          },
          "edgeCaseArray(uint256)": {
            "calls": 100,
            "min": 4498,
            "mean": 4498,
            "median": 4498,
            "max": 4498
          },
          "exists()": {
            "calls": 220,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "extra_sload()": {
            "calls": 60,
            "min": 4560,
            "mean": 4560,
            "median": 4560,
            "max": 4560
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 12760528,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 5181440,
            "min": 3139,
            "mean": 3497,
            "median": 3497,
            "max": 3856
          },
          "hidden()": {
            "calls": 260,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "map_addr(address)": {
            "calls": 220,
            "min": 2470,
            "mean": 2470,
            "median": 2470,
            "max": 2470
          },
          "map_bool(address)": {
            "calls": 100,
            "min": 2455,
            "mean": 2455,
            "median": 2455,
            "max": 2455
          },
          "map_packed(address)": {
            "calls": 100,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "map_struct(address)": {
            "calls": 400,
            "min": 4563,
            "mean": 4563,
            "median": 4563,
            "max": 4563
          },
          "map_uint(uint256)": {
            "calls": 160,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "read_struct_lower(address)": {
            "calls": 691220,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "read_struct_upper(address)": {
            "calls": 691200,
            "min": 2445,
            "mean": 2445,
            "median": 2445,
            "max": 2445
          },
          "setRandomPacking(uint256)": {
            "calls": 20480,
            "min": 23603,
            "mean": 28659,
            "median": 23786,
            "max": 43886
          },
          "tA()": {
            "calls": 76800,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "tB()": {
            "calls": 1305660,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "tC()": {
            "calls": 1305600,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          },
          "tD()": {
            "calls": 76800,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          },
          "tE()": {
            "calls": 120,
            "min": 366,
            "mean": 1699,
            "median": 2366,
            "max": 2366
          },
          "tF()": {
            "calls": 60,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "tG()": {
            "calls": 160,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "tH()": {
            "calls": 60,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1232606,
          "size": 5557
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 20,
            "min": 91127,
            "mean": 91127,
            "median": 91127,
            "max": 91127
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 854765,
          "size": 3743
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 5140,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 20,
            "min": 546,
            "mean": 546,
            "median": 546,
            "max": 546
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 40,
            "min": 25332,
            "mean": 28040,
            "median": 28040,
            "max": 30748
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:StdAssertionsTest",
        "deployment": {
          "gas": 1827916,
          "size": 9160
        },
        "functions": {
          "assertEqCallExternal(address,bytes,address,bytes,bool)": {
            "calls": 10240,
            "min": 45207,
            "mean": 52349,
            "median": 50480,
            "max": 63176
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdAssertions.t.sol:TestMockCall",
        "deployment": {
          "gas": 200948,
          "size": 1147
        },
        "functions": {
          "fallback()": {
            "calls": 40960,
            "min": 25440,
            "mean": 29123,
            "median": 27785,
            "max": 35657
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdChains.t.sol:StdChainsMock",
        "deployment": {
          "gas": 4324970,
          "size": 19673
        },
        "functions": {
          "exposed_getChain(string)": {
            "calls": 100,
            "min": 22122,
            "mean": 3494336,
            "median": 5798262,
            "max": 5801793
          },
          "exposed_getChain(uint256)": {
            "calls": 80,
            "min": 21613,
            "mean": 4356959,
            "median": 5801101,
            "max": 5804022
          },
          "exposed_setChain(string,(string,uint256,string))": {
            "calls": 120,
            "min": 23565,
            "mean": 2941640,
            "median": 2913669,
            "max": 5907782
          },
          "exposed_setFallbackToDefaultRpcUrls(bool)": {
            "calls": 20,
            "min": 21646,
            "mean": 21646,
            "median": 21646,
            "max": 21646
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:Bar",
        "deployment": {
          "gas": 207749,
          "size": 577
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 300,
            "min": 2390,
            "mean": 2390,
            "median": 2390,
            "max": 2390
          },
          "bar(address)": {
            "calls": 160,
            "min": 21422,
            "mean": 21476,
            "median": 21422,
            "max": 21638
          },
          "origin(address)": {
            "calls": 60,
            "min": 21452,
            "mean": 21452,
            "median": 21452,
            "max": 21452
          },
          "origin(address,address)": {
            "calls": 80,
            "min": 21666,
            "mean": 21666,
            "median": 21666,
            "max": 21666
          },
          "totalSupply()": {
            "calls": 180,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC1155",
        "deployment": {
          "gas": 147358,
          "size": 356
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 300,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "totalSupply(uint256)": {
            "calls": 180,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:BarERC721",
        "deployment": {
          "gas": 220575,
          "size": 497
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 420,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDC",
        "deployment": {
          "gas": 106411,
          "size": 275
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 10240,
            "min": 114,
            "mean": 114,
            "median": 114,
            "max": 114
          },
          "isBlacklisted(address)": {
            "calls": 15380,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 43946,
            "mean": 43946,
            "median": 43946,
            "max": 43946
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:MockUSDT",
        "deployment": {
          "gas": 106411,
          "size": 275
        },
        "functions": {
          "isBlackListed(address)": {
            "calls": 15380,
            "min": 2371,
            "mean": 2371,
            "median": 2371,
            "max": 2371
          },
          "isBlacklisted(address)": {
            "calls": 10260,
            "min": 114,
            "mean": 114,
            "median": 114,
            "max": 114
          },
          "setBlacklisted(address,bool)": {
            "calls": 120,
            "min": 43946,
            "mean": 43946,
            "median": 43946,
            "max": 43946
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsMock",
        "deployment": {
          "gas": 411352,
          "size": 1686
        },
        "functions": {
          "exposed_assumeNotBlacklisted(address,address)": {
            "calls": 60,
            "min": 2911,
            "mean": 6835,
            "median": 8412,
            "max": 9184
          },
          "exposed_assumeNotPayable(address)": {
            "calls": 100,
            "min": 32478,
            "mean": 208023575,
            "median": 59870,
            "max": 1039930665
          },
          "exposed_assumePayable(address)": {
            "calls": 100,
            "min": 32540,
            "mean": 208022930,
            "median": 59932,
            "max": 1039927268
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdCheats.t.sol:StdCheatsTest",
        "deployment": {
          "gas": 13149118,
          "size": 65475
        },
        "functions": {
          "_revertDeployCodeTo()": {
            "calls": 20,
            "min": 25447,
            "mean": 25447,
            "median": 25447,
            "max": 25447
          },
          "deployCodeHelper(string)": {
            "calls": 20,
            "min": 57885,
            "mean": 57885,
            "median": 57885,
            "max": 57885
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdError.t.sol:ErrorsTest",
        "deployment": {
          "gas": 189007,
          "size": 657
        },
        "functions": {
          "arithmeticError(uint256)": {
            "calls": 20,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "assertionError()": {
            "calls": 20,
            "min": 187,
            "mean": 187,
            "median": 187,
            "max": 187
          },
          "divError(uint256)": {
            "calls": 20,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "encodeStgError()": {
            "calls": 20,
            "min": 43382,
            "mean": 43382,
            "median": 43382,
            "max": 43382
          },
          "enumConversion(uint256)": {
            "calls": 20,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "indexOOBError(uint256)": {
            "calls": 20,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "intern()": {
            "calls": 20,
            "min": 21255,
            "mean": 21255,
            "median": 21255,
            "max": 21255
          },
          "mem()": {
            "calls": 20,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "modError(uint256)": {
            "calls": 20,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "pop()": {
            "calls": 20,
            "min": 23373,
            "mean": 23373,
            "median": 23373,
            "max": 23373
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdMath.t.sol:StdMathMock",
        "deployment": {
          "gas": 1146093,
          "size": 4900
        },
        "functions": {
          "exposed_percentDelta(int256,int256)": {
            "calls": 20,
            "min": 434,
            "mean": 434,
            "median": 434,
            "max": 434
          },
          "exposed_percentDelta(uint256,uint256)": {
            "calls": 20,
            "min": 366,
            "mean": 366,
            "median": 366,
            "max": 366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StdStorageTest",
        "deployment": {
          "gas": 7139725,
          "size": 35485
        },
        "functions": {
          "readNonBoolValue()": {
            "calls": 20,
            "min": 159385,
            "mean": 159385,
            "median": 159385,
            "max": 159385
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTest",
        "deployment": {
          "gas": 849230,
          "size": 2660
        },
        "functions": {
          "basic()": {
            "calls": 400,
            "min": 4454,
            "mean": 4454,
            "median": 4454,
            "max": 4454
          },
          "const()": {
            "calls": 20,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "deep_map(address,address)": {
            "calls": 160,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "deep_map_struct(address,address)": {
            "calls": 400,
            "min": 4660,
            "mean": 4660,
            "median": 4660,
            "max": 4660
          },
          "edgeCaseArray(uint256)": {
            "calls": 100,
            "min": 4525,
            "mean": 4525,
            "median": 4525,
            "max": 4525
          },
          "exists()": {
            "calls": 220,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "extra_sload()": {
            "calls": 60,
            "min": 4581,
            "mean": 4581,
            "median": 4581,
            "max": 4581
          },
          "getRandomPacked(uint256,uint256)": {
            "calls": 12764111,
            "min": 2451,
            "mean": 2453,
            "median": 2453,
            "max": 2453
          },
          "getRandomPacked(uint8,uint8[],uint8)": {
            "calls": 5181440,
            "min": 3203,
            "mean": 3590,
            "median": 3590,
            "max": 3977
          },
          "hidden()": {
            "calls": 260,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "map_addr(address)": {
            "calls": 220,
            "min": 2508,
            "mean": 2508,
            "median": 2508,
            "max": 2508
          },
          "map_bool(address)": {
            "calls": 100,
            "min": 2493,
            "mean": 2493,
            "median": 2493,
            "max": 2493
          },
          "map_packed(address)": {
            "calls": 100,
            "min": 2506,
            "mean": 2506,
            "median": 2506,
            "max": 2506
          },
          "map_struct(address)": {
            "calls": 400,
            "min": 4610,
            "mean": 4610,
            "median": 4610,
            "max": 4610
          },
          "map_uint(uint256)": {
            "calls": 160,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "read_struct_lower(address)": {
            "calls": 691220,
            "min": 2511,
            "mean": 2511,
            "median": 2511,
            "max": 2511
          },
          "read_struct_upper(address)": {
            "calls": 691200,
            "min": 2494,
            "mean": 2494,
            "median": 2494,
            "max": 2494
          },
          "setRandomPacking(uint256)": {
            "calls": 20480,
            "min": 23616,
            "mean": 28674,
            "median": 23803,
            "max": 43899
          },
          "tA()": {
            "calls": 76800,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "tB()": {
            "calls": 1305660,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "tC()": {
            "calls": 1305600,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "tD()": {
            "calls": 76800,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "tE()": {
            "calls": 120,
            "min": 355,
            "mean": 1688,
            "median": 2355,
            "max": 2355
          },
          "tF()": {
            "calls": 60,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "tG()": {
            "calls": 160,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "tH()": {
            "calls": 60,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdStorage.t.sol:StorageTestTarget",
        "deployment": {
          "gas": 1086416,
          "size": 4834
        },
        "functions": {
          "expectRevertStorageConst()": {
            "calls": 20,
            "min": 88750,
            "mean": 88750,
            "median": 88750,
            "max": 88750
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/StdUtils.t.sol:StdUtilsMock",
        "deployment": {
          "gas": 803194,
          "size": 3506
        },
        "functions": {
          "exposed_bound(int256,int256,int256)": {
            "calls": 5140,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "exposed_bound(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 340,
            "mean": 340,
            "median": 340,
            "max": 340
          },
          "exposed_bytesToUint(bytes)": {
            "calls": 20,
            "min": 563,
            "mean": 563,
            "median": 563,
            "max": 563
          },
          "exposed_getTokenBalances(address,address[])": {
            "calls": 40,
            "min": 25372,
            "mean": 28004,
            "median": 28004,
            "max": 30636
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "foundry-upgrades": {
    "solc": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1244
        },
        "functions": {
          "implementation()": {
            "calls": 40,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3296649,
          "size": 15067
        },
        "functions": {
          "beacon()": {
            "calls": 40,
            "min": 2535,
            "mean": 2535,
            "median": 2535,
            "max": 2535
          },
          "beaconAddress()": {
            "calls": 20,
            "min": 2579,
            "mean": 2579,
            "median": 2579,
            "max": 2579
          },
          "deploy(address)": {
            "calls": 40,
            "min": 330469,
            "mean": 384199,
            "median": 384199,
            "max": 437930
          },
          "deploy(address,address)": {
            "calls": 40,
            "min": 609017,
            "mean": 609017,
            "median": 609017,
            "max": 609017
          },
          "proxyAddress()": {
            "calls": 60,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "setType(string)": {
            "calls": 80,
            "min": 26943,
            "mean": 37102,
            "median": 37027,
            "max": 47411
          },
          "upgrade(address,address,address)": {
            "calls": 20,
            "min": 48550,
            "mean": 48550,
            "median": 48550,
            "max": 48550
          },
          "uups()": {
            "calls": 40,
            "min": 2623,
            "mean": 2623,
            "median": 2623,
            "max": 2623
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1456
        },
        "functions": {
          "implementation()": {
            "calls": 40,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3578813,
          "size": 16370
        },
        "functions": {
          "beacon()": {
            "calls": 40,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "beaconAddress()": {
            "calls": 20,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "deploy(address)": {
            "calls": 40,
            "min": 364111,
            "mean": 418573,
            "median": 418573,
            "max": 473035
          },
          "deploy(address,address)": {
            "calls": 40,
            "min": 579538,
            "mean": 579538,
            "median": 579538,
            "max": 579538
          },
          "proxyAddress()": {
            "calls": 60,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "setType(string)": {
            "calls": 80,
            "min": 26640,
            "mean": 36722,
            "median": 36674,
            "max": 46900
          },
          "upgrade(address,address,address)": {
            "calls": 20,
            "min": 48228,
            "mean": 48228,
            "median": 48228,
            "max": 48228
          },
          "uups()": {
            "calls": 40,
            "min": 2392,
            "mean": 2392,
            "median": 2392,
            "max": 2392
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1489
        },
        "functions": {
          "implementation()": {
            "calls": 40,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3693861,
          "size": 16920
        },
        "functions": {
          "beacon()": {
            "calls": 40,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "beaconAddress()": {
            "calls": 20,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "deploy(address)": {
            "calls": 40,
            "min": 363975,
            "mean": 410028,
            "median": 410028,
            "max": 456082
          },
          "deploy(address,address)": {
            "calls": 40,
            "min": 693331,
            "mean": 693331,
            "median": 693331,
            "max": 693331
          },
          "proxyAddress()": {
            "calls": 60,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setType(string)": {
            "calls": 80,
            "min": 26595,
            "mean": 36714,
            "median": 36655,
            "max": 46954
          },
          "upgrade(address,address,address)": {
            "calls": 20,
            "min": 47316,
            "mean": 47316,
            "median": 47316,
            "max": 47316
          },
          "uups()": {
            "calls": 40,
            "min": 2346,
            "mean": 2346,
            "median": 2346,
            "max": 2346
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 0,
          "size": 1216
        },
        "functions": {
          "implementation()": {
            "calls": 40,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/ProxyTester.sol:ProxyTester",
        "deployment": {
          "gas": 3126023,
          "size": 14286
        },
        "functions": {
          "beacon()": {
            "calls": 40,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "beaconAddress()": {
            "calls": 20,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "deploy(address)": {
            "calls": 40,
            "min": 319435,
            "mean": 352601,
            "median": 352601,
            "max": 385768
          },
          "deploy(address,address)": {
            "calls": 40,
            "min": 583925,
            "mean": 583925,
            "median": 583925,
            "max": 583925
          },
          "proxyAddress()": {
            "calls": 60,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "setType(string)": {
            "calls": 80,
            "min": 26475,
            "mean": 36582,
            "median": 36526,
            "max": 46802
          },
          "upgrade(address,address,address)": {
            "calls": 20,
            "min": 47399,
            "mean": 47399,
            "median": 47399,
            "max": 47399
          },
          "uups()": {
            "calls": 40,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "gov-of-venice": {
    "solc": [
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4081141,
          "size": 18919
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 80,
            "min": 3007,
            "mean": 3007,
            "median": 3007,
            "max": 3007
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 120,
            "min": 7703,
            "mean": 7709,
            "median": 7703,
            "max": 7721
          },
          "guildMasterAddress()": {
            "calls": 60,
            "min": 2944,
            "mean": 2944,
            "median": 2944,
            "max": 2944
          },
          "guildMasterRewardMultiplier()": {
            "calls": 20,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "guildMemberSlash()": {
            "calls": 40,
            "min": 2634,
            "mean": 2634,
            "median": 2634,
            "max": 2634
          },
          "isGuildMember(address)": {
            "calls": 2020,
            "min": 3550,
            "mean": 3551,
            "median": 3552,
            "max": 3552
          },
          "requestGuildBook()": {
            "calls": 20,
            "min": 5717,
            "mean": 5717,
            "median": 5717,
            "max": 5717
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 3915186,
          "size": 18001
        },
        "functions": {
          "doge()": {
            "calls": 20,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "proposalThreshold()": {
            "calls": 20,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "silverBalance()": {
            "calls": 40,
            "min": 2986,
            "mean": 2986,
            "median": 2986,
            "max": 2986
          },
          "state(uint48)": {
            "calls": 600,
            "min": 7120,
            "mean": 11759,
            "median": 10329,
            "max": 17841
          },
          "votingDelay()": {
            "calls": 20,
            "min": 2506,
            "mean": 2506,
            "median": 2506,
            "max": 2506
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1583771,
          "size": 8755
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 2682,
            "mean": 2682,
            "median": 2682,
            "max": 2682
          },
          "getPastVotes(address,uint256)": {
            "calls": 3200,
            "min": 5157,
            "mean": 5157,
            "median": 5157,
            "max": 5157
          },
          "mint(address,uint256)": {
            "calls": 13000,
            "min": 100129,
            "mean": 101475,
            "median": 100141,
            "max": 117229
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1831138,
          "size": 8219
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 600,
            "min": 68211,
            "mean": 68921,
            "median": 68233,
            "max": 79557
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 1260,
            "min": 34674,
            "mean": 68378,
            "median": 68789,
            "max": 79946
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 40,
            "min": 29635,
            "mean": 41470,
            "median": 41470,
            "max": 53305
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 100,
            "min": 30702,
            "mean": 50734,
            "median": 35037,
            "max": 76447
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 20,
            "min": 29459,
            "mean": 29459,
            "median": 29459,
            "max": 29459
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 20,
            "min": 30361,
            "mean": 30361,
            "median": 30361,
            "max": 30361
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 60,
            "min": 29591,
            "mean": 48587,
            "median": 40844,
            "max": 75327
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 20,
            "min": 29547,
            "mean": 29547,
            "median": 29547,
            "max": 29547
          },
          "executeProposal(uint48)": {
            "calls": 100,
            "min": 85720,
            "mean": 94480,
            "median": 85720,
            "max": 107623
          },
          "getGravitas(uint48)": {
            "calls": 80,
            "min": 29735,
            "mean": 29735,
            "median": 29735,
            "max": 29735
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 40,
            "min": 35761,
            "mean": 35761,
            "median": 35761,
            "max": 35761
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 80,
            "min": 35606,
            "mean": 35606,
            "median": 35606,
            "max": 35606
          },
          "govAcceptDoge()": {
            "calls": 20,
            "min": 35671,
            "mean": 35671,
            "median": 35671,
            "max": 35671
          },
          "govCancel(uint48)": {
            "calls": 20,
            "min": 92703,
            "mean": 92703,
            "median": 92703,
            "max": 92703
          },
          "govCastVote(uint48,uint8)": {
            "calls": 3000,
            "min": 79126,
            "mean": 79696,
            "median": 79126,
            "max": 96226
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 200,
            "min": 438776,
            "mean": 454101,
            "median": 455804,
            "max": 455804
          },
          "govSetPendingDoge(address)": {
            "calls": 20,
            "min": 53378,
            "mean": 53378,
            "median": 53378,
            "max": 53378
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 20,
            "min": 35469,
            "mean": 35469,
            "median": 35469,
            "max": 35469
          },
          "govSetVotingDelay(uint256)": {
            "calls": 20,
            "min": 35363,
            "mean": 35363,
            "median": 35363,
            "max": 35363
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 20,
            "min": 35512,
            "mean": 35512,
            "median": 35512,
            "max": 35512
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 560,
            "min": 34970,
            "mean": 94870,
            "median": 78478,
            "max": 183544
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 60,
            "min": 35776,
            "mean": 35776,
            "median": 35776,
            "max": 35776
          },
          "init(address,address,address,address)": {
            "calls": 13000,
            "min": 111429,
            "mean": 111430,
            "median": 111429,
            "max": 111441
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 1000,
            "min": 210176,
            "mean": 210182,
            "median": 210182,
            "max": 210188
          },
          "isGuildMember(uint48)": {
            "calls": 2020,
            "min": 30229,
            "mean": 30238,
            "median": 30241,
            "max": 30241
          },
          "joinGuild(uint48)": {
            "calls": 20,
            "min": 35282,
            "mean": 35282,
            "median": 35282,
            "max": 35282
          },
          "queueProposal(uint48)": {
            "calls": 100,
            "min": 123177,
            "mean": 123177,
            "median": 123177,
            "max": 123177
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 440,
            "min": 107951,
            "mean": 110282,
            "median": 107951,
            "max": 125051
          },
          "setGuild(address,uint48)": {
            "calls": 29820,
            "min": 44809,
            "mean": 44814,
            "median": 44809,
            "max": 44821
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 2260,
            "min": 54521,
            "mean": 65619,
            "median": 74421,
            "max": 74433
          },
          "setSilverSeason()": {
            "calls": 1000,
            "min": 54533,
            "mean": 54533,
            "median": 54533,
            "max": 54533
          },
          "silverBalance()": {
            "calls": 40,
            "min": 29807,
            "mean": 29807,
            "median": 29807,
            "max": 29807
          },
          "startApprentiship(uint48)": {
            "calls": 20,
            "min": 54202,
            "mean": 54202,
            "median": 54202,
            "max": 54202
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 40,
            "min": 75396,
            "mean": 75396,
            "median": 75396,
            "max": 75396
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 120,
            "min": 74689,
            "mean": 74689,
            "median": 74689,
            "max": 74689
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1361874,
          "size": 6051
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 100,
            "min": 447,
            "mean": 447,
            "median": 447,
            "max": 447
          },
          "delay()": {
            "calls": 160,
            "min": 2462,
            "mean": 2462,
            "median": 2462,
            "max": 2462
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 20,
            "min": 34712,
            "mean": 34712,
            "median": 34712,
            "max": 34712
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 2260,
            "min": 83557,
            "mean": 94649,
            "median": 103445,
            "max": 103457
          },
          "mockProposals(address,address)": {
            "calls": 1000,
            "min": 66637,
            "mean": 66637,
            "median": 66637,
            "max": 66637
          },
          "signTheConstitution(address,uint256)": {
            "calls": 1000,
            "min": 71179,
            "mean": 71179,
            "median": 71179,
            "max": 71179
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1732511,
          "size": 7621
        },
        "functions": {
          "availableGuilds()": {
            "calls": 1280,
            "min": 5380,
            "mean": 8761,
            "median": 10136,
            "max": 12514
          },
          "guildInformation(uint48)": {
            "calls": 20,
            "min": 33335,
            "mean": 33335,
            "median": 33335,
            "max": 33335
          },
          "merchantRepublicAddress()": {
            "calls": 20,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 20,
            "min": 94696,
            "mean": 94696,
            "median": 94696,
            "max": 94696
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 120,
            "min": 2668,
            "mean": 2668,
            "median": 2668,
            "max": 2668
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 171560,
          "size": 481
        },
        "functions": {
          "anotherFlag()": {
            "calls": 20,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "flag()": {
            "calls": 200,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 4387491,
          "size": 20580
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 80,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 120,
            "min": 7629,
            "mean": 7638,
            "median": 7629,
            "max": 7658
          },
          "gravitasThreshold()": {
            "calls": 20,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "guildMasterAddress()": {
            "calls": 60,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "guildMasterRewardMultiplier()": {
            "calls": 40,
            "min": 2382,
            "mean": 2382,
            "median": 2382,
            "max": 2382
          },
          "guildMemberSlash()": {
            "calls": 60,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "isGuildMember(address)": {
            "calls": 2020,
            "min": 2732,
            "mean": 2733,
            "median": 2734,
            "max": 2734
          },
          "memberRewardPerSecond()": {
            "calls": 20,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "requestGuildBook()": {
            "calls": 20,
            "min": 4964,
            "mean": 4964,
            "median": 4964,
            "max": 4964
          },
          "slashForCashReward()": {
            "calls": 20,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4592402,
          "size": 21124
        },
        "functions": {
          "doge()": {
            "calls": 20,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "proposalThreshold()": {
            "calls": 20,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "silverBalance()": {
            "calls": 40,
            "min": 2426,
            "mean": 2426,
            "median": 2426,
            "max": 2426
          },
          "state(uint48)": {
            "calls": 600,
            "min": 7162,
            "mean": 11956,
            "median": 10525,
            "max": 18236
          },
          "votingDelay()": {
            "calls": 20,
            "min": 2385,
            "mean": 2385,
            "median": 2385,
            "max": 2385
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1724042,
          "size": 9685
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 2594,
            "mean": 2594,
            "median": 2594,
            "max": 2594
          },
          "getPastVotes(address,uint256)": {
            "calls": 3200,
            "min": 5321,
            "mean": 5321,
            "median": 5321,
            "max": 5321
          },
          "mint(address,uint256)": {
            "calls": 13000,
            "min": 100205,
            "mean": 101551,
            "median": 100217,
            "max": 117305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 2075637,
          "size": 9346
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 600,
            "min": 68145,
            "mean": 68832,
            "median": 68148,
            "max": 79043
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 1260,
            "min": 33870,
            "mean": 67737,
            "median": 68184,
            "max": 79323
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 40,
            "min": 29295,
            "mean": 41086,
            "median": 41086,
            "max": 52878
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 100,
            "min": 29481,
            "mean": 50888,
            "median": 40803,
            "max": 75103
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 40,
            "min": 29317,
            "mean": 41108,
            "median": 41108,
            "max": 52900
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 40,
            "min": 29294,
            "mean": 41085,
            "median": 41085,
            "max": 52877
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 60,
            "min": 29414,
            "mean": 48380,
            "median": 40693,
            "max": 75033
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 60,
            "min": 29284,
            "mean": 49840,
            "median": 57776,
            "max": 62460
          },
          "executeProposal(uint48)": {
            "calls": 100,
            "min": 85777,
            "mean": 94538,
            "median": 85777,
            "max": 107684
          },
          "getGravitas(uint48)": {
            "calls": 80,
            "min": 29311,
            "mean": 29311,
            "median": 29311,
            "max": 29311
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 40,
            "min": 35193,
            "mean": 35193,
            "median": 35193,
            "max": 35193
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 80,
            "min": 35182,
            "mean": 35182,
            "median": 35182,
            "max": 35182
          },
          "govAcceptDoge()": {
            "calls": 20,
            "min": 34717,
            "mean": 34717,
            "median": 34717,
            "max": 34717
          },
          "govCancel(uint48)": {
            "calls": 20,
            "min": 92286,
            "mean": 92286,
            "median": 92286,
            "max": 92286
          },
          "govCastVote(uint48,uint8)": {
            "calls": 3000,
            "min": 79310,
            "mean": 79880,
            "median": 79310,
            "max": 96410
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 200,
            "min": 439516,
            "mean": 454841,
            "median": 456544,
            "max": 456544
          },
          "govSetPendingDoge(address)": {
            "calls": 20,
            "min": 52803,
            "mean": 52803,
            "median": 52803,
            "max": 52803
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 20,
            "min": 35401,
            "mean": 35401,
            "median": 35401,
            "max": 35401
          },
          "govSetVotingDelay(uint256)": {
            "calls": 20,
            "min": 35311,
            "mean": 35311,
            "median": 35311,
            "max": 35311
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 20,
            "min": 35280,
            "mean": 35280,
            "median": 35280,
            "max": 35280
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 560,
            "min": 34230,
            "mean": 93911,
            "median": 77453,
            "max": 182412
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 60,
            "min": 34225,
            "mean": 34225,
            "median": 34225,
            "max": 34225
          },
          "init(address,address,address,address)": {
            "calls": 13000,
            "min": 111660,
            "mean": 111661,
            "median": 111660,
            "max": 111672
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 1000,
            "min": 209625,
            "mean": 209631,
            "median": 209631,
            "max": 209637
          },
          "isGuildMember(uint48)": {
            "calls": 2020,
            "min": 29466,
            "mean": 29475,
            "median": 29478,
            "max": 29478
          },
          "joinGuild(uint48)": {
            "calls": 20,
            "min": 34043,
            "mean": 34043,
            "median": 34043,
            "max": 34043
          },
          "queueProposal(uint48)": {
            "calls": 100,
            "min": 123120,
            "mean": 123120,
            "median": 123120,
            "max": 123120
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 440,
            "min": 108118,
            "mean": 110449,
            "median": 108118,
            "max": 125218
          },
          "setGuild(address,uint48)": {
            "calls": 29820,
            "min": 44198,
            "mean": 44203,
            "median": 44198,
            "max": 44210
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 2260,
            "min": 54026,
            "mean": 65124,
            "median": 73926,
            "max": 73938
          },
          "setSilverSeason()": {
            "calls": 1000,
            "min": 54208,
            "mean": 54208,
            "median": 54208,
            "max": 54208
          },
          "silverBalance()": {
            "calls": 40,
            "min": 28733,
            "mean": 28733,
            "median": 28733,
            "max": 28733
          },
          "startApprentiship(uint48)": {
            "calls": 20,
            "min": 53395,
            "mean": 53395,
            "median": 53395,
            "max": 53395
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 40,
            "min": 74152,
            "mean": 74152,
            "median": 74152,
            "max": 74152
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 120,
            "min": 74143,
            "mean": 74143,
            "median": 74143,
            "max": 74143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1504242,
          "size": 6705
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 100,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "delay()": {
            "calls": 160,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 20,
            "min": 34718,
            "mean": 34718,
            "median": 34718,
            "max": 34718
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 2260,
            "min": 83838,
            "mean": 94930,
            "median": 103726,
            "max": 103738
          },
          "mockProposals(address,address)": {
            "calls": 1000,
            "min": 66479,
            "mean": 66479,
            "median": 66479,
            "max": 66479
          },
          "signTheConstitution(address,uint256)": {
            "calls": 1000,
            "min": 71408,
            "mean": 71408,
            "median": 71408,
            "max": 71408
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 2109044,
          "size": 9360
        },
        "functions": {
          "availableGuilds()": {
            "calls": 1280,
            "min": 5319,
            "mean": 8910,
            "median": 10371,
            "max": 12897
          },
          "guildInformation(uint48)": {
            "calls": 20,
            "min": 32488,
            "mean": 32488,
            "median": 32488,
            "max": 32488
          },
          "merchantRepublicAddress()": {
            "calls": 20,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 20,
            "min": 94109,
            "mean": 94109,
            "median": 94109,
            "max": 94109
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 120,
            "min": 2571,
            "mean": 2571,
            "median": 2571,
            "max": 2571
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 134758,
          "size": 313
        },
        "functions": {
          "anotherFlag()": {
            "calls": 20,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "flag()": {
            "calls": 200,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 3692550,
          "size": 17335
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 80,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 120,
            "min": 6885,
            "mean": 6886,
            "median": 6885,
            "max": 6890
          },
          "guildMasterAddress()": {
            "calls": 60,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "guildMasterRewardMultiplier()": {
            "calls": 20,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "guildMemberSlash()": {
            "calls": 40,
            "min": 2389,
            "mean": 2389,
            "median": 2389,
            "max": 2389
          },
          "isGuildMember(address)": {
            "calls": 2020,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "requestGuildBook()": {
            "calls": 20,
            "min": 4812,
            "mean": 4812,
            "median": 4812,
            "max": 4812
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4288131,
          "size": 19713
        },
        "functions": {
          "doge()": {
            "calls": 20,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "proposalThreshold()": {
            "calls": 20,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "silverBalance()": {
            "calls": 40,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "state(uint48)": {
            "calls": 600,
            "min": 6852,
            "mean": 11493,
            "median": 10085,
            "max": 17552
          },
          "votingDelay()": {
            "calls": 20,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1501080,
          "size": 9016
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "getPastVotes(address,uint256)": {
            "calls": 3200,
            "min": 5019,
            "mean": 5019,
            "median": 5019,
            "max": 5019
          },
          "mint(address,uint256)": {
            "calls": 13000,
            "min": 99517,
            "mean": 100863,
            "median": 99529,
            "max": 116617
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1654262,
          "size": 7348
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 600,
            "min": 66843,
            "mean": 67508,
            "median": 66855,
            "max": 77253
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 1260,
            "min": 33410,
            "mean": 66477,
            "median": 66894,
            "max": 77697
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 40,
            "min": 29074,
            "mean": 40914,
            "median": 40914,
            "max": 52754
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 100,
            "min": 29164,
            "mean": 49130,
            "median": 33472,
            "max": 74771
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 20,
            "min": 29090,
            "mean": 29090,
            "median": 29090,
            "max": 29090
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 20,
            "min": 29075,
            "mean": 29075,
            "median": 29075,
            "max": 29075
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 60,
            "min": 29136,
            "mean": 48028,
            "median": 40213,
            "max": 74736
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 20,
            "min": 29063,
            "mean": 29063,
            "median": 29063,
            "max": 29063
          },
          "executeProposal(uint48)": {
            "calls": 100,
            "min": 83227,
            "mean": 91985,
            "median": 83227,
            "max": 105127
          },
          "getGravitas(uint48)": {
            "calls": 80,
            "min": 28891,
            "mean": 28891,
            "median": 28891,
            "max": 28891
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 40,
            "min": 33997,
            "mean": 33997,
            "median": 33997,
            "max": 33997
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 80,
            "min": 33977,
            "mean": 33977,
            "median": 33977,
            "max": 33977
          },
          "govAcceptDoge()": {
            "calls": 20,
            "min": 34339,
            "mean": 34339,
            "median": 34339,
            "max": 34339
          },
          "govCancel(uint48)": {
            "calls": 20,
            "min": 90883,
            "mean": 90883,
            "median": 90883,
            "max": 90883
          },
          "govCastVote(uint48,uint8)": {
            "calls": 3000,
            "min": 78157,
            "mean": 78727,
            "median": 78157,
            "max": 95257
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 200,
            "min": 431999,
            "mean": 447324,
            "median": 449027,
            "max": 449027
          },
          "govSetPendingDoge(address)": {
            "calls": 20,
            "min": 52526,
            "mean": 52526,
            "median": 52526,
            "max": 52526
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 20,
            "min": 35159,
            "mean": 35159,
            "median": 35159,
            "max": 35159
          },
          "govSetVotingDelay(uint256)": {
            "calls": 20,
            "min": 35070,
            "mean": 35070,
            "median": 35070,
            "max": 35070
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 20,
            "min": 35041,
            "mean": 35041,
            "median": 35041,
            "max": 35041
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 560,
            "min": 33659,
            "mean": 92426,
            "median": 76167,
            "max": 180179
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 60,
            "min": 33846,
            "mean": 33846,
            "median": 33846,
            "max": 33846
          },
          "init(address,address,address,address)": {
            "calls": 13000,
            "min": 111344,
            "mean": 111345,
            "median": 111344,
            "max": 111356
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 1000,
            "min": 208496,
            "mean": 208502,
            "median": 208502,
            "max": 208508
          },
          "isGuildMember(uint48)": {
            "calls": 2020,
            "min": 28894,
            "mean": 28903,
            "median": 28906,
            "max": 28906
          },
          "joinGuild(uint48)": {
            "calls": 20,
            "min": 33461,
            "mean": 33461,
            "median": 33461,
            "max": 33461
          },
          "queueProposal(uint48)": {
            "calls": 100,
            "min": 120716,
            "mean": 120716,
            "median": 120716,
            "max": 120716
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 440,
            "min": 106045,
            "mean": 108376,
            "median": 106045,
            "max": 123145
          },
          "setGuild(address,uint48)": {
            "calls": 29820,
            "min": 44023,
            "mean": 44028,
            "median": 44023,
            "max": 44035
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 2260,
            "min": 53569,
            "mean": 64667,
            "median": 73469,
            "max": 73481
          },
          "setSilverSeason()": {
            "calls": 1000,
            "min": 53863,
            "mean": 53863,
            "median": 53863,
            "max": 53863
          },
          "silverBalance()": {
            "calls": 40,
            "min": 28585,
            "mean": 28585,
            "median": 28585,
            "max": 28585
          },
          "startApprentiship(uint48)": {
            "calls": 20,
            "min": 53293,
            "mean": 53293,
            "median": 53293,
            "max": 53293
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 40,
            "min": 73528,
            "mean": 73528,
            "median": 73528,
            "max": 73528
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 120,
            "min": 73537,
            "mean": 73537,
            "median": 73537,
            "max": 73537
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1274742,
          "size": 5667
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 100,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "delay()": {
            "calls": 160,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 20,
            "min": 34473,
            "mean": 34473,
            "median": 34473,
            "max": 34473
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 2260,
            "min": 82632,
            "mean": 93724,
            "median": 102520,
            "max": 102532
          },
          "mockProposals(address,address)": {
            "calls": 1000,
            "min": 66308,
            "mean": 66308,
            "median": 66308,
            "max": 66308
          },
          "signTheConstitution(address,uint256)": {
            "calls": 1000,
            "min": 71184,
            "mean": 71184,
            "median": 71184,
            "max": 71184
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1619329,
          "size": 7124
        },
        "functions": {
          "availableGuilds()": {
            "calls": 1280,
            "min": 4850,
            "mean": 8197,
            "median": 9558,
            "max": 11912
          },
          "guildInformation(uint48)": {
            "calls": 20,
            "min": 31983,
            "mean": 31983,
            "median": 31983,
            "max": 31983
          },
          "merchantRepublicAddress()": {
            "calls": 20,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 20,
            "min": 94075,
            "mean": 94075,
            "median": 94075,
            "max": 94075
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 120,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 134588,
          "size": 316
        },
        "functions": {
          "anotherFlag()": {
            "calls": 20,
            "min": 2302,
            "mean": 2302,
            "median": 2302,
            "max": 2302
          },
          "flag()": {
            "calls": 200,
            "min": 2274,
            "mean": 2274,
            "median": 2274,
            "max": 2274
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/Guild.sol:Guild",
        "deployment": {
          "gas": 3286462,
          "size": 15359
        },
        "functions": {
          "getGravitas(address)": {
            "calls": 80,
            "min": 2548,
            "mean": 2548,
            "median": 2548,
            "max": 2548
          },
          "getVoteInfo(uint8,address,uint48)": {
            "calls": 120,
            "min": 6924,
            "mean": 6942,
            "median": 6951,
            "max": 6951
          },
          "gravitasThreshold()": {
            "calls": 20,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "guildMasterAddress()": {
            "calls": 60,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "guildMasterRewardMultiplier()": {
            "calls": 40,
            "min": 2383,
            "mean": 2383,
            "median": 2383,
            "max": 2383
          },
          "guildMemberSlash()": {
            "calls": 60,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "isGuildMember(address)": {
            "calls": 2020,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "memberRewardPerSecond()": {
            "calls": 20,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "requestGuildBook()": {
            "calls": 20,
            "min": 4682,
            "mean": 4682,
            "median": 4682,
            "max": 4682
          },
          "slashForCashReward()": {
            "calls": 20,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/MerchantRepublic.sol:MerchantRepublic",
        "deployment": {
          "gas": 4007796,
          "size": 18386
        },
        "functions": {
          "doge()": {
            "calls": 20,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "proposalThreshold()": {
            "calls": 20,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "silverBalance()": {
            "calls": 40,
            "min": 2416,
            "mean": 2416,
            "median": 2416,
            "max": 2416
          },
          "state(uint48)": {
            "calls": 600,
            "min": 6916,
            "mean": 11546,
            "median": 10133,
            "max": 17599
          },
          "votingDelay()": {
            "calls": 20,
            "min": 2365,
            "mean": 2365,
            "median": 2365,
            "max": 2365
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 2374,
            "mean": 2374,
            "median": 2374,
            "max": 2374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 1325993,
          "size": 8057
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "getPastVotes(address,uint256)": {
            "calls": 3200,
            "min": 5098,
            "mean": 5098,
            "median": 5098,
            "max": 5098
          },
          "mint(address,uint256)": {
            "calls": 13000,
            "min": 99677,
            "mean": 101023,
            "median": 99689,
            "max": 116777
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:Commoner",
        "deployment": {
          "gas": 1441604,
          "size": 6370
        },
        "functions": {
          "castVoteForBanishment(uint8,uint256)": {
            "calls": 600,
            "min": 66854,
            "mean": 67529,
            "median": 66879,
            "max": 77339
          },
          "castVoteForGuildMaster(uint8,uint48)": {
            "calls": 1260,
            "min": 33414,
            "mean": 66511,
            "median": 66932,
            "max": 77739
          },
          "changeGravitasThreshold(uint256,uint256)": {
            "calls": 40,
            "min": 29086,
            "mean": 40862,
            "median": 40862,
            "max": 52639
          },
          "changeGuildMasterMultiplier(uint256,uint8)": {
            "calls": 100,
            "min": 29164,
            "mean": 50433,
            "median": 40278,
            "max": 74633
          },
          "changeGuildMemberSlash(uint256,uint256)": {
            "calls": 40,
            "min": 29104,
            "mean": 40880,
            "median": 40880,
            "max": 52657
          },
          "changeMaxGuildMembers(uint256,uint256)": {
            "calls": 40,
            "min": 29073,
            "mean": 40849,
            "median": 40849,
            "max": 52626
          },
          "changeMemberRewardPerSecond(uint256,uint48)": {
            "calls": 60,
            "min": 29153,
            "mean": 47999,
            "median": 40231,
            "max": 74615
          },
          "changeSlashForCashReward(uint256,uint256)": {
            "calls": 60,
            "min": 29092,
            "mean": 49538,
            "median": 57441,
            "max": 62081
          },
          "executeProposal(uint48)": {
            "calls": 100,
            "min": 82985,
            "mean": 91743,
            "median": 82985,
            "max": 104885
          },
          "getGravitas(uint48)": {
            "calls": 80,
            "min": 29004,
            "mean": 29004,
            "median": 29004,
            "max": 29004
          },
          "getVoteInfoBanishment(uint256)": {
            "calls": 40,
            "min": 33780,
            "mean": 33780,
            "median": 33780,
            "max": 33780
          },
          "getVoteInfoGuildMaster(uint48)": {
            "calls": 80,
            "min": 33806,
            "mean": 33806,
            "median": 33806,
            "max": 33806
          },
          "govAcceptDoge()": {
            "calls": 20,
            "min": 34407,
            "mean": 34407,
            "median": 34407,
            "max": 34407
          },
          "govCancel(uint48)": {
            "calls": 20,
            "min": 90713,
            "mean": 90713,
            "median": 90713,
            "max": 90713
          },
          "govCastVote(uint48,uint8)": {
            "calls": 3000,
            "min": 78058,
            "mean": 78628,
            "median": 78058,
            "max": 95158
          },
          "govPropose(address[],uint256[],string[],bytes[],string,uint48[])": {
            "calls": 200,
            "min": 431689,
            "mean": 447014,
            "median": 448717,
            "max": 448717
          },
          "govSetPendingDoge(address)": {
            "calls": 20,
            "min": 52472,
            "mean": 52472,
            "median": 52472,
            "max": 52472
          },
          "govSetProposalThreshold(uint256)": {
            "calls": 20,
            "min": 35182,
            "mean": 35182,
            "median": 35182,
            "max": 35182
          },
          "govSetVotingDelay(uint256)": {
            "calls": 20,
            "min": 35093,
            "mean": 35093,
            "median": 35093,
            "max": 35093
          },
          "govSetVotingPeriod(uint256)": {
            "calls": 20,
            "min": 35060,
            "mean": 35060,
            "median": 35060,
            "max": 35060
          },
          "guildCastVoteForProposal(uint8,uint48,uint256)": {
            "calls": 560,
            "min": 33697,
            "mean": 92421,
            "median": 76147,
            "max": 180177
          },
          "guildMasterAcceptanceCeremony(uint256)": {
            "calls": 60,
            "min": 33883,
            "mean": 33883,
            "median": 33883,
            "max": 33883
          },
          "init(address,address,address,address)": {
            "calls": 13000,
            "min": 111354,
            "mean": 111355,
            "median": 111354,
            "max": 111366
          },
          "initializeMerchantRepublic(address,address,address,uint48,uint256,uint256,uint256)": {
            "calls": 1000,
            "min": 208483,
            "mean": 208489,
            "median": 208489,
            "max": 208495
          },
          "isGuildMember(uint48)": {
            "calls": 2020,
            "min": 28993,
            "mean": 29002,
            "median": 29005,
            "max": 29005
          },
          "joinGuild(uint48)": {
            "calls": 20,
            "min": 33495,
            "mean": 33495,
            "median": 33495,
            "max": 33495
          },
          "queueProposal(uint48)": {
            "calls": 100,
            "min": 120262,
            "mean": 120262,
            "median": 120262,
            "max": 120262
          },
          "sendSilver(address,uint256,uint48)": {
            "calls": 440,
            "min": 106028,
            "mean": 108359,
            "median": 106028,
            "max": 123128
          },
          "setGuild(address,uint48)": {
            "calls": 29820,
            "min": 44032,
            "mean": 44037,
            "median": 44032,
            "max": 44044
          },
          "setGuildCouncil(address,address,uint256,uint48)": {
            "calls": 2260,
            "min": 53461,
            "mean": 64559,
            "median": 73361,
            "max": 73373
          },
          "setSilverSeason()": {
            "calls": 1000,
            "min": 53894,
            "mean": 53894,
            "median": 53894,
            "max": 53894
          },
          "silverBalance()": {
            "calls": 40,
            "min": 28582,
            "mean": 28582,
            "median": 28582,
            "max": 28582
          },
          "startApprentiship(uint48)": {
            "calls": 20,
            "min": 53178,
            "mean": 53178,
            "median": 53178,
            "max": 53178
          },
          "startBanishmentVote(address,uint256)": {
            "calls": 40,
            "min": 73577,
            "mean": 73577,
            "median": 73577,
            "max": 73577
          },
          "startGuildmasterVote(address,uint256)": {
            "calls": 120,
            "min": 73610,
            "mean": 73610,
            "median": 73610,
            "max": 73610
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockConstitution",
        "deployment": {
          "gas": 1351923,
          "size": 6002
        },
        "functions": {
          "GRACE_PERIOD()": {
            "calls": 100,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "delay()": {
            "calls": 160,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "guildCouncilSetMerchantRepublic(address,address)": {
            "calls": 20,
            "min": 34389,
            "mean": 34389,
            "median": 34389,
            "max": 34389
          },
          "mockEstablishGuild(address,uint48)": {
            "calls": 2260,
            "min": 82820,
            "mean": 93912,
            "median": 102708,
            "max": 102720
          },
          "mockProposals(address,address)": {
            "calls": 1000,
            "min": 66299,
            "mean": 66299,
            "median": 66299,
            "max": 66299
          },
          "signTheConstitution(address,uint256)": {
            "calls": 1000,
            "min": 71180,
            "mean": 71180,
            "median": 71180,
            "max": 71180
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/gov2Test.sol:MockGuildCouncil",
        "deployment": {
          "gas": 1487319,
          "size": 6465
        },
        "functions": {
          "availableGuilds()": {
            "calls": 1280,
            "min": 4822,
            "mean": 8163,
            "median": 9522,
            "max": 11872
          },
          "guildInformation(uint48)": {
            "calls": 20,
            "min": 31694,
            "mean": 31694,
            "median": 31694,
            "max": 31694
          },
          "merchantRepublicAddress()": {
            "calls": 20,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "mockCallGuildProposal(address,uint48)": {
            "calls": 20,
            "min": 94112,
            "mean": 94112,
            "median": 94112,
            "max": 94112
          },
          "proposalIdToVoteCallTimestamp(uint48)": {
            "calls": 120,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/proposalTarget.sol:ProposalTarget",
        "deployment": {
          "gas": 122832,
          "size": 259
        },
        "functions": {
          "anotherFlag()": {
            "calls": 20,
            "min": 2267,
            "mean": 2267,
            "median": 2267,
            "max": 2267
          },
          "flag()": {
            "calls": 200,
            "min": 2262,
            "mean": 2262,
            "median": 2262,
            "max": 2262
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "lil-web3": {
    "solc": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 214636,
          "size": 777
        },
        "functions": {
          "lookup(string)": {
            "calls": 160,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "register(string)": {
            "calls": 100,
            "min": 24231,
            "mean": 40403,
            "median": 44447,
            "max": 44447
          },
          "update(string,address)": {
            "calls": 40,
            "min": 24628,
            "mean": 26195,
            "median": 26195,
            "max": 27762
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 414609,
          "size": 1723
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 120,
            "min": 30853,
            "mean": 60965,
            "median": 65265,
            "max": 72679
          },
          "fees(address)": {
            "calls": 120,
            "min": 2520,
            "mean": 2520,
            "median": 2520,
            "max": 2520
          },
          "getFee(address,uint256)": {
            "calls": 60,
            "min": 2494,
            "mean": 2567,
            "median": 2494,
            "max": 2714
          },
          "setFees(address,uint256)": {
            "calls": 100,
            "min": 21889,
            "mean": 36049,
            "median": 45485,
            "max": 45485
          },
          "withdraw(address,uint256)": {
            "calls": 40,
            "min": 21985,
            "mean": 36564,
            "median": 36564,
            "max": 51143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1313690,
          "size": 5771
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 100,
            "min": 8794,
            "mean": 8794,
            "median": 8794,
            "max": 8794
          },
          "join(uint256)": {
            "calls": 80,
            "min": 30048,
            "mean": 52191,
            "median": 49512,
            "max": 79695
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 100,
            "min": 801444,
            "mean": 829614,
            "median": 836657,
            "max": 836657
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4374
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 60,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 140,
            "min": 2530,
            "mean": 2530,
            "median": 2530,
            "max": 2530
          },
          "transfer(address,uint256)": {
            "calls": 20,
            "min": 51225,
            "mean": 51225,
            "median": 51225,
            "max": 51225
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 810087,
          "size": 3507
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 1140,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "QUORUM_HASH()": {
            "calls": 36420,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "SIGNER_HASH()": {
            "calls": 720,
            "min": 175,
            "mean": 175,
            "median": 175,
            "max": 175
          },
          "domainSeparator()": {
            "calls": 38280,
            "min": 329,
            "mean": 329,
            "median": 329,
            "max": 329
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 160,
            "min": 44596,
            "mean": 76878,
            "median": 85813,
            "max": 98272
          },
          "isSigner(address)": {
            "calls": 40,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "nonce()": {
            "calls": 38280,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "quorum()": {
            "calls": 5120,
            "min": 2248,
            "mean": 2248,
            "median": 2248,
            "max": 2248
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 5200,
            "min": 43555,
            "mean": 82589,
            "median": 82935,
            "max": 83275
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 100,
            "min": 44049,
            "mean": 68446,
            "median": 67593,
            "max": 103060
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1186062,
          "size": 6547
        },
        "functions": {
          "contribute()": {
            "calls": 100,
            "min": 23535,
            "mean": 64326,
            "median": 74524,
            "max": 74524
          },
          "getState()": {
            "calls": 80,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "manager()": {
            "calls": 80,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23649,
            "mean": 30771,
            "median": 30706,
            "max": 37960
          },
          "renounce()": {
            "calls": 40,
            "min": 23447,
            "mean": 25274,
            "median": 25274,
            "max": 27102
          },
          "setState(uint8)": {
            "calls": 100,
            "min": 23585,
            "mean": 26811,
            "median": 27612,
            "max": 27624
          },
          "token()": {
            "calls": 220,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "withdraw()": {
            "calls": 40,
            "min": 23378,
            "mean": 27354,
            "median": 27354,
            "max": 31330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4462
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 200,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 459643,
          "size": 1814
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 60,
            "min": 30162,
            "mean": 45206,
            "median": 30198,
            "max": 75259
          },
          "cancelListing(uint256)": {
            "calls": 40,
            "min": 30139,
            "mean": 48753,
            "median": 48753,
            "max": 67367
          },
          "getListing(uint256)": {
            "calls": 120,
            "min": 8706,
            "mean": 8706,
            "median": 8706,
            "max": 8706
          },
          "list(address,uint256,uint256)": {
            "calls": 140,
            "min": 120702,
            "mean": 146576,
            "median": 156001,
            "max": 156001
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 787688,
          "size": 3473
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 40,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "balanceOf(uint256,address)": {
            "calls": 400,
            "min": 17971,
            "mean": 18049,
            "median": 18065,
            "max": 18092
          },
          "domainSeparator()": {
            "calls": 40,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "getStream(uint256)": {
            "calls": 180,
            "min": 17544,
            "mean": 17544,
            "median": 17544,
            "max": 17544
          },
          "nonce()": {
            "calls": 40,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "refuel(uint256,uint256)": {
            "calls": 60,
            "min": 23739,
            "mean": 32557,
            "median": 23799,
            "max": 50135
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23561,
            "mean": 25019,
            "median": 25749,
            "max": 25749
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 180,
            "min": 218530,
            "mean": 220660,
            "median": 218530,
            "max": 223330
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 40,
            "min": 49906,
            "mean": 53850,
            "median": 53850,
            "max": 57795
          },
          "withdraw(uint256)": {
            "calls": 60,
            "min": 23589,
            "mean": 70324,
            "median": 93692,
            "max": 93692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 509813,
          "size": 1971
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 20,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 20,
            "min": 26465,
            "mean": 26465,
            "median": 26465,
            "max": 26465
          },
          "setTestData(bytes)": {
            "calls": 20,
            "min": 44128,
            "mean": 44128,
            "median": 44128,
            "max": 44128
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 695451,
          "size": 3800
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 552,
            "mean": 2097,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 160,
            "min": 68080,
            "mean": 68087,
            "median": 68092,
            "max": 68092
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 865233,
          "size": 4192
        },
        "functions": {
          "mint()": {
            "calls": 120,
            "min": 72961,
            "mean": 72961,
            "median": 72961,
            "max": 72961
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 240,
            "min": 46126,
            "mean": 46126,
            "median": 46126,
            "max": 46126
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 554804,
          "size": 2262
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 20,
            "min": 44179,
            "mean": 44179,
            "median": 44179,
            "max": 44179
          },
          "expectValue(uint256)": {
            "calls": 20,
            "min": 43480,
            "mean": 43480,
            "median": 43480,
            "max": 43480
          },
          "shouldRevert(bool)": {
            "calls": 20,
            "min": 43564,
            "mean": 43564,
            "median": 43564,
            "max": 43564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 864153,
          "size": 4187
        },
        "functions": {
          "mint()": {
            "calls": 160,
            "min": 72946,
            "mean": 72946,
            "median": 72946,
            "max": 72946
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "setApprovalForAll(address,bool)": {
            "calls": 340,
            "min": 24214,
            "mean": 44837,
            "median": 46126,
            "max": 46126
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 54441,
            "mean": 54441,
            "median": 54441,
            "max": 54441
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 695399,
          "size": 3799
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46230,
            "mean": 46230,
            "median": 46230,
            "max": 46230
          },
          "balanceOf(address)": {
            "calls": 220,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "mintTo(address,uint256)": {
            "calls": 240,
            "min": 33880,
            "mean": 62380,
            "median": 68080,
            "max": 68080
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 259012,
          "size": 984
        },
        "functions": {
          "lookup(string)": {
            "calls": 160,
            "min": 2865,
            "mean": 2865,
            "median": 2865,
            "max": 2865
          },
          "register(string)": {
            "calls": 100,
            "min": 24425,
            "mean": 40673,
            "median": 44735,
            "max": 44735
          },
          "update(string,address)": {
            "calls": 40,
            "min": 24830,
            "mean": 26436,
            "median": 26436,
            "max": 28043
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 489958,
          "size": 2073
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 120,
            "min": 31025,
            "mean": 61491,
            "median": 65920,
            "max": 73328
          },
          "fees(address)": {
            "calls": 120,
            "min": 2557,
            "mean": 2557,
            "median": 2557,
            "max": 2557
          },
          "getFee(address,uint256)": {
            "calls": 60,
            "min": 2631,
            "mean": 2744,
            "median": 2631,
            "max": 2970
          },
          "setFees(address,uint256)": {
            "calls": 100,
            "min": 22000,
            "mean": 36192,
            "median": 45648,
            "max": 45648
          },
          "withdraw(address,uint256)": {
            "calls": 40,
            "min": 22025,
            "mean": 36623,
            "median": 36623,
            "max": 51222
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1399400,
          "size": 6170
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 100,
            "min": 8931,
            "mean": 8931,
            "median": 8931,
            "max": 8931
          },
          "join(uint256)": {
            "calls": 80,
            "min": 30065,
            "mean": 52412,
            "median": 49819,
            "max": 79945
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 100,
            "min": 862854,
            "mean": 891008,
            "median": 898047,
            "max": 898047
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4495
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 60,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 140,
            "min": 2539,
            "mean": 2539,
            "median": 2539,
            "max": 2539
          },
          "transfer(address,uint256)": {
            "calls": 20,
            "min": 51315,
            "mean": 51315,
            "median": 51315,
            "max": 51315
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 989853,
          "size": 4531
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 1140,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "QUORUM_HASH()": {
            "calls": 36420,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "SIGNER_HASH()": {
            "calls": 720,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          },
          "domainSeparator()": {
            "calls": 38280,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 160,
            "min": 44791,
            "mean": 78028,
            "median": 87278,
            "max": 99922
          },
          "isSigner(address)": {
            "calls": 40,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "nonce()": {
            "calls": 38280,
            "min": 2304,
            "mean": 2304,
            "median": 2304,
            "max": 2304
          },
          "quorum()": {
            "calls": 5120,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 5200,
            "min": 43672,
            "mean": 83832,
            "median": 84206,
            "max": 84535
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 100,
            "min": 44197,
            "mean": 69222,
            "median": 68421,
            "max": 104413
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1287947,
          "size": 6881
        },
        "functions": {
          "contribute()": {
            "calls": 100,
            "min": 23433,
            "mean": 64286,
            "median": 74500,
            "max": 74500
          },
          "getState()": {
            "calls": 80,
            "min": 2367,
            "mean": 2367,
            "median": 2367,
            "max": 2367
          },
          "manager()": {
            "calls": 80,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23712,
            "mean": 30766,
            "median": 30676,
            "max": 37911
          },
          "renounce()": {
            "calls": 40,
            "min": 23408,
            "mean": 25278,
            "median": 25278,
            "max": 27148
          },
          "setState(uint8)": {
            "calls": 100,
            "min": 23618,
            "mean": 26941,
            "median": 27766,
            "max": 27778
          },
          "token()": {
            "calls": 220,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "withdraw()": {
            "calls": 40,
            "min": 23408,
            "mean": 27386,
            "median": 27386,
            "max": 31364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4570
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 200,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 462002,
          "size": 1828
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 60,
            "min": 30109,
            "mean": 45193,
            "median": 30140,
            "max": 75332
          },
          "cancelListing(uint256)": {
            "calls": 40,
            "min": 30092,
            "mean": 48764,
            "median": 48764,
            "max": 67437
          },
          "getListing(uint256)": {
            "calls": 120,
            "min": 8908,
            "mean": 8908,
            "median": 8908,
            "max": 8908
          },
          "list(address,uint256,uint256)": {
            "calls": 140,
            "min": 120600,
            "mean": 146386,
            "median": 155787,
            "max": 155787
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 920742,
          "size": 4025
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 40,
            "min": 207,
            "mean": 207,
            "median": 207,
            "max": 207
          },
          "balanceOf(uint256,address)": {
            "calls": 440,
            "min": 18009,
            "mean": 18130,
            "median": 18135,
            "max": 18205
          },
          "domainSeparator()": {
            "calls": 40,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getStream(uint256)": {
            "calls": 180,
            "min": 17659,
            "mean": 17659,
            "median": 17659,
            "max": 17659
          },
          "nonce()": {
            "calls": 40,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "refuel(uint256,uint256)": {
            "calls": 60,
            "min": 23840,
            "mean": 32742,
            "median": 23900,
            "max": 50486
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23691,
            "mean": 34897,
            "median": 25881,
            "max": 55121
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 180,
            "min": 219146,
            "mean": 221276,
            "median": 219146,
            "max": 223946
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 40,
            "min": 49934,
            "mean": 53924,
            "median": 53924,
            "max": 57915
          },
          "withdraw(uint256)": {
            "calls": 80,
            "min": 23674,
            "mean": 66489,
            "median": 74259,
            "max": 93766
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 578775,
          "size": 2291
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 20,
            "min": 26522,
            "mean": 26522,
            "median": 26522,
            "max": 26522
          },
          "setRespectFees(bool)": {
            "calls": 20,
            "min": 26513,
            "mean": 26513,
            "median": 26513,
            "max": 26513
          },
          "setTestData(bytes)": {
            "calls": 20,
            "min": 44280,
            "mean": 44280,
            "median": 44280,
            "max": 44280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 755165,
          "size": 3772
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 561,
            "mean": 2106,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 160,
            "min": 68199,
            "mean": 68206,
            "median": 68211,
            "max": 68211
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 922041,
          "size": 4159
        },
        "functions": {
          "mint()": {
            "calls": 120,
            "min": 73074,
            "mean": 73074,
            "median": 73074,
            "max": 73074
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 240,
            "min": 46075,
            "mean": 46075,
            "median": 46075,
            "max": 46075
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 590096,
          "size": 2429
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 20,
            "min": 44359,
            "mean": 44359,
            "median": 44359,
            "max": 44359
          },
          "expectValue(uint256)": {
            "calls": 20,
            "min": 43551,
            "mean": 43551,
            "median": 43551,
            "max": 43551
          },
          "shouldRevert(bool)": {
            "calls": 20,
            "min": 43633,
            "mean": 43633,
            "median": 43633,
            "max": 43633
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 955767,
          "size": 4315
        },
        "functions": {
          "mint()": {
            "calls": 160,
            "min": 73050,
            "mean": 73050,
            "median": 73050,
            "max": 73050
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2553,
            "mean": 2553,
            "median": 2553,
            "max": 2553
          },
          "setApprovalForAll(address,bool)": {
            "calls": 340,
            "min": 24163,
            "mean": 44786,
            "median": 46075,
            "max": 46075
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 54549,
            "mean": 54549,
            "median": 54549,
            "max": 54549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 755149,
          "size": 3771
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46486,
            "mean": 46486,
            "median": 46486,
            "max": 46486
          },
          "balanceOf(address)": {
            "calls": 280,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "mintTo(address,uint256)": {
            "calls": 240,
            "min": 33999,
            "mean": 62499,
            "median": 68199,
            "max": 68199
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 265975,
          "size": 1018
        },
        "functions": {
          "lookup(string)": {
            "calls": 160,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "register(string)": {
            "calls": 100,
            "min": 24145,
            "mean": 40309,
            "median": 44350,
            "max": 44350
          },
          "update(string,address)": {
            "calls": 40,
            "min": 24502,
            "mean": 26053,
            "median": 26053,
            "max": 27605
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 445312,
          "size": 1862
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 120,
            "min": 30298,
            "mean": 59680,
            "median": 63745,
            "max": 71208
          },
          "fees(address)": {
            "calls": 120,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "getFee(address,uint256)": {
            "calls": 60,
            "min": 2449,
            "mean": 2516,
            "median": 2449,
            "max": 2650
          },
          "setFees(address,uint256)": {
            "calls": 100,
            "min": 21831,
            "mean": 35987,
            "median": 45420,
            "max": 45420
          },
          "withdraw(address,uint256)": {
            "calls": 40,
            "min": 21869,
            "mean": 36295,
            "median": 36295,
            "max": 50721
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1533457,
          "size": 6790
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 100,
            "min": 8690,
            "mean": 8690,
            "median": 8690,
            "max": 8690
          },
          "join(uint256)": {
            "calls": 80,
            "min": 29935,
            "mean": 51829,
            "median": 49153,
            "max": 79076
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 100,
            "min": 871041,
            "mean": 899019,
            "median": 906014,
            "max": 906014
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 5282
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 60,
            "min": 46209,
            "mean": 46209,
            "median": 46209,
            "max": 46209
          },
          "balanceOf(address)": {
            "calls": 140,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "transfer(address,uint256)": {
            "calls": 20,
            "min": 50997,
            "mean": 50997,
            "median": 50997,
            "max": 50997
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 860984,
          "size": 3948
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 1140,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "QUORUM_HASH()": {
            "calls": 36420,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "SIGNER_HASH()": {
            "calls": 720,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "domainSeparator()": {
            "calls": 38280,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 160,
            "min": 43919,
            "mean": 74602,
            "median": 82988,
            "max": 95330
          },
          "isSigner(address)": {
            "calls": 40,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "nonce()": {
            "calls": 38280,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "quorum()": {
            "calls": 5120,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 5200,
            "min": 42950,
            "mean": 79996,
            "median": 80330,
            "max": 80664
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 100,
            "min": 43392,
            "mean": 66643,
            "median": 65632,
            "max": 100391
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1256089,
          "size": 7594
        },
        "functions": {
          "contribute()": {
            "calls": 100,
            "min": 23425,
            "mean": 63965,
            "median": 74100,
            "max": 74100
          },
          "getState()": {
            "calls": 80,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "manager()": {
            "calls": 80,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23627,
            "mean": 30522,
            "median": 30358,
            "max": 37581
          },
          "renounce()": {
            "calls": 40,
            "min": 23401,
            "mean": 25222,
            "median": 25222,
            "max": 27043
          },
          "setState(uint8)": {
            "calls": 100,
            "min": 23539,
            "mean": 26740,
            "median": 27535,
            "max": 27547
          },
          "token()": {
            "calls": 220,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "withdraw()": {
            "calls": 40,
            "min": 23369,
            "mean": 27339,
            "median": 27339,
            "max": 31309
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 5372
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 200,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 406389,
          "size": 1569
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 60,
            "min": 29943,
            "mean": 44842,
            "median": 29948,
            "max": 74637
          },
          "cancelListing(uint256)": {
            "calls": 40,
            "min": 29976,
            "mean": 48370,
            "median": 48370,
            "max": 66764
          },
          "getListing(uint256)": {
            "calls": 120,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "list(address,uint256,uint256)": {
            "calls": 140,
            "min": 120013,
            "mean": 145639,
            "median": 154991,
            "max": 154991
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 817307,
          "size": 3581
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 40,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "balanceOf(uint256,address)": {
            "calls": 400,
            "min": 17681,
            "mean": 17751,
            "median": 17768,
            "max": 17787
          },
          "domainSeparator()": {
            "calls": 40,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "getStream(uint256)": {
            "calls": 180,
            "min": 17388,
            "mean": 17388,
            "median": 17388,
            "max": 17388
          },
          "nonce()": {
            "calls": 40,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "refuel(uint256,uint256)": {
            "calls": 60,
            "min": 23725,
            "mean": 32467,
            "median": 23785,
            "max": 49891
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23590,
            "mean": 25032,
            "median": 25753,
            "max": 25753
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 180,
            "min": 217807,
            "mean": 219937,
            "median": 217807,
            "max": 222607
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 40,
            "min": 49098,
            "mean": 53106,
            "median": 53106,
            "max": 57114
          },
          "withdraw(uint256)": {
            "calls": 60,
            "min": 23581,
            "mean": 69931,
            "median": 93107,
            "max": 93107
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 495270,
          "size": 1899
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 20,
            "min": 26423,
            "mean": 26423,
            "median": 26423,
            "max": 26423
          },
          "setRespectFees(bool)": {
            "calls": 20,
            "min": 26433,
            "mean": 26433,
            "median": 26433,
            "max": 26433
          },
          "setTestData(bytes)": {
            "calls": 20,
            "min": 44198,
            "mean": 44198,
            "median": 44198,
            "max": 44198
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 760619,
          "size": 3908
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 419,
            "mean": 1964,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 160,
            "min": 67924,
            "mean": 67931,
            "median": 67936,
            "max": 67936
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 952119,
          "size": 4267
        },
        "functions": {
          "mint()": {
            "calls": 120,
            "min": 72887,
            "mean": 72887,
            "median": 72887,
            "max": 72887
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          },
          "setApprovalForAll(address,bool)": {
            "calls": 240,
            "min": 45865,
            "mean": 45865,
            "median": 45865,
            "max": 45865
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 563208,
          "size": 2305
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 20,
            "min": 44073,
            "mean": 44073,
            "median": 44073,
            "max": 44073
          },
          "expectValue(uint256)": {
            "calls": 20,
            "min": 43518,
            "mean": 43518,
            "median": 43518,
            "max": 43518
          },
          "shouldRevert(bool)": {
            "calls": 20,
            "min": 43535,
            "mean": 43535,
            "median": 43535,
            "max": 43535
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 951063,
          "size": 4262
        },
        "functions": {
          "mint()": {
            "calls": 160,
            "min": 72874,
            "mean": 72874,
            "median": 72874,
            "max": 72874
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2408,
            "mean": 2408,
            "median": 2408,
            "max": 2408
          },
          "setApprovalForAll(address,bool)": {
            "calls": 340,
            "min": 23953,
            "mean": 44576,
            "median": 45865,
            "max": 45865
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 54244,
            "mean": 54244,
            "median": 54244,
            "max": 54244
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 760591,
          "size": 3907
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46209,
            "mean": 46209,
            "median": 46209,
            "max": 46209
          },
          "balanceOf(address)": {
            "calls": 220,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "mintTo(address,uint256)": {
            "calls": 240,
            "min": 33724,
            "mean": 62224,
            "median": 67924,
            "max": 67924
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/LilENS.sol:LilENS",
        "deployment": {
          "gas": 255904,
          "size": 970
        },
        "functions": {
          "lookup(string)": {
            "calls": 160,
            "min": 2634,
            "mean": 2634,
            "median": 2634,
            "max": 2634
          },
          "register(string)": {
            "calls": 100,
            "min": 24165,
            "mean": 40311,
            "median": 44348,
            "max": 44348
          },
          "update(string,address)": {
            "calls": 40,
            "min": 24559,
            "mean": 26098,
            "median": 26098,
            "max": 27638
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilFlashloan.sol:LilFlashloan",
        "deployment": {
          "gas": 393326,
          "size": 1637
        },
        "functions": {
          "execute(address,address,uint256,bytes)": {
            "calls": 120,
            "min": 30333,
            "mean": 59709,
            "median": 63774,
            "max": 71234
          },
          "fees(address)": {
            "calls": 120,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          },
          "getFee(address,uint256)": {
            "calls": 60,
            "min": 2478,
            "mean": 2545,
            "median": 2478,
            "max": 2679
          },
          "setFees(address,uint256)": {
            "calls": 100,
            "min": 21841,
            "mean": 35997,
            "median": 45424,
            "max": 45424
          },
          "withdraw(address,uint256)": {
            "calls": 40,
            "min": 21877,
            "mean": 36265,
            "median": 36265,
            "max": 50654
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilFractional.sol:LilFractional",
        "deployment": {
          "gas": 1413589,
          "size": 6238
        },
        "functions": {
          "getVault(uint256)": {
            "calls": 100,
            "min": 8689,
            "mean": 8689,
            "median": 8689,
            "max": 8689
          },
          "join(uint256)": {
            "calls": 80,
            "min": 29944,
            "mean": 51992,
            "median": 49401,
            "max": 79223
          },
          "split(address,uint256,uint256,string,string)": {
            "calls": 100,
            "min": 797001,
            "mean": 824962,
            "median": 831953,
            "max": 831953
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilFractional.sol:NFTShare",
        "deployment": {
          "gas": 0,
          "size": 4766
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 60,
            "min": 46263,
            "mean": 46263,
            "median": 46263,
            "max": 46263
          },
          "balanceOf(address)": {
            "calls": 140,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "transfer(address,uint256)": {
            "calls": 20,
            "min": 51048,
            "mean": 51048,
            "median": 51048,
            "max": 51048
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilGnosis.sol:LilGnosis",
        "deployment": {
          "gas": 795895,
          "size": 3542
        },
        "functions": {
          "EXECUTE_HASH()": {
            "calls": 1140,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          },
          "QUORUM_HASH()": {
            "calls": 36420,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "SIGNER_HASH()": {
            "calls": 720,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "domainSeparator()": {
            "calls": 38280,
            "min": 200,
            "mean": 200,
            "median": 200,
            "max": 200
          },
          "execute(address,uint256,bytes,(uint8,bytes32,bytes32)[])": {
            "calls": 160,
            "min": 43945,
            "mean": 75432,
            "median": 84114,
            "max": 96496
          },
          "isSigner(address)": {
            "calls": 40,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "nonce()": {
            "calls": 38280,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "quorum()": {
            "calls": 5120,
            "min": 2285,
            "mean": 2285,
            "median": 2285,
            "max": 2285
          },
          "setQuorum(uint256,(uint8,bytes32,bytes32)[])": {
            "calls": 5200,
            "min": 43033,
            "mean": 81168,
            "median": 81524,
            "max": 81857
          },
          "setSigner(address,bool,(uint8,bytes32,bytes32)[])": {
            "calls": 100,
            "min": 43453,
            "mean": 67284,
            "median": 66341,
            "max": 101499
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:LilJuicebox",
        "deployment": {
          "gas": 1127397,
          "size": 6828
        },
        "functions": {
          "contribute()": {
            "calls": 100,
            "min": 23400,
            "mean": 63943,
            "median": 74079,
            "max": 74079
          },
          "getState()": {
            "calls": 80,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "manager()": {
            "calls": 80,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23664,
            "mean": 30558,
            "median": 30417,
            "max": 37595
          },
          "renounce()": {
            "calls": 40,
            "min": 23376,
            "mean": 25240,
            "median": 25240,
            "max": 27104
          },
          "setState(uint8)": {
            "calls": 100,
            "min": 23550,
            "mean": 26689,
            "median": 27468,
            "max": 27480
          },
          "token()": {
            "calls": 220,
            "min": 223,
            "mean": 223,
            "median": 223,
            "max": 223
          },
          "withdraw()": {
            "calls": 40,
            "min": 23367,
            "mean": 27324,
            "median": 27324,
            "max": 31282
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilJuicebox.sol:ProjectShare",
        "deployment": {
          "gas": 0,
          "size": 4867
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 200,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilOpenSea.sol:LilOpenSea",
        "deployment": {
          "gas": 382115,
          "size": 1456
        },
        "functions": {
          "buyListing(uint256)": {
            "calls": 60,
            "min": 29973,
            "mean": 44900,
            "median": 29994,
            "max": 74735
          },
          "cancelListing(uint256)": {
            "calls": 40,
            "min": 29991,
            "mean": 48467,
            "median": 48467,
            "max": 66944
          },
          "getListing(uint256)": {
            "calls": 120,
            "min": 8688,
            "mean": 8688,
            "median": 8688,
            "max": 8688
          },
          "list(address,uint256,uint256)": {
            "calls": 140,
            "min": 120036,
            "mean": 145644,
            "median": 154987,
            "max": 154987
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/LilSuperfluid.sol:LilSuperfluid",
        "deployment": {
          "gas": 756634,
          "size": 3241
        },
        "functions": {
          "UPDATE_DETAILS_HASH()": {
            "calls": 40,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "balanceOf(uint256,address)": {
            "calls": 440,
            "min": 17665,
            "mean": 17739,
            "median": 17756,
            "max": 17782
          },
          "domainSeparator()": {
            "calls": 40,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "getStream(uint256)": {
            "calls": 180,
            "min": 17251,
            "mean": 17251,
            "median": 17251,
            "max": 17251
          },
          "nonce()": {
            "calls": 40,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "refuel(uint256,uint256)": {
            "calls": 60,
            "min": 23741,
            "mean": 32449,
            "median": 23801,
            "max": 49806
          },
          "refund(uint256)": {
            "calls": 60,
            "min": 23606,
            "mean": 34551,
            "median": 25791,
            "max": 54258
          },
          "streamTo(address,address,uint256,(uint256,uint256),uint256)": {
            "calls": 180,
            "min": 217754,
            "mean": 219884,
            "median": 217754,
            "max": 222554
          },
          "updateDetails(uint256,uint256,(uint256,uint256),(uint8,bytes32,bytes32))": {
            "calls": 40,
            "min": 48870,
            "mean": 52870,
            "median": 52870,
            "max": 56870
          },
          "withdraw(uint256)": {
            "calls": 80,
            "min": 23597,
            "mean": 65922,
            "median": 73526,
            "max": 93039
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestReceiver",
        "deployment": {
          "gas": 448034,
          "size": 1679
        },
        "functions": {
          "setRepay(bool)": {
            "calls": 20,
            "min": 26412,
            "mean": 26412,
            "median": 26412,
            "max": 26412
          },
          "setRespectFees(bool)": {
            "calls": 20,
            "min": 26422,
            "mean": 26422,
            "median": 26422,
            "max": 26422
          },
          "setTestData(bytes)": {
            "calls": 20,
            "min": 44103,
            "mean": 44103,
            "median": 44103,
            "max": 44103
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LilFlashloan.t.sol:TestToken",
        "deployment": {
          "gas": 680713,
          "size": 3471
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 440,
            "min": 442,
            "mean": 1987,
            "median": 2442,
            "max": 2442
          },
          "mintTo(address,uint256)": {
            "calls": 160,
            "min": 67945,
            "mean": 67952,
            "median": 67957,
            "max": 67957
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LilFractional.t.sol:TestNFT",
        "deployment": {
          "gas": 831890,
          "size": 3708
        },
        "functions": {
          "mint()": {
            "calls": 120,
            "min": 72906,
            "mean": 72906,
            "median": 72906,
            "max": 72906
          },
          "ownerOf(uint256)": {
            "calls": 200,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "setApprovalForAll(address,bool)": {
            "calls": 240,
            "min": 45890,
            "mean": 45890,
            "median": 45890,
            "max": 45890
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LilGnosis.t.sol:CallTestUtils",
        "deployment": {
          "gas": 556459,
          "size": 2271
        },
        "functions": {
          "expectData(bytes)": {
            "calls": 20,
            "min": 44072,
            "mean": 44072,
            "median": 44072,
            "max": 44072
          },
          "expectValue(uint256)": {
            "calls": 20,
            "min": 43503,
            "mean": 43503,
            "median": 43503,
            "max": 43503
          },
          "shouldRevert(bool)": {
            "calls": 20,
            "min": 43525,
            "mean": 43525,
            "median": 43525,
            "max": 43525
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LilOpenSea.t.sol:TestNFT",
        "deployment": {
          "gas": 840973,
          "size": 3750
        },
        "functions": {
          "mint()": {
            "calls": 160,
            "min": 72891,
            "mean": 72891,
            "median": 72891,
            "max": 72891
          },
          "ownerOf(uint256)": {
            "calls": 260,
            "min": 2422,
            "mean": 2422,
            "median": 2422,
            "max": 2422
          },
          "setApprovalForAll(address,bool)": {
            "calls": 340,
            "min": 23971,
            "mean": 44594,
            "median": 45883,
            "max": 45883
          },
          "transferFrom(address,address,uint256)": {
            "calls": 20,
            "min": 54225,
            "mean": 54225,
            "median": 54225,
            "max": 54225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LilSuperfluid.t.sol:TestToken",
        "deployment": {
          "gas": 680685,
          "size": 3470
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46263,
            "mean": 46263,
            "median": 46263,
            "max": 46263
          },
          "balanceOf(address)": {
            "calls": 280,
            "min": 2442,
            "mean": 2442,
            "median": 2442,
            "max": 2442
          },
          "mintTo(address,uint256)": {
            "calls": 240,
            "min": 33745,
            "mean": 62245,
            "median": 67945,
            "max": 67945
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "maple-erc20": {
    "solc": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 693522,
          "size": 3836
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 56540,
            "min": 3220,
            "mean": 3220,
            "median": 3220,
            "max": 3220
          },
          "PERMIT_TYPEHASH()": {
            "calls": 56540,
            "min": 233,
            "mean": 233,
            "median": 233,
            "max": 233
          },
          "allowance(address,address)": {
            "calls": 56380,
            "min": 2870,
            "mean": 2870,
            "median": 2870,
            "max": 2870
          },
          "nonces(address)": {
            "calls": 112700,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1040396,
          "size": 5145
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 513862,
            "min": 30746,
            "mean": 50850,
            "median": 51294,
            "max": 51570
          },
          "burn(address,uint256)": {
            "calls": 8978,
            "min": 35611,
            "mean": 38637,
            "median": 36058,
            "max": 44772
          },
          "mint(address,uint256)": {
            "calls": 464123,
            "min": 35350,
            "mean": 61372,
            "median": 61511,
            "max": 95999
          },
          "sum()": {
            "calls": 20,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "token()": {
            "calls": 20,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "transfer(address,uint256)": {
            "calls": 7588,
            "min": 33136,
            "mean": 38064,
            "median": 34006,
            "max": 56924
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6089,
            "min": 37821,
            "mean": 38663,
            "median": 38673,
            "max": 38673
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 259901,
          "size": 982
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 25600,
            "min": 29695,
            "mean": 46298,
            "median": 49658,
            "max": 49979
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 61600,
            "min": 27800,
            "mean": 51240,
            "median": 47155,
            "max": 81367
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 10240,
            "min": 27655,
            "mean": 39090,
            "median": 39125,
            "max": 50596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 750735,
          "size": 4101
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 51200,
            "min": 2914,
            "mean": 2914,
            "median": 2914,
            "max": 2914
          },
          "approve(address,uint256)": {
            "calls": 855447,
            "min": 4450,
            "mean": 37524,
            "median": 45742,
            "max": 46294
          },
          "balanceOf(address)": {
            "calls": 58875,
            "min": 2596,
            "mean": 2596,
            "median": 2596,
            "max": 2596
          },
          "burn(address,uint256)": {
            "calls": 16220,
            "min": 6819,
            "mean": 24236,
            "median": 28379,
            "max": 34345
          },
          "decimals()": {
            "calls": 5140,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 14248,
            "min": 5035,
            "mean": 20708,
            "median": 24536,
            "max": 29764
          },
          "increaseAllowance(address,uint256)": {
            "calls": 325466,
            "min": 4785,
            "mean": 24518,
            "median": 24685,
            "max": 45683
          },
          "mint(address,uint256)": {
            "calls": 813275,
            "min": 6731,
            "mean": 43457,
            "median": 50824,
            "max": 68475
          },
          "name()": {
            "calls": 5140,
            "min": 2756,
            "mean": 5066,
            "median": 4734,
            "max": 9344
          },
          "symbol()": {
            "calls": 5140,
            "min": 2999,
            "mean": 5310,
            "median": 4869,
            "max": 9590
          },
          "totalSupply()": {
            "calls": 28178,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 17851,
            "min": 6998,
            "mean": 30814,
            "median": 28615,
            "max": 51476
          },
          "transferFrom(address,address,uint256)": {
            "calls": 40710,
            "min": 11354,
            "mean": 38395,
            "median": 39098,
            "max": 54357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 700698,
          "size": 3661
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 56540,
            "min": 2973,
            "mean": 2973,
            "median": 2973,
            "max": 2973
          },
          "PERMIT_TYPEHASH()": {
            "calls": 56540,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "allowance(address,address)": {
            "calls": 56380,
            "min": 2777,
            "mean": 2777,
            "median": 2777,
            "max": 2777
          },
          "nonces(address)": {
            "calls": 112700,
            "min": 2583,
            "mean": 2583,
            "median": 2583,
            "max": 2583
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1064513,
          "size": 5040
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 514227,
            "min": 31079,
            "mean": 51180,
            "median": 51600,
            "max": 51876
          },
          "burn(address,uint256)": {
            "calls": 8914,
            "min": 35476,
            "mean": 38495,
            "median": 36039,
            "max": 44743
          },
          "mint(address,uint256)": {
            "calls": 470062,
            "min": 35352,
            "mean": 61490,
            "median": 61615,
            "max": 96103
          },
          "sum()": {
            "calls": 20,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "token()": {
            "calls": 20,
            "min": 2401,
            "mean": 2401,
            "median": 2401,
            "max": 2401
          },
          "transfer(address,uint256)": {
            "calls": 7513,
            "min": 33344,
            "mean": 37917,
            "median": 34012,
            "max": 56960
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6064,
            "min": 38499,
            "mean": 39124,
            "median": 39133,
            "max": 39133
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 283357,
          "size": 1092
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 25600,
            "min": 29959,
            "mean": 46575,
            "median": 49926,
            "max": 50243
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 61600,
            "min": 28026,
            "mean": 51265,
            "median": 47159,
            "max": 81371
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 10240,
            "min": 27645,
            "mean": 39130,
            "median": 39167,
            "max": 50690
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 766526,
          "size": 3971
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 51200,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 856384,
            "min": 4669,
            "mean": 37750,
            "median": 45987,
            "max": 46513
          },
          "balanceOf(address)": {
            "calls": 58881,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          },
          "burn(address,uint256)": {
            "calls": 16208,
            "min": 6835,
            "mean": 24164,
            "median": 28395,
            "max": 34358
          },
          "decimals()": {
            "calls": 5140,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 14237,
            "min": 4971,
            "mean": 20656,
            "median": 24468,
            "max": 29705
          },
          "increaseAllowance(address,uint256)": {
            "calls": 326080,
            "min": 4955,
            "mean": 24687,
            "median": 24855,
            "max": 46689
          },
          "mint(address,uint256)": {
            "calls": 816830,
            "min": 6792,
            "mean": 43629,
            "median": 50959,
            "max": 68536
          },
          "name()": {
            "calls": 5140,
            "min": 2921,
            "mean": 5270,
            "median": 4356,
            "max": 9478
          },
          "symbol()": {
            "calls": 5140,
            "min": 2987,
            "mean": 5343,
            "median": 5060,
            "max": 9544
          },
          "totalSupply()": {
            "calls": 28183,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 17736,
            "min": 7035,
            "mean": 30822,
            "median": 28595,
            "max": 51543
          },
          "transferFrom(address,address,uint256)": {
            "calls": 40650,
            "min": 11691,
            "mean": 38740,
            "median": 40597,
            "max": 54693
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 826444,
          "size": 4924
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 56540,
            "min": 2986,
            "mean": 2986,
            "median": 2986,
            "max": 2986
          },
          "PERMIT_TYPEHASH()": {
            "calls": 56540,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "allowance(address,address)": {
            "calls": 56380,
            "min": 2537,
            "mean": 2537,
            "median": 2537,
            "max": 2537
          },
          "nonces(address)": {
            "calls": 112700,
            "min": 2431,
            "mean": 2431,
            "median": 2431,
            "max": 2431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1189746,
          "size": 6341
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 513530,
            "min": 30485,
            "mean": 50702,
            "median": 51129,
            "max": 51407
          },
          "burn(address,uint256)": {
            "calls": 8662,
            "min": 35153,
            "mean": 38063,
            "median": 35479,
            "max": 44189
          },
          "mint(address,uint256)": {
            "calls": 464423,
            "min": 34690,
            "mean": 60946,
            "median": 61067,
            "max": 95565
          },
          "sum()": {
            "calls": 20,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "token()": {
            "calls": 20,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 7302,
            "min": 33016,
            "mean": 36773,
            "median": 33466,
            "max": 56359
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6195,
            "min": 37300,
            "mean": 38243,
            "median": 38253,
            "max": 38253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 255911,
          "size": 969
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 25600,
            "min": 29496,
            "mean": 46105,
            "median": 49464,
            "max": 49780
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 61600,
            "min": 27174,
            "mean": 50160,
            "median": 46037,
            "max": 80237
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 10240,
            "min": 27113,
            "mean": 38528,
            "median": 38564,
            "max": 50016
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 888224,
          "size": 5210
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 51200,
            "min": 2559,
            "mean": 2559,
            "median": 2559,
            "max": 2559
          },
          "approve(address,uint256)": {
            "calls": 855840,
            "min": 4427,
            "mean": 37495,
            "median": 45718,
            "max": 46271
          },
          "balanceOf(address)": {
            "calls": 58866,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(address,uint256)": {
            "calls": 15844,
            "min": 6536,
            "mean": 23885,
            "median": 28096,
            "max": 34066
          },
          "decimals()": {
            "calls": 5140,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 14191,
            "min": 4611,
            "mean": 20402,
            "median": 24286,
            "max": 29341
          },
          "increaseAllowance(address,uint256)": {
            "calls": 326001,
            "min": 4580,
            "mean": 24320,
            "median": 24480,
            "max": 45486
          },
          "mint(address,uint256)": {
            "calls": 812840,
            "min": 6539,
            "mean": 43288,
            "median": 50631,
            "max": 68283
          },
          "name()": {
            "calls": 5140,
            "min": 2692,
            "mean": 4948,
            "median": 4331,
            "max": 9247
          },
          "symbol()": {
            "calls": 5140,
            "min": 2721,
            "mean": 5025,
            "median": 5228,
            "max": 9276
          },
          "totalSupply()": {
            "calls": 28167,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 17694,
            "min": 6670,
            "mean": 30051,
            "median": 28287,
            "max": 51123
          },
          "transferFrom(address,address,uint256)": {
            "calls": 40740,
            "min": 11062,
            "mean": 38193,
            "median": 34950,
            "max": 54060
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/ERC20.sol:ERC20",
        "deployment": {
          "gas": 724057,
          "size": 4357
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 56540,
            "min": 2885,
            "mean": 2885,
            "median": 2885,
            "max": 2885
          },
          "PERMIT_TYPEHASH()": {
            "calls": 56540,
            "min": 222,
            "mean": 222,
            "median": 222,
            "max": 222
          },
          "allowance(address,address)": {
            "calls": 56380,
            "min": 2563,
            "mean": 2563,
            "median": 2563,
            "max": 2563
          },
          "nonces(address)": {
            "calls": 112700,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 1031512,
          "size": 5487
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 513949,
            "min": 30161,
            "mean": 50702,
            "median": 51148,
            "max": 51424
          },
          "burn(address,uint256)": {
            "calls": 8982,
            "min": 35045,
            "mean": 38172,
            "median": 35494,
            "max": 44226
          },
          "mint(address,uint256)": {
            "calls": 464723,
            "min": 34824,
            "mean": 60958,
            "median": 61096,
            "max": 95586
          },
          "sum()": {
            "calls": 20,
            "min": 2266,
            "mean": 2266,
            "median": 2266,
            "max": 2266
          },
          "token()": {
            "calls": 20,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "transfer(address,uint256)": {
            "calls": 7740,
            "min": 32478,
            "mean": 37382,
            "median": 33385,
            "max": 55146
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6174,
            "min": 37791,
            "mean": 38222,
            "median": 38231,
            "max": 38231
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/test/accounts/ERC20User.sol:ERC20User",
        "deployment": {
          "gas": 218212,
          "size": 792
        },
        "functions": {
          "erc20_approve(address,address,uint256)": {
            "calls": 25600,
            "min": 29438,
            "mean": 46041,
            "median": 49409,
            "max": 49722
          },
          "erc20_permit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 61600,
            "min": 27206,
            "mean": 50115,
            "median": 45987,
            "max": 80187
          },
          "erc20_transfer(address,address,uint256)": {
            "calls": 10240,
            "min": 27145,
            "mean": 38515,
            "median": 38550,
            "max": 49956
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 774591,
          "size": 4592
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 51200,
            "min": 2574,
            "mean": 2574,
            "median": 2574,
            "max": 2574
          },
          "approve(address,uint256)": {
            "calls": 855349,
            "min": 4511,
            "mean": 37590,
            "median": 45803,
            "max": 46355
          },
          "balanceOf(address)": {
            "calls": 58911,
            "min": 2454,
            "mean": 2454,
            "median": 2454,
            "max": 2454
          },
          "burn(address,uint256)": {
            "calls": 16433,
            "min": 6557,
            "mean": 23896,
            "median": 28117,
            "max": 34082
          },
          "decimals()": {
            "calls": 5140,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "decreaseAllowance(address,uint256)": {
            "calls": 14088,
            "min": 4697,
            "mean": 20587,
            "median": 24336,
            "max": 29428
          },
          "increaseAllowance(address,uint256)": {
            "calls": 326081,
            "min": 4662,
            "mean": 24389,
            "median": 24562,
            "max": 46402
          },
          "mint(address,uint256)": {
            "calls": 810570,
            "min": 6562,
            "mean": 43347,
            "median": 50655,
            "max": 68306
          },
          "name()": {
            "calls": 5140,
            "min": 2560,
            "mean": 4814,
            "median": 3904,
            "max": 9113
          },
          "symbol()": {
            "calls": 5140,
            "min": 2577,
            "mean": 4853,
            "median": 4463,
            "max": 9131
          },
          "totalSupply()": {
            "calls": 28214,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transfer(address,uint256)": {
            "calls": 18372,
            "min": 6734,
            "mean": 30290,
            "median": 28351,
            "max": 50969
          },
          "transferFrom(address,address,uint256)": {
            "calls": 40708,
            "min": 11172,
            "mean": 38287,
            "median": 38571,
            "max": 54168
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "openzeppelin": {
    "solc": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 298147,
          "size": 1190
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 16340,
            "min": 487,
            "mean": 1366,
            "median": 487,
            "max": 2487
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 513356,
          "size": 2656
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2790,
            "mean": 2790,
            "median": 2790,
            "max": 2790
          },
          "approve(address,uint256)": {
            "calls": 296960,
            "min": 25985,
            "mean": 35925,
            "median": 25985,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 197158,
            "min": 537,
            "mean": 2452,
            "median": 2537,
            "max": 2537
          },
          "burn(address,uint256)": {
            "calls": 6665,
            "min": 33957,
            "mean": 34100,
            "median": 34096,
            "max": 34329
          },
          "decimals()": {
            "calls": 1415,
            "min": 241,
            "mean": 241,
            "median": 241,
            "max": 241
          },
          "mint(address,uint256)": {
            "calls": 292855,
            "min": 28004,
            "mean": 51130,
            "median": 50822,
            "max": 68409
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 969637,
          "size": 5077
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 3115,
            "mean": 3115,
            "median": 3115,
            "max": 3115
          },
          "approve(address,uint256)": {
            "calls": 15360,
            "min": 25793,
            "mean": 32624,
            "median": 26021,
            "max": 46305
          },
          "asset()": {
            "calls": 1280,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "convertToAssets(uint256)": {
            "calls": 2560,
            "min": 29378,
            "mean": 29584,
            "median": 29421,
            "max": 30011
          },
          "convertToShares(uint256)": {
            "calls": 2560,
            "min": 29820,
            "mean": 30026,
            "median": 29853,
            "max": 30451
          },
          "deposit(uint256,address)": {
            "calls": 140800,
            "min": 43930,
            "mean": 73234,
            "median": 65955,
            "max": 100436
          },
          "maxDeposit(address)": {
            "calls": 1280,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "maxMint(address)": {
            "calls": 1280,
            "min": 697,
            "mean": 697,
            "median": 697,
            "max": 697
          },
          "maxRedeem(address)": {
            "calls": 1280,
            "min": 2951,
            "mean": 2951,
            "median": 2951,
            "max": 2951
          },
          "maxWithdraw(address)": {
            "calls": 1280,
            "min": 10908,
            "mean": 11009,
            "median": 10908,
            "max": 11157
          },
          "mint(uint256,address)": {
            "calls": 7680,
            "min": 44123,
            "mean": 55710,
            "median": 55370,
            "max": 75328
          },
          "previewDeposit(uint256)": {
            "calls": 1280,
            "min": 29903,
            "mean": 30046,
            "median": 29927,
            "max": 30505
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 29783,
            "mean": 29935,
            "median": 29807,
            "max": 30399
          },
          "previewRedeem(uint256)": {
            "calls": 1280,
            "min": 29576,
            "mean": 29728,
            "median": 29600,
            "max": 30178
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 29475,
            "mean": 29616,
            "median": 29499,
            "max": 30084
          },
          "redeem(uint256,address,address)": {
            "calls": 8960,
            "min": 24492,
            "mean": 51576,
            "median": 54276,
            "max": 77196
          },
          "totalAssets()": {
            "calls": 1280,
            "min": 5587,
            "mean": 5587,
            "median": 5587,
            "max": 5587
          },
          "withdraw(uint256,address,address)": {
            "calls": 8960,
            "min": 32459,
            "mean": 53818,
            "median": 56042,
            "max": 78296
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4416101,
          "size": 22241
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 45,
            "min": 572,
            "mean": 747,
            "median": 826,
            "max": 826
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 10,
            "min": 1042,
            "mean": 1049,
            "median": 1049,
            "max": 1056
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 10,
            "min": 1178,
            "mean": 1298,
            "median": 1298,
            "max": 1419
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 15,
            "min": 6514,
            "mean": 6536,
            "median": 6514,
            "max": 6580
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3353631,
          "size": 17921
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 12763,
            "min": 18778,
            "mean": 21491,
            "median": 22078,
            "max": 22078
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 12051,
            "min": 19374,
            "mean": 21852,
            "median": 22174,
            "max": 22174
          },
          "quorumNumerator()": {
            "calls": 5,
            "min": 5176,
            "mean": 5176,
            "median": 5176,
            "max": 5176
          },
          "superQuorumNumerator()": {
            "calls": 5,
            "min": 4736,
            "mean": 4736,
            "median": 4736,
            "max": 4736
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1725428,
          "size": 9209
        },
        "functions": {
          "clock()": {
            "calls": 24824,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 892868,
          "size": 5067
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 2560,
            "min": 34842,
            "mean": 52883,
            "median": 50583,
            "max": 68817
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 3840,
            "min": 68169,
            "mean": 121031,
            "median": 86661,
            "max": 294204
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 20693,
            "min": 1802,
            "mean": 1802,
            "median": 1802,
            "max": 1802
          },
          "nonces(address)": {
            "calls": 5853,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 1280,
            "min": 10370,
            "mean": 12943,
            "median": 13754,
            "max": 13754
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1344400,
          "size": 6546
        },
        "functions": {
          "getNumber()": {
            "calls": 10260,
            "min": 524,
            "mean": 524,
            "median": 524,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 978698,
          "size": 5226
        },
        "functions": {
          "decimals()": {
            "calls": 1280,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1104449,
          "size": 7105
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 11520,
            "min": 2605,
            "mean": 2605,
            "median": 2605,
            "max": 2605
          },
          "burn(uint256)": {
            "calls": 1280,
            "min": 61922,
            "mean": 76239,
            "median": 77223,
            "max": 79681
          },
          "ownerOf(uint256)": {
            "calls": 14079,
            "min": 2692,
            "mean": 10564,
            "median": 11888,
            "max": 25833
          },
          "totalMinted()": {
            "calls": 7679,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2560,
            "min": 67518,
            "mean": 68703,
            "median": 68843,
            "max": 72304
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1597876,
          "size": 7812
        },
        "functions": {
          "toShortString(string)": {
            "calls": 1280,
            "min": 955,
            "mean": 964,
            "median": 964,
            "max": 976
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1853957,
          "size": 9091
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 27132,
            "mean": 27378,
            "median": 27509,
            "max": 27526
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 1637918,
          "size": 8012
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1644,
            "mean": 1685,
            "median": 1688,
            "max": 1688
          },
          "parseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1241,
            "mean": 1252,
            "median": 1251,
            "max": 1275
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1650,
            "mean": 1691,
            "median": 1694,
            "max": 1694
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1320,
            "mean": 1331,
            "median": 1330,
            "max": 1354
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1678567,
          "size": 8215
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 1280,
            "min": 26334,
            "mean": 26427,
            "median": 26393,
            "max": 26581
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1669553,
          "size": 8170
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 1280,
            "min": 26269,
            "mean": 26391,
            "median": 26345,
            "max": 26595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1643525,
          "size": 8040
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 1280,
            "min": 26222,
            "mean": 26346,
            "median": 26285,
            "max": 26575
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1537006,
          "size": 7508
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 1280,
            "min": 28272,
            "mean": 28409,
            "median": 28350,
            "max": 28658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 319731,
          "size": 1287
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 15939,
            "min": 477,
            "mean": 1370,
            "median": 477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 527833,
          "size": 2420
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2832,
            "mean": 2832,
            "median": 2832,
            "max": 2832
          },
          "approve(address,uint256)": {
            "calls": 296960,
            "min": 26394,
            "mean": 36333,
            "median": 26394,
            "max": 46678
          },
          "balanceOf(address)": {
            "calls": 197127,
            "min": 559,
            "mean": 2474,
            "median": 2559,
            "max": 2559
          },
          "burn(address,uint256)": {
            "calls": 6658,
            "min": 34258,
            "mean": 34399,
            "median": 34392,
            "max": 34628
          },
          "decimals()": {
            "calls": 1415,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          },
          "mint(address,uint256)": {
            "calls": 292862,
            "min": 28327,
            "mean": 51436,
            "median": 51082,
            "max": 68727
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1104933,
          "size": 5513
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2799,
            "mean": 2799,
            "median": 2799,
            "max": 2799
          },
          "approve(address,uint256)": {
            "calls": 15360,
            "min": 26229,
            "mean": 33059,
            "median": 26457,
            "max": 46741
          },
          "asset()": {
            "calls": 1280,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 284
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2572,
            "mean": 2572,
            "median": 2572,
            "max": 2572
          },
          "convertToAssets(uint256)": {
            "calls": 2560,
            "min": 30011,
            "mean": 30236,
            "median": 30059,
            "max": 30687
          },
          "convertToShares(uint256)": {
            "calls": 2560,
            "min": 30031,
            "mean": 30246,
            "median": 30062,
            "max": 30709
          },
          "deposit(uint256,address)": {
            "calls": 140800,
            "min": 45424,
            "mean": 74835,
            "median": 67556,
            "max": 102039
          },
          "maxDeposit(address)": {
            "calls": 1280,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "maxMint(address)": {
            "calls": 1280,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          },
          "maxRedeem(address)": {
            "calls": 1280,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "maxWithdraw(address)": {
            "calls": 1280,
            "min": 11064,
            "mean": 11178,
            "median": 11064,
            "max": 11358
          },
          "mint(uint256,address)": {
            "calls": 7680,
            "min": 45367,
            "mean": 57075,
            "median": 56728,
            "max": 77379
          },
          "previewDeposit(uint256)": {
            "calls": 1280,
            "min": 30052,
            "mean": 30206,
            "median": 30076,
            "max": 30699
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 30072,
            "mean": 30237,
            "median": 30096,
            "max": 30721
          },
          "previewRedeem(uint256)": {
            "calls": 1280,
            "min": 30030,
            "mean": 30197,
            "median": 30054,
            "max": 30677
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 30096,
            "mean": 30254,
            "median": 30120,
            "max": 30757
          },
          "redeem(uint256,address,address)": {
            "calls": 8960,
            "min": 24419,
            "mean": 52556,
            "median": 55438,
            "max": 78356
          },
          "totalAssets()": {
            "calls": 1280,
            "min": 5651,
            "mean": 5651,
            "median": 5651,
            "max": 5651
          },
          "withdraw(uint256,address,address)": {
            "calls": 8960,
            "min": 32943,
            "mean": 55407,
            "median": 57771,
            "max": 80980
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4210346,
          "size": 21186
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 45,
            "min": 588,
            "mean": 963,
            "median": 1113,
            "max": 1113
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 10,
            "min": 1234,
            "mean": 1255,
            "median": 1255,
            "max": 1277
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 10,
            "min": 1301,
            "mean": 1496,
            "median": 1496,
            "max": 1692
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 15,
            "min": 6871,
            "mean": 6893,
            "median": 6871,
            "max": 6937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3784233,
          "size": 19527
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 12819,
            "min": 18843,
            "mean": 21566,
            "median": 22143,
            "max": 22143
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 12108,
            "min": 19096,
            "mean": 21589,
            "median": 21896,
            "max": 21896
          },
          "quorumNumerator()": {
            "calls": 5,
            "min": 4761,
            "mean": 4761,
            "median": 4761,
            "max": 4761
          },
          "superQuorumNumerator()": {
            "calls": 5,
            "min": 4827,
            "mean": 4827,
            "median": 4827,
            "max": 4827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1796988,
          "size": 8772
        },
        "functions": {
          "clock()": {
            "calls": 24937,
            "min": 367,
            "mean": 367,
            "median": 367,
            "max": 367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 958069,
          "size": 5266
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 2560,
            "min": 35356,
            "mean": 53623,
            "median": 50687,
            "max": 69667
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 3840,
            "min": 70661,
            "mean": 122434,
            "median": 88806,
            "max": 303029
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 20329,
            "min": 1914,
            "mean": 1914,
            "median": 1914,
            "max": 1914
          },
          "nonces(address)": {
            "calls": 5865,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 1280,
            "min": 10760,
            "mean": 13490,
            "median": 14305,
            "max": 14305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1396871,
          "size": 6813
        },
        "functions": {
          "getNumber()": {
            "calls": 10260,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1101671,
          "size": 5592
        },
        "functions": {
          "decimals()": {
            "calls": 1280,
            "min": 294,
            "mean": 294,
            "median": 294,
            "max": 294
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1274959,
          "size": 7877
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 11520,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "burn(uint256)": {
            "calls": 1280,
            "min": 62889,
            "mean": 78375,
            "median": 79397,
            "max": 82199
          },
          "ownerOf(uint256)": {
            "calls": 14076,
            "min": 2695,
            "mean": 11072,
            "median": 12380,
            "max": 27768
          },
          "totalMinted()": {
            "calls": 7676,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2560,
            "min": 66807,
            "mean": 69752,
            "median": 69871,
            "max": 80214
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 1487967,
          "size": 7268
        },
        "functions": {
          "toShortString(string)": {
            "calls": 1280,
            "min": 1017,
            "mean": 1027,
            "median": 1026,
            "max": 1038
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 1821730,
          "size": 8935
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 27309,
            "mean": 27570,
            "median": 27695,
            "max": 27707
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 1938859,
          "size": 9520
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 2049,
            "mean": 2075,
            "median": 2077,
            "max": 2077
          },
          "parseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1858,
            "mean": 1870,
            "median": 1868,
            "max": 1893
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 2030,
            "mean": 2056,
            "median": 2058,
            "max": 2058
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1812,
            "mean": 1824,
            "median": 1822,
            "max": 1847
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1665155,
          "size": 8153
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 1280,
            "min": 26390,
            "mean": 26480,
            "median": 26450,
            "max": 26637
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1658348,
          "size": 8119
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 1280,
            "min": 26346,
            "mean": 26450,
            "median": 26401,
            "max": 26663
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1644134,
          "size": 8048
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 1280,
            "min": 26386,
            "mean": 26508,
            "median": 26451,
            "max": 26732
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1504781,
          "size": 7352
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 1280,
            "min": 28249,
            "mean": 28374,
            "median": 28305,
            "max": 28635
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 322322,
          "size": 1342
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 15964,
            "min": 344,
            "mean": 1242,
            "median": 344,
            "max": 2344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 557125,
          "size": 2559
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "approve(address,uint256)": {
            "calls": 296960,
            "min": 25958,
            "mean": 35893,
            "median": 25958,
            "max": 46242
          },
          "balanceOf(address)": {
            "calls": 197104,
            "min": 417,
            "mean": 2332,
            "median": 2417,
            "max": 2417
          },
          "burn(address,uint256)": {
            "calls": 6746,
            "min": 33747,
            "mean": 33890,
            "median": 33889,
            "max": 34119
          },
          "decimals()": {
            "calls": 1415,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          },
          "mint(address,uint256)": {
            "calls": 292774,
            "min": 27883,
            "mean": 51006,
            "median": 50705,
            "max": 68285
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1501562,
          "size": 7977
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2543,
            "mean": 2543,
            "median": 2543,
            "max": 2543
          },
          "approve(address,uint256)": {
            "calls": 15360,
            "min": 25747,
            "mean": 32581,
            "median": 25975,
            "max": 46259
          },
          "asset()": {
            "calls": 1280,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "convertToAssets(uint256)": {
            "calls": 2560,
            "min": 29115,
            "mean": 29346,
            "median": 29161,
            "max": 29801
          },
          "convertToShares(uint256)": {
            "calls": 2560,
            "min": 29117,
            "mean": 29344,
            "median": 29157,
            "max": 29803
          },
          "deposit(uint256,address)": {
            "calls": 140800,
            "min": 43238,
            "mean": 72459,
            "median": 65186,
            "max": 99656
          },
          "maxDeposit(address)": {
            "calls": 1280,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "maxMint(address)": {
            "calls": 1280,
            "min": 271,
            "mean": 271,
            "median": 271,
            "max": 271
          },
          "maxRedeem(address)": {
            "calls": 1280,
            "min": 2458,
            "mean": 2458,
            "median": 2458,
            "max": 2458
          },
          "maxWithdraw(address)": {
            "calls": 1280,
            "min": 10111,
            "mean": 10231,
            "median": 10111,
            "max": 10413
          },
          "mint(uint256,address)": {
            "calls": 7680,
            "min": 43286,
            "mean": 54867,
            "median": 54535,
            "max": 74600
          },
          "previewDeposit(uint256)": {
            "calls": 1280,
            "min": 29130,
            "mean": 29281,
            "median": 29154,
            "max": 29785
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 29124,
            "mean": 29302,
            "median": 29148,
            "max": 29791
          },
          "previewRedeem(uint256)": {
            "calls": 1280,
            "min": 29112,
            "mean": 29283,
            "median": 29136,
            "max": 29767
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 29122,
            "mean": 29286,
            "median": 29146,
            "max": 29777
          },
          "redeem(uint256,address,address)": {
            "calls": 8960,
            "min": 23998,
            "mean": 50412,
            "median": 53152,
            "max": 75901
          },
          "totalAssets()": {
            "calls": 1280,
            "min": 5463,
            "mean": 5463,
            "median": 5463,
            "max": 5463
          },
          "withdraw(uint256,address,address)": {
            "calls": 8960,
            "min": 31703,
            "mean": 52448,
            "median": 54642,
            "max": 77486
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 6241841,
          "size": 31751
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 45,
            "min": 446,
            "mean": 550,
            "median": 593,
            "max": 593
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 10,
            "min": 681,
            "mean": 690,
            "median": 690,
            "max": 699
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 10,
            "min": 687,
            "mean": 794,
            "median": 794,
            "max": 902
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 15,
            "min": 5802,
            "mean": 5824,
            "median": 5802,
            "max": 5868
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 3866461,
          "size": 20570
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 12838,
            "min": 17218,
            "mean": 19937,
            "median": 20518,
            "max": 20518
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 11940,
            "min": 17714,
            "mean": 20206,
            "median": 20514,
            "max": 20514
          },
          "quorumNumerator()": {
            "calls": 5,
            "min": 4535,
            "mean": 4535,
            "median": 4535,
            "max": 4535
          },
          "superQuorumNumerator()": {
            "calls": 5,
            "min": 4574,
            "mean": 4574,
            "median": 4574,
            "max": 4574
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1759870,
          "size": 8478
        },
        "functions": {
          "clock()": {
            "calls": 24788,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 1199934,
          "size": 6683
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 2560,
            "min": 33404,
            "mean": 51269,
            "median": 49633,
            "max": 67051
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 3840,
            "min": 67831,
            "mean": 113078,
            "median": 81424,
            "max": 276148
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 20323,
            "min": 1522,
            "mean": 1522,
            "median": 1522,
            "max": 1522
          },
          "nonces(address)": {
            "calls": 5851,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 1280,
            "min": 9031,
            "mean": 11609,
            "median": 12342,
            "max": 12342
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1836935,
          "size": 9010
        },
        "functions": {
          "getNumber()": {
            "calls": 10260,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1395972,
          "size": 7577
        },
        "functions": {
          "decimals()": {
            "calls": 1280,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1309204,
          "size": 7965
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 11520,
            "min": 2444,
            "mean": 2444,
            "median": 2444,
            "max": 2444
          },
          "burn(uint256)": {
            "calls": 1280,
            "min": 60699,
            "mean": 75304,
            "median": 76195,
            "max": 78586
          },
          "ownerOf(uint256)": {
            "calls": 14078,
            "min": 2470,
            "mean": 10142,
            "median": 11442,
            "max": 25051
          },
          "totalMinted()": {
            "calls": 7678,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2560,
            "min": 67682,
            "mean": 67982,
            "median": 68133,
            "max": 68170
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2236191,
          "size": 11004
        },
        "functions": {
          "toShortString(string)": {
            "calls": 1280,
            "min": 786,
            "mean": 796,
            "median": 795,
            "max": 807
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2965847,
          "size": 14648
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 26715,
            "mean": 26969,
            "median": 27099,
            "max": 27113
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 2213161,
          "size": 10889
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1085,
            "mean": 1115,
            "median": 1117,
            "max": 1117
          },
          "parseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1216,
            "mean": 1227,
            "median": 1226,
            "max": 1250
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1065,
            "mean": 1095,
            "median": 1097,
            "max": 1097
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1206,
            "mean": 1217,
            "median": 1216,
            "max": 1240
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 2302464,
          "size": 11335
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 1280,
            "min": 25916,
            "mean": 26016,
            "median": 25978,
            "max": 26170
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 2278435,
          "size": 11215
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 1280,
            "min": 25933,
            "mean": 26058,
            "median": 26007,
            "max": 26257
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 2270428,
          "size": 11175
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 1280,
            "min": 25933,
            "mean": 26062,
            "median": 26009,
            "max": 26281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 2280642,
          "size": 11226
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 1280,
            "min": 25856,
            "mean": 25988,
            "median": 25920,
            "max": 26242
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/mocks/CallReceiverMock.sol:CallReceiverMockTrustingForwarder",
        "deployment": {
          "gas": 276847,
          "size": 1084
        },
        "functions": {
          "isTrustedForwarder(address)": {
            "calls": 16092,
            "min": 350,
            "mean": 1239,
            "median": 350,
            "max": 2350
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC20Mock.sol:ERC20Mock",
        "deployment": {
          "gas": 529268,
          "size": 2423
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2600,
            "mean": 2600,
            "median": 2600,
            "max": 2600
          },
          "approve(address,uint256)": {
            "calls": 296960,
            "min": 26110,
            "mean": 36046,
            "median": 26110,
            "max": 46394
          },
          "balanceOf(address)": {
            "calls": 197107,
            "min": 438,
            "mean": 2353,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256)": {
            "calls": 6714,
            "min": 33890,
            "mean": 34032,
            "median": 34022,
            "max": 34262
          },
          "decimals()": {
            "calls": 1415,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "mint(address,uint256)": {
            "calls": 292806,
            "min": 28000,
            "mean": 51126,
            "median": 50812,
            "max": 68402
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "contracts/mocks/token/ERC4626Mock.sol:ERC4626Mock",
        "deployment": {
          "gas": 1491391,
          "size": 7804
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 2623,
            "mean": 2623,
            "median": 2623,
            "max": 2623
          },
          "approve(address,uint256)": {
            "calls": 15360,
            "min": 25909,
            "mean": 32742,
            "median": 26137,
            "max": 46421
          },
          "asset()": {
            "calls": 1280,
            "min": 260,
            "mean": 260,
            "median": 260,
            "max": 260
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2466,
            "mean": 2466,
            "median": 2466,
            "max": 2466
          },
          "convertToAssets(uint256)": {
            "calls": 2560,
            "min": 29146,
            "mean": 29357,
            "median": 29186,
            "max": 29822
          },
          "convertToShares(uint256)": {
            "calls": 2560,
            "min": 29144,
            "mean": 29376,
            "median": 29190,
            "max": 29820
          },
          "deposit(uint256,address)": {
            "calls": 140800,
            "min": 43492,
            "mean": 72801,
            "median": 65526,
            "max": 100002
          },
          "maxDeposit(address)": {
            "calls": 1280,
            "min": 313,
            "mean": 313,
            "median": 313,
            "max": 313
          },
          "maxMint(address)": {
            "calls": 1280,
            "min": 304,
            "mean": 304,
            "median": 304,
            "max": 304
          },
          "maxRedeem(address)": {
            "calls": 1280,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "maxWithdraw(address)": {
            "calls": 1280,
            "min": 10150,
            "mean": 10267,
            "median": 10150,
            "max": 10442
          },
          "mint(uint256,address)": {
            "calls": 7680,
            "min": 43442,
            "mean": 55145,
            "median": 54805,
            "max": 75289
          },
          "previewDeposit(uint256)": {
            "calls": 1280,
            "min": 29138,
            "mean": 29291,
            "median": 29162,
            "max": 29785
          },
          "previewMint(uint256)": {
            "calls": 1280,
            "min": 29182,
            "mean": 29343,
            "median": 29206,
            "max": 29824
          },
          "previewRedeem(uint256)": {
            "calls": 1280,
            "min": 29141,
            "mean": 29314,
            "median": 29165,
            "max": 29791
          },
          "previewWithdraw(uint256)": {
            "calls": 1280,
            "min": 29172,
            "mean": 29345,
            "median": 29196,
            "max": 29807
          },
          "redeem(uint256,address,address)": {
            "calls": 8960,
            "min": 24036,
            "mean": 50638,
            "median": 53378,
            "max": 76194
          },
          "totalAssets()": {
            "calls": 1280,
            "min": 5461,
            "mean": 5461,
            "median": 5461,
            "max": 5461
          },
          "withdraw(uint256,address,address)": {
            "calls": 8960,
            "min": 31776,
            "mean": 52680,
            "median": 54862,
            "max": 77270
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/account/utils/draft-ERC7579Utils.t.sol:ERC7579UtilsTest",
        "deployment": {
          "gas": 4711657,
          "size": 23858
        },
        "functions": {
          "callDecodeBatch(bytes)": {
            "calls": 45,
            "min": 457,
            "mean": 537,
            "median": 561,
            "max": 596
          },
          "callDecodeBatchAndGetFirst(bytes)": {
            "calls": 10,
            "min": 628,
            "mean": 631,
            "median": 631,
            "max": 634
          },
          "callDecodeBatchAndGetFirstBytes(bytes)": {
            "calls": 10,
            "min": 667,
            "mean": 761,
            "median": 761,
            "max": 855
          },
          "hashUserOperation((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
            "calls": 15,
            "min": 5683,
            "mean": 5705,
            "median": 5683,
            "max": 5749
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:GovernorHandler",
        "deployment": {
          "gas": 4321843,
          "size": 22099
        },
        "functions": {
          "$_updateQuorumNumerator(uint256)": {
            "calls": 13300,
            "min": 17763,
            "mean": 20001,
            "median": 20563,
            "max": 20563
          },
          "$_updateSuperQuorumNumerator(uint256)": {
            "calls": 12616,
            "min": 17758,
            "mean": 20276,
            "median": 20558,
            "max": 20558
          },
          "quorumNumerator()": {
            "calls": 5,
            "min": 4544,
            "mean": 4544,
            "median": 4544,
            "max": 4544
          },
          "superQuorumNumerator()": {
            "calls": 5,
            "min": 4589,
            "mean": 4589,
            "median": 4589,
            "max": 4589
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/governance/extensions/GovernorSuperQuorumGreaterThanQuorum.t.sol:TokenMock",
        "deployment": {
          "gas": 1517867,
          "size": 7579
        },
        "functions": {
          "clock()": {
            "calls": 25926,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/metatx/ERC2771Forwarder.t.sol:ERC2771ForwarderMock",
        "deployment": {
          "gas": 976847,
          "size": 5149
        },
        "functions": {
          "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 2560,
            "min": 33324,
            "mean": 51243,
            "median": 48206,
            "max": 66930
          },
          "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
            "calls": 3840,
            "min": 64742,
            "mean": 113389,
            "median": 80975,
            "max": 274081
          },
          "forwardRequestStructHash((address,address,uint256,uint256,uint48,bytes,bytes),uint256)": {
            "calls": 20469,
            "min": 1142,
            "mean": 1142,
            "median": 1142,
            "max": 1142
          },
          "nonces(address)": {
            "calls": 5861,
            "min": 2369,
            "mean": 2369,
            "median": 2369,
            "max": 2369
          },
          "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
            "calls": 1280,
            "min": 8866,
            "mean": 11509,
            "median": 12253,
            "max": 12253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/proxy/Clones.t.sol:ClonesTest",
        "deployment": {
          "gas": 1658316,
          "size": 8115
        },
        "functions": {
          "getNumber()": {
            "calls": 10260,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/token/ERC20/extensions/ERC4626.t.sol:ERC4626VaultOffsetMock",
        "deployment": {
          "gas": 1271070,
          "size": 6822
        },
        "functions": {
          "decimals()": {
            "calls": 1280,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/token/ERC721/extensions/ERC721Consecutive.t.sol:ERC721ConsecutiveTarget",
        "deployment": {
          "gas": 1177452,
          "size": 7254
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 11520,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "burn(uint256)": {
            "calls": 1280,
            "min": 61742,
            "mean": 75213,
            "median": 76282,
            "max": 78551
          },
          "ownerOf(uint256)": {
            "calls": 14076,
            "min": 2513,
            "mean": 10234,
            "median": 11523,
            "max": 25029
          },
          "totalMinted()": {
            "calls": 7676,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "transferFrom(address,address,uint256)": {
            "calls": 2560,
            "min": 66944,
            "mean": 68118,
            "median": 68262,
            "max": 71690
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/ShortStrings.t.sol:ShortStringsTest",
        "deployment": {
          "gas": 2501672,
          "size": 12327
        },
        "functions": {
          "toShortString(string)": {
            "calls": 1280,
            "min": 697,
            "mean": 707,
            "median": 706,
            "max": 718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/cryptography/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2530509,
          "size": 12471
        },
        "functions": {
          "verifyNative(bytes32,bytes32,bytes32,bytes32,bytes32)": {
            "calls": 1280,
            "min": 26766,
            "mean": 27026,
            "median": 27149,
            "max": 27162
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/draft-InteroperableAddress.t.sol:InteroperableAddressTest",
        "deployment": {
          "gas": 2180101,
          "size": 10721
        },
        "functions": {
          "parseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1163,
            "mean": 1163,
            "median": 1163,
            "max": 1176
          },
          "parseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1110,
            "mean": 1121,
            "median": 1120,
            "max": 1144
          },
          "tryParseEvmV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1167,
            "mean": 1167,
            "median": 1167,
            "max": 1180
          },
          "tryParseV1Calldata(bytes)": {
            "calls": 1280,
            "min": 1146,
            "mean": 1157,
            "median": 1156,
            "max": 1180
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace160Test",
        "deployment": {
          "gas": 1970662,
          "size": 9675
        },
        "functions": {
          "push(uint96,uint160)": {
            "calls": 1280,
            "min": 25994,
            "mean": 26079,
            "median": 26046,
            "max": 26236
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace208Test",
        "deployment": {
          "gas": 1952041,
          "size": 9582
        },
        "functions": {
          "push(uint48,uint208)": {
            "calls": 1280,
            "min": 25999,
            "mean": 26114,
            "median": 26064,
            "max": 26321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace224Test",
        "deployment": {
          "gas": 1939427,
          "size": 9519
        },
        "functions": {
          "push(uint32,uint224)": {
            "calls": 1280,
            "min": 25999,
            "mean": 26128,
            "median": 26067,
            "max": 26349
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/structs/Checkpoints.t.sol:CheckpointsTrace256Test",
        "deployment": {
          "gas": 1879362,
          "size": 9219
        },
        "functions": {
          "push(uint256,uint256)": {
            "calls": 1280,
            "min": 25910,
            "mean": 26044,
            "median": 25981,
            "max": 26299
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "playpen": {
    "solc": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 618942,
          "size": 2941
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104805,
            "mean": 104848,
            "median": 104830,
            "max": 104901
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104914,
            "mean": 104957,
            "median": 104940,
            "max": 105010
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 10240,
            "min": 114127,
            "mean": 114628,
            "median": 114865,
            "max": 114948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 564282,
          "size": 2701
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104587,
            "mean": 104629,
            "median": 104612,
            "max": 104683
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104569,
            "mean": 104611,
            "median": 104595,
            "max": 104665
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 10240,
            "min": 113826,
            "mean": 114322,
            "median": 114565,
            "max": 114649
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 410961,
          "size": 1999
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104016,
            "mean": 104059,
            "median": 104046,
            "max": 104112
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104008,
            "mean": 104050,
            "median": 104037,
            "max": 104104
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 10240,
            "min": 113233,
            "mean": 113726,
            "median": 113969,
            "max": 114053
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/StakingPoolFactory.sol:StakingPoolFactory",
        "deployment": {
          "gas": 387310,
          "size": 1836
        },
        "functions": {
          "createERC20StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104030,
            "mean": 104073,
            "median": 104063,
            "max": 104126
          },
          "createERC721StakingPool(address,address,uint64)": {
            "calls": 10240,
            "min": 104026,
            "mean": 104069,
            "median": 104058,
            "max": 104122
          },
          "createXERC20(bytes32,bytes32,uint8,address,uint64)": {
            "calls": 10240,
            "min": 113243,
            "mean": 113737,
            "median": 113981,
            "max": 114064
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "prb-math": {
    "solc": [],
    "solx": []
  },
  "rollcall": {
    "solc": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 278911,
          "size": 1087
        },
        "functions": {
          "warp(uint256)": {
            "calls": 400,
            "min": 26981,
            "mean": 26981,
            "median": 26981,
            "max": 26981
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1083612,
          "size": 5277
        },
        "functions": {
          "setVoter(address)": {
            "calls": 240,
            "min": 47021,
            "mean": 47021,
            "median": 47021,
            "max": 47021
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2618696,
          "size": 14432
        },
        "functions": {
          "name()": {
            "calls": 20,
            "min": 3345,
            "mean": 3345,
            "median": 3345,
            "max": 3345
          },
          "quorum(uint256)": {
            "calls": 20,
            "min": 980,
            "mean": 980,
            "median": 980,
            "max": 980
          },
          "slots()": {
            "calls": 20,
            "min": 5885,
            "mean": 5885,
            "median": 5885,
            "max": 5885
          },
          "sources()": {
            "calls": 20,
            "min": 6131,
            "mean": 6131,
            "median": 6131,
            "max": 6131
          },
          "version()": {
            "calls": 20,
            "min": 1178,
            "mean": 1178,
            "median": 1178,
            "max": 1178
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 548,
            "mean": 548,
            "median": 548,
            "max": 548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 1034265,
          "size": 4867
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 240,
            "min": 3505,
            "mean": 3505,
            "median": 3505,
            "max": 3505
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 240,
            "min": 222295,
            "mean": 259130,
            "median": 262479,
            "max": 262479
          },
          "queueId()": {
            "calls": 20,
            "min": 2685,
            "mean": 2685,
            "median": 2685,
            "max": 2685
          },
          "queueVotes(uint256)": {
            "calls": 200,
            "min": 2940,
            "mean": 2940,
            "median": 2940,
            "max": 2940
          },
          "slots()": {
            "calls": 240,
            "min": 1891,
            "mean": 1891,
            "median": 1891,
            "max": 1891
          },
          "sources()": {
            "calls": 240,
            "min": 1827,
            "mean": 1827,
            "median": 1827,
            "max": 1827
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4581002,
          "size": 21994
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 180,
            "min": 1430854,
            "mean": 1430854,
            "median": 1430854,
            "max": 1430854
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 140,
            "min": 81855,
            "mean": 592987,
            "median": 631944,
            "max": 1023600
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 20,
            "min": 1032884,
            "mean": 1032884,
            "median": 1032884,
            "max": 1032884
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 20,
            "min": 1024531,
            "mean": 1024531,
            "median": 1024531,
            "max": 1024531
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 20,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "proposal(address,bytes32)": {
            "calls": 20,
            "min": 10008,
            "mean": 10008,
            "median": 10008,
            "max": 10008
          },
          "queue(address,bytes32,uint32)": {
            "calls": 60,
            "min": 26185,
            "mean": 117111,
            "median": 152624,
            "max": 172524
          },
          "state(address,bytes32)": {
            "calls": 100,
            "min": 3816,
            "mean": 7694,
            "median": 8108,
            "max": 11248
          },
          "votes(address,bytes32)": {
            "calls": 20,
            "min": 28489,
            "mean": 28489,
            "median": 28489,
            "max": 28489
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 227684,
          "size": 835
        },
        "functions": {
          "warp(uint256)": {
            "calls": 400,
            "min": 25644,
            "mean": 25644,
            "median": 25644,
            "max": 25644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 1121516,
          "size": 5362
        },
        "functions": {
          "setVoter(address)": {
            "calls": 240,
            "min": 46330,
            "mean": 46330,
            "median": 46330,
            "max": 46330
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 2548816,
          "size": 13947
        },
        "functions": {
          "name()": {
            "calls": 20,
            "min": 3396,
            "mean": 3396,
            "median": 3396,
            "max": 3396
          },
          "quorum(uint256)": {
            "calls": 20,
            "min": 681,
            "mean": 681,
            "median": 681,
            "max": 681
          },
          "slots()": {
            "calls": 20,
            "min": 5376,
            "mean": 5376,
            "median": 5376,
            "max": 5376
          },
          "sources()": {
            "calls": 20,
            "min": 5509,
            "mean": 5509,
            "median": 5509,
            "max": 5509
          },
          "version()": {
            "calls": 20,
            "min": 704,
            "mean": 704,
            "median": 704,
            "max": 704
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 378,
            "mean": 378,
            "median": 378,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 735155,
          "size": 3335
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 240,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 240,
            "min": 205598,
            "mean": 242433,
            "median": 245782,
            "max": 245782
          },
          "queueId()": {
            "calls": 20,
            "min": 2491,
            "mean": 2491,
            "median": 2491,
            "max": 2491
          },
          "queueVotes(uint256)": {
            "calls": 200,
            "min": 2723,
            "mean": 2723,
            "median": 2723,
            "max": 2723
          },
          "slots()": {
            "calls": 240,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "sources()": {
            "calls": 240,
            "min": 1122,
            "mean": 1122,
            "median": 1122,
            "max": 1122
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 4216128,
          "size": 20098
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 180,
            "min": 746851,
            "mean": 746851,
            "median": 746851,
            "max": 746851
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 140,
            "min": 76038,
            "mean": 316262,
            "median": 312415,
            "max": 527281
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 20,
            "min": 535266,
            "mean": 535266,
            "median": 535266,
            "max": 535266
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 20,
            "min": 528463,
            "mean": 528463,
            "median": 528463,
            "max": 528463
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 20,
            "min": 2071,
            "mean": 2071,
            "median": 2071,
            "max": 2071
          },
          "proposal(address,bytes32)": {
            "calls": 20,
            "min": 8612,
            "mean": 8612,
            "median": 8612,
            "max": 8612
          },
          "queue(address,bytes32,uint32)": {
            "calls": 60,
            "min": 25563,
            "mean": 108374,
            "median": 139830,
            "max": 159730
          },
          "state(address,bytes32)": {
            "calls": 100,
            "min": 3307,
            "mean": 5973,
            "median": 6714,
            "max": 8168
          },
          "votes(address,bytes32)": {
            "calls": 20,
            "min": 25561,
            "mean": 25561,
            "median": 25561,
            "max": 25561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 140621,
          "size": 437
        },
        "functions": {
          "warp(uint256)": {
            "calls": 400,
            "min": 24386,
            "mean": 24386,
            "median": 24386,
            "max": 24386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 645086,
          "size": 2910
        },
        "functions": {
          "setVoter(address)": {
            "calls": 240,
            "min": 45906,
            "mean": 45906,
            "median": 45906,
            "max": 45906
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 1746598,
          "size": 9205
        },
        "functions": {
          "name()": {
            "calls": 20,
            "min": 2716,
            "mean": 2716,
            "median": 2716,
            "max": 2716
          },
          "quorum(uint256)": {
            "calls": 20,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "slots()": {
            "calls": 20,
            "min": 4816,
            "mean": 4816,
            "median": 4816,
            "max": 4816
          },
          "sources()": {
            "calls": 20,
            "min": 4876,
            "mean": 4876,
            "median": 4876,
            "max": 4876
          },
          "version()": {
            "calls": 20,
            "min": 371,
            "mean": 371,
            "median": 371,
            "max": 371
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 220,
            "mean": 220,
            "median": 220,
            "max": 220
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 312851,
          "size": 1299
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 240,
            "min": 817,
            "mean": 817,
            "median": 817,
            "max": 817
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 240,
            "min": 189980,
            "mean": 226815,
            "median": 230164,
            "max": 230164
          },
          "queueId()": {
            "calls": 20,
            "min": 2309,
            "mean": 2309,
            "median": 2309,
            "max": 2309
          },
          "queueVotes(uint256)": {
            "calls": 200,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "slots()": {
            "calls": 240,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "sources()": {
            "calls": 240,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 2755770,
          "size": 12961
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 180,
            "min": 377702,
            "mean": 377702,
            "median": 377702,
            "max": 377702
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 140,
            "min": 73033,
            "mean": 157030,
            "median": 146541,
            "max": 236939
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 20,
            "min": 242838,
            "mean": 242838,
            "median": 242838,
            "max": 242838
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 20,
            "min": 238013,
            "mean": 238013,
            "median": 238013,
            "max": 238013
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 20,
            "min": 589,
            "mean": 589,
            "median": 589,
            "max": 589
          },
          "proposal(address,bytes32)": {
            "calls": 20,
            "min": 7155,
            "mean": 7155,
            "median": 7155,
            "max": 7155
          },
          "queue(address,bytes32,uint32)": {
            "calls": 60,
            "min": 24424,
            "mean": 100751,
            "median": 128965,
            "max": 148865
          },
          "state(address,bytes32)": {
            "calls": 100,
            "min": 2597,
            "mean": 4527,
            "median": 5416,
            "max": 6003
          },
          "votes(address,bytes32)": {
            "calls": 20,
            "min": 23099,
            "mean": 23099,
            "median": 23099,
            "max": 23099
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "lib/forge-optimism/src/Optimism.sol:OptimismVm",
        "deployment": {
          "gas": 131511,
          "size": 392
        },
        "functions": {
          "warp(uint256)": {
            "calls": 400,
            "min": 24290,
            "mean": 24290,
            "median": 24290,
            "max": 24290
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/Bridge.sol:Bridge",
        "deployment": {
          "gas": 577804,
          "size": 2538
        },
        "functions": {
          "setVoter(address)": {
            "calls": 240,
            "min": 45912,
            "mean": 45912,
            "median": 45912,
            "max": 45912
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/extensions/SimpleL1Governor.sol:SimpleL1Governor",
        "deployment": {
          "gas": 1690855,
          "size": 8801
        },
        "functions": {
          "name()": {
            "calls": 20,
            "min": 2609,
            "mean": 2609,
            "median": 2609,
            "max": 2609
          },
          "quorum(uint256)": {
            "calls": 20,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "slots()": {
            "calls": 20,
            "min": 4713,
            "mean": 4713,
            "median": 4713,
            "max": 4713
          },
          "sources()": {
            "calls": 20,
            "min": 4717,
            "mean": 4717,
            "median": 4717,
            "max": 4717
          },
          "version()": {
            "calls": 20,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "votingPeriod()": {
            "calls": 20,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L1Governor",
        "deployment": {
          "gas": 260151,
          "size": 1008
        },
        "functions": {
          "proposal(bytes32)": {
            "calls": 240,
            "min": 702,
            "mean": 702,
            "median": 702,
            "max": 702
          },
          "propose(bytes32,(bytes32,uint64,uint64,bool,bool))": {
            "calls": 240,
            "min": 189564,
            "mean": 226399,
            "median": 229748,
            "max": 229748
          },
          "queueId()": {
            "calls": 20,
            "min": 2301,
            "mean": 2301,
            "median": 2301,
            "max": 2301
          },
          "queueVotes(uint256)": {
            "calls": 200,
            "min": 2363,
            "mean": 2363,
            "median": 2363,
            "max": 2363
          },
          "slots()": {
            "calls": 240,
            "min": 240,
            "mean": 240,
            "median": 240,
            "max": 240
          },
          "sources()": {
            "calls": 240,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/RollCallVoter.t.sol:L2VoterTester",
        "deployment": {
          "gas": 2363769,
          "size": 11057
        },
        "functions": {
          "activate(address,bytes32,bytes,bytes)": {
            "calls": 180,
            "min": 367788,
            "mean": 367788,
            "median": 367788,
            "max": 367788
          },
          "castVote(bytes32,address,address,bytes,uint8)": {
            "calls": 140,
            "min": 73094,
            "mean": 154218,
            "median": 142050,
            "max": 231745
          },
          "castVoteBySig(bytes32,address,address,bytes,uint8,uint8,bytes32,bytes32)": {
            "calls": 20,
            "min": 237682,
            "mean": 237682,
            "median": 237682,
            "max": 237682
          },
          "castVoteWithReason(bytes32,address,address,bytes,uint8,string)": {
            "calls": 20,
            "min": 232755,
            "mean": 232755,
            "median": 232755,
            "max": 232755
          },
          "hashTypedDataV4(bytes32,uint256)": {
            "calls": 20,
            "min": 645,
            "mean": 645,
            "median": 645,
            "max": 645
          },
          "proposal(address,bytes32)": {
            "calls": 20,
            "min": 6934,
            "mean": 6934,
            "median": 6934,
            "max": 6934
          },
          "queue(address,bytes32,uint32)": {
            "calls": 60,
            "min": 24478,
            "mean": 100659,
            "median": 128800,
            "max": 148700
          },
          "state(address,bytes32)": {
            "calls": 100,
            "min": 2660,
            "mean": 4676,
            "median": 5529,
            "max": 6262
          },
          "votes(address,bytes32)": {
            "calls": 20,
            "min": 23013,
            "mean": 23013,
            "median": 23013,
            "max": 23013
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "solady": {
    "solc": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 260627,
          "size": 1126
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 20540,
            "min": 24339,
            "mean": 74247,
            "median": 36338,
            "max": 118296
          },
          "getAddress(bytes32)": {
            "calls": 5140,
            "min": 393,
            "mean": 393,
            "median": 393,
            "max": 393
          },
          "getArgAddress(uint256)": {
            "calls": 2,
            "min": 3095,
            "mean": 3095,
            "median": 3095,
            "max": 3095
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3644,
            "mean": 3644,
            "median": 3644,
            "max": 3644
          },
          "getArgUint256(uint256)": {
            "calls": 4,
            "min": 5522,
            "mean": 5522,
            "median": 5522,
            "max": 5522
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 2,
            "min": 9469,
            "mean": 9886,
            "median": 9886,
            "max": 10304
          },
          "getArgUint64(uint256)": {
            "calls": 2,
            "min": 3447,
            "mean": 3447,
            "median": 3447,
            "max": 3447
          },
          "getArgUint8(uint256)": {
            "calls": 2,
            "min": 3337,
            "mean": 3337,
            "median": 3337,
            "max": 3337
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3725,
            "mean": 3725,
            "median": 3725,
            "max": 3725
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5301,
            "mean": 5301,
            "median": 5301,
            "max": 5301
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43978,
            "mean": 44008,
            "median": 44008,
            "max": 44038
          },
          "value()": {
            "calls": 2,
            "min": 5210,
            "mean": 5210,
            "median": 5210,
            "max": 5210
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 99445,
          "size": 245
        },
        "functions": {
          "fallback()": {
            "calls": 126059,
            "min": 3029,
            "mean": 16002,
            "median": 10271,
            "max": 348392
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 929907,
          "size": 4126
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 20,
            "min": 306,
            "mean": 306,
            "median": 306,
            "max": 306
          },
          "EXECUTOR_ROLE()": {
            "calls": 80,
            "min": 148,
            "mean": 148,
            "median": 148,
            "max": 148
          },
          "MAX_ROLE()": {
            "calls": 1240,
            "min": 517,
            "mean": 517,
            "median": 517,
            "max": 517
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 20,
            "min": 263,
            "mean": 263,
            "median": 263,
            "max": 263
          },
          "cancel(bytes32)": {
            "calls": 399,
            "min": 25612,
            "mean": 25806,
            "median": 25681,
            "max": 26415
          },
          "execute(bytes32,bytes)": {
            "calls": 5250,
            "min": 28670,
            "mean": 44032,
            "median": 45214,
            "max": 95964
          },
          "hasRole(address,uint256)": {
            "calls": 20,
            "min": 2494,
            "mean": 2494,
            "median": 2494,
            "max": 2494
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 200,
            "min": 23369,
            "mean": 308894,
            "median": 379965,
            "max": 379965
          },
          "minDelay()": {
            "calls": 4803,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "operationState(bytes32)": {
            "calls": 18878,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 5200,
            "min": 28595,
            "mean": 54261,
            "median": 55523,
            "max": 57994
          },
          "readyTimestamp(bytes32)": {
            "calls": 14141,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "roleHolderCount(uint256)": {
            "calls": 80,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "setRole(address,uint256,bool)": {
            "calls": 120,
            "min": 23980,
            "mean": 33725,
            "median": 23992,
            "max": 76202
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 553930,
          "size": 2347
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25740,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "decimals()": {
            "calls": 20,
            "min": 255,
            "mean": 255,
            "median": 255,
            "max": 255
          },
          "deposit()": {
            "calls": 10933,
            "min": 27728,
            "mean": 65348,
            "median": 67528,
            "max": 67528
          },
          "name()": {
            "calls": 20,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "receive()": {
            "calls": 5806,
            "min": 27658,
            "mean": 63315,
            "median": 67178,
            "max": 67178
          },
          "symbol()": {
            "calls": 20,
            "min": 583,
            "mean": 583,
            "median": 583,
            "max": 583
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "withdraw(uint256)": {
            "calls": 5551,
            "min": 27900,
            "mean": 39569,
            "median": 40225,
            "max": 40344
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 480651,
          "size": 2003
        },
        "functions": {
          "adminOf(address)": {
            "calls": 9645,
            "min": 2377,
            "mean": 2377,
            "median": 2377,
            "max": 2377
          },
          "changeAdmin(address,address)": {
            "calls": 40,
            "min": 24204,
            "mean": 26403,
            "median": 26403,
            "max": 28603
          },
          "deploy(address,address)": {
            "calls": 5340,
            "min": 22367,
            "mean": 56542,
            "median": 22387,
            "max": 126198
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 5140,
            "min": 105650,
            "mean": 158990,
            "median": 159414,
            "max": 159500
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 5120,
            "min": 23944,
            "mean": 142898,
            "median": 159859,
            "max": 160016
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 5120,
            "min": 586,
            "mean": 586,
            "median": 586,
            "max": 586
          },
          "upgrade(address,address)": {
            "calls": 100,
            "min": 24352,
            "mean": 28052,
            "median": 24364,
            "max": 33596
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 40,
            "min": 35605,
            "mean": 51268,
            "median": 51268,
            "max": 66932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 244324,
          "size": 989
        },
        "functions": {
          "implementation()": {
            "calls": 98662,
            "min": 133,
            "mean": 2259,
            "median": 2276,
            "max": 2276
          },
          "owner()": {
            "calls": 9645,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "renounceOwnership()": {
            "calls": 826,
            "min": 23094,
            "mean": 23335,
            "median": 23380,
            "max": 23380
          },
          "transferOwnership(address)": {
            "calls": 3061,
            "min": 23602,
            "mean": 27037,
            "median": 28363,
            "max": 28363
          },
          "upgradeTo(address)": {
            "calls": 1876,
            "min": 23630,
            "mean": 26374,
            "median": 23742,
            "max": 32494
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3512434,
          "size": 17469
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 760,
            "min": 22944,
            "mean": 79606,
            "median": 43889,
            "max": 213921
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 5120,
            "min": 21957,
            "mean": 22731,
            "median": 21969,
            "max": 25763
          },
          "decodeWord(string)": {
            "calls": 120,
            "min": 8020,
            "mean": 8133,
            "median": 8051,
            "max": 8410
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Brutalizer.t.sol:BrutalizerTest",
        "deployment": {
          "gas": 461751,
          "size": 2115
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 11,
            "min": 3332,
            "mean": 3332,
            "median": 3332,
            "max": 3333
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 5,
            "min": 3883,
            "mean": 3883,
            "median": 3883,
            "max": 3883
          },
          "getArgUint256(uint256)": {
            "calls": 21,
            "min": 5758,
            "mean": 5759,
            "median": 5758,
            "max": 5760
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 11,
            "min": 20852,
            "mean": 20938,
            "median": 20938,
            "max": 21024
          },
          "getArgUint64(uint256)": {
            "calls": 11,
            "min": 3684,
            "mean": 3684,
            "median": 3684,
            "max": 3685
          },
          "getArgUint8(uint256)": {
            "calls": 11,
            "min": 3574,
            "mean": 3574,
            "median": 3574,
            "max": 3575
          },
          "getCalldataHash()": {
            "calls": 5,
            "min": 4434,
            "mean": 4434,
            "median": 4434,
            "max": 4434
          },
          "revertWithError()": {
            "calls": 18,
            "min": 5739,
            "mean": 6016,
            "median": 5903,
            "max": 6407
          },
          "setValue(uint256)": {
            "calls": 18,
            "min": 44479,
            "mean": 44766,
            "median": 44674,
            "max": 45146
          },
          "value()": {
            "calls": 18,
            "min": 5628,
            "mean": 5900,
            "median": 5786,
            "max": 6286
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2569279,
          "size": 12759
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 25700,
            "min": 89111,
            "mean": 38936348,
            "median": 889504,
            "max": 96808576
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4610293,
          "size": 22951
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 20,
            "min": 785,
            "mean": 785,
            "median": 785,
            "max": 785
          },
          "addHours(uint256,uint256)": {
            "calls": 20,
            "min": 609,
            "mean": 609,
            "median": 609,
            "max": 609
          },
          "addMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 987,
            "mean": 987,
            "median": 987,
            "max": 987
          },
          "addMonths(uint256,uint256)": {
            "calls": 20,
            "min": 1284,
            "mean": 1284,
            "median": 1284,
            "max": 1284
          },
          "addSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 1025,
            "mean": 1025,
            "median": 1025,
            "max": 1025
          },
          "addYears(uint256,uint256)": {
            "calls": 20,
            "min": 1191,
            "mean": 1191,
            "median": 1191,
            "max": 1191
          },
          "diffDays(uint256,uint256)": {
            "calls": 20,
            "min": 1344,
            "mean": 1344,
            "median": 1344,
            "max": 1344
          },
          "diffHours(uint256,uint256)": {
            "calls": 20,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 275,
            "mean": 275,
            "median": 275,
            "max": 275
          },
          "diffMonths(uint256,uint256)": {
            "calls": 20,
            "min": 891,
            "mean": 891,
            "median": 891,
            "max": 891
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 712,
            "mean": 712,
            "median": 712,
            "max": 712
          },
          "diffYears(uint256,uint256)": {
            "calls": 20,
            "min": 1650,
            "mean": 1650,
            "median": 1650,
            "max": 1650
          },
          "subDays(uint256,uint256)": {
            "calls": 20,
            "min": 1317,
            "mean": 1317,
            "median": 1317,
            "max": 1317
          },
          "subHours(uint256,uint256)": {
            "calls": 20,
            "min": 257,
            "mean": 257,
            "median": 257,
            "max": 257
          },
          "subMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 1119,
            "mean": 1119,
            "median": 1119,
            "max": 1119
          },
          "subMonths(uint256,uint256)": {
            "calls": 20,
            "min": 1452,
            "mean": 1452,
            "median": 1452,
            "max": 1452
          },
          "subSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 1509,
            "mean": 1509,
            "median": 1509,
            "max": 1509
          },
          "subYears(uint256,uint256)": {
            "calls": 20,
            "min": 868,
            "mean": 868,
            "median": 868,
            "max": 868
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 314016,
          "size": 1103
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 2660,
            "min": 67346,
            "mean": 67571,
            "median": 67706,
            "max": 67718
          },
          "predictDeployment(bytes32)": {
            "calls": 5120,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 153552,
          "size": 492
        },
        "functions": {
          "generate(bytes)": {
            "calls": 2884,
            "min": 0,
            "mean": 3649,
            "median": 1382,
            "max": 69752
          },
          "next(uint256)": {
            "calls": 5014,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 3764163,
          "size": 18726
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 1837,
            "mean": 1837,
            "median": 1837,
            "max": 1837
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 518,
            "mean": 518,
            "median": 518,
            "max": 518
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3869496,
          "size": 19252
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 711,
            "min": 1916,
            "mean": 2000,
            "median": 2001,
            "max": 2048
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 721,
            "min": 618048,
            "mean": 686700,
            "median": 618865,
            "max": 2241273
          },
          "recover(bytes32,bytes)": {
            "calls": 3169,
            "min": 22567,
            "mean": 27188,
            "median": 26785,
            "max": 30507
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 866,
            "min": 4401,
            "mean": 25802,
            "median": 26964,
            "max": 27001
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 26781,
            "mean": 27034,
            "median": 27154,
            "max": 27210
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 2909,
            "min": 643602,
            "mean": 763993,
            "median": 644881,
            "max": 4267477
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 826,
            "min": 643222,
            "mean": 758536,
            "median": 644326,
            "max": 2878399
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 643464,
            "mean": 750450,
            "median": 644726,
            "max": 4663553
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 3169,
            "min": 24032,
            "mean": 31250,
            "median": 31452,
            "max": 31463
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 866,
            "min": 3909,
            "mean": 25314,
            "median": 26480,
            "max": 26509
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 26201,
            "mean": 26448,
            "median": 26574,
            "max": 26586
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 2909,
            "min": 647172,
            "mean": 775126,
            "median": 648391,
            "max": 4424316
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 826,
            "min": 643936,
            "mean": 773338,
            "median": 644959,
            "max": 3133941
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 644038,
            "mean": 759260,
            "median": 645253,
            "max": 4615597
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 699053,
          "size": 3016
        },
        "functions": {
          "batchAmounts()": {
            "calls": 10400,
            "min": 2544,
            "mean": 5980,
            "median": 6108,
            "max": 9333
          },
          "batchData()": {
            "calls": 10400,
            "min": 2831,
            "mean": 277955,
            "median": 2840,
            "max": 8831619
          },
          "batchFrom()": {
            "calls": 10400,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "batchIds()": {
            "calls": 10400,
            "min": 2775,
            "mean": 6211,
            "median": 6339,
            "max": 9564
          },
          "batchOperator()": {
            "calls": 10400,
            "min": 2384,
            "mean": 2384,
            "median": 2384,
            "max": 2384
          },
          "from()": {
            "calls": 10240,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "id()": {
            "calls": 10240,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "mintData()": {
            "calls": 10240,
            "min": 2787,
            "mean": 241543,
            "median": 2796,
            "max": 8718006
          },
          "operator()": {
            "calls": 10240,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1529695,
          "size": 6856
        },
        "functions": {
          "afterCounter()": {
            "calls": 3200,
            "min": 622,
            "mean": 622,
            "median": 622,
            "max": 622
          },
          "beforeCounter()": {
            "calls": 3200,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 62455,
            "mean": 62592,
            "median": 62683,
            "max": 62715
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 59102,
            "mean": 59239,
            "median": 59330,
            "max": 59362
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 50486,
            "mean": 52711,
            "median": 50486,
            "max": 121686
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 62929,
            "mean": 63064,
            "median": 63157,
            "max": 63173
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1280,
            "min": 49922,
            "mean": 63642,
            "median": 59647,
            "max": 76503
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:RevertingERC1155Recipient",
        "deployment": {
          "gas": 218302,
          "size": 801
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 59,
            "min": 3067,
            "mean": 3074,
            "median": 3075,
            "max": 3079
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 28,
            "min": 3620,
            "mean": 3623,
            "median": 3623,
            "max": 3625
          },
          "getArgUint256(uint256)": {
            "calls": 115,
            "min": 5494,
            "mean": 5500,
            "median": 5501,
            "max": 5506
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 59,
            "min": 8464,
            "mean": 8899,
            "median": 8921,
            "max": 9321
          },
          "getArgUint64(uint256)": {
            "calls": 59,
            "min": 3419,
            "mean": 3426,
            "median": 3427,
            "max": 3431
          },
          "getArgUint8(uint256)": {
            "calls": 59,
            "min": 3309,
            "mean": 3316,
            "median": 3317,
            "max": 3321
          },
          "getCalldataHash()": {
            "calls": 28,
            "min": 3654,
            "mean": 3661,
            "median": 3661,
            "max": 3668
          },
          "revertWithError()": {
            "calls": 63,
            "min": 5273,
            "mean": 5505,
            "median": 5348,
            "max": 6212
          },
          "setValue(uint256)": {
            "calls": 63,
            "min": 43960,
            "mean": 44225,
            "median": 44046,
            "max": 45000
          },
          "value()": {
            "calls": 63,
            "min": 5182,
            "mean": 5410,
            "median": 5255,
            "max": 6106
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 324815,
          "size": 1318
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 666,
            "min": 41310,
            "mean": 50837,
            "median": 51163,
            "max": 51468
          },
          "burn(address,uint256)": {
            "calls": 10,
            "min": 36256,
            "mean": 36257,
            "median": 36256,
            "max": 36258
          },
          "mint(address,uint256)": {
            "calls": 599,
            "min": 56327,
            "mean": 73657,
            "median": 61810,
            "max": 96131
          },
          "sum()": {
            "calls": 20,
            "min": 2330,
            "mean": 2330,
            "median": 2330,
            "max": 2330
          },
          "transfer(address,uint256)": {
            "calls": 7,
            "min": 34067,
            "mean": 34067,
            "median": 34067,
            "max": 34067
          },
          "transferFrom(address,address,uint256)": {
            "calls": 7,
            "min": 36997,
            "mean": 36997,
            "median": 36997,
            "max": 36997
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 5198111,
          "size": 25886
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 10240,
            "min": 24826,
            "mean": 50964,
            "median": 49290,
            "max": 74293
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 308966,
          "size": 1210
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 60,
            "min": 198,
            "mean": 1168,
            "median": 198,
            "max": 3108
          },
          "data()": {
            "calls": 5140,
            "min": 2823,
            "mean": 3402,
            "median": 2823,
            "max": 11611
          },
          "datahash()": {
            "calls": 12830,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          },
          "setData(bytes)": {
            "calls": 5140,
            "min": 25322,
            "mean": 33831,
            "median": 25322,
            "max": 134049
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 8394174,
          "size": 41841
        },
        "functions": {
          "decimals()": {
            "calls": 20,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22263,
            "mean": 22630,
            "median": 22533,
            "max": 23387
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22469,
            "mean": 22801,
            "median": 22700,
            "max": 23513
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 297294,
          "size": 1156
        },
        "functions": {
          "datahash()": {
            "calls": 7708,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 315940,
          "size": 1243
        },
        "functions": {
          "data()": {
            "calls": 20480,
            "min": 2707,
            "mean": 4271,
            "median": 2707,
            "max": 11465
          },
          "from()": {
            "calls": 20480,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "id()": {
            "calls": 20480,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "operator()": {
            "calls": 20480,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1310913,
          "size": 5852
        },
        "functions": {
          "afterCounter()": {
            "calls": 640,
            "min": 894,
            "mean": 894,
            "median": 894,
            "max": 894
          },
          "beforeCounter()": {
            "calls": 640,
            "min": 541,
            "mean": 541,
            "median": 541,
            "max": 541
          },
          "mint(address,uint256)": {
            "calls": 640,
            "min": 61992,
            "mean": 63607,
            "median": 62004,
            "max": 113304
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 58445,
            "mean": 59105,
            "median": 58661,
            "max": 75773
          },
          "transferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 65141,
            "mean": 69681,
            "median": 69827,
            "max": 69941
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 152067,
          "size": 487
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 48,
            "min": 3018,
            "mean": 3022,
            "median": 3022,
            "max": 3025
          },
          "getArgUint256(uint256)": {
            "calls": 92,
            "min": 5445,
            "mean": 5449,
            "median": 5449,
            "max": 5452
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 48,
            "min": 6195,
            "mean": 6505,
            "median": 6525,
            "max": 6795
          },
          "getArgUint64(uint256)": {
            "calls": 48,
            "min": 3370,
            "mean": 3374,
            "median": 3374,
            "max": 3377
          },
          "getArgUint8(uint256)": {
            "calls": 48,
            "min": 3260,
            "mean": 3264,
            "median": 3264,
            "max": 3267
          },
          "revertWithError()": {
            "calls": 49,
            "min": 5224,
            "mean": 5262,
            "median": 5228,
            "max": 5367
          },
          "setValue(uint256)": {
            "calls": 49,
            "min": 43898,
            "mean": 43967,
            "median": 43923,
            "max": 44115
          },
          "value()": {
            "calls": 49,
            "min": 5133,
            "mean": 5170,
            "median": 5137,
            "max": 5273
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 22,
            "min": 3570,
            "mean": 3571,
            "median": 3571,
            "max": 3572
          },
          "getCalldataHash()": {
            "calls": 22,
            "min": 3500,
            "mean": 3504,
            "median": 3505,
            "max": 3507
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2143388,
          "size": 10632
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 9035,
            "min": 751,
            "mean": 770,
            "median": 763,
            "max": 946
          },
          "returnsHash(bytes)": {
            "calls": 8956,
            "min": 694,
            "mean": 712,
            "median": 706,
            "max": 886
          },
          "revertsWithCustomError()": {
            "calls": 145,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1216569,
          "size": 6003
        },
        "functions": {
          "get(address)": {
            "calls": 10096,
            "min": 2555,
            "mean": 5844,
            "median": 6308,
            "max": 9129
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 2900,
            "min": 26647,
            "mean": 49982,
            "median": 37240,
            "max": 165310
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 4985411,
          "size": 24824
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 3481,
            "min": 21729,
            "mean": 45198,
            "median": 44125,
            "max": 128114
          },
          "addToBytes32Set(bytes32)": {
            "calls": 3506,
            "min": 23470,
            "mean": 47879,
            "median": 46860,
            "max": 145368
          },
          "addressSetAt(uint256)": {
            "calls": 371,
            "min": 9154,
            "mean": 9172,
            "median": 9154,
            "max": 9224
          },
          "addressSetContains(address)": {
            "calls": 3316,
            "min": 734,
            "mean": 7039,
            "median": 7222,
            "max": 7241
          },
          "bytes32SetAt(uint256)": {
            "calls": 331,
            "min": 11349,
            "mean": 11369,
            "median": 11350,
            "max": 11434
          },
          "bytes32SetContains(bytes32)": {
            "calls": 3399,
            "min": 741,
            "mean": 8636,
            "median": 8865,
            "max": 8869
          },
          "removeFromAddressSet(address)": {
            "calls": 3556,
            "min": 22171,
            "mean": 28621,
            "median": 28862,
            "max": 28862
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 3476,
            "min": 22042,
            "mean": 30568,
            "median": 30948,
            "max": 30949
          },
          "uint8SetAt(uint256)": {
            "calls": 321,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 180,
            "min": 27070,
            "mean": 50590,
            "median": 49274,
            "max": 143297
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 46080,
            "min": 28539,
            "mean": 53995,
            "median": 50814,
            "max": 161899
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 46080,
            "min": 24590,
            "mean": 28533,
            "median": 27674,
            "max": 44700
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 26343560,
          "size": 131358
        },
        "functions": {
          "_testMulSqrt(uint256,uint256,uint256)": {
            "calls": 1460,
            "min": 25635,
            "mean": 28503,
            "median": 29103,
            "max": 30283
          },
          "add(uint256,uint256)": {
            "calls": 5140,
            "min": 2037,
            "mean": 2037,
            "median": 2038,
            "max": 2038
          },
          "divWad(uint256,uint256)": {
            "calls": 1727,
            "min": 2220,
            "mean": 2220,
            "median": 2220,
            "max": 2220
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 1273,
            "mean": 1308,
            "median": 1323,
            "max": 1323
          },
          "divWadUp(uint256,uint256)": {
            "calls": 1720,
            "min": 3078,
            "mean": 3078,
            "median": 3078,
            "max": 3078
          },
          "factorial(uint256)": {
            "calls": 20,
            "min": 2223,
            "mean": 2223,
            "median": 2223,
            "max": 2223
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 6375,
            "min": 2777,
            "mean": 2822,
            "median": 2781,
            "max": 3095
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 5120,
            "min": 4187,
            "mean": 4206,
            "median": 4187,
            "max": 4289
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 5160,
            "min": 2509,
            "mean": 2511,
            "median": 2509,
            "max": 2804
          },
          "lambertW0Wad(int256)": {
            "calls": 240,
            "min": 952,
            "mean": 952,
            "median": 952,
            "max": 952
          },
          "lnWad(int256)": {
            "calls": 60,
            "min": 1874,
            "mean": 1874,
            "median": 1874,
            "max": 1874
          },
          "mul(uint256,uint256)": {
            "calls": 5140,
            "min": 3225,
            "mean": 3225,
            "median": 3226,
            "max": 3226
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 2746,
            "mean": 2755,
            "median": 2764,
            "max": 2764
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 10240,
            "min": 290,
            "mean": 317,
            "median": 339,
            "max": 339
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 571,
            "mean": 594,
            "median": 610,
            "max": 612
          },
          "mulWad(uint256,uint256)": {
            "calls": 2197,
            "min": 4112,
            "mean": 4112,
            "median": 4112,
            "max": 4112
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 1446,
            "mean": 1449,
            "median": 1452,
            "max": 1452
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 2197,
            "min": 2839,
            "mean": 2839,
            "median": 2839,
            "max": 2839
          },
          "packSci(uint256)": {
            "calls": 20,
            "min": 4094,
            "mean": 4094,
            "median": 4094,
            "max": 4094
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 40,
            "min": 2138,
            "mean": 2869,
            "median": 2869,
            "max": 3601
          },
          "sDivWad(int256,int256)": {
            "calls": 1356,
            "min": 4153,
            "mean": 4153,
            "median": 4153,
            "max": 4153
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 3168,
            "mean": 3236,
            "median": 3259,
            "max": 3259
          },
          "sMulWad(int256,int256)": {
            "calls": 1712,
            "min": 3747,
            "mean": 3747,
            "median": 3747,
            "max": 3747
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 2441,
            "mean": 2484,
            "median": 2489,
            "max": 2489
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 12221510,
          "size": 60941
        },
        "functions": {
          "decodeString(string)": {
            "calls": 5640,
            "min": 19432,
            "mean": 22494,
            "median": 22339,
            "max": 31400
          },
          "parseInt(string)": {
            "calls": 15880,
            "min": 19767,
            "mean": 29484,
            "median": 32221,
            "max": 32430
          },
          "parseUint(string)": {
            "calls": 5560,
            "min": 20165,
            "mean": 24859,
            "median": 23013,
            "max": 32612
          },
          "parseUintFromHex(string)": {
            "calls": 6400,
            "min": 1227,
            "mean": 3604,
            "median": 1530,
            "max": 10886
          },
          "parsedValue(string)": {
            "calls": 24060,
            "min": 19746,
            "mean": 22853,
            "median": 22453,
            "max": 31150
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1774770,
          "size": 8791
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 20,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "returnsBool(uint256)": {
            "calls": 20,
            "min": 291,
            "mean": 291,
            "median": 291,
            "max": 291
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 2729470,
          "size": 13559
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 40,
            "min": 23776,
            "mean": 33870,
            "median": 33870,
            "max": 43965
          },
          "claimWithToggle(uint256)": {
            "calls": 40,
            "min": 26719,
            "mean": 35259,
            "median": 35259,
            "max": 43799
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 3244096,
          "size": 16129
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 10593,
            "min": 23788,
            "mean": 24804,
            "median": 24435,
            "max": 27579
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 15440,
            "min": 25194,
            "mean": 27320,
            "median": 26699,
            "max": 199238
          },
          "_testLoadCalldata(bytes)": {
            "calls": 5120,
            "min": 28469,
            "mean": 29046,
            "median": 28910,
            "max": 30195
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 80,
            "min": 24790,
            "mean": 26201,
            "median": 26426,
            "max": 27162
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 5564,
            "min": 3138,
            "mean": 747548,
            "median": 636393,
            "max": 4640758
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2382261,
          "size": 11825
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5180,
            "min": 110914,
            "mean": 1323562,
            "median": 965939,
            "max": 83523290
          },
          "getArgAddress(uint256)": {
            "calls": 106,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 106,
            "min": 785,
            "mean": 802,
            "median": 802,
            "max": 818
          },
          "getArgUint256(uint256)": {
            "calls": 318,
            "min": 2676,
            "mean": 2676,
            "median": 2676,
            "max": 2676
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 106,
            "min": 13490,
            "mean": 38184,
            "median": 38397,
            "max": 62920
          },
          "getArgUint64(uint256)": {
            "calls": 106,
            "min": 601,
            "mean": 601,
            "median": 601,
            "max": 601
          },
          "getArgUint8(uint256)": {
            "calls": 106,
            "min": 491,
            "mean": 491,
            "median": 491,
            "max": 491
          },
          "getCalldataHash()": {
            "calls": 106,
            "min": 1194,
            "mean": 2280,
            "median": 2296,
            "max": 3363
          },
          "revertWithError()": {
            "calls": 106,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "setValue(uint256)": {
            "calls": 106,
            "min": 22419,
            "mean": 22419,
            "median": 22419,
            "max": 22419
          },
          "value()": {
            "calls": 20706,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 149935,
          "size": 474
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 10240,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setHash(uint256,bytes)": {
            "calls": 5120,
            "min": 44609,
            "mean": 45252,
            "median": 45059,
            "max": 46631
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 860397,
          "size": 4224
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 7721,
            "min": 597,
            "mean": 737,
            "median": 806,
            "max": 830
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 9442039,
          "size": 47071
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 330,
            "min": 2805,
            "mean": 2921,
            "median": 2930,
            "max": 2930
          },
          "argsOnClone(address,uint256)": {
            "calls": 225,
            "min": 4159,
            "mean": 4159,
            "median": 4159,
            "max": 4159
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 194,
            "min": 3092,
            "mean": 3772,
            "median": 3346,
            "max": 7521
          },
          "argsOnERC1967(address)": {
            "calls": 234,
            "min": 4932,
            "mean": 4932,
            "median": 4932,
            "max": 4932
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 174,
            "min": 3917,
            "mean": 3917,
            "median": 3917,
            "max": 3917
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 135,
            "min": 3631,
            "mean": 4076,
            "median": 3632,
            "max": 6706
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 134,
            "min": 4162,
            "mean": 4162,
            "median": 4162,
            "max": 4162
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 94,
            "min": 2993,
            "mean": 2993,
            "median": 2993,
            "max": 2993
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 85,
            "min": 5465,
            "mean": 5780,
            "median": 5468,
            "max": 6407
          },
          "argsOnERC1967I(address)": {
            "calls": 208,
            "min": 4272,
            "mean": 4272,
            "median": 4272,
            "max": 4272
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 161,
            "min": 3282,
            "mean": 3282,
            "median": 3282,
            "max": 3282
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 88,
            "min": 5446,
            "mean": 5702,
            "median": 5446,
            "max": 6468
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 109,
            "min": 4294,
            "mean": 4294,
            "median": 4294,
            "max": 4294
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 86,
            "min": 3873,
            "mean": 3873,
            "median": 3873,
            "max": 3873
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 69,
            "min": 4886,
            "mean": 5000,
            "median": 4886,
            "max": 5343
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 1357,
            "min": 38694,
            "mean": 49106,
            "median": 52252,
            "max": 59128
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 15360,
            "min": 890,
            "mean": 896,
            "median": 890,
            "max": 919
          },
          "clone(address)": {
            "calls": 5140,
            "min": 86724,
            "mean": 86724,
            "median": 86724,
            "max": 86724
          },
          "clone(address,bytes)": {
            "calls": 5140,
            "min": 69737,
            "mean": 3624233,
            "median": 72356,
            "max": 96818076
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5286,
            "min": 70848,
            "mean": 6304197,
            "median": 74403,
            "max": 96822123
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 5140,
            "min": 87896,
            "mean": 130041,
            "median": 88268,
            "max": 1652286
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 5273,
            "min": 0,
            "mean": 339064,
            "median": 76792,
            "max": 12830275
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5282,
            "min": 0,
            "mean": 342393,
            "median": 102393,
            "max": 12553700
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 5120,
            "min": 116402,
            "mean": 163735,
            "median": 116772,
            "max": 2079072
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 7125,
            "min": 0,
            "mean": 334386,
            "median": 107027,
            "max": 13195939
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 102219,
            "mean": 145745,
            "median": 102590,
            "max": 1689221
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5262,
            "min": 0,
            "mean": 331891,
            "median": 106165,
            "max": 12524927
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 5120,
            "min": 119449,
            "mean": 164606,
            "median": 119820,
            "max": 2139356
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 7165,
            "min": 0,
            "mean": 333287,
            "median": 107133,
            "max": 12444947
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 102991,
            "mean": 149888,
            "median": 103362,
            "max": 2242892
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5282,
            "min": 95963,
            "mean": 6792590,
            "median": 99680,
            "max": 96824256
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 7753,
            "min": 96820,
            "mean": 149041,
            "median": 114062,
            "max": 2028984
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 9023,
            "min": 101024,
            "mean": 17040737,
            "median": 106845,
            "max": 96821730
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 99427,
            "mean": 142783,
            "median": 99798,
            "max": 1782797
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5261,
            "min": 102153,
            "mean": 5822439,
            "median": 105655,
            "max": 96826152
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 12787,
            "min": 100580,
            "mean": 151447,
            "median": 101063,
            "max": 3171531
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 8965,
            "min": 98266,
            "mean": 17333695,
            "median": 107749,
            "max": 96817199
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 100948,
            "mean": 149011,
            "median": 101318,
            "max": 2024857
          },
          "deployERC1967(address,bytes)": {
            "calls": 5140,
            "min": 95068,
            "mean": 3250431,
            "median": 98151,
            "max": 96817121
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 10240,
            "min": 98715,
            "mean": 141916,
            "median": 98815,
            "max": 2987037
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 2575,
            "min": 97725,
            "mean": 3674501,
            "median": 102100,
            "max": 92442155
          },
          "deployERC1967I(address)": {
            "calls": 5140,
            "min": 116179,
            "mean": 116179,
            "median": 116179,
            "max": 116179
          },
          "deployERC1967I(address,bytes)": {
            "calls": 5140,
            "min": 100711,
            "mean": 3261535,
            "median": 103562,
            "max": 96824159
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 10260,
            "min": 99590,
            "mean": 144998,
            "median": 99694,
            "max": 2852410
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 2554,
            "min": 96142,
            "mean": 3424435,
            "median": 104056,
            "max": 96804372
          },
          "revertWithError()": {
            "calls": 142651,
            "min": 102,
            "mean": 3030,
            "median": 3048,
            "max": 3287
          },
          "setValue(uint256)": {
            "calls": 149853,
            "min": 1743,
            "mean": 22838,
            "median": 23008,
            "max": 24201
          },
          "value()": {
            "calls": 420518,
            "min": 102,
            "mean": 2882,
            "median": 2891,
            "max": 3130
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2409691,
          "size": 11962
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 721,
            "mean": 721,
            "median": 721,
            "max": 721
          },
          "decodeBatch(bytes)": {
            "calls": 1251,
            "min": 1276,
            "mean": 3161,
            "median": 3113,
            "max": 5248
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 497,
            "min": 1294,
            "mean": 1472,
            "median": 1472,
            "max": 1695
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 12926,
            "min": 765,
            "mean": 2119,
            "median": 1131,
            "max": 6089
          },
          "decodeDelegate(bytes)": {
            "calls": 5120,
            "min": 1241,
            "mean": 1258,
            "median": 1251,
            "max": 1286
          },
          "decodeSingle(bytes)": {
            "calls": 5120,
            "min": 985,
            "mean": 1002,
            "median": 995,
            "max": 1031
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 20,
            "min": 23549,
            "mean": 23549,
            "median": 23549,
            "max": 23549
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 2597,
            "min": 30388,
            "mean": 39727,
            "median": 38831,
            "max": 57904
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 5120,
            "min": 642042,
            "mean": 774823,
            "median": 669798,
            "max": 4552190
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 3656823,
          "size": 18190
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 20,
            "min": 3154,
            "mean": 3154,
            "median": 3154,
            "max": 3154
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 20,
            "min": 3104,
            "mean": 3104,
            "median": 3104,
            "max": 3104
          },
          "setUint8(uint256,uint8)": {
            "calls": 20,
            "min": 44351,
            "mean": 44351,
            "median": 44351,
            "max": 44351
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 20,
            "min": 44677,
            "mean": 44677,
            "median": 44677,
            "max": 44677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 3023626,
          "size": 15028
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 5120,
            "min": 2390,
            "mean": 3492,
            "median": 3239,
            "max": 4655
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 5120,
            "min": 23651,
            "mean": 23675,
            "median": 23686,
            "max": 23687
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 10280,
            "min": 21718,
            "mean": 43490,
            "median": 43914,
            "max": 43916
          },
          "lazyShufflerNext(uint256)": {
            "calls": 5140,
            "min": 23556,
            "mean": 23845,
            "median": 23932,
            "max": 23932
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 4673372,
          "size": 23266
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 400,
            "min": 24534,
            "mean": 40179,
            "median": 28196,
            "max": 102542
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 400,
            "min": 25873,
            "mean": 51219,
            "median": 31696,
            "max": 153899
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 15808040,
          "size": 78835
        },
        "functions": {
          "returnString(string)": {
            "calls": 5180,
            "min": 1973,
            "mean": 1981,
            "median": 1980,
            "max": 1991
          },
          "toHexString(uint256,uint256)": {
            "calls": 20,
            "min": 1595,
            "mean": 1595,
            "median": 1595,
            "max": 1595
          },
          "toSmallString(string)": {
            "calls": 20,
            "min": 710,
            "mean": 710,
            "median": 710,
            "max": 710
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 240815,
          "size": 893
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27398,
            "mean": 51736,
            "median": 50826,
            "max": 82653
          },
          "x()": {
            "calls": 120,
            "min": 2674,
            "mean": 10328,
            "median": 5958,
            "max": 37658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166999,
          "size": 552
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27229,
            "mean": 41915,
            "median": 32645,
            "max": 82291
          },
          "x()": {
            "calls": 120,
            "min": 2542,
            "mean": 9458,
            "median": 4727,
            "max": 37482
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2201454,
          "size": 10922
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 30760,
            "min": 22497,
            "mean": 27206,
            "median": 28502,
            "max": 30198
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 35900,
            "min": 25582,
            "mean": 36812,
            "median": 35781,
            "max": 91837
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 1817420,
          "size": 9004
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 5102,
            "min": 1087,
            "mean": 43374,
            "median": 43678,
            "max": 85768
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 5104,
            "min": 1366,
            "mean": 50434,
            "median": 45237,
            "max": 88392
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 5099,
            "min": 1376,
            "mean": 43762,
            "median": 43676,
            "max": 86255
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 37,
            "min": 814,
            "mean": 814,
            "median": 814,
            "max": 814
          },
          "getRootFromEmptyTree()": {
            "calls": 20,
            "min": 510,
            "mean": 510,
            "median": 510,
            "max": 510
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 20,
            "min": 593,
            "mean": 593,
            "median": 593,
            "max": 593
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1878484,
          "size": 9309
        },
        "functions": {
          "decimals()": {
            "calls": 5120,
            "min": 2388,
            "mean": 2388,
            "median": 2388,
            "max": 2388
          },
          "name()": {
            "calls": 5120,
            "min": 4882,
            "mean": 6603,
            "median": 4925,
            "max": 13727
          },
          "returnsBytes32StringA()": {
            "calls": 20,
            "min": 574,
            "mean": 574,
            "median": 574,
            "max": 574
          },
          "returnsBytes32StringB()": {
            "calls": 800,
            "min": 502,
            "mean": 502,
            "median": 502,
            "max": 502
          },
          "returnsChoppedString(uint256)": {
            "calls": 2100,
            "min": 284,
            "mean": 284,
            "median": 284,
            "max": 287
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 11200,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "returnsEmptyString()": {
            "calls": 5120,
            "min": 5296,
            "mean": 7035,
            "median": 5344,
            "max": 14213
          },
          "returnsNothing()": {
            "calls": 5160,
            "min": 321,
            "mean": 321,
            "median": 321,
            "max": 321
          },
          "returnsString()": {
            "calls": 10240,
            "min": 4892,
            "mean": 6723,
            "median": 4935,
            "max": 13750
          },
          "returnsUint()": {
            "calls": 5120,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "reverts()": {
            "calls": 5160,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "symbol()": {
            "calls": 5120,
            "min": 5168,
            "mean": 6889,
            "median": 5211,
            "max": 14013
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 5093365,
          "size": 25363
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 2448,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "enqueue(uint256,uint256)": {
            "calls": 7732,
            "min": 24177,
            "mean": 52474,
            "median": 66716,
            "max": 66853
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 2475,
            "min": 860,
            "mean": 860,
            "median": 860,
            "max": 860
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 2421,
            "min": 826,
            "mean": 840,
            "median": 835,
            "max": 857
          },
          "pop()": {
            "calls": 1243,
            "min": 23937,
            "mean": 23937,
            "median": 23937,
            "max": 23937
          },
          "replace(uint256)": {
            "calls": 1241,
            "min": 24322,
            "mean": 24605,
            "median": 24689,
            "max": 24690
          },
          "root()": {
            "calls": 2523,
            "min": 2989,
            "mean": 2989,
            "median": 2989,
            "max": 2989
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 3274136,
          "size": 16279
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22476,
            "mean": 23463,
            "median": 23925,
            "max": 23948
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 1222768,
          "size": 3601
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 248,
            "min": 3355,
            "mean": 3394,
            "median": 3395,
            "max": 3434
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 126,
            "min": 3916,
            "mean": 3948,
            "median": 3950,
            "max": 3976
          },
          "getArgUint256(uint256)": {
            "calls": 500,
            "min": 5782,
            "mean": 5823,
            "median": 5824,
            "max": 5861
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 248,
            "min": 21822,
            "mean": 23778,
            "median": 23713,
            "max": 25804
          },
          "getArgUint64(uint256)": {
            "calls": 248,
            "min": 3707,
            "mean": 3746,
            "median": 3747,
            "max": 3786
          },
          "getArgUint8(uint256)": {
            "calls": 248,
            "min": 3597,
            "mean": 3636,
            "median": 3637,
            "max": 3676
          },
          "getCalldataHash()": {
            "calls": 126,
            "min": 4531,
            "mean": 4626,
            "median": 4632,
            "max": 4711
          },
          "revertWithError()": {
            "calls": 264,
            "min": 5560,
            "mean": 5832,
            "median": 5604,
            "max": 8316
          },
          "setValue(uint256)": {
            "calls": 264,
            "min": 44236,
            "mean": 44538,
            "median": 44282,
            "max": 47173
          },
          "value()": {
            "calls": 264,
            "min": 5469,
            "mean": 5737,
            "median": 5513,
            "max": 8190
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 3026226,
          "size": 15041
        },
        "functions": {
          "find(uint256)": {
            "calls": 20,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "insert(uint256)": {
            "calls": 40,
            "min": 21744,
            "mean": 24206,
            "median": 24206,
            "max": 26668
          },
          "remove(bytes32)": {
            "calls": 5180,
            "min": 24169,
            "mean": 24495,
            "median": 24498,
            "max": 24498
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 1186609,
          "size": 4331
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 91,
            "min": 3652,
            "mean": 3682,
            "median": 3681,
            "max": 3716
          },
          "getArgUint256(uint256)": {
            "calls": 183,
            "min": 6080,
            "mean": 6109,
            "median": 6111,
            "max": 6143
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 91,
            "min": 35484,
            "mean": 36905,
            "median": 36840,
            "max": 38463
          },
          "getArgUint64(uint256)": {
            "calls": 91,
            "min": 4004,
            "mean": 4034,
            "median": 4033,
            "max": 4068
          },
          "getArgUint8(uint256)": {
            "calls": 91,
            "min": 3894,
            "mean": 3924,
            "median": 3923,
            "max": 3958
          },
          "revertWithError()": {
            "calls": 115,
            "min": 5819,
            "mean": 6446,
            "median": 5892,
            "max": 8289
          },
          "setValue(uint256)": {
            "calls": 115,
            "min": 44538,
            "mean": 45193,
            "median": 44599,
            "max": 47185
          },
          "value()": {
            "calls": 115,
            "min": 5707,
            "mean": 6342,
            "median": 5801,
            "max": 8156
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 46,
            "min": 4210,
            "mean": 4230,
            "median": 4234,
            "max": 4249
          },
          "getCalldataHash()": {
            "calls": 46,
            "min": 5396,
            "mean": 5457,
            "median": 5468,
            "max": 5511
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1809406,
          "size": 8964
        },
        "functions": {
          "read(address)": {
            "calls": 3235,
            "min": 2121,
            "mean": 3176,
            "median": 3121,
            "max": 3430
          },
          "read(address,uint256)": {
            "calls": 1928,
            "min": 1799,
            "mean": 3009,
            "median": 2924,
            "max": 3244
          },
          "read(address,uint256,uint256)": {
            "calls": 1261,
            "min": 3081,
            "mean": 3855,
            "median": 3519,
            "max": 16899
          },
          "write(bytes)": {
            "calls": 40,
            "min": 13468486,
            "mean": 48556369,
            "median": 48556369,
            "max": 83644253
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 8845162,
          "size": 44092
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 554,
            "min": 543,
            "mean": 568,
            "median": 579,
            "max": 579
          },
          "toInt104(uint256)": {
            "calls": 293,
            "min": 1110,
            "mean": 1122,
            "median": 1114,
            "max": 1144
          },
          "toInt112(int256)": {
            "calls": 660,
            "min": 1093,
            "mean": 1118,
            "median": 1129,
            "max": 1129
          },
          "toInt112(uint256)": {
            "calls": 300,
            "min": 1880,
            "mean": 1892,
            "median": 1884,
            "max": 1914
          },
          "toInt120(int256)": {
            "calls": 538,
            "min": 2397,
            "mean": 2423,
            "median": 2433,
            "max": 2433
          },
          "toInt120(uint256)": {
            "calls": 275,
            "min": 1732,
            "mean": 1744,
            "median": 1735,
            "max": 1766
          },
          "toInt128(int256)": {
            "calls": 698,
            "min": 2199,
            "mean": 2225,
            "median": 2235,
            "max": 2235
          },
          "toInt128(uint256)": {
            "calls": 302,
            "min": 324,
            "mean": 338,
            "median": 332,
            "max": 358
          },
          "toInt136(int256)": {
            "calls": 634,
            "min": 1803,
            "mean": 1829,
            "median": 1839,
            "max": 1839
          },
          "toInt136(uint256)": {
            "calls": 311,
            "min": 1974,
            "mean": 1990,
            "median": 1988,
            "max": 2008
          },
          "toInt144(int256)": {
            "calls": 634,
            "min": 1363,
            "mean": 1389,
            "median": 1399,
            "max": 1399
          },
          "toInt144(uint256)": {
            "calls": 318,
            "min": 1072,
            "mean": 1086,
            "median": 1082,
            "max": 1106
          },
          "toInt152(int256)": {
            "calls": 614,
            "min": 1143,
            "mean": 1169,
            "median": 1179,
            "max": 1179
          },
          "toInt152(uint256)": {
            "calls": 307,
            "min": 1182,
            "mean": 1197,
            "median": 1196,
            "max": 1216
          },
          "toInt16(int256)": {
            "calls": 928,
            "min": 2105,
            "mean": 2126,
            "median": 2141,
            "max": 2141
          },
          "toInt16(uint256)": {
            "calls": 458,
            "min": 626,
            "mean": 633,
            "median": 626,
            "max": 658
          },
          "toInt160(int256)": {
            "calls": 596,
            "min": 1275,
            "mean": 1302,
            "median": 1311,
            "max": 1311
          },
          "toInt160(uint256)": {
            "calls": 325,
            "min": 742,
            "mean": 758,
            "median": 757,
            "max": 776
          },
          "toInt168(int256)": {
            "calls": 630,
            "min": 2331,
            "mean": 2358,
            "median": 2367,
            "max": 2367
          },
          "toInt168(uint256)": {
            "calls": 287,
            "min": 2502,
            "mean": 2518,
            "median": 2517,
            "max": 2536
          },
          "toInt176(int256)": {
            "calls": 574,
            "min": 1539,
            "mean": 1567,
            "median": 1575,
            "max": 1575
          },
          "toInt176(uint256)": {
            "calls": 275,
            "min": 676,
            "mean": 693,
            "median": 696,
            "max": 710
          },
          "toInt184(int256)": {
            "calls": 568,
            "min": 1341,
            "mean": 1369,
            "median": 1377,
            "max": 1377
          },
          "toInt184(uint256)": {
            "calls": 335,
            "min": 1820,
            "mean": 1836,
            "median": 1834,
            "max": 1854
          },
          "toInt192(int256)": {
            "calls": 594,
            "min": 263,
            "mean": 291,
            "median": 299,
            "max": 299
          },
          "toInt192(uint256)": {
            "calls": 309,
            "min": 434,
            "mean": 450,
            "median": 449,
            "max": 468
          },
          "toInt200(int256)": {
            "calls": 602,
            "min": 395,
            "mean": 424,
            "median": 431,
            "max": 431
          },
          "toInt200(uint256)": {
            "calls": 284,
            "min": 456,
            "mean": 472,
            "median": 471,
            "max": 488
          },
          "toInt208(int256)": {
            "calls": 606,
            "min": 2419,
            "mean": 2448,
            "median": 2455,
            "max": 2455
          },
          "toInt208(uint256)": {
            "calls": 321,
            "min": 588,
            "mean": 605,
            "median": 605,
            "max": 622
          },
          "toInt216(int256)": {
            "calls": 646,
            "min": 2375,
            "mean": 2404,
            "median": 2411,
            "max": 2411
          },
          "toInt216(uint256)": {
            "calls": 324,
            "min": 2348,
            "mean": 2366,
            "median": 2368,
            "max": 2382
          },
          "toInt224(int256)": {
            "calls": 676,
            "min": 835,
            "mean": 864,
            "median": 871,
            "max": 871
          },
          "toInt224(uint256)": {
            "calls": 347,
            "min": 1226,
            "mean": 1245,
            "median": 1251,
            "max": 1260
          },
          "toInt232(int256)": {
            "calls": 726,
            "min": 219,
            "mean": 248,
            "median": 255,
            "max": 255
          },
          "toInt232(uint256)": {
            "calls": 365,
            "min": 1292,
            "mean": 1311,
            "median": 1317,
            "max": 1326
          },
          "toInt24(int256)": {
            "calls": 810,
            "min": 2303,
            "mean": 2324,
            "median": 2339,
            "max": 2339
          },
          "toInt24(uint256)": {
            "calls": 390,
            "min": 1374,
            "mean": 1380,
            "median": 1374,
            "max": 1408
          },
          "toInt240(int256)": {
            "calls": 740,
            "min": 1011,
            "mean": 1040,
            "median": 1047,
            "max": 1047
          },
          "toInt240(uint256)": {
            "calls": 364,
            "min": 962,
            "mean": 982,
            "median": 987,
            "max": 996
          },
          "toInt248(int256)": {
            "calls": 826,
            "min": 197,
            "mean": 227,
            "median": 233,
            "max": 233
          },
          "toInt248(uint256)": {
            "calls": 397,
            "min": 2172,
            "mean": 2190,
            "median": 2192,
            "max": 2206
          },
          "toInt256(uint256)": {
            "calls": 5120,
            "min": 2208,
            "mean": 2227,
            "median": 2228,
            "max": 2228
          },
          "toInt32(int256)": {
            "calls": 752,
            "min": 1709,
            "mean": 1731,
            "median": 1745,
            "max": 1745
          },
          "toInt32(uint256)": {
            "calls": 402,
            "min": 2254,
            "mean": 2262,
            "median": 2255,
            "max": 2288
          },
          "toInt40(int256)": {
            "calls": 642,
            "min": 1995,
            "mean": 2018,
            "median": 2031,
            "max": 2031
          },
          "toInt40(uint256)": {
            "calls": 370,
            "min": 2056,
            "mean": 2065,
            "median": 2058,
            "max": 2090
          },
          "toInt48(int256)": {
            "calls": 702,
            "min": 477,
            "mean": 500,
            "median": 513,
            "max": 513
          },
          "toInt48(uint256)": {
            "calls": 360,
            "min": 1198,
            "mean": 1207,
            "median": 1198,
            "max": 1232
          },
          "toInt56(int256)": {
            "calls": 628,
            "min": 939,
            "mean": 962,
            "median": 975,
            "max": 975
          },
          "toInt56(uint256)": {
            "calls": 314,
            "min": 2430,
            "mean": 2440,
            "median": 2434,
            "max": 2464
          },
          "toInt64(int256)": {
            "calls": 636,
            "min": 2149,
            "mean": 2172,
            "median": 2185,
            "max": 2185
          },
          "toInt64(uint256)": {
            "calls": 305,
            "min": 406,
            "mean": 415,
            "median": 406,
            "max": 440
          },
          "toInt72(int256)": {
            "calls": 594,
            "min": 2281,
            "mean": 2305,
            "median": 2317,
            "max": 2317
          },
          "toInt72(uint256)": {
            "calls": 312,
            "min": 2122,
            "mean": 2134,
            "median": 2125,
            "max": 2156
          },
          "toInt8(int256)": {
            "calls": 441,
            "min": 2479,
            "mean": 2480,
            "median": 2479,
            "max": 2496
          },
          "toInt8(uint256)": {
            "calls": 440,
            "min": 604,
            "mean": 605,
            "median": 604,
            "max": 622
          },
          "toInt80(int256)": {
            "calls": 616,
            "min": 719,
            "mean": 744,
            "median": 755,
            "max": 755
          },
          "toInt80(uint256)": {
            "calls": 263,
            "min": 780,
            "mean": 791,
            "median": 782,
            "max": 814
          },
          "toInt88(int256)": {
            "calls": 612,
            "min": 1687,
            "mean": 1711,
            "median": 1723,
            "max": 1723
          },
          "toInt88(uint256)": {
            "calls": 270,
            "min": 1946,
            "mean": 1958,
            "median": 1952,
            "max": 1980
          },
          "toInt96(int256)": {
            "calls": 648,
            "min": 521,
            "mean": 546,
            "median": 557,
            "max": 557
          },
          "toInt96(uint256)": {
            "calls": 295,
            "min": 1440,
            "mean": 1452,
            "median": 1445,
            "max": 1474
          },
          "toUint104(uint256)": {
            "calls": 286,
            "min": 1550,
            "mean": 1560,
            "median": 1552,
            "max": 1580
          },
          "toUint112(uint256)": {
            "calls": 321,
            "min": 912,
            "mean": 925,
            "median": 922,
            "max": 942
          },
          "toUint120(uint256)": {
            "calls": 324,
            "min": 560,
            "mean": 572,
            "median": 568,
            "max": 590
          },
          "toUint128(uint256)": {
            "calls": 326,
            "min": 1484,
            "mean": 1509,
            "median": 1502,
            "max": 1538
          },
          "toUint136(uint256)": {
            "calls": 301,
            "min": 1748,
            "mean": 1769,
            "median": 1760,
            "max": 1802
          },
          "toUint144(uint256)": {
            "calls": 306,
            "min": 1858,
            "mean": 1883,
            "median": 1877,
            "max": 1912
          },
          "toUint152(uint256)": {
            "calls": 324,
            "min": 1600,
            "mean": 1623,
            "median": 1618,
            "max": 1654
          },
          "toUint16(uint256)": {
            "calls": 467,
            "min": 1638,
            "mean": 1642,
            "median": 1638,
            "max": 1665
          },
          "toUint160(uint256)": {
            "calls": 316,
            "min": 2238,
            "mean": 2262,
            "median": 2261,
            "max": 2292
          },
          "toUint168(uint256)": {
            "calls": 297,
            "min": 1028,
            "mean": 1052,
            "median": 1048,
            "max": 1082
          },
          "toUint176(uint256)": {
            "calls": 313,
            "min": 236,
            "mean": 264,
            "median": 268,
            "max": 290
          },
          "toUint184(uint256)": {
            "calls": 285,
            "min": 1050,
            "mean": 1076,
            "median": 1073,
            "max": 1104
          },
          "toUint192(uint256)": {
            "calls": 290,
            "min": 1424,
            "mean": 1450,
            "median": 1448,
            "max": 1478
          },
          "toUint200(uint256)": {
            "calls": 272,
            "min": 1402,
            "mean": 1428,
            "median": 1429,
            "max": 1456
          },
          "toUint208(uint256)": {
            "calls": 291,
            "min": 1930,
            "mean": 1957,
            "median": 1969,
            "max": 1981
          },
          "toUint216(uint256)": {
            "calls": 285,
            "min": 1578,
            "mean": 1606,
            "median": 1602,
            "max": 1632
          },
          "toUint224(uint256)": {
            "calls": 334,
            "min": 1160,
            "mean": 1189,
            "median": 1187,
            "max": 1214
          },
          "toUint232(uint256)": {
            "calls": 337,
            "min": 302,
            "mean": 330,
            "median": 332,
            "max": 356
          },
          "toUint24(uint256)": {
            "calls": 411,
            "min": 1660,
            "mean": 1666,
            "median": 1660,
            "max": 1688
          },
          "toUint240(uint256)": {
            "calls": 379,
            "min": 874,
            "mean": 903,
            "median": 906,
            "max": 928
          },
          "toUint248(uint256)": {
            "calls": 383,
            "min": 896,
            "mean": 929,
            "median": 939,
            "max": 950
          },
          "toUint256(int256)": {
            "calls": 5120,
            "min": 2579,
            "mean": 2593,
            "median": 2599,
            "max": 2599
          },
          "toUint32(uint256)": {
            "calls": 350,
            "min": 2034,
            "mean": 2040,
            "median": 2034,
            "max": 2062
          },
          "toUint40(uint256)": {
            "calls": 358,
            "min": 2562,
            "mean": 2570,
            "median": 2564,
            "max": 2592
          },
          "toUint48(uint256)": {
            "calls": 294,
            "min": 1770,
            "mean": 1778,
            "median": 1772,
            "max": 1798
          },
          "toUint56(uint256)": {
            "calls": 299,
            "min": 2012,
            "mean": 2022,
            "median": 2015,
            "max": 2042
          },
          "toUint64(uint256)": {
            "calls": 306,
            "min": 692,
            "mean": 700,
            "median": 693,
            "max": 722
          },
          "toUint72(uint256)": {
            "calls": 296,
            "min": 802,
            "mean": 813,
            "median": 808,
            "max": 832
          },
          "toUint8(uint256)": {
            "calls": 464,
            "min": 274,
            "mean": 275,
            "median": 274,
            "max": 289
          },
          "toUint80(uint256)": {
            "calls": 300,
            "min": 2078,
            "mean": 2088,
            "median": 2082,
            "max": 2108
          },
          "toUint88(uint256)": {
            "calls": 302,
            "min": 1462,
            "mean": 1471,
            "median": 1464,
            "max": 1492
          },
          "toUint96(uint256)": {
            "calls": 302,
            "min": 494,
            "mean": 504,
            "median": 498,
            "max": 524
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 15925322,
          "size": 79420
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 1645,
            "min": 167060,
            "mean": 172410,
            "median": 172524,
            "max": 172563
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 13895,
            "min": 23774,
            "mean": 151101,
            "median": 96127,
            "max": 298662
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 100,
            "min": 46307,
            "mean": 67709,
            "median": 69611,
            "max": 85353
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 5140,
            "min": 29494,
            "mean": 29944,
            "median": 29910,
            "max": 32407
          },
          "safeApprove(address,address,uint256)": {
            "calls": 5105,
            "min": 26936,
            "mean": 27344,
            "median": 27424,
            "max": 27746
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 5100,
            "min": 25886,
            "mean": 26285,
            "median": 26368,
            "max": 26697
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 5140,
            "min": 26762,
            "mean": 27149,
            "median": 27162,
            "max": 27482
          },
          "safeTransferAllETH(address)": {
            "calls": 5140,
            "min": 29364,
            "mean": 29364,
            "median": 29364,
            "max": 29364
          },
          "safeTransferETH(address,uint256)": {
            "calls": 5140,
            "min": 23814,
            "mean": 29886,
            "median": 29918,
            "max": 30182
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 5084,
            "min": 27918,
            "mean": 28458,
            "median": 28619,
            "max": 28968
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 10480,
            "min": 29587,
            "mean": 50807,
            "median": 69389,
            "max": 70462
          },
          "totalSupplyQuery(address)": {
            "calls": 60,
            "min": 1729,
            "mean": 4933,
            "median": 6535,
            "max": 6535
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 51192,
            "min": 26163,
            "mean": 40224,
            "median": 31785,
            "max": 62093
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 46200,
            "min": 555747,
            "mean": 680033,
            "median": 582513,
            "max": 4635701
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 46200,
            "min": 554127,
            "mean": 690089,
            "median": 584407,
            "max": 4641123
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2717454,
          "size": 13499
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 360,
            "min": 33855,
            "mean": 42787,
            "median": 40623,
            "max": 65077
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 980,
            "min": 38746,
            "mean": 59976,
            "median": 53574,
            "max": 106715
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 4159277,
          "size": 20699
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 120,
            "min": 1798,
            "mean": 9287,
            "median": 9665,
            "max": 16448
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 5962,
            "min": 1411,
            "mean": 10744,
            "median": 10776,
            "max": 16941
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 2625,
            "min": 6714,
            "mean": 6726,
            "median": 6728,
            "max": 6739
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 194462,
          "size": 655
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 613,
            "min": 39698,
            "mean": 51695,
            "median": 45233,
            "max": 79433
          },
          "fallbackDeposit(uint256)": {
            "calls": 666,
            "min": 38930,
            "mean": 49822,
            "median": 44590,
            "max": 78790
          },
          "getArgAddress(uint256)": {
            "calls": 15,
            "min": 3040,
            "mean": 3040,
            "median": 3040,
            "max": 3041
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 9,
            "min": 3589,
            "mean": 3589,
            "median": 3589,
            "max": 3589
          },
          "getArgUint256(uint256)": {
            "calls": 33,
            "min": 5467,
            "mean": 5467,
            "median": 5467,
            "max": 5468
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 15,
            "min": 7123,
            "mean": 7216,
            "median": 7216,
            "max": 7309
          },
          "getArgUint64(uint256)": {
            "calls": 15,
            "min": 3392,
            "mean": 3392,
            "median": 3392,
            "max": 3393
          },
          "getArgUint8(uint256)": {
            "calls": 15,
            "min": 3282,
            "mean": 3282,
            "median": 3282,
            "max": 3283
          },
          "getCalldataHash()": {
            "calls": 9,
            "min": 3561,
            "mean": 3561,
            "median": 3561,
            "max": 3561
          },
          "receive()": {
            "calls": 18,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "revertWithError()": {
            "calls": 15,
            "min": 5246,
            "mean": 5246,
            "median": 5246,
            "max": 5247
          },
          "setValue(uint256)": {
            "calls": 15,
            "min": 43948,
            "mean": 43954,
            "median": 43954,
            "max": 43960
          },
          "value()": {
            "calls": 15,
            "min": 5155,
            "mean": 5156,
            "median": 5156,
            "max": 5156
          },
          "withdraw(uint256)": {
            "calls": 371,
            "min": 39210,
            "mean": 44846,
            "median": 45376,
            "max": 45449
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2982779,
          "size": 14824
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 2560,
            "min": 1726,
            "mean": 1741,
            "median": 1745,
            "max": 1760
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 315490,
          "size": 1273
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 40,
            "min": 334,
            "mean": 343,
            "median": 343,
            "max": 352
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 40,
            "min": 309,
            "mean": 309,
            "median": 309,
            "max": 309
          },
          "checkOnlyProxy()": {
            "calls": 40,
            "min": 419,
            "mean": 428,
            "median": 428,
            "max": 437
          },
          "getArgAddress(uint256)": {
            "calls": 10,
            "min": 3166,
            "mean": 3166,
            "median": 3166,
            "max": 3167
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 6,
            "min": 3716,
            "mean": 3716,
            "median": 3716,
            "max": 3716
          },
          "getArgUint256(uint256)": {
            "calls": 22,
            "min": 5593,
            "mean": 5594,
            "median": 5594,
            "max": 5594
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 10,
            "min": 13060,
            "mean": 13077,
            "median": 13077,
            "max": 13094
          },
          "getArgUint64(uint256)": {
            "calls": 10,
            "min": 3518,
            "mean": 3518,
            "median": 3518,
            "max": 3519
          },
          "getArgUint8(uint256)": {
            "calls": 10,
            "min": 3408,
            "mean": 3408,
            "median": 3408,
            "max": 3409
          },
          "getCalldataHash()": {
            "calls": 6,
            "min": 3941,
            "mean": 3941,
            "median": 3941,
            "max": 3941
          },
          "initialize(address)": {
            "calls": 120,
            "min": 22561,
            "mean": 22561,
            "median": 22561,
            "max": 22561
          },
          "proxiableUUID()": {
            "calls": 40,
            "min": 290,
            "mean": 299,
            "median": 299,
            "max": 308
          },
          "revertWithError()": {
            "calls": 13,
            "min": 6353,
            "mean": 6477,
            "median": 6477,
            "max": 6601
          },
          "setValue(uint256)": {
            "calls": 13,
            "min": 45110,
            "mean": 45253,
            "median": 45253,
            "max": 45396
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 22200,
            "mean": 22200,
            "median": 22200,
            "max": 22200
          },
          "value()": {
            "calls": 13,
            "min": 6248,
            "mean": 6368,
            "median": 6368,
            "max": 6489
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 287845,
          "size": 1114
        },
        "functions": {
          "dataHash()": {
            "calls": 5120,
            "min": 2277,
            "mean": 2277,
            "median": 2277,
            "max": 2277
          },
          "fallback()": {
            "calls": 10400,
            "min": 23460,
            "mean": 65314,
            "median": 88315,
            "max": 218271
          },
          "lastCaller()": {
            "calls": 5280,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "lastCallvalue()": {
            "calls": 5280,
            "min": 2322,
            "mean": 2322,
            "median": 2322,
            "max": 2322
          },
          "numbersHash()": {
            "calls": 160,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "receive()": {
            "calls": 5200,
            "min": 88,
            "mean": 20845,
            "median": 21088,
            "max": 21088
          },
          "storeDataHash(bytes,bool)": {
            "calls": 10240,
            "min": 681,
            "mean": 33767,
            "median": 25093,
            "max": 67403
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 160,
            "min": 1853,
            "mean": 35020,
            "median": 35020,
            "max": 68188
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 100131,
          "size": 240
        },
        "functions": {
          "fallback()": {
            "calls": 19936,
            "min": 215,
            "mean": 23642,
            "median": 22334,
            "max": 140642
          },
          "receive()": {
            "calls": 272,
            "min": 21082,
            "mean": 21082,
            "median": 21082,
            "max": 21082
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 369044,
          "size": 1544
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 209,
            "mean": 332,
            "median": 394,
            "max": 394
          },
          "eip712Domain()": {
            "calls": 200,
            "min": 903,
            "mean": 903,
            "median": 903,
            "max": 903
          },
          "getArgAddress(uint256)": {
            "calls": 246,
            "min": 3196,
            "mean": 3220,
            "median": 3221,
            "max": 3245
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 120,
            "min": 3752,
            "mean": 3774,
            "median": 3777,
            "max": 3796
          },
          "getArgUint256(uint256)": {
            "calls": 486,
            "min": 5623,
            "mean": 5648,
            "median": 5649,
            "max": 5672
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 246,
            "min": 14414,
            "mean": 15722,
            "median": 15688,
            "max": 17093
          },
          "getArgUint64(uint256)": {
            "calls": 246,
            "min": 3548,
            "mean": 3572,
            "median": 3573,
            "max": 3597
          },
          "getArgUint8(uint256)": {
            "calls": 246,
            "min": 3438,
            "mean": 3462,
            "median": 3463,
            "max": 3487
          },
          "getCalldataHash()": {
            "calls": 120,
            "min": 4048,
            "mean": 4104,
            "median": 4109,
            "max": 4159
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 339,
            "mean": 457,
            "median": 516,
            "max": 516
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 739,
            "mean": 739,
            "median": 739,
            "max": 739
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 618,
            "mean": 618,
            "median": 618,
            "max": 618
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 676,
            "mean": 676,
            "median": 676,
            "max": 676
          },
          "revertWithError()": {
            "calls": 255,
            "min": 5402,
            "mean": 5517,
            "median": 5428,
            "max": 6695
          },
          "setValue(uint256)": {
            "calls": 255,
            "min": 44076,
            "mean": 44274,
            "median": 44139,
            "max": 45619
          },
          "value()": {
            "calls": 255,
            "min": 5311,
            "mean": 5423,
            "median": 5337,
            "max": 6576
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 618077,
          "size": 3469
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 5400,
            "mean": 5413,
            "median": 5418,
            "max": 5418
          },
          "eip712Domain()": {
            "calls": 120,
            "min": 5647,
            "mean": 5656,
            "median": 5656,
            "max": 5665
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 5533,
            "mean": 5542,
            "median": 5542,
            "max": 5551
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 5514,
            "mean": 5523,
            "median": 5523,
            "max": 5532
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5371,
            "mean": 5380,
            "median": 5380,
            "max": 5389
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5429,
            "mean": 5438,
            "median": 5438,
            "max": 5447
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 60,
            "min": 11557,
            "mean": 30282,
            "median": 33533,
            "max": 45757
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1303085,
          "size": 5810
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 110381,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 8954,
            "min": 670,
            "mean": 2773,
            "median": 835,
            "max": 7906
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 12665,
            "min": 24013,
            "mean": 30201,
            "median": 29460,
            "max": 50140
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 84704,
            "min": 24039,
            "mean": 151544,
            "median": 78817,
            "max": 37070957
          },
          "burn(address,uint256,uint256)": {
            "calls": 7692,
            "min": 25236,
            "mean": 29332,
            "median": 28096,
            "max": 33467
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18301,
            "min": 24683,
            "mean": 265317,
            "median": 63723,
            "max": 36357614
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 21806,
            "min": 24219,
            "mean": 206400,
            "median": 58662,
            "max": 35726543
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 39449,
            "min": 26435,
            "mean": 44623,
            "median": 46574,
            "max": 46606
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2821,
            "mean": 2821,
            "median": 2821,
            "max": 2821
          },
          "lastDataHash()": {
            "calls": 610,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 100132,
            "min": 23030,
            "mean": 128395,
            "median": 73142,
            "max": 34115685
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18094,
            "min": 23944,
            "mean": 290288,
            "median": 62138,
            "max": 36614289
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 21978,
            "min": 23837,
            "mean": 197587,
            "median": 57960,
            "max": 32673058
          },
          "setApprovalForAll(address,bool)": {
            "calls": 34071,
            "min": 25948,
            "mean": 45323,
            "median": 46086,
            "max": 46086
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 2693,
            "min": 26701,
            "mean": 36717,
            "median": 36789,
            "max": 47449
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 2548,
            "min": 28060,
            "mean": 30480,
            "median": 30536,
            "max": 30794
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 2508,
            "min": 34282,
            "mean": 114418,
            "median": 89040,
            "max": 1199716
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 2516,
            "min": 55065,
            "mean": 99240,
            "median": 62421,
            "max": 1169288
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 390787,
          "size": 1613
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3187,
            "mean": 3187,
            "median": 3187,
            "max": 3187
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3736,
            "mean": 3736,
            "median": 3736,
            "max": 3736
          },
          "getArgUint256(uint256)": {
            "calls": 7,
            "min": 5614,
            "mean": 5614,
            "median": 5614,
            "max": 5614
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 14024,
            "mean": 14024,
            "median": 14024,
            "max": 14024
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3539,
            "mean": 3539,
            "median": 3539,
            "max": 3539
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3429,
            "mean": 3429,
            "median": 3429,
            "max": 3429
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 3999,
            "mean": 3999,
            "median": 3999,
            "max": 3999
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 8524,
            "min": 2854,
            "mean": 2884,
            "median": 2868,
            "max": 6124
          },
          "revertWithError()": {
            "calls": 4,
            "min": 5998,
            "mean": 5998,
            "median": 5998,
            "max": 5998
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 5120,
            "min": 26539,
            "mean": 26539,
            "median": 26539,
            "max": 26539
          },
          "setValue(uint256)": {
            "calls": 4,
            "min": 44750,
            "mean": 44750,
            "median": 44750,
            "max": 44750
          },
          "signer()": {
            "calls": 80,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "value()": {
            "calls": 4,
            "min": 5890,
            "mean": 5890,
            "median": 5890,
            "max": 5890
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 807045,
          "size": 4289
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 25660,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          },
          "allowance(address,address)": {
            "calls": 48833,
            "min": 833,
            "mean": 2420,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 52366,
            "min": 25902,
            "mean": 45926,
            "median": 46021,
            "max": 46205
          },
          "balanceOf(address)": {
            "calls": 264956,
            "min": 529,
            "mean": 2353,
            "median": 2529,
            "max": 2529
          },
          "burn(address,uint256)": {
            "calls": 10290,
            "min": 24278,
            "mean": 29295,
            "median": 27519,
            "max": 34563
          },
          "decimals()": {
            "calls": 6240,
            "min": 2342,
            "mean": 2342,
            "median": 2342,
            "max": 2342
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 5120,
            "min": 25176,
            "mean": 26980,
            "median": 26556,
            "max": 28656
          },
          "directTransfer(address,address,uint256)": {
            "calls": 5120,
            "min": 25145,
            "mean": 38174,
            "median": 28529,
            "max": 52587
          },
          "mint(address,uint256)": {
            "calls": 64339,
            "min": 24348,
            "mean": 67815,
            "median": 68319,
            "max": 68677
          },
          "name()": {
            "calls": 5160,
            "min": 2683,
            "mean": 4975,
            "median": 4931,
            "max": 9247
          },
          "nonces(address)": {
            "calls": 5160,
            "min": 2551,
            "mean": 2551,
            "median": 2551,
            "max": 2551
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 30740,
            "min": 23727,
            "mean": 43843,
            "median": 30314,
            "max": 74376
          },
          "symbol()": {
            "calls": 5160,
            "min": 2870,
            "mean": 5178,
            "median": 5229,
            "max": 9437
          },
          "totalSupply()": {
            "calls": 20640,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "transfer(address,uint256)": {
            "calls": 51487,
            "min": 24291,
            "mean": 45642,
            "median": 51522,
            "max": 51754
          },
          "transferFrom(address,address,uint256)": {
            "calls": 30887,
            "min": 24707,
            "mean": 40627,
            "median": 32562,
            "max": 54596
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 806989,
          "size": 4289
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10240,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "approve(address,uint256)": {
            "calls": 5120,
            "min": 21797,
            "mean": 22091,
            "median": 21872,
            "max": 41352
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256)": {
            "calls": 5120,
            "min": 32391,
            "mean": 67910,
            "median": 68338,
            "max": 68674
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22854,
            "mean": 23160,
            "median": 23135,
            "max": 28663
          },
          "transferFrom(address,address,uint256)": {
            "calls": 10240,
            "min": 24906,
            "mean": 38362,
            "median": 30388,
            "max": 52360
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 829428,
          "size": 4051
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15420,
            "min": 2841,
            "mean": 2841,
            "median": 2841,
            "max": 2841
          },
          "approve(address,uint256)": {
            "calls": 20272,
            "min": 23729,
            "mean": 35063,
            "median": 35389,
            "max": 46407
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1402155,
          "size": 6271
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 45928,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 5463,
            "min": 21547,
            "mean": 21993,
            "median": 21796,
            "max": 95429
          },
          "checkpointAt(address,uint256)": {
            "calls": 6855,
            "min": 0,
            "mean": 46,
            "median": 0,
            "max": 4920
          },
          "checkpointCount(address)": {
            "calls": 27160,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 10633,
            "min": 21192,
            "mean": 21633,
            "median": 21432,
            "max": 91614
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 23810,
            "mean": 42416,
            "median": 40486,
            "max": 76039
          },
          "delegates(address)": {
            "calls": 85251,
            "min": 0,
            "mean": 233,
            "median": 0,
            "max": 2606
          },
          "directDelegate(address,address)": {
            "calls": 5120,
            "min": 35324,
            "mean": 48467,
            "median": 48710,
            "max": 48714
          },
          "directIncrementNonce(address)": {
            "calls": 16994,
            "min": 27155,
            "mean": 31493,
            "median": 27169,
            "max": 44269
          },
          "getPastVotes(address,uint256)": {
            "calls": 80,
            "min": 5247,
            "mean": 5747,
            "median": 5247,
            "max": 7247
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 60,
            "min": 699,
            "mean": 3804,
            "median": 5255,
            "max": 5459
          },
          "getVotes(address)": {
            "calls": 60448,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4953
          },
          "getVotesTotalSupply()": {
            "calls": 15556,
            "min": 0,
            "mean": 10,
            "median": 0,
            "max": 4965
          },
          "mint(address,uint256)": {
            "calls": 14870,
            "min": 21555,
            "mean": 21852,
            "median": 21800,
            "max": 94733
          },
          "name()": {
            "calls": 5120,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "nonces(address)": {
            "calls": 10062,
            "min": 2661,
            "mean": 2661,
            "median": 2661,
            "max": 2661
          },
          "totalSupply()": {
            "calls": 7758,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 10530,
            "min": 21546,
            "mean": 21842,
            "median": 21795,
            "max": 86873
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 243804,
          "size": 912
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 5120,
            "min": 21527,
            "mean": 21527,
            "median": 21527,
            "max": 21527
          },
          "feeDenominator()": {
            "calls": 5120,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 10240,
            "min": 21712,
            "mean": 22010,
            "median": 22090,
            "max": 22090
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 71680,
            "min": 2529,
            "mean": 4053,
            "median": 4663,
            "max": 4663
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 7558,
            "min": 22200,
            "mean": 37334,
            "median": 44327,
            "max": 44557
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 15116,
            "min": 22425,
            "mean": 37896,
            "median": 44977,
            "max": 45227
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1344744,
          "size": 6286
        },
        "functions": {
          "addDeposit()": {
            "calls": 40,
            "min": 31981,
            "mean": 31981,
            "median": 31981,
            "max": 31981
          },
          "completeOwnershipHandover(address)": {
            "calls": 20,
            "min": 12519,
            "mean": 12519,
            "median": 12519,
            "max": 12519
          },
          "delegateExecute(address,bytes)": {
            "calls": 15480,
            "min": 6466,
            "mean": 19410,
            "median": 9112,
            "max": 140404
          },
          "eip712Domain()": {
            "calls": 40,
            "min": 1195,
            "mean": 1195,
            "median": 1195,
            "max": 1195
          },
          "entryPoint()": {
            "calls": 140,
            "min": 497,
            "mean": 497,
            "median": 497,
            "max": 497
          },
          "execute(address,uint256,bytes)": {
            "calls": 80,
            "min": 2972,
            "mean": 16950,
            "median": 13468,
            "max": 37892
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 2581,
            "min": 2885,
            "mean": 63837,
            "median": 63168,
            "max": 246706
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 2599,
            "min": 3266,
            "mean": 60993,
            "median": 48256,
            "max": 216403
          },
          "fallback()": {
            "calls": 100,
            "min": 690,
            "mean": 29082,
            "median": 690,
            "max": 109753
          },
          "getDeposit()": {
            "calls": 120,
            "min": 5637,
            "mean": 5637,
            "median": 5637,
            "max": 5637
          },
          "initialize(address)": {
            "calls": 26040,
            "min": 2754,
            "mean": 24225,
            "median": 24292,
            "max": 24292
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 36080,
            "min": 6830,
            "mean": 8195,
            "median": 6872,
            "max": 13754
          },
          "owner()": {
            "calls": 5340,
            "min": 2599,
            "mean": 2599,
            "median": 2599,
            "max": 2599
          },
          "receive()": {
            "calls": 5160,
            "min": 62,
            "mean": 62,
            "median": 62,
            "max": 62
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 7084,
            "mean": 7084,
            "median": 7084,
            "max": 7084
          },
          "requestOwnershipHandover()": {
            "calls": 20,
            "min": 23473,
            "mean": 23473,
            "median": 23473,
            "max": 23473
          },
          "storageLoad(bytes32)": {
            "calls": 40,
            "min": 2714,
            "mean": 2714,
            "median": 2714,
            "max": 2714
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 40,
            "min": 2327,
            "mean": 13393,
            "median": 13393,
            "max": 24459
          },
          "transferOwnership(address)": {
            "calls": 40,
            "min": 7460,
            "mean": 7460,
            "median": 7460,
            "max": 7460
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 80,
            "min": 265,
            "mean": 24122,
            "median": 29225,
            "max": 37775
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 20,
            "min": 45218,
            "mean": 45218,
            "median": 45218,
            "max": 45218
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1274367,
          "size": 6799
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 10320,
            "min": 2927,
            "mean": 2927,
            "median": 2927,
            "max": 2927
          },
          "balanceOf(address)": {
            "calls": 31640,
            "min": 2683,
            "mean": 2683,
            "median": 2683,
            "max": 2683
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 10240,
            "min": 2754,
            "mean": 2754,
            "median": 2754,
            "max": 2754
          },
          "convertToAssets(uint256)": {
            "calls": 21240,
            "min": 2364,
            "mean": 5101,
            "median": 7686,
            "max": 7745
          },
          "convertToShares(uint256)": {
            "calls": 80,
            "min": 8210,
            "mean": 8227,
            "median": 8227,
            "max": 8245
          },
          "decimals()": {
            "calls": 400,
            "min": 355,
            "mean": 358,
            "median": 355,
            "max": 394
          },
          "deposit(uint256,address)": {
            "calls": 5300,
            "min": 30396,
            "mean": 119274,
            "median": 120740,
            "max": 120983
          },
          "mint(uint256,address)": {
            "calls": 5260,
            "min": 30447,
            "mean": 119677,
            "median": 120791,
            "max": 131509
          },
          "name()": {
            "calls": 20,
            "min": 2725,
            "mean": 2725,
            "median": 2725,
            "max": 2725
          },
          "previewDeposit(uint256)": {
            "calls": 10280,
            "min": 8320,
            "mean": 8320,
            "median": 8320,
            "max": 8355
          },
          "previewWithdraw(uint256)": {
            "calls": 10280,
            "min": 7814,
            "mean": 7814,
            "median": 7814,
            "max": 7849
          },
          "redeem(uint256,address,address)": {
            "calls": 5260,
            "min": 24936,
            "mean": 77696,
            "median": 78152,
            "max": 92975
          },
          "symbol()": {
            "calls": 20,
            "min": 3055,
            "mean": 3055,
            "median": 3055,
            "max": 3055
          },
          "totalAssets()": {
            "calls": 20920,
            "min": 5356,
            "mean": 5356,
            "median": 5356,
            "max": 5356
          },
          "totalSupply()": {
            "calls": 10720,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "useVirtualShares()": {
            "calls": 40,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "withdraw(uint256,address,address)": {
            "calls": 5280,
            "min": 27085,
            "mean": 78473,
            "median": 79204,
            "max": 79370
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1121620,
          "size": 5240
        },
        "functions": {
          "eip712Domain()": {
            "calls": 6882,
            "min": 1170,
            "mean": 1170,
            "median": 1170,
            "max": 1170
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 80,
            "min": 6128,
            "mean": 22961,
            "median": 11152,
            "max": 63413
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 2627,
            "min": 6307,
            "mean": 87141,
            "median": 81083,
            "max": 250663
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 2573,
            "min": 28706,
            "mean": 93294,
            "median": 83656,
            "max": 343290
          },
          "fallback()": {
            "calls": 17657,
            "min": 547,
            "mean": 6871,
            "median": 3772,
            "max": 136154
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 7195,
            "min": 459,
            "mean": 14529,
            "median": 14187,
            "max": 40334
          },
          "isValidSigner(address,bytes)": {
            "calls": 5120,
            "min": 6187,
            "mean": 6187,
            "median": 6187,
            "max": 6187
          },
          "mockId()": {
            "calls": 40,
            "min": 621,
            "mean": 621,
            "median": 621,
            "max": 621
          },
          "owner()": {
            "calls": 15972,
            "min": 6028,
            "mean": 6028,
            "median": 6028,
            "max": 6028
          },
          "proxiableUUID()": {
            "calls": 20,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 36,
            "min": 44,
            "mean": 2695,
            "median": 67,
            "max": 7757
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5746,
            "mean": 14299,
            "median": 14320,
            "max": 22894
          },
          "state()": {
            "calls": 15440,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "supportsInterface(bytes4)": {
            "calls": 80,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "token()": {
            "calls": 10720,
            "min": 695,
            "mean": 695,
            "median": 695,
            "max": 695
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5180,
            "min": 6130,
            "mean": 35503,
            "median": 35665,
            "max": 52765
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1141055,
          "size": 5252
        },
        "functions": {
          "clearState()": {
            "calls": 5120,
            "min": 5467,
            "mean": 5467,
            "median": 5467,
            "max": 5467
          },
          "fallback()": {
            "calls": 3930,
            "min": 3857,
            "mean": 13653,
            "median": 6141,
            "max": 52451
          },
          "mockId()": {
            "calls": 20,
            "min": 636,
            "mean": 636,
            "median": 636,
            "max": 636
          },
          "proxiableUUID()": {
            "calls": 5140,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "receive()": {
            "calls": 414,
            "min": 0,
            "mean": 11019,
            "median": 11019,
            "max": 22038
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5904,
            "mean": 14457,
            "median": 14478,
            "max": 23052
          },
          "state()": {
            "calls": 10260,
            "min": 2567,
            "mean": 2567,
            "median": 2567,
            "max": 2567
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 18723,
            "mean": 18723,
            "median": 18723,
            "max": 18723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 170071,
          "size": 566
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 48555,
            "min": 94755,
            "mean": 95323,
            "median": 95374,
            "max": 95584
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 631674,
          "size": 2708
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 49900,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          },
          "approve(address,uint256,uint256)": {
            "calls": 30859,
            "min": 26861,
            "mean": 46881,
            "median": 47099,
            "max": 47512
          },
          "balanceOf(address,uint256)": {
            "calls": 47636,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "burn(address,uint256,uint256)": {
            "calls": 10260,
            "min": 24571,
            "mean": 27557,
            "median": 25528,
            "max": 30792
          },
          "decimals(uint256)": {
            "calls": 20,
            "min": 278,
            "mean": 278,
            "median": 278,
            "max": 278
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 10260,
            "min": 36775,
            "mean": 47267,
            "median": 47305,
            "max": 47686
          },
          "directSetOperator(address,address,bool)": {
            "calls": 15400,
            "min": 24145,
            "mean": 32504,
            "median": 26610,
            "max": 46529
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 7776,
            "min": 25679,
            "mean": 40041,
            "median": 29707,
            "max": 61710
          },
          "isOperator(address,address)": {
            "calls": 15440,
            "min": 2733,
            "mean": 2733,
            "median": 2733,
            "max": 2733
          },
          "mint(address,uint256,uint256)": {
            "calls": 92560,
            "min": 24417,
            "mean": 45841,
            "median": 47185,
            "max": 47740
          },
          "name(uint256)": {
            "calls": 5120,
            "min": 417,
            "mean": 417,
            "median": 417,
            "max": 417
          },
          "setOperator(address,bool)": {
            "calls": 20,
            "min": 46060,
            "mean": 46060,
            "median": 46060,
            "max": 46060
          },
          "symbol(uint256)": {
            "calls": 5120,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "tokenURI(uint256)": {
            "calls": 20,
            "min": 949,
            "mean": 949,
            "median": 949,
            "max": 949
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20939,
            "min": 24297,
            "mean": 37346,
            "median": 32450,
            "max": 52735
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 32964,
            "min": 27297,
            "mean": 38815,
            "median": 33391,
            "max": 61162
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1261904,
          "size": 5627
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 21493,
            "min": 24185,
            "mean": 42978,
            "median": 48460,
            "max": 48797
          },
          "balanceOf(address)": {
            "calls": 204452,
            "min": 2766,
            "mean": 2766,
            "median": 2766,
            "max": 2766
          },
          "burn(uint256)": {
            "calls": 5012,
            "min": 28407,
            "mean": 29442,
            "median": 28831,
            "max": 31505
          },
          "directApprove(address,uint256)": {
            "calls": 20984,
            "min": 24501,
            "mean": 44078,
            "median": 49319,
            "max": 49653
          },
          "directGetApproved(uint256)": {
            "calls": 30450,
            "min": 2875,
            "mean": 4898,
            "median": 5085,
            "max": 5085
          },
          "directOwnerOf(uint256)": {
            "calls": 50818,
            "min": 3070,
            "mean": 3262,
            "median": 3310,
            "max": 3310
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 12898,
            "min": 57052,
            "mean": 75802,
            "median": 63360,
            "max": 129777
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10246,
            "min": 63757,
            "mean": 94774,
            "median": 65058,
            "max": 238765
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 18947,
            "min": 24517,
            "mean": 42035,
            "median": 46657,
            "max": 46673
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 36116,
            "min": 25571,
            "mean": 43006,
            "median": 41454,
            "max": 57977
          },
          "exists(uint256)": {
            "calls": 10184,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "getApproved(uint256)": {
            "calls": 30878,
            "min": 2415,
            "mean": 4374,
            "median": 4551,
            "max": 4551
          },
          "getAux(address)": {
            "calls": 51240,
            "min": 3305,
            "mean": 3305,
            "median": 3305,
            "max": 3313
          },
          "getExtraData(uint256)": {
            "calls": 71512,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 3129,
            "mean": 3129,
            "median": 3129,
            "max": 3129
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 30720,
            "min": 3051,
            "mean": 5588,
            "median": 6321,
            "max": 7381
          },
          "mint(address,uint256)": {
            "calls": 217665,
            "min": 24466,
            "mean": 64462,
            "median": 68618,
            "max": 68985
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 15380,
            "min": 46863,
            "mean": 56076,
            "median": 51891,
            "max": 69356
          },
          "ownerOf(uint256)": {
            "calls": 113197,
            "min": 749,
            "mean": 2733,
            "median": 2749,
            "max": 2749
          },
          "safeMint(address,uint256)": {
            "calls": 25600,
            "min": 71662,
            "mean": 82078,
            "median": 72468,
            "max": 121634
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 20480,
            "min": 72727,
            "mean": 98823,
            "median": 74048,
            "max": 232697
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 37004,
            "min": 40923,
            "mean": 68718,
            "median": 63840,
            "max": 134171
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10234,
            "min": 64586,
            "mean": 94244,
            "median": 65821,
            "max": 240630
          },
          "setApprovalForAll(address,bool)": {
            "calls": 23791,
            "min": 24480,
            "mean": 43267,
            "median": 46620,
            "max": 46628
          },
          "setAux(address,uint224)": {
            "calls": 15282,
            "min": 28106,
            "mean": 45089,
            "median": 45195,
            "max": 45206
          },
          "setExtraData(uint256,uint96)": {
            "calls": 30739,
            "min": 24238,
            "mean": 37217,
            "median": 44211,
            "max": 44647
          },
          "transferFrom(address,address,uint256)": {
            "calls": 36451,
            "min": 24792,
            "mean": 42298,
            "median": 40675,
            "max": 57159
          },
          "uncheckedBurn(uint256)": {
            "calls": 58898,
            "min": 24062,
            "mean": 30550,
            "median": 31512,
            "max": 36696
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 3764,
            "min": 54993,
            "mean": 55241,
            "median": 55230,
            "max": 55595
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 562950,
          "size": 2392
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 5240,
            "min": 31198,
            "mean": 101349,
            "median": 91377,
            "max": 159441
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 5245,
            "min": 278846,
            "mean": 364838,
            "median": 298722,
            "max": 3502667
          },
          "lastOpData()": {
            "calls": 5120,
            "min": 2668,
            "mean": 5878,
            "median": 4865,
            "max": 11423
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 160,
            "min": 22115,
            "mean": 41288,
            "median": 44027,
            "max": 44027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 164180,
          "size": 744
        },
        "functions": {
          "counter()": {
            "calls": 80,
            "min": 2247,
            "mean": 2247,
            "median": 2247,
            "max": 2247
          },
          "garbage()": {
            "calls": 15600,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "getArgAddress(uint256)": {
            "calls": 20,
            "min": 3030,
            "mean": 3031,
            "median": 3032,
            "max": 3032
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 9,
            "min": 3579,
            "mean": 3580,
            "median": 3580,
            "max": 3580
          },
          "getArgUint256(uint256)": {
            "calls": 38,
            "min": 5457,
            "mean": 5458,
            "median": 5458,
            "max": 5460
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 20,
            "min": 6767,
            "mean": 6925,
            "median": 6917,
            "max": 7091
          },
          "getArgUint64(uint256)": {
            "calls": 20,
            "min": 3382,
            "mean": 3383,
            "median": 3384,
            "max": 3384
          },
          "getArgUint8(uint256)": {
            "calls": 20,
            "min": 3272,
            "mean": 3273,
            "median": 3274,
            "max": 3274
          },
          "getCalldataHash()": {
            "calls": 9,
            "min": 3532,
            "mean": 3533,
            "median": 3533,
            "max": 3534
          },
          "receive()": {
            "calls": 178,
            "min": 0,
            "mean": 46400,
            "median": 21100,
            "max": 286463
          },
          "revertWithError()": {
            "calls": 20,
            "min": 5236,
            "mean": 5237,
            "median": 5238,
            "max": 5238
          },
          "setValue(uint256)": {
            "calls": 20,
            "min": 43912,
            "mean": 43924,
            "median": 43922,
            "max": 43940
          },
          "value()": {
            "calls": 20,
            "min": 5145,
            "mean": 5146,
            "median": 5147,
            "max": 5148
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 692301,
          "size": 2984
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 155991,
            "min": 513,
            "mean": 4301,
            "median": 4633,
            "max": 4633
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 5295,
            "min": 26781,
            "mean": 28200,
            "median": 28248,
            "max": 28400
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 692,
            "min": 26643,
            "mean": 41118,
            "median": 40170,
            "max": 59083
          },
          "guardedByOnlyRoles()": {
            "calls": 692,
            "min": 24168,
            "mean": 40489,
            "median": 40446,
            "max": 57159
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 5120,
            "min": 1357,
            "mean": 8971,
            "median": 8692,
            "max": 17035
          },
          "hasRole(address,uint256)": {
            "calls": 36756,
            "min": 2598,
            "mean": 2598,
            "median": 2598,
            "max": 2598
          },
          "owner()": {
            "calls": 39328,
            "min": 2478,
            "mean": 2520,
            "median": 2523,
            "max": 2523
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 5498,
            "min": 2655,
            "mean": 2898,
            "median": 2718,
            "max": 4850
          },
          "roleHolderCount(uint256)": {
            "calls": 75549,
            "min": 2429,
            "mean": 2429,
            "median": 2429,
            "max": 2429
          },
          "roleHolders(uint256)": {
            "calls": 76319,
            "min": 2726,
            "mean": 3132,
            "median": 2726,
            "max": 20098
          },
          "setAllowedRole(uint256)": {
            "calls": 5120,
            "min": 23589,
            "mean": 43347,
            "median": 43560,
            "max": 43873
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 692,
            "min": 27436,
            "mean": 129671,
            "median": 127608,
            "max": 219120
          },
          "setMaxRole(uint256)": {
            "calls": 5280,
            "min": 22047,
            "mean": 26949,
            "median": 26434,
            "max": 43850
          },
          "setMaxRoleReverts(bool)": {
            "calls": 5120,
            "min": 23855,
            "mean": 25312,
            "median": 25823,
            "max": 26667
          },
          "setOwner(address)": {
            "calls": 5361,
            "min": 23309,
            "mean": 27075,
            "median": 26665,
            "max": 43765
          },
          "setOwnerReverts(bool)": {
            "calls": 5120,
            "min": 23905,
            "mean": 25344,
            "median": 25522,
            "max": 33557
          },
          "setRole(address,uint256,bool)": {
            "calls": 28221,
            "min": 24541,
            "mean": 59824,
            "median": 74025,
            "max": 74534
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 132967,
            "min": 33766,
            "mean": 59814,
            "median": 74047,
            "max": 78963
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 112143,
          "size": 299
        },
        "functions": {
          "fails()": {
            "calls": 120,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "getValue(uint256)": {
            "calls": 19244,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "setValue(uint256,uint256)": {
            "calls": 19244,
            "min": 8384,
            "mean": 22291,
            "median": 22314,
            "max": 22314
          },
          "succeeds(uint256)": {
            "calls": 40,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 378457,
          "size": 2916
        },
        "functions": {
          "disableInitializers()": {
            "calls": 40,
            "min": 23373,
            "mean": 33890,
            "median": 33890,
            "max": 44407
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 3836,
            "min": 27557,
            "mean": 60900,
            "median": 67678,
            "max": 90620
          },
          "isInitializing()": {
            "calls": 3637,
            "min": 2351,
            "mean": 2351,
            "median": 2351,
            "max": 2351
          },
          "onlyDuringInitializing()": {
            "calls": 20,
            "min": 23482,
            "mean": 23482,
            "median": 23482,
            "max": 23482
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 4901,
            "min": 24508,
            "mean": 55871,
            "median": 65844,
            "max": 90603
          },
          "version()": {
            "calls": 4990,
            "min": 2373,
            "mean": 2373,
            "median": 2373,
            "max": 2373
          },
          "x()": {
            "calls": 2606,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 575716,
          "size": 2507
        },
        "functions": {
          "owner()": {
            "calls": 14891,
            "min": 254,
            "mean": 254,
            "median": 254,
            "max": 254
          },
          "rescueETH(address,uint256)": {
            "calls": 20480,
            "min": 24941,
            "mean": 33681,
            "median": 24961,
            "max": 59070
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 754036,
          "size": 3383
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 15360,
            "min": 24009,
            "mean": 24009,
            "median": 24009,
            "max": 24009
          },
          "lockRescue(uint256)": {
            "calls": 100,
            "min": 26343,
            "mean": 37963,
            "median": 44211,
            "max": 46459
          },
          "owner()": {
            "calls": 33875,
            "min": 2467,
            "mean": 2467,
            "median": 2467,
            "max": 2467
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 2592,
            "min": 29296,
            "mean": 69971,
            "median": 68457,
            "max": 752307
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 2551,
            "min": 28547,
            "mean": 53797,
            "median": 60895,
            "max": 61179
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 2552,
            "min": 28839,
            "mean": 54274,
            "median": 61870,
            "max": 62269
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 4976,
            "min": 28329,
            "mean": 48814,
            "median": 47764,
            "max": 64014
          },
          "rescueETH(address,uint256)": {
            "calls": 28238,
            "min": 5764,
            "mean": 32496,
            "median": 36619,
            "max": 61959
          },
          "transferOwnership(address)": {
            "calls": 5120,
            "min": 7251,
            "mean": 7251,
            "median": 7251,
            "max": 7251
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 567123,
          "size": 2408
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 10322,
            "min": 22040,
            "mean": 24553,
            "median": 24616,
            "max": 37835
          },
          "multicallBrutalized(bytes[])": {
            "calls": 5178,
            "min": 280446,
            "mean": 380700,
            "median": 286933,
            "max": 3347414
          },
          "multicallOriginal(bytes[])": {
            "calls": 20,
            "min": 45141,
            "mean": 45141,
            "median": 45141,
            "max": 45141
          },
          "returnsRandomizedString(string)": {
            "calls": 4958,
            "min": 770,
            "mean": 1805,
            "median": 1765,
            "max": 3370
          },
          "returnsSender()": {
            "calls": 20,
            "min": 166,
            "mean": 166,
            "median": 166,
            "max": 166
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 10680,
            "min": 481,
            "mean": 481,
            "median": 481,
            "max": 481
          },
          "revertsWithCustomError()": {
            "calls": 20,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "revertsWithNothing()": {
            "calls": 20,
            "min": 273,
            "mean": 273,
            "median": 273,
            "max": 273
          },
          "revertsWithString(string)": {
            "calls": 5140,
            "min": 816,
            "mean": 831,
            "median": 831,
            "max": 849
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 331849,
          "size": 1244
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22615,
            "mean": 22615,
            "median": 22615,
            "max": 22615
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 24015,
            "mean": 28947,
            "median": 29074,
            "max": 29090
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28271,
            "mean": 28271,
            "median": 28271,
            "max": 28271
          },
          "owner()": {
            "calls": 16768,
            "min": 2407,
            "mean": 2407,
            "median": 2407,
            "max": 2407
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2871,
            "mean": 2872,
            "median": 2871,
            "max": 2887
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 452,
            "mean": 452,
            "median": 452,
            "max": 452
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23115,
            "mean": 23115,
            "median": 23115,
            "max": 23115
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44499,
            "mean": 44499,
            "median": 44499,
            "max": 44499
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 26680,
            "mean": 28506,
            "median": 28592,
            "max": 28608
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 24022,
            "mean": 25292,
            "median": 24044,
            "max": 28852
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23330,
            "mean": 34492,
            "median": 36600,
            "max": 45447
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 249695,
          "size": 863
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 608778,
          "size": 2525
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22813,
            "mean": 22813,
            "median": 22813,
            "max": 22813
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 24347,
            "mean": 29276,
            "median": 29405,
            "max": 29422
          },
          "grantRoles(address,uint256)": {
            "calls": 30760,
            "min": 24051,
            "mean": 45872,
            "median": 48011,
            "max": 48375
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 5120,
            "min": 26954,
            "mean": 45720,
            "median": 45955,
            "max": 46289
          },
          "hasAllRoles(address,uint256)": {
            "calls": 5120,
            "min": 2772,
            "mean": 2774,
            "median": 2772,
            "max": 2788
          },
          "hasAnyRole(address,uint256)": {
            "calls": 5120,
            "min": 2901,
            "mean": 2903,
            "median": 2901,
            "max": 2917
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28537,
            "mean": 28537,
            "median": 28537,
            "max": 28537
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 5760,
            "min": 690,
            "mean": 14531,
            "median": 9254,
            "max": 47710
          },
          "owner()": {
            "calls": 16740,
            "min": 2649,
            "mean": 2649,
            "median": 2649,
            "max": 2649
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 3203,
            "mean": 3204,
            "median": 3203,
            "max": 3219
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 738,
            "mean": 738,
            "median": 738,
            "max": 738
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 10240,
            "min": 24016,
            "mean": 27325,
            "median": 26140,
            "max": 29330
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23335,
            "mean": 23335,
            "median": 23335,
            "max": 23335
          },
          "renounceRoles(uint256)": {
            "calls": 1259,
            "min": 23511,
            "mean": 27680,
            "median": 28025,
            "max": 28361
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44587,
            "mean": 44587,
            "median": 44587,
            "max": 44587
          },
          "revokeRoles(address,uint256)": {
            "calls": 1306,
            "min": 24192,
            "mean": 27374,
            "median": 26253,
            "max": 31391
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 5760,
            "min": 536,
            "mean": 19302,
            "median": 18874,
            "max": 41563
          },
          "rolesOf(address)": {
            "calls": 45399,
            "min": 2808,
            "mean": 2810,
            "median": 2808,
            "max": 2824
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 25877,
            "mean": 28780,
            "median": 28879,
            "max": 28896
          },
          "setRolesDirect(address,uint256)": {
            "calls": 20480,
            "min": 25663,
            "mean": 37567,
            "median": 37446,
            "max": 46301
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 24355,
            "mean": 25596,
            "median": 24375,
            "max": 29184
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23330,
            "mean": 34246,
            "median": 31071,
            "max": 45447
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 5140,
            "min": 26068,
            "mean": 46279,
            "median": 46420,
            "max": 48558
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 5120,
            "min": 23900,
            "mean": 44518,
            "median": 46060,
            "max": 46391
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 5120,
            "min": 26118,
            "mean": 46619,
            "median": 47753,
            "max": 48607
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 354753,
          "size": 1349
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 78927,
          "size": 142
        },
        "functions": {
          "receive()": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476139,
          "size": 1990
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 20,
            "min": 23684,
            "mean": 23684,
            "median": 23684,
            "max": 23684
          },
          "callGuardedToReadGuarded()": {
            "calls": 20,
            "min": 23377,
            "mean": 23377,
            "median": 23377,
            "max": 23377
          },
          "callUnguardedToGuarded()": {
            "calls": 20,
            "min": 65551,
            "mean": 65551,
            "median": 65551,
            "max": 65551
          },
          "callUnguardedToReadGuarded()": {
            "calls": 20,
            "min": 45796,
            "mean": 45796,
            "median": 45796,
            "max": 45796
          },
          "countAndCall(address)": {
            "calls": 20,
            "min": 70055,
            "mean": 70055,
            "median": 70055,
            "max": 70055
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 65940,
            "mean": 65940,
            "median": 65940,
            "max": 65940
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 66821,
            "mean": 66821,
            "median": 66821,
            "max": 66821
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 47037,
            "mean": 47037,
            "median": 47037,
            "max": 47037
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 57154,
            "mean": 57154,
            "median": 57154,
            "max": 57154
          },
          "enterTimes()": {
            "calls": 120,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "isReentrancyGuardLocked()": {
            "calls": 280,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 133581,
          "size": 395
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 39,
            "min": 3002,
            "mean": 3004,
            "median": 3005,
            "max": 3007
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 25,
            "min": 3553,
            "mean": 3555,
            "median": 3554,
            "max": 3556
          },
          "getArgUint256(uint256)": {
            "calls": 89,
            "min": 5429,
            "mean": 5432,
            "median": 5432,
            "max": 5434
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 39,
            "min": 5330,
            "mean": 5555,
            "median": 5543,
            "max": 5804
          },
          "getArgUint64(uint256)": {
            "calls": 39,
            "min": 3354,
            "mean": 3356,
            "median": 3357,
            "max": 3359
          },
          "getArgUint8(uint256)": {
            "calls": 39,
            "min": 3244,
            "mean": 3246,
            "median": 3247,
            "max": 3249
          },
          "getCalldataHash()": {
            "calls": 25,
            "min": 3454,
            "mean": 3457,
            "median": 3457,
            "max": 3461
          },
          "revertWithError()": {
            "calls": 64,
            "min": 6085,
            "mean": 7843,
            "median": 7409,
            "max": 10326
          },
          "setValue(uint256)": {
            "calls": 64,
            "min": 44811,
            "mean": 46661,
            "median": 46205,
            "max": 49266
          },
          "value()": {
            "calls": 64,
            "min": 5984,
            "mean": 7722,
            "median": 7288,
            "max": 10184
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 784534,
          "size": 3412
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 13798,
            "min": 2413,
            "mean": 2413,
            "median": 2413,
            "max": 2413
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 5158,
            "min": 27382,
            "mean": 28650,
            "median": 28660,
            "max": 29039
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 5158,
            "min": 34434,
            "mean": 39977,
            "median": 40059,
            "max": 40558
          },
          "owner()": {
            "calls": 24393,
            "min": 2589,
            "mean": 2589,
            "median": 2589,
            "max": 2589
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 5120,
            "min": 34629,
            "mean": 43548,
            "median": 43601,
            "max": 43601
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 5120,
            "min": 91423,
            "mean": 111144,
            "median": 111355,
            "max": 111355
          },
          "setMaxTimedRole(uint256)": {
            "calls": 428,
            "min": 26760,
            "mean": 29533,
            "median": 27117,
            "max": 44221
          },
          "setOwner(address)": {
            "calls": 618,
            "min": 26655,
            "mean": 28411,
            "median": 26665,
            "max": 43765
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 14077,
            "min": 24722,
            "mean": 50281,
            "median": 51851,
            "max": 51948
          },
          "timedRoleActive(address,uint256)": {
            "calls": 15372,
            "min": 2749,
            "mean": 2749,
            "median": 2749,
            "max": 2749
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 255200,
          "size": 1017
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 104,
            "min": 3105,
            "mean": 3118,
            "median": 3119,
            "max": 3131
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 44,
            "min": 3661,
            "mean": 3669,
            "median": 3670,
            "max": 3677
          },
          "getArgUint256(uint256)": {
            "calls": 192,
            "min": 5532,
            "mean": 5546,
            "median": 5547,
            "max": 5558
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 104,
            "min": 10288,
            "mean": 11049,
            "median": 11067,
            "max": 11759
          },
          "getArgUint64(uint256)": {
            "calls": 104,
            "min": 3457,
            "mean": 3470,
            "median": 3471,
            "max": 3483
          },
          "getArgUint8(uint256)": {
            "calls": 104,
            "min": 3347,
            "mean": 3360,
            "median": 3361,
            "max": 3373
          },
          "getCalldataHash()": {
            "calls": 44,
            "min": 3777,
            "mean": 3801,
            "median": 3801,
            "max": 3823
          },
          "initialize(address)": {
            "calls": 160,
            "min": 22470,
            "mean": 22470,
            "median": 22470,
            "max": 22470
          },
          "proxiableUUID()": {
            "calls": 60,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 130,
            "min": 357,
            "mean": 4730,
            "median": 5198,
            "max": 6815
          },
          "setValue(uint256)": {
            "calls": 130,
            "min": 22304,
            "mean": 40392,
            "median": 43456,
            "max": 45600
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 140,
            "min": 2785,
            "mean": 9824,
            "median": 5472,
            "max": 32241
          },
          "value()": {
            "calls": 130,
            "min": 2247,
            "mean": 4994,
            "median": 5156,
            "max": 6703
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 350610,
          "size": 1217
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10280,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 33417,
            "min": 508,
            "mean": 1430,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 267916,
          "size": 836
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 20603,
            "min": 708,
            "mean": 2504,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 519857,
          "size": 2000
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15359,
            "min": 748,
            "mean": 748,
            "median": 748,
            "max": 748
          },
          "balanceOf(address)": {
            "calls": 56312,
            "min": 530,
            "mean": 1620,
            "median": 2530,
            "max": 2530
          },
          "setRawBytes(bytes)": {
            "calls": 30719,
            "min": 24338,
            "mean": 63223,
            "median": 66602,
            "max": 114433
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 274080,
          "size": 866
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 20611,
            "min": 908,
            "mean": 2503,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 355812,
          "size": 1241
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10279,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 33444,
            "min": 508,
            "mean": 1430,
            "median": 508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 268132,
          "size": 837
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 20528,
            "min": 708,
            "mean": 2503,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 265466,
          "size": 825
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 726,
            "mean": 726,
            "median": 726,
            "max": 726
          },
          "balanceOf(address)": {
            "calls": 10300,
            "min": 1108,
            "mean": 2504,
            "median": 2508,
            "max": 2508
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256VerifierEtcher",
        "deployment": {
          "gas": 145757,
          "size": 607
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 7,
            "min": 3041,
            "mean": 3042,
            "median": 3042,
            "max": 3044
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 4,
            "min": 3595,
            "mean": 3595,
            "median": 3595,
            "max": 3595
          },
          "getArgUint256(uint256)": {
            "calls": 15,
            "min": 5468,
            "mean": 5470,
            "median": 5471,
            "max": 5471
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 7,
            "min": 7418,
            "mean": 7444,
            "median": 7444,
            "max": 7471
          },
          "getArgUint64(uint256)": {
            "calls": 7,
            "min": 3393,
            "mean": 3394,
            "median": 3394,
            "max": 3396
          },
          "getArgUint8(uint256)": {
            "calls": 7,
            "min": 3283,
            "mean": 3284,
            "median": 3284,
            "max": 3286
          },
          "getCalldataHash()": {
            "calls": 4,
            "min": 3579,
            "mean": 3579,
            "median": 3579,
            "max": 3579
          },
          "revertWithError()": {
            "calls": 7,
            "min": 5247,
            "mean": 5248,
            "median": 5248,
            "max": 5250
          },
          "setValue(uint256)": {
            "calls": 7,
            "min": 43917,
            "mean": 43919,
            "median": 43919,
            "max": 43922
          },
          "value()": {
            "calls": 7,
            "min": 5156,
            "mean": 5157,
            "median": 5157,
            "max": 5159
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/utils/InvariantTest.sol:InvariantTest",
        "deployment": {
          "gas": 0,
          "size": 507
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3025,
            "mean": 3026,
            "median": 3026,
            "max": 3028
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 3,
            "min": 3574,
            "mean": 3576,
            "median": 3576,
            "max": 3577
          },
          "getArgUint256(uint256)": {
            "calls": 9,
            "min": 5452,
            "mean": 5454,
            "median": 5454,
            "max": 5455
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 6206,
            "mean": 6277,
            "median": 6277,
            "max": 6348
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3377,
            "mean": 3378,
            "median": 3378,
            "max": 3380
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3267,
            "mean": 3268,
            "median": 3268,
            "max": 3270
          },
          "getCalldataHash()": {
            "calls": 3,
            "min": 3516,
            "mean": 3520,
            "median": 3520,
            "max": 3525
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5231,
            "mean": 5232,
            "median": 5232,
            "max": 5234
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 43998,
            "mean": 44000,
            "median": 44000,
            "max": 44001
          },
          "value()": {
            "calls": 3,
            "min": 5140,
            "mean": 5142,
            "median": 5142,
            "max": 5143
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 270930,
          "size": 1175
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 20540,
            "min": 24480,
            "mean": 74290,
            "median": 36486,
            "max": 118229
          },
          "getAddress(bytes32)": {
            "calls": 5140,
            "min": 619,
            "mean": 619,
            "median": 619,
            "max": 619
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 97157,
          "size": 289
        },
        "functions": {
          "fallback()": {
            "calls": 140251,
            "min": 2846,
            "mean": 16847,
            "median": 10049,
            "max": 306080
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1038119,
          "size": 4630
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 20,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "EXECUTOR_ROLE()": {
            "calls": 80,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MAX_ROLE()": {
            "calls": 1240,
            "min": 250,
            "mean": 250,
            "median": 250,
            "max": 250
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 20,
            "min": 261,
            "mean": 261,
            "median": 261,
            "max": 261
          },
          "cancel(bytes32)": {
            "calls": 401,
            "min": 25525,
            "mean": 25765,
            "median": 25610,
            "max": 26308
          },
          "execute(bytes32,bytes)": {
            "calls": 5392,
            "min": 28507,
            "mean": 43548,
            "median": 44968,
            "max": 95706
          },
          "hasRole(address,uint256)": {
            "calls": 20,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 200,
            "min": 23366,
            "mean": 307529,
            "median": 378258,
            "max": 378258
          },
          "minDelay()": {
            "calls": 4769,
            "min": 2372,
            "mean": 2372,
            "median": 2372,
            "max": 2372
          },
          "operationState(bytes32)": {
            "calls": 19074,
            "min": 2577,
            "mean": 2577,
            "median": 2577,
            "max": 2577
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 5200,
            "min": 28838,
            "mean": 54918,
            "median": 55774,
            "max": 58278
          },
          "readyTimestamp(bytes32)": {
            "calls": 14332,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolderCount(uint256)": {
            "calls": 80,
            "min": 2499,
            "mean": 2499,
            "median": 2499,
            "max": 2499
          },
          "setRole(address,uint256,bool)": {
            "calls": 120,
            "min": 24164,
            "mean": 33828,
            "median": 24176,
            "max": 76131
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 636157,
          "size": 2726
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25740,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "decimals()": {
            "calls": 20,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "deposit()": {
            "calls": 10972,
            "min": 27568,
            "mean": 65101,
            "median": 67368,
            "max": 67368
          },
          "name()": {
            "calls": 20,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "receive()": {
            "calls": 5797,
            "min": 27420,
            "mean": 63351,
            "median": 67220,
            "max": 67220
          },
          "symbol()": {
            "calls": 20,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "withdraw(uint256)": {
            "calls": 5580,
            "min": 27990,
            "mean": 39620,
            "median": 40316,
            "max": 40434
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 473250,
          "size": 1971
        },
        "functions": {
          "adminOf(address)": {
            "calls": 9610,
            "min": 2486,
            "mean": 2486,
            "median": 2486,
            "max": 2486
          },
          "changeAdmin(address,address)": {
            "calls": 40,
            "min": 24321,
            "mean": 26533,
            "median": 26533,
            "max": 28746
          },
          "deploy(address,address)": {
            "calls": 5340,
            "min": 22301,
            "mean": 55333,
            "median": 22321,
            "max": 126390
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 5140,
            "min": 105837,
            "mean": 159270,
            "median": 159719,
            "max": 159820
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 5120,
            "min": 23880,
            "mean": 142169,
            "median": 160029,
            "max": 160213
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 5120,
            "min": 736,
            "mean": 736,
            "median": 736,
            "max": 736
          },
          "upgrade(address,address)": {
            "calls": 100,
            "min": 24320,
            "mean": 28040,
            "median": 24332,
            "max": 33616
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 40,
            "min": 35652,
            "mean": 51359,
            "median": 51359,
            "max": 67067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 237303,
          "size": 997
        },
        "functions": {
          "implementation()": {
            "calls": 98733,
            "min": 105,
            "mean": 2284,
            "median": 2300,
            "max": 2300
          },
          "owner()": {
            "calls": 10247,
            "min": 2310,
            "mean": 2310,
            "median": 2310,
            "max": 2310
          },
          "renounceOwnership()": {
            "calls": 864,
            "min": 23125,
            "mean": 23313,
            "median": 23348,
            "max": 23348
          },
          "transferOwnership(address)": {
            "calls": 3258,
            "min": 23642,
            "mean": 27132,
            "median": 28473,
            "max": 28473
          },
          "upgradeTo(address)": {
            "calls": 1982,
            "min": 23737,
            "mean": 26469,
            "median": 23827,
            "max": 32627
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3596928,
          "size": 17894
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 760,
            "min": 23065,
            "mean": 75881,
            "median": 42263,
            "max": 201323
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 5120,
            "min": 21888,
            "mean": 22752,
            "median": 21900,
            "max": 25999
          },
          "decodeWord(string)": {
            "calls": 120,
            "min": 7208,
            "mean": 7350,
            "median": 7276,
            "max": 7641
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2701228,
          "size": 13421
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 25700,
            "min": 89176,
            "mean": 38938217,
            "median": 898515,
            "max": 96808697
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 4245782,
          "size": 21134
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 20,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "addHours(uint256,uint256)": {
            "calls": 20,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          },
          "addMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 484,
            "mean": 484,
            "median": 484,
            "max": 484
          },
          "addMonths(uint256,uint256)": {
            "calls": 20,
            "min": 1532,
            "mean": 1532,
            "median": 1532,
            "max": 1532
          },
          "addSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 423,
            "mean": 423,
            "median": 423,
            "max": 423
          },
          "addYears(uint256,uint256)": {
            "calls": 20,
            "min": 1315,
            "mean": 1315,
            "median": 1315,
            "max": 1315
          },
          "diffDays(uint256,uint256)": {
            "calls": 20,
            "min": 470,
            "mean": 470,
            "median": 470,
            "max": 470
          },
          "diffHours(uint256,uint256)": {
            "calls": 20,
            "min": 449,
            "mean": 449,
            "median": 449,
            "max": 449
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 450,
            "mean": 450,
            "median": 450,
            "max": 450
          },
          "diffMonths(uint256,uint256)": {
            "calls": 20,
            "min": 422,
            "mean": 422,
            "median": 422,
            "max": 422
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 467,
            "mean": 467,
            "median": 467,
            "max": 467
          },
          "diffYears(uint256,uint256)": {
            "calls": 20,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "subDays(uint256,uint256)": {
            "calls": 20,
            "min": 461,
            "mean": 461,
            "median": 461,
            "max": 461
          },
          "subHours(uint256,uint256)": {
            "calls": 20,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "subMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 439,
            "mean": 439,
            "median": 439,
            "max": 439
          },
          "subMonths(uint256,uint256)": {
            "calls": 20,
            "min": 869,
            "mean": 869,
            "median": 869,
            "max": 869
          },
          "subSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 466,
            "mean": 466,
            "median": 466,
            "max": 466
          },
          "subYears(uint256,uint256)": {
            "calls": 20,
            "min": 814,
            "mean": 814,
            "median": 814,
            "max": 814
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 367694,
          "size": 1336
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 2629,
            "min": 67730,
            "mean": 67952,
            "median": 68082,
            "max": 68102
          },
          "predictDeployment(bytes32)": {
            "calls": 5120,
            "min": 2708,
            "mean": 2708,
            "median": 2708,
            "max": 2708
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 196064,
          "size": 691
        },
        "functions": {
          "generate(bytes)": {
            "calls": 2930,
            "min": 0,
            "mean": 2896,
            "median": 1505,
            "max": 66341
          },
          "next(uint256)": {
            "calls": 5097,
            "min": 362,
            "mean": 362,
            "median": 362,
            "max": 362
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 2627137,
          "size": 13051
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 1442,
            "mean": 1442,
            "median": 1442,
            "max": 1442
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 429,
            "mean": 429,
            "median": 429,
            "max": 429
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 3510622,
          "size": 17463
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 702,
            "min": 854,
            "mean": 928,
            "median": 931,
            "max": 971
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 732,
            "min": 626295,
            "mean": 732657,
            "median": 627392,
            "max": 3113548
          },
          "recover(bytes32,bytes)": {
            "calls": 3182,
            "min": 22632,
            "mean": 27260,
            "median": 26839,
            "max": 30521
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 891,
            "min": 3724,
            "mean": 25144,
            "median": 26238,
            "max": 26324
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5800,
            "min": 25984,
            "mean": 26249,
            "median": 26362,
            "max": 26489
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 2922,
            "min": 651815,
            "mean": 777721,
            "median": 653280,
            "max": 4470215
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 851,
            "min": 651470,
            "mean": 764744,
            "median": 652627,
            "max": 3082877
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5800,
            "min": 651302,
            "mean": 769393,
            "median": 652734,
            "max": 4530477
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 3182,
            "min": 23151,
            "mean": 30356,
            "median": 30564,
            "max": 30575
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 891,
            "min": 3679,
            "mean": 25110,
            "median": 26228,
            "max": 26279
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5800,
            "min": 26102,
            "mean": 26352,
            "median": 26479,
            "max": 26490
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 2922,
            "min": 655535,
            "mean": 791055,
            "median": 656892,
            "max": 4424468
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 851,
            "min": 651416,
            "mean": 734682,
            "median": 652665,
            "max": 2641695
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5800,
            "min": 651534,
            "mean": 752138,
            "median": 652894,
            "max": 4642277
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 519796,
          "size": 2190
        },
        "functions": {
          "batchAmounts()": {
            "calls": 10400,
            "min": 2664,
            "mean": 6118,
            "median": 6370,
            "max": 9447
          },
          "batchData()": {
            "calls": 10400,
            "min": 2921,
            "mean": 245129,
            "median": 3100,
            "max": 8580419
          },
          "batchFrom()": {
            "calls": 10400,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "batchIds()": {
            "calls": 10400,
            "min": 2684,
            "mean": 6137,
            "median": 6388,
            "max": 9466
          },
          "batchOperator()": {
            "calls": 10400,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "from()": {
            "calls": 10240,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "id()": {
            "calls": 10240,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "mintData()": {
            "calls": 10240,
            "min": 2944,
            "mean": 272675,
            "median": 3123,
            "max": 8752554
          },
          "operator()": {
            "calls": 10240,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 1674586,
          "size": 7527
        },
        "functions": {
          "afterCounter()": {
            "calls": 3200,
            "min": 350,
            "mean": 350,
            "median": 350,
            "max": 350
          },
          "beforeCounter()": {
            "calls": 3200,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 62999,
            "mean": 63131,
            "median": 63227,
            "max": 63235
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 59176,
            "mean": 59308,
            "median": 59404,
            "max": 59412
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 50547,
            "mean": 52772,
            "median": 50547,
            "max": 121747
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 62303,
            "mean": 62435,
            "median": 62531,
            "max": 62535
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1280,
            "min": 49633,
            "mean": 63258,
            "median": 59162,
            "max": 76030
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 337462,
          "size": 1369
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 677,
            "min": 44278,
            "mean": 51133,
            "median": 51458,
            "max": 51757
          },
          "mint(address,uint256)": {
            "calls": 657,
            "min": 49358,
            "mean": 72768,
            "median": 62007,
            "max": 96326
          },
          "sum()": {
            "calls": 20,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "transfer(address,uint256)": {
            "calls": 4,
            "min": 34202,
            "mean": 34202,
            "median": 34202,
            "max": 34202
          },
          "transferFrom(address,address,uint256)": {
            "calls": 5,
            "min": 37509,
            "mean": 37510,
            "median": 37510,
            "max": 37510
          },
          "burn(address,uint256)": {
            "calls": 4,
            "min": 39018,
            "mean": 39020,
            "median": 39020,
            "max": 39022
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5082,
            "mean": 5082,
            "median": 5082,
            "max": 5082
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44190,
            "mean": 44190,
            "median": 44190,
            "max": 44190
          },
          "value()": {
            "calls": 1,
            "min": 5096,
            "mean": 5096,
            "median": 5096,
            "max": 5096
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 4817161,
          "size": 23987
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 10240,
            "min": 24746,
            "mean": 50557,
            "median": 48495,
            "max": 74307
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 298541,
          "size": 1164
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 60,
            "min": 251,
            "mean": 1220,
            "median": 251,
            "max": 3160
          },
          "data()": {
            "calls": 5140,
            "min": 2920,
            "mean": 3506,
            "median": 2920,
            "max": 11636
          },
          "datahash()": {
            "calls": 12867,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "setData(bytes)": {
            "calls": 5140,
            "min": 25445,
            "mean": 34140,
            "median": 25445,
            "max": 134182
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 7200952,
          "size": 35888
        },
        "functions": {
          "decimals()": {
            "calls": 20,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22272,
            "mean": 22651,
            "median": 22540,
            "max": 23423
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22300,
            "mean": 22623,
            "median": 22515,
            "max": 23357
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 276065,
          "size": 1060
        },
        "functions": {
          "datahash()": {
            "calls": 7639,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 305797,
          "size": 1200
        },
        "functions": {
          "data()": {
            "calls": 20480,
            "min": 2898,
            "mean": 4532,
            "median": 2898,
            "max": 11614
          },
          "from()": {
            "calls": 20480,
            "min": 2380,
            "mean": 2380,
            "median": 2380,
            "max": 2380
          },
          "id()": {
            "calls": 20480,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "operator()": {
            "calls": 20480,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1429297,
          "size": 6401
        },
        "functions": {
          "afterCounter()": {
            "calls": 640,
            "min": 405,
            "mean": 405,
            "median": 405,
            "max": 405
          },
          "beforeCounter()": {
            "calls": 640,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "mint(address,uint256)": {
            "calls": 640,
            "min": 62171,
            "mean": 63785,
            "median": 62183,
            "max": 113483
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 58427,
            "mean": 59085,
            "median": 58643,
            "max": 75755
          },
          "transferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 65506,
            "mean": 70049,
            "median": 70192,
            "max": 70306
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2427704,
          "size": 12055
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 9014,
            "min": 828,
            "mean": 847,
            "median": 840,
            "max": 1023
          },
          "returnsHash(bytes)": {
            "calls": 8906,
            "min": 744,
            "mean": 764,
            "median": 756,
            "max": 936
          },
          "revertsWithCustomError()": {
            "calls": 153,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1115655,
          "size": 5502
        },
        "functions": {
          "get(address)": {
            "calls": 10088,
            "min": 2621,
            "mean": 5936,
            "median": 6415,
            "max": 9247
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 2900,
            "min": 26965,
            "mean": 49145,
            "median": 37491,
            "max": 165345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 3836641,
          "size": 19091
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 3443,
            "min": 21813,
            "mean": 45109,
            "median": 44241,
            "max": 128208
          },
          "addToBytes32Set(bytes32)": {
            "calls": 3523,
            "min": 21747,
            "mean": 47107,
            "median": 46399,
            "max": 133829
          },
          "addressSetAt(uint256)": {
            "calls": 351,
            "min": 4856,
            "mean": 6020,
            "median": 5069,
            "max": 9125
          },
          "addressSetContains(address)": {
            "calls": 3248,
            "min": 535,
            "mean": 6947,
            "median": 7085,
            "max": 7092
          },
          "bytes32SetAt(uint256)": {
            "calls": 350,
            "min": 4850,
            "mean": 5912,
            "median": 4850,
            "max": 9964
          },
          "bytes32SetContains(bytes32)": {
            "calls": 3415,
            "min": 670,
            "mean": 8811,
            "median": 9070,
            "max": 9072
          },
          "removeFromAddressSet(address)": {
            "calls": 3466,
            "min": 21790,
            "mean": 28223,
            "median": 28476,
            "max": 28476
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 3441,
            "min": 21726,
            "mean": 30260,
            "median": 30628,
            "max": 30630
          },
          "uint8SetAt(uint256)": {
            "calls": 336,
            "min": 2490,
            "mean": 2522,
            "median": 2490,
            "max": 3176
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 180,
            "min": 26881,
            "mean": 50169,
            "median": 47017,
            "max": 142883
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 46080,
            "min": 28776,
            "mean": 54002,
            "median": 49019,
            "max": 161830
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 46080,
            "min": 24367,
            "mean": 28359,
            "median": 27540,
            "max": 44564
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 12132288,
          "size": 60499
        },
        "functions": {
          "_testMulSqrt(uint256,uint256,uint256)": {
            "calls": 1460,
            "min": 22891,
            "mean": 25969,
            "median": 26601,
            "max": 27957
          },
          "add(uint256,uint256)": {
            "calls": 5140,
            "min": 444,
            "mean": 485,
            "median": 488,
            "max": 488
          },
          "divWad(uint256,uint256)": {
            "calls": 1757,
            "min": 416,
            "mean": 416,
            "median": 416,
            "max": 416
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 488,
            "mean": 558,
            "median": 591,
            "max": 591
          },
          "divWadUp(uint256,uint256)": {
            "calls": 1808,
            "min": 413,
            "mean": 413,
            "median": 413,
            "max": 413
          },
          "factorial(uint256)": {
            "calls": 20,
            "min": 383,
            "mean": 383,
            "median": 383,
            "max": 383
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 6374,
            "min": 550,
            "mean": 572,
            "median": 550,
            "max": 894
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 5120,
            "min": 592,
            "mean": 611,
            "median": 609,
            "max": 706
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 5160,
            "min": 585,
            "mean": 587,
            "median": 585,
            "max": 921
          },
          "lambertW0Wad(int256)": {
            "calls": 240,
            "min": 445,
            "mean": 445,
            "median": 445,
            "max": 445
          },
          "lnWad(int256)": {
            "calls": 60,
            "min": 545,
            "mean": 545,
            "median": 545,
            "max": 545
          },
          "mul(uint256,uint256)": {
            "calls": 5140,
            "min": 503,
            "mean": 533,
            "median": 547,
            "max": 547
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 488,
            "mean": 533,
            "median": 568,
            "max": 572
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 10240,
            "min": 489,
            "mean": 549,
            "median": 598,
            "max": 598
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 488,
            "mean": 549,
            "median": 598,
            "max": 598
          },
          "mulWad(uint256,uint256)": {
            "calls": 2247,
            "min": 436,
            "mean": 436,
            "median": 436,
            "max": 436
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 464,
            "mean": 521,
            "median": 567,
            "max": 567
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 2268,
            "min": 442,
            "mean": 442,
            "median": 442,
            "max": 442
          },
          "packSci(uint256)": {
            "calls": 20,
            "min": 632,
            "mean": 632,
            "median": 632,
            "max": 632
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 40,
            "min": 746,
            "mean": 1490,
            "median": 1490,
            "max": 2235
          },
          "sDivWad(int256,int256)": {
            "calls": 1407,
            "min": 476,
            "mean": 476,
            "median": 476,
            "max": 476
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 550,
            "mean": 661,
            "median": 699,
            "max": 699
          },
          "sMulWad(int256,int256)": {
            "calls": 1865,
            "min": 501,
            "mean": 501,
            "median": 501,
            "max": 501
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 467,
            "mean": 600,
            "median": 656,
            "max": 656
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 7467381,
          "size": 37218
        },
        "functions": {
          "decodeString(string)": {
            "calls": 5640,
            "min": 10553,
            "mean": 13088,
            "median": 12959,
            "max": 20230
          },
          "parseInt(string)": {
            "calls": 15880,
            "min": 10696,
            "mean": 19446,
            "median": 21832,
            "max": 22037
          },
          "parseUint(string)": {
            "calls": 5560,
            "min": 10660,
            "mean": 14949,
            "median": 13278,
            "max": 21860
          },
          "parseUintFromHex(string)": {
            "calls": 6400,
            "min": 979,
            "mean": 3249,
            "median": 1335,
            "max": 9987
          },
          "parsedValue(string)": {
            "calls": 24060,
            "min": 10713,
            "mean": 14519,
            "median": 14193,
            "max": 23526
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 1750734,
          "size": 8674
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 20,
            "min": 415,
            "mean": 415,
            "median": 415,
            "max": 415
          },
          "returnsBool(uint256)": {
            "calls": 20,
            "min": 341,
            "mean": 341,
            "median": 341,
            "max": 341
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 1647422,
          "size": 8158
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 40,
            "min": 23799,
            "mean": 33892,
            "median": 33892,
            "max": 43985
          },
          "claimWithToggle(uint256)": {
            "calls": 40,
            "min": 26756,
            "mean": 35286,
            "median": 35286,
            "max": 43817
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 2759297,
          "size": 13711
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 10638,
            "min": 23479,
            "mean": 24478,
            "median": 24120,
            "max": 27272
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 15440,
            "min": 25286,
            "mean": 27281,
            "median": 26802,
            "max": 93260
          },
          "_testLoadCalldata(bytes)": {
            "calls": 5120,
            "min": 28402,
            "mean": 28969,
            "median": 28828,
            "max": 30150
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 80,
            "min": 25111,
            "mean": 26522,
            "median": 26747,
            "max": 27483
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 5518,
            "min": 3005,
            "mean": 740830,
            "median": 646483,
            "max": 4393277
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2359822,
          "size": 11716
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5180,
            "min": 110086,
            "mean": 1327916,
            "median": 963515,
            "max": 83524431
          },
          "getArgAddress(uint256)": {
            "calls": 127,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 127,
            "min": 725,
            "mean": 740,
            "median": 741,
            "max": 755
          },
          "getArgUint256(uint256)": {
            "calls": 381,
            "min": 2726,
            "mean": 2726,
            "median": 2726,
            "max": 2726
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 127,
            "min": 13423,
            "mean": 38356,
            "median": 38665,
            "max": 62699
          },
          "getArgUint64(uint256)": {
            "calls": 127,
            "min": 397,
            "mean": 397,
            "median": 397,
            "max": 397
          },
          "getArgUint8(uint256)": {
            "calls": 127,
            "min": 420,
            "mean": 420,
            "median": 420,
            "max": 420
          },
          "getCalldataHash()": {
            "calls": 127,
            "min": 999,
            "mean": 2073,
            "median": 2090,
            "max": 3121
          },
          "revertWithError()": {
            "calls": 127,
            "min": 2410,
            "mean": 2410,
            "median": 2410,
            "max": 2410
          },
          "setValue(uint256)": {
            "calls": 127,
            "min": 22377,
            "mean": 22377,
            "median": 22377,
            "max": 22377
          },
          "value()": {
            "calls": 20727,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 182699,
          "size": 628
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 10240,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "setHash(uint256,bytes)": {
            "calls": 5120,
            "min": 44736,
            "mean": 45390,
            "median": 45199,
            "max": 46744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 942676,
          "size": 4638
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 7764,
            "min": 742,
            "mean": 949,
            "median": 1052,
            "max": 1077
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 8960342,
          "size": 44670
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 301,
            "min": 3112,
            "mean": 3112,
            "median": 3112,
            "max": 3112
          },
          "argsOnClone(address,uint256)": {
            "calls": 239,
            "min": 3147,
            "mean": 3147,
            "median": 3147,
            "max": 3147
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 176,
            "min": 3285,
            "mean": 3790,
            "median": 3288,
            "max": 6349
          },
          "argsOnERC1967(address)": {
            "calls": 283,
            "min": 3130,
            "mean": 3130,
            "median": 3130,
            "max": 3130
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 200,
            "min": 3145,
            "mean": 3145,
            "median": 3145,
            "max": 3145
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 135,
            "min": 3332,
            "mean": 4002,
            "median": 3332,
            "max": 6389
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 141,
            "min": 3088,
            "mean": 3088,
            "median": 3088,
            "max": 3088
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 89,
            "min": 3103,
            "mean": 3103,
            "median": 3103,
            "max": 3103
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 71,
            "min": 3307,
            "mean": 4196,
            "median": 4331,
            "max": 5359
          },
          "argsOnERC1967I(address)": {
            "calls": 169,
            "min": 3065,
            "mean": 3065,
            "median": 3065,
            "max": 3065
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 126,
            "min": 3102,
            "mean": 3102,
            "median": 3102,
            "max": 3102
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 100,
            "min": 3285,
            "mean": 3285,
            "median": 3285,
            "max": 3285
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 97,
            "min": 3087,
            "mean": 3087,
            "median": 3087,
            "max": 3087
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 70,
            "min": 3101,
            "mean": 3101,
            "median": 3101,
            "max": 3101
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 53,
            "min": 3330,
            "mean": 3546,
            "median": 3330,
            "max": 4409
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 1270,
            "min": 36199,
            "mean": 46344,
            "median": 43791,
            "max": 56742
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 15360,
            "min": 898,
            "mean": 906,
            "median": 911,
            "max": 914
          },
          "clone(address)": {
            "calls": 5140,
            "min": 86093,
            "mean": 86093,
            "median": 86093,
            "max": 86093
          },
          "clone(address,bytes)": {
            "calls": 5140,
            "min": 70090,
            "mean": 2917773,
            "median": 72621,
            "max": 96819276
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5297,
            "min": 70809,
            "mean": 6119449,
            "median": 74087,
            "max": 96822995
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 5140,
            "min": 86720,
            "mean": 129422,
            "median": 87089,
            "max": 1424224
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 5285,
            "min": 0,
            "mean": 312559,
            "median": 76191,
            "max": 12031282
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5282,
            "min": 0,
            "mean": 377136,
            "median": 101721,
            "max": 12898492
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 5120,
            "min": 115402,
            "mean": 159923,
            "median": 115772,
            "max": 2206369
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 7166,
            "min": 0,
            "mean": 335568,
            "median": 105567,
            "max": 12887483
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 102561,
            "mean": 142223,
            "median": 102929,
            "max": 1606694
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5293,
            "min": 0,
            "mean": 381457,
            "median": 106145,
            "max": 12330417
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 5120,
            "min": 119713,
            "mean": 162364,
            "median": 120078,
            "max": 2043577
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 7124,
            "min": 0,
            "mean": 341973,
            "median": 106609,
            "max": 12586153
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 103551,
            "mean": 144330,
            "median": 103919,
            "max": 1928851
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5299,
            "min": 96288,
            "mean": 5556141,
            "median": 99584,
            "max": 96821194
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 7679,
            "min": 95277,
            "mean": 147350,
            "median": 112508,
            "max": 2409710
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 9023,
            "min": 97003,
            "mean": 17362718,
            "median": 105918,
            "max": 96822239
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 99523,
            "mean": 143213,
            "median": 99893,
            "max": 2190271
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5271,
            "min": 100555,
            "mean": 6329313,
            "median": 104084,
            "max": 96822550
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 12861,
            "min": 99541,
            "mean": 151062,
            "median": 100009,
            "max": 3132548
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 9084,
            "min": 97574,
            "mean": 17539042,
            "median": 107055,
            "max": 96824846
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 100536,
            "mean": 142685,
            "median": 100904,
            "max": 1541664
          },
          "deployERC1967(address,bytes)": {
            "calls": 5140,
            "min": 95391,
            "mean": 3764798,
            "median": 98248,
            "max": 96825939
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 10240,
            "min": 98836,
            "mean": 140304,
            "median": 98925,
            "max": 2822567
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 2555,
            "min": 96691,
            "mean": 3529972,
            "median": 102366,
            "max": 96813293
          },
          "deployERC1967I(address)": {
            "calls": 5140,
            "min": 115914,
            "mean": 115914,
            "median": 115914,
            "max": 115914
          },
          "deployERC1967I(address,bytes)": {
            "calls": 5140,
            "min": 99721,
            "mean": 3160580,
            "median": 102599,
            "max": 96821768
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 10260,
            "min": 99836,
            "mean": 141547,
            "median": 99921,
            "max": 2684516
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 2594,
            "min": 97267,
            "mean": 3711201,
            "median": 103727,
            "max": 96807165
          },
          "revertWithError()": {
            "calls": 142601,
            "min": 107,
            "mean": 2395,
            "median": 2411,
            "max": 2896
          },
          "setValue(uint256)": {
            "calls": 149835,
            "min": 1495,
            "mean": 22284,
            "median": 22445,
            "max": 23884
          },
          "value()": {
            "calls": 420519,
            "min": 111,
            "mean": 2421,
            "median": 2430,
            "max": 2915
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 2612722,
          "size": 12979
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 664,
            "mean": 664,
            "median": 664,
            "max": 664
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 646,
            "mean": 646,
            "median": 646,
            "max": 646
          },
          "decodeBatch(bytes)": {
            "calls": 1315,
            "min": 1332,
            "mean": 3259,
            "median": 3174,
            "max": 5485
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 466,
            "min": 1495,
            "mean": 1690,
            "median": 1692,
            "max": 1937
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 12878,
            "min": 706,
            "mean": 2122,
            "median": 1117,
            "max": 6314
          },
          "decodeDelegate(bytes)": {
            "calls": 5120,
            "min": 1047,
            "mean": 1062,
            "median": 1055,
            "max": 1091
          },
          "decodeSingle(bytes)": {
            "calls": 5120,
            "min": 1086,
            "mean": 1103,
            "median": 1096,
            "max": 1131
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 20,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 2578,
            "min": 30741,
            "mean": 39944,
            "median": 38957,
            "max": 58150
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 5120,
            "min": 648171,
            "mean": 769345,
            "median": 653948,
            "max": 4415071
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 2305362,
          "size": 11444
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 20,
            "min": 2595,
            "mean": 2595,
            "median": 2595,
            "max": 2595
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 20,
            "min": 2624,
            "mean": 2624,
            "median": 2624,
            "max": 2624
          },
          "setUint8(uint256,uint8)": {
            "calls": 20,
            "min": 44062,
            "mean": 44062,
            "median": 44062,
            "max": 44062
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 20,
            "min": 44031,
            "mean": 44031,
            "median": 44031,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 2830182,
          "size": 14065
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 5120,
            "min": 2429,
            "mean": 3607,
            "median": 3717,
            "max": 4771
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 5120,
            "min": 23803,
            "mean": 23828,
            "median": 23839,
            "max": 23839
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 10280,
            "min": 21555,
            "mean": 43358,
            "median": 43809,
            "max": 43809
          },
          "lazyShufflerNext(uint256)": {
            "calls": 5140,
            "min": 23684,
            "mean": 23974,
            "median": 24062,
            "max": 24062
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 5021049,
          "size": 25005
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 400,
            "min": 24600,
            "mean": 37993,
            "median": 27749,
            "max": 91356
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 400,
            "min": 24912,
            "mean": 45695,
            "median": 29693,
            "max": 129914
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibStorage.t.sol:LibStorageTest",
        "deployment": {
          "gas": 253409,
          "size": 1091
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 58,
            "min": 3267,
            "mean": 3273,
            "median": 3272,
            "max": 3281
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 34,
            "min": 3616,
            "mean": 3622,
            "median": 3622,
            "max": 3628
          },
          "getArgUint256(uint256)": {
            "calls": 126,
            "min": 5604,
            "mean": 5611,
            "median": 5611,
            "max": 5618
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 58,
            "min": 11446,
            "mean": 11858,
            "median": 11902,
            "max": 12208
          },
          "getArgUint64(uint256)": {
            "calls": 58,
            "min": 3275,
            "mean": 3281,
            "median": 3280,
            "max": 3289
          },
          "getArgUint8(uint256)": {
            "calls": 58,
            "min": 3298,
            "mean": 3304,
            "median": 3303,
            "max": 3312
          },
          "getCalldataHash()": {
            "calls": 34,
            "min": 3648,
            "mean": 3666,
            "median": 3666,
            "max": 3684
          },
          "revertWithError()": {
            "calls": 60,
            "min": 5272,
            "mean": 5345,
            "median": 5289,
            "max": 5700
          },
          "setValue(uint256)": {
            "calls": 60,
            "min": 43969,
            "mean": 44070,
            "median": 43990,
            "max": 44507
          },
          "value()": {
            "calls": 60,
            "min": 5205,
            "mean": 5275,
            "median": 5217,
            "max": 5633
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 10017885,
          "size": 49948
        },
        "functions": {
          "returnString(string)": {
            "calls": 5180,
            "min": 873,
            "mean": 881,
            "median": 881,
            "max": 891
          },
          "toHexString(uint256,uint256)": {
            "calls": 20,
            "min": 603,
            "mean": 603,
            "median": 603,
            "max": 603
          },
          "toSmallString(string)": {
            "calls": 20,
            "min": 818,
            "mean": 818,
            "median": 818,
            "max": 818
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 229928,
          "size": 845
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27606,
            "mean": 52003,
            "median": 51118,
            "max": 82868
          },
          "x()": {
            "calls": 120,
            "min": 3054,
            "mean": 10545,
            "median": 6193,
            "max": 37502
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 176259,
          "size": 597
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27392,
            "mean": 42061,
            "median": 32834,
            "max": 82275
          },
          "x()": {
            "calls": 120,
            "min": 2666,
            "mean": 9570,
            "median": 4885,
            "max": 37430
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2248696,
          "size": 11161
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 30760,
            "min": 22551,
            "mean": 26792,
            "median": 28015,
            "max": 29560
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 35900,
            "min": 25291,
            "mean": 33067,
            "median": 33433,
            "max": 61132
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 1771562,
          "size": 8778
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 5097,
            "min": 1229,
            "mean": 41991,
            "median": 41642,
            "max": 83150
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 5105,
            "min": 1414,
            "mean": 48875,
            "median": 45066,
            "max": 85791
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 5103,
            "min": 1378,
            "mean": 41696,
            "median": 41538,
            "max": 83390
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 32,
            "min": 742,
            "mean": 742,
            "median": 742,
            "max": 742
          },
          "getRootFromEmptyTree()": {
            "calls": 20,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 20,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 1550517,
          "size": 7674
        },
        "functions": {
          "decimals()": {
            "calls": 5120,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "name()": {
            "calls": 5120,
            "min": 5027,
            "mean": 6924,
            "median": 5251,
            "max": 13776
          },
          "returnsBytes32StringA()": {
            "calls": 20,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "returnsBytes32StringB()": {
            "calls": 800,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "returnsChoppedString(uint256)": {
            "calls": 2100,
            "min": 353,
            "mean": 353,
            "median": 353,
            "max": 356
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 11200,
            "min": 293,
            "mean": 293,
            "median": 293,
            "max": 293
          },
          "returnsEmptyString()": {
            "calls": 5120,
            "min": 5039,
            "mean": 6949,
            "median": 5257,
            "max": 13851
          },
          "returnsNothing()": {
            "calls": 5160,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "returnsString()": {
            "calls": 10240,
            "min": 5031,
            "mean": 7003,
            "median": 5255,
            "max": 13796
          },
          "returnsUint()": {
            "calls": 5120,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "reverts()": {
            "calls": 5160,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "symbol()": {
            "calls": 5120,
            "min": 5048,
            "mean": 6945,
            "median": 5272,
            "max": 13797
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 3042239,
          "size": 15124
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 2466,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "enqueue(uint256,uint256)": {
            "calls": 7672,
            "min": 23944,
            "mean": 52496,
            "median": 66520,
            "max": 66664
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 2422,
            "min": 722,
            "mean": 722,
            "median": 722,
            "max": 722
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 2434,
            "min": 776,
            "mean": 777,
            "median": 778,
            "max": 779
          },
          "pop()": {
            "calls": 1305,
            "min": 23548,
            "mean": 23548,
            "median": 23548,
            "max": 23548
          },
          "replace(uint256)": {
            "calls": 1242,
            "min": 23790,
            "mean": 24073,
            "median": 24160,
            "max": 24161
          },
          "root()": {
            "calls": 2528,
            "min": 2397,
            "mean": 2397,
            "median": 2397,
            "max": 2397
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2497386,
          "size": 12403
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22541,
            "mean": 23467,
            "median": 23996,
            "max": 24016
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 1337464,
          "size": 3987
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 482,
            "min": 3535,
            "mean": 3578,
            "median": 3579,
            "max": 3628
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 235,
            "min": 3889,
            "mean": 3932,
            "median": 3934,
            "max": 3977
          },
          "getArgUint256(uint256)": {
            "calls": 952,
            "min": 5872,
            "mean": 5916,
            "median": 5917,
            "max": 5965
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 482,
            "min": 24000,
            "mean": 26312,
            "median": 26223,
            "max": 28865
          },
          "getArgUint64(uint256)": {
            "calls": 482,
            "min": 3543,
            "mean": 3586,
            "median": 3587,
            "max": 3636
          },
          "getArgUint8(uint256)": {
            "calls": 482,
            "min": 3566,
            "mean": 3610,
            "median": 3610,
            "max": 3659
          },
          "getCalldataHash()": {
            "calls": 235,
            "min": 4455,
            "mean": 4568,
            "median": 4573,
            "max": 4689
          },
          "revertWithError()": {
            "calls": 497,
            "min": 5435,
            "mean": 5655,
            "median": 5597,
            "max": 6995
          },
          "setValue(uint256)": {
            "calls": 497,
            "min": 44225,
            "mean": 44439,
            "median": 44321,
            "max": 46029
          },
          "value()": {
            "calls": 497,
            "min": 5384,
            "mean": 5586,
            "median": 5525,
            "max": 6958
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 2640552,
          "size": 13118
        },
        "functions": {
          "find(uint256)": {
            "calls": 20,
            "min": 426,
            "mean": 426,
            "median": 426,
            "max": 426
          },
          "insert(uint256)": {
            "calls": 40,
            "min": 21621,
            "mean": 24121,
            "median": 24121,
            "max": 26621
          },
          "remove(bytes32)": {
            "calls": 5180,
            "min": 24014,
            "mean": 24342,
            "median": 24345,
            "max": 24345
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ReentrancyGuard.t.sol:ReentrancyGuardTest",
        "deployment": {
          "gas": 1182001,
          "size": 4501
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 449,
            "min": 3774,
            "mean": 3847,
            "median": 3848,
            "max": 3923
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 224,
            "min": 4128,
            "mean": 4196,
            "median": 4198,
            "max": 4268
          },
          "getArgUint256(uint256)": {
            "calls": 897,
            "min": 6111,
            "mean": 6185,
            "median": 6189,
            "max": 6260
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 449,
            "min": 35196,
            "mean": 38835,
            "median": 38935,
            "max": 42450
          },
          "getArgUint64(uint256)": {
            "calls": 449,
            "min": 3782,
            "mean": 3855,
            "median": 3856,
            "max": 3931
          },
          "getArgUint8(uint256)": {
            "calls": 449,
            "min": 3805,
            "mean": 3878,
            "median": 3879,
            "max": 3954
          },
          "getCalldataHash()": {
            "calls": 224,
            "min": 5158,
            "mean": 5359,
            "median": 5362,
            "max": 5569
          },
          "revertWithError()": {
            "calls": 470,
            "min": 5647,
            "mean": 5950,
            "median": 5866,
            "max": 8205
          },
          "setValue(uint256)": {
            "calls": 470,
            "min": 44378,
            "mean": 44679,
            "median": 44567,
            "max": 47216
          },
          "value()": {
            "calls": 470,
            "min": 5592,
            "mean": 5882,
            "median": 5794,
            "max": 8190
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1810005,
          "size": 8970
        },
        "functions": {
          "read(address)": {
            "calls": 3143,
            "min": 2520,
            "mean": 3100,
            "median": 3020,
            "max": 3437
          },
          "read(address,uint256)": {
            "calls": 1978,
            "min": 1427,
            "mean": 3170,
            "median": 3052,
            "max": 3502
          },
          "read(address,uint256,uint256)": {
            "calls": 1259,
            "min": 3032,
            "mean": 3738,
            "median": 3510,
            "max": 15310
          },
          "write(bytes)": {
            "calls": 40,
            "min": 13468528,
            "mean": 48556581,
            "median": 48556581,
            "max": 83644634
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 9079161,
          "size": 45263
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 570,
            "min": 381,
            "mean": 431,
            "median": 455,
            "max": 455
          },
          "toInt104(uint256)": {
            "calls": 304,
            "min": 396,
            "mean": 425,
            "median": 406,
            "max": 472
          },
          "toInt112(int256)": {
            "calls": 600,
            "min": 381,
            "mean": 432,
            "median": 455,
            "max": 455
          },
          "toInt112(uint256)": {
            "calls": 298,
            "min": 417,
            "mean": 449,
            "median": 426,
            "max": 493
          },
          "toInt120(int256)": {
            "calls": 648,
            "min": 407,
            "mean": 459,
            "median": 481,
            "max": 481
          },
          "toInt120(uint256)": {
            "calls": 317,
            "min": 424,
            "mean": 455,
            "median": 435,
            "max": 500
          },
          "toInt128(int256)": {
            "calls": 612,
            "min": 430,
            "mean": 484,
            "median": 504,
            "max": 504
          },
          "toInt128(uint256)": {
            "calls": 320,
            "min": 381,
            "mean": 414,
            "median": 408,
            "max": 457
          },
          "toInt136(int256)": {
            "calls": 656,
            "min": 430,
            "mean": 484,
            "median": 504,
            "max": 504
          },
          "toInt136(uint256)": {
            "calls": 286,
            "min": 444,
            "mean": 470,
            "median": 454,
            "max": 516
          },
          "toInt144(int256)": {
            "calls": 634,
            "min": 429,
            "mean": 484,
            "median": 503,
            "max": 503
          },
          "toInt144(uint256)": {
            "calls": 290,
            "min": 445,
            "mean": 481,
            "median": 474,
            "max": 521
          },
          "toInt152(int256)": {
            "calls": 642,
            "min": 431,
            "mean": 488,
            "median": 505,
            "max": 505
          },
          "toInt152(uint256)": {
            "calls": 291,
            "min": 401,
            "mean": 435,
            "median": 422,
            "max": 477
          },
          "toInt16(int256)": {
            "calls": 968,
            "min": 424,
            "mean": 467,
            "median": 498,
            "max": 498
          },
          "toInt16(uint256)": {
            "calls": 417,
            "min": 374,
            "mean": 388,
            "median": 374,
            "max": 446
          },
          "toInt160(int256)": {
            "calls": 622,
            "min": 408,
            "mean": 464,
            "median": 482,
            "max": 482
          },
          "toInt160(uint256)": {
            "calls": 319,
            "min": 423,
            "mean": 457,
            "median": 448,
            "max": 499
          },
          "toInt168(int256)": {
            "calls": 526,
            "min": 408,
            "mean": 462,
            "median": 482,
            "max": 482
          },
          "toInt168(uint256)": {
            "calls": 263,
            "min": 422,
            "mean": 459,
            "median": 458,
            "max": 498
          },
          "toInt176(int256)": {
            "calls": 588,
            "min": 387,
            "mean": 445,
            "median": 461,
            "max": 461
          },
          "toInt176(uint256)": {
            "calls": 264,
            "min": 424,
            "mean": 456,
            "median": 445,
            "max": 500
          },
          "toInt184(int256)": {
            "calls": 596,
            "min": 407,
            "mean": 467,
            "median": 481,
            "max": 481
          },
          "toInt184(uint256)": {
            "calls": 297,
            "min": 445,
            "mean": 484,
            "median": 481,
            "max": 521
          },
          "toInt192(int256)": {
            "calls": 574,
            "min": 392,
            "mean": 446,
            "median": 462,
            "max": 462
          },
          "toInt192(uint256)": {
            "calls": 299,
            "min": 424,
            "mean": 466,
            "median": 473,
            "max": 500
          },
          "toInt200(int256)": {
            "calls": 632,
            "min": 387,
            "mean": 446,
            "median": 461,
            "max": 461
          },
          "toInt200(uint256)": {
            "calls": 305,
            "min": 446,
            "mean": 484,
            "median": 484,
            "max": 522
          },
          "toInt208(int256)": {
            "calls": 572,
            "min": 429,
            "mean": 487,
            "median": 503,
            "max": 503
          },
          "toInt208(uint256)": {
            "calls": 325,
            "min": 424,
            "mean": 461,
            "median": 462,
            "max": 500
          },
          "toInt216(int256)": {
            "calls": 560,
            "min": 385,
            "mean": 445,
            "median": 459,
            "max": 459
          },
          "toInt216(uint256)": {
            "calls": 320,
            "min": 423,
            "mean": 464,
            "median": 472,
            "max": 499
          },
          "toInt224(int256)": {
            "calls": 660,
            "min": 432,
            "mean": 490,
            "median": 506,
            "max": 506
          },
          "toInt224(uint256)": {
            "calls": 337,
            "min": 445,
            "mean": 488,
            "median": 504,
            "max": 521
          },
          "toInt232(int256)": {
            "calls": 680,
            "min": 411,
            "mean": 472,
            "median": 485,
            "max": 485
          },
          "toInt232(uint256)": {
            "calls": 397,
            "min": 423,
            "mean": 469,
            "median": 484,
            "max": 499
          },
          "toInt24(int256)": {
            "calls": 846,
            "min": 380,
            "mean": 424,
            "median": 454,
            "max": 454
          },
          "toInt24(uint256)": {
            "calls": 387,
            "min": 438,
            "mean": 458,
            "median": 440,
            "max": 514
          },
          "toInt240(int256)": {
            "calls": 780,
            "min": 386,
            "mean": 447,
            "median": 460,
            "max": 460
          },
          "toInt240(uint256)": {
            "calls": 410,
            "min": 402,
            "mean": 440,
            "median": 438,
            "max": 478
          },
          "toInt248(int256)": {
            "calls": 778,
            "min": 389,
            "mean": 442,
            "median": 452,
            "max": 452
          },
          "toInt248(uint256)": {
            "calls": 403,
            "min": 401,
            "mean": 435,
            "median": 435,
            "max": 466
          },
          "toInt256(uint256)": {
            "calls": 5120,
            "min": 372,
            "mean": 430,
            "median": 432,
            "max": 432
          },
          "toInt32(int256)": {
            "calls": 816,
            "min": 403,
            "mean": 448,
            "median": 477,
            "max": 477
          },
          "toInt32(uint256)": {
            "calls": 402,
            "min": 416,
            "mean": 437,
            "median": 416,
            "max": 492
          },
          "toInt40(int256)": {
            "calls": 678,
            "min": 381,
            "mean": 427,
            "median": 455,
            "max": 455
          },
          "toInt40(uint256)": {
            "calls": 408,
            "min": 373,
            "mean": 393,
            "median": 373,
            "max": 449
          },
          "toInt48(int256)": {
            "calls": 660,
            "min": 382,
            "mean": 429,
            "median": 456,
            "max": 456
          },
          "toInt48(uint256)": {
            "calls": 348,
            "min": 417,
            "mean": 437,
            "median": 417,
            "max": 493
          },
          "toInt56(int256)": {
            "calls": 698,
            "min": 381,
            "mean": 430,
            "median": 455,
            "max": 455
          },
          "toInt56(uint256)": {
            "calls": 317,
            "min": 438,
            "mean": 462,
            "median": 446,
            "max": 514
          },
          "toInt64(int256)": {
            "calls": 590,
            "min": 380,
            "mean": 430,
            "median": 454,
            "max": 454
          },
          "toInt64(uint256)": {
            "calls": 296,
            "min": 396,
            "mean": 418,
            "median": 400,
            "max": 472
          },
          "toInt72(int256)": {
            "calls": 592,
            "min": 445,
            "mean": 497,
            "median": 519,
            "max": 519
          },
          "toInt72(uint256)": {
            "calls": 257,
            "min": 439,
            "mean": 464,
            "median": 443,
            "max": 515
          },
          "toInt8(int256)": {
            "calls": 485,
            "min": 401,
            "mean": 403,
            "median": 401,
            "max": 441
          },
          "toInt8(uint256)": {
            "calls": 425,
            "min": 440,
            "mean": 442,
            "median": 440,
            "max": 470
          },
          "toInt80(int256)": {
            "calls": 590,
            "min": 402,
            "mean": 454,
            "median": 476,
            "max": 476
          },
          "toInt80(uint256)": {
            "calls": 292,
            "min": 375,
            "mean": 402,
            "median": 386,
            "max": 451
          },
          "toInt88(int256)": {
            "calls": 538,
            "min": 381,
            "mean": 432,
            "median": 455,
            "max": 455
          },
          "toInt88(uint256)": {
            "calls": 286,
            "min": 416,
            "mean": 442,
            "median": 420,
            "max": 492
          },
          "toInt96(int256)": {
            "calls": 568,
            "min": 426,
            "mean": 479,
            "median": 500,
            "max": 500
          },
          "toInt96(uint256)": {
            "calls": 291,
            "min": 419,
            "mean": 446,
            "median": 423,
            "max": 495
          },
          "toUint104(uint256)": {
            "calls": 275,
            "min": 396,
            "mean": 423,
            "median": 410,
            "max": 467
          },
          "toUint112(uint256)": {
            "calls": 316,
            "min": 440,
            "mean": 467,
            "median": 452,
            "max": 511
          },
          "toUint120(uint256)": {
            "calls": 313,
            "min": 396,
            "mean": 420,
            "median": 401,
            "max": 467
          },
          "toUint128(uint256)": {
            "calls": 308,
            "min": 396,
            "mean": 422,
            "median": 403,
            "max": 467
          },
          "toUint136(uint256)": {
            "calls": 325,
            "min": 373,
            "mean": 402,
            "median": 385,
            "max": 444
          },
          "toUint144(uint256)": {
            "calls": 296,
            "min": 395,
            "mean": 428,
            "median": 414,
            "max": 478
          },
          "toUint152(uint256)": {
            "calls": 319,
            "min": 379,
            "mean": 421,
            "median": 416,
            "max": 462
          },
          "toUint16(uint256)": {
            "calls": 490,
            "min": 417,
            "mean": 431,
            "median": 419,
            "max": 488
          },
          "toUint160(uint256)": {
            "calls": 336,
            "min": 400,
            "mean": 432,
            "median": 419,
            "max": 483
          },
          "toUint168(uint256)": {
            "calls": 276,
            "min": 401,
            "mean": 441,
            "median": 432,
            "max": 484
          },
          "toUint176(uint256)": {
            "calls": 307,
            "min": 426,
            "mean": 467,
            "median": 461,
            "max": 509
          },
          "toUint184(uint256)": {
            "calls": 335,
            "min": 423,
            "mean": 464,
            "median": 471,
            "max": 506
          },
          "toUint192(uint256)": {
            "calls": 304,
            "min": 403,
            "mean": 444,
            "median": 451,
            "max": 486
          },
          "toUint200(uint256)": {
            "calls": 310,
            "min": 381,
            "mean": 420,
            "median": 416,
            "max": 464
          },
          "toUint208(uint256)": {
            "calls": 299,
            "min": 400,
            "mean": 442,
            "median": 441,
            "max": 483
          },
          "toUint216(uint256)": {
            "calls": 306,
            "min": 424,
            "mean": 472,
            "median": 484,
            "max": 507
          },
          "toUint224(uint256)": {
            "calls": 340,
            "min": 379,
            "mean": 420,
            "median": 423,
            "max": 462
          },
          "toUint232(uint256)": {
            "calls": 325,
            "min": 425,
            "mean": 469,
            "median": 477,
            "max": 508
          },
          "toUint24(uint256)": {
            "calls": 386,
            "min": 439,
            "mean": 452,
            "median": 439,
            "max": 510
          },
          "toUint240(uint256)": {
            "calls": 367,
            "min": 402,
            "mean": 449,
            "median": 448,
            "max": 485
          },
          "toUint248(uint256)": {
            "calls": 379,
            "min": 424,
            "mean": 469,
            "median": 482,
            "max": 507
          },
          "toUint256(int256)": {
            "calls": 5120,
            "min": 437,
            "mean": 479,
            "median": 497,
            "max": 497
          },
          "toUint32(uint256)": {
            "calls": 357,
            "min": 418,
            "mean": 435,
            "median": 422,
            "max": 489
          },
          "toUint40(uint256)": {
            "calls": 335,
            "min": 415,
            "mean": 431,
            "median": 415,
            "max": 486
          },
          "toUint48(uint256)": {
            "calls": 350,
            "min": 395,
            "mean": 413,
            "median": 395,
            "max": 466
          },
          "toUint56(uint256)": {
            "calls": 285,
            "min": 396,
            "mean": 419,
            "median": 405,
            "max": 467
          },
          "toUint64(uint256)": {
            "calls": 332,
            "min": 373,
            "mean": 396,
            "median": 384,
            "max": 444
          },
          "toUint72(uint256)": {
            "calls": 308,
            "min": 397,
            "mean": 421,
            "median": 408,
            "max": 468
          },
          "toUint8(uint256)": {
            "calls": 474,
            "min": 397,
            "mean": 400,
            "median": 397,
            "max": 450
          },
          "toUint80(uint256)": {
            "calls": 293,
            "min": 395,
            "mean": 420,
            "median": 407,
            "max": 466
          },
          "toUint88(uint256)": {
            "calls": 293,
            "min": 374,
            "mean": 400,
            "median": 385,
            "max": 445
          },
          "toUint96(uint256)": {
            "calls": 311,
            "min": 397,
            "mean": 424,
            "median": 409,
            "max": 468
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 14181956,
          "size": 70727
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 1681,
            "min": 165769,
            "mean": 170684,
            "median": 170780,
            "max": 170822
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 13859,
            "min": 22271,
            "mean": 149792,
            "median": 99514,
            "max": 297296
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 100,
            "min": 46860,
            "mean": 68250,
            "median": 70090,
            "max": 85918
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 5140,
            "min": 29681,
            "mean": 30127,
            "median": 30095,
            "max": 32381
          },
          "safeApprove(address,address,uint256)": {
            "calls": 5083,
            "min": 24900,
            "mean": 25296,
            "median": 25382,
            "max": 25712
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 5088,
            "min": 25285,
            "mean": 25684,
            "median": 25774,
            "max": 26096
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 5140,
            "min": 24949,
            "mean": 25336,
            "median": 25353,
            "max": 25669
          },
          "safeTransferAllETH(address)": {
            "calls": 5140,
            "min": 28758,
            "mean": 28758,
            "median": 28758,
            "max": 28758
          },
          "safeTransferETH(address,uint256)": {
            "calls": 5140,
            "min": 22520,
            "mean": 28891,
            "median": 28928,
            "max": 29202
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 5097,
            "min": 26218,
            "mean": 26755,
            "median": 26917,
            "max": 27254
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 10480,
            "min": 29002,
            "mean": 50244,
            "median": 68855,
            "max": 69893
          },
          "totalSupplyQuery(address)": {
            "calls": 60,
            "min": 604,
            "mean": 3892,
            "median": 5536,
            "max": 5536
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 51227,
            "min": 26093,
            "mean": 40201,
            "median": 31568,
            "max": 62094
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 46200,
            "min": 593168,
            "mean": 722575,
            "median": 620378,
            "max": 4756358
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 46200,
            "min": 591612,
            "mean": 730841,
            "median": 622666,
            "max": 4738658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2735267,
          "size": 13591
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 360,
            "min": 35662,
            "mean": 42902,
            "median": 40633,
            "max": 64504
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 980,
            "min": 40118,
            "mean": 60611,
            "median": 54609,
            "max": 105462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 3611352,
          "size": 17966
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 120,
            "min": 1701,
            "mean": 9264,
            "median": 9990,
            "max": 16725
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 5990,
            "min": 1146,
            "mean": 10435,
            "median": 10464,
            "max": 17041
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 2510,
            "min": 6700,
            "mean": 6713,
            "median": 6716,
            "max": 6726
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 198558,
          "size": 718
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 652,
            "min": 38928,
            "mean": 50510,
            "median": 45078,
            "max": 79278
          },
          "fallbackDeposit(uint256)": {
            "calls": 657,
            "min": 40408,
            "mean": 50258,
            "median": 44713,
            "max": 78913
          },
          "withdraw(uint256)": {
            "calls": 400,
            "min": 41149,
            "mean": 45196,
            "median": 45470,
            "max": 45540
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2256903,
          "size": 11202
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 2505,
            "min": 1800,
            "mean": 1815,
            "median": 1819,
            "max": 1836
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 381377,
          "size": 1574
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 40,
            "min": 258,
            "mean": 288,
            "median": 288,
            "max": 319
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 40,
            "min": 402,
            "mean": 402,
            "median": 402,
            "max": 402
          },
          "checkOnlyProxy()": {
            "calls": 40,
            "min": 267,
            "mean": 297,
            "median": 297,
            "max": 328
          },
          "initialize(address)": {
            "calls": 120,
            "min": 22486,
            "mean": 22486,
            "median": 22486,
            "max": 22486
          },
          "proxiableUUID()": {
            "calls": 40,
            "min": 280,
            "mean": 302,
            "median": 302,
            "max": 324
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 22411,
            "mean": 22411,
            "median": 22411,
            "max": 22411
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 290229,
          "size": 1124
        },
        "functions": {
          "dataHash()": {
            "calls": 5120,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "fallback()": {
            "calls": 10400,
            "min": 23383,
            "mean": 65088,
            "median": 88103,
            "max": 228495
          },
          "lastCaller()": {
            "calls": 5280,
            "min": 2357,
            "mean": 2357,
            "median": 2357,
            "max": 2357
          },
          "lastCallvalue()": {
            "calls": 5280,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "numbersHash()": {
            "calls": 160,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          },
          "receive()": {
            "calls": 5200,
            "min": 89,
            "mean": 20846,
            "median": 21089,
            "max": 21089
          },
          "storeDataHash(bytes,bool)": {
            "calls": 10240,
            "min": 714,
            "mean": 33764,
            "median": 24142,
            "max": 67459
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 160,
            "min": 2018,
            "mean": 35183,
            "median": 35183,
            "max": 68349
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 108363,
          "size": 281
        },
        "functions": {
          "fallback()": {
            "calls": 19936,
            "min": 234,
            "mean": 23642,
            "median": 22387,
            "max": 151696
          },
          "receive()": {
            "calls": 272,
            "min": 21107,
            "mean": 21107,
            "median": 21107,
            "max": 21107
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 420102,
          "size": 1824
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 285,
            "mean": 394,
            "median": 449,
            "max": 449
          },
          "eip712Domain()": {
            "calls": 200,
            "min": 1010,
            "mean": 1010,
            "median": 1010,
            "max": 1010
          },
          "getArgAddress(uint256)": {
            "calls": 200,
            "min": 3380,
            "mean": 3410,
            "median": 3412,
            "max": 3440
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 85,
            "min": 3737,
            "mean": 3758,
            "median": 3758,
            "max": 3779
          },
          "getArgUint256(uint256)": {
            "calls": 370,
            "min": 5717,
            "mean": 5747,
            "median": 5748,
            "max": 5777
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 200,
            "min": 16835,
            "mean": 18484,
            "median": 18444,
            "max": 20064
          },
          "getArgUint64(uint256)": {
            "calls": 200,
            "min": 3388,
            "mean": 3418,
            "median": 3420,
            "max": 3448
          },
          "getArgUint8(uint256)": {
            "calls": 200,
            "min": 3411,
            "mean": 3441,
            "median": 3443,
            "max": 3471
          },
          "getCalldataHash()": {
            "calls": 85,
            "min": 4007,
            "mean": 4068,
            "median": 4069,
            "max": 4129
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 441,
            "mean": 551,
            "median": 606,
            "max": 606
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 819,
            "mean": 819,
            "median": 819,
            "max": 819
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 762,
            "mean": 762,
            "median": 762,
            "max": 762
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 820,
            "mean": 820,
            "median": 820,
            "max": 820
          },
          "revertWithError()": {
            "calls": 207,
            "min": 5397,
            "mean": 5552,
            "median": 5430,
            "max": 6455
          },
          "setValue(uint256)": {
            "calls": 207,
            "min": 44082,
            "mean": 44265,
            "median": 44119,
            "max": 45346
          },
          "value()": {
            "calls": 207,
            "min": 5325,
            "mean": 5483,
            "median": 5358,
            "max": 6409
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 568978,
          "size": 3198
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 5733,
            "mean": 6001,
            "median": 6091,
            "max": 6091
          },
          "eip712Domain()": {
            "calls": 120,
            "min": 6022,
            "mean": 6201,
            "median": 6201,
            "max": 6380
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 5889,
            "mean": 6068,
            "median": 6068,
            "max": 6247
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 5853,
            "mean": 6032,
            "median": 6032,
            "max": 6211
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5774,
            "mean": 5953,
            "median": 5953,
            "max": 6132
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5832,
            "mean": 6011,
            "median": 6011,
            "max": 6190
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 60,
            "min": 11742,
            "mean": 30467,
            "median": 33718,
            "max": 45942
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1455831,
          "size": 6517
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 110333,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 8899,
            "min": 745,
            "mean": 2925,
            "median": 1012,
            "max": 8044
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 12643,
            "min": 23986,
            "mean": 30194,
            "median": 29420,
            "max": 50255
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 84720,
            "min": 24018,
            "mean": 144099,
            "median": 78899,
            "max": 32682984
          },
          "burn(address,uint256,uint256)": {
            "calls": 7730,
            "min": 25103,
            "mean": 29197,
            "median": 27954,
            "max": 33352
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18481,
            "min": 25031,
            "mean": 260183,
            "median": 64428,
            "max": 32706934
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 21903,
            "min": 24340,
            "mean": 227627,
            "median": 58921,
            "max": 33494879
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 39469,
            "min": 26564,
            "mean": 44711,
            "median": 46704,
            "max": 46712
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2675,
            "mean": 2675,
            "median": 2675,
            "max": 2675
          },
          "lastDataHash()": {
            "calls": 658,
            "min": 2350,
            "mean": 2350,
            "median": 2350,
            "max": 2350
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 100193,
            "min": 23062,
            "mean": 129154,
            "median": 72989,
            "max": 32410515
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 17958,
            "min": 24230,
            "mean": 246950,
            "median": 62629,
            "max": 32061676
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 21825,
            "min": 23872,
            "mean": 225802,
            "median": 58148,
            "max": 33514686
          },
          "setApprovalForAll(address,bool)": {
            "calls": 34066,
            "min": 25855,
            "mean": 45238,
            "median": 45991,
            "max": 45991
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 2714,
            "min": 26846,
            "mean": 36543,
            "median": 35164,
            "max": 47691
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 2510,
            "min": 27723,
            "mean": 30553,
            "median": 30598,
            "max": 30868
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 2517,
            "min": 34776,
            "mean": 118774,
            "median": 93086,
            "max": 1250822
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 2572,
            "min": 51432,
            "mean": 95972,
            "median": 62668,
            "max": 1070999
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 448725,
          "size": 1889
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 8740,
            "min": 2900,
            "mean": 2942,
            "median": 2914,
            "max": 6391
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 5120,
            "min": 26544,
            "mean": 26544,
            "median": 26544,
            "max": 26544
          },
          "signer()": {
            "calls": 80,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 816197,
          "size": 4125
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 25660,
            "min": 435,
            "mean": 435,
            "median": 435,
            "max": 435
          },
          "allowance(address,address)": {
            "calls": 48874,
            "min": 734,
            "mean": 2337,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 52377,
            "min": 26118,
            "mean": 46136,
            "median": 46224,
            "max": 46406
          },
          "balanceOf(address)": {
            "calls": 264806,
            "min": 608,
            "mean": 2432,
            "median": 2608,
            "max": 2608
          },
          "burn(address,uint256)": {
            "calls": 10284,
            "min": 24299,
            "mean": 29322,
            "median": 27438,
            "max": 34622
          },
          "decimals()": {
            "calls": 6240,
            "min": 2311,
            "mean": 2311,
            "median": 2311,
            "max": 2311
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 5120,
            "min": 25127,
            "mean": 27045,
            "median": 26825,
            "max": 28700
          },
          "directTransfer(address,address,uint256)": {
            "calls": 5120,
            "min": 25186,
            "mean": 38004,
            "median": 29044,
            "max": 52652
          },
          "mint(address,uint256)": {
            "calls": 64397,
            "min": 24470,
            "mean": 68002,
            "median": 68480,
            "max": 68830
          },
          "name()": {
            "calls": 5160,
            "min": 2929,
            "mean": 5309,
            "median": 5051,
            "max": 9486
          },
          "nonces(address)": {
            "calls": 5160,
            "min": 2542,
            "mean": 2542,
            "median": 2542,
            "max": 2542
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 30740,
            "min": 23696,
            "mean": 43845,
            "median": 30302,
            "max": 74424
          },
          "symbol()": {
            "calls": 5160,
            "min": 2951,
            "mean": 5359,
            "median": 5443,
            "max": 9508
          },
          "totalSupply()": {
            "calls": 20640,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "transfer(address,uint256)": {
            "calls": 51484,
            "min": 24328,
            "mean": 45770,
            "median": 51658,
            "max": 51878
          },
          "transferFrom(address,address,uint256)": {
            "calls": 30925,
            "min": 25008,
            "mean": 40953,
            "median": 32940,
            "max": 54959
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 816276,
          "size": 4132
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10240,
            "min": 598,
            "mean": 598,
            "median": 598,
            "max": 598
          },
          "approve(address,uint256)": {
            "calls": 5120,
            "min": 21925,
            "mean": 22241,
            "median": 21996,
            "max": 43942
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2608,
            "mean": 2608,
            "median": 2608,
            "max": 2608
          },
          "mint(address,uint256)": {
            "calls": 5120,
            "min": 30587,
            "mean": 67983,
            "median": 68506,
            "max": 68829
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22819,
            "mean": 23127,
            "median": 23107,
            "max": 27489
          },
          "transferFrom(address,address,uint256)": {
            "calls": 10240,
            "min": 25208,
            "mean": 38682,
            "median": 30777,
            "max": 52753
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 840124,
          "size": 3816
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15420,
            "min": 2758,
            "mean": 2758,
            "median": 2758,
            "max": 2758
          },
          "approve(address,uint256)": {
            "calls": 20340,
            "min": 23969,
            "mean": 35291,
            "median": 35560,
            "max": 46658
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1211914,
          "size": 5389
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 45205,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 5191,
            "min": 21547,
            "mean": 22006,
            "median": 21794,
            "max": 95473
          },
          "checkpointAt(address,uint256)": {
            "calls": 6492,
            "min": 0,
            "mean": 48,
            "median": 0,
            "max": 4869
          },
          "checkpointCount(address)": {
            "calls": 27135,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 10363,
            "min": 21192,
            "mean": 21639,
            "median": 21432,
            "max": 91760
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 23527,
            "mean": 41975,
            "median": 34990,
            "max": 75897
          },
          "delegates(address)": {
            "calls": 85054,
            "min": 0,
            "mean": 235,
            "median": 0,
            "max": 2615
          },
          "directDelegate(address,address)": {
            "calls": 5120,
            "min": 37255,
            "mean": 48428,
            "median": 48650,
            "max": 48653
          },
          "directIncrementNonce(address)": {
            "calls": 17302,
            "min": 26854,
            "mean": 31154,
            "median": 26869,
            "max": 43969
          },
          "getPastVotes(address,uint256)": {
            "calls": 80,
            "min": 5425,
            "mean": 5925,
            "median": 5425,
            "max": 7425
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 60,
            "min": 408,
            "mean": 3561,
            "median": 5042,
            "max": 5234
          },
          "getVotes(address)": {
            "calls": 60155,
            "min": 0,
            "mean": 11,
            "median": 0,
            "max": 4825
          },
          "getVotesTotalSupply()": {
            "calls": 15576,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4645
          },
          "mint(address,uint256)": {
            "calls": 14483,
            "min": 21550,
            "mean": 21855,
            "median": 21800,
            "max": 94888
          },
          "name()": {
            "calls": 5120,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "nonces(address)": {
            "calls": 10042,
            "min": 2630,
            "mean": 2630,
            "median": 2630,
            "max": 2630
          },
          "totalSupply()": {
            "calls": 7768,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 10384,
            "min": 21545,
            "mean": 21844,
            "median": 21793,
            "max": 86998
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 307465,
          "size": 1206
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 5120,
            "min": 21490,
            "mean": 21490,
            "median": 21490,
            "max": 21490
          },
          "feeDenominator()": {
            "calls": 5120,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 10240,
            "min": 21717,
            "mean": 22017,
            "median": 22095,
            "max": 22095
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 71680,
            "min": 2629,
            "mean": 4146,
            "median": 4754,
            "max": 4754
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 7616,
            "min": 22478,
            "mean": 37515,
            "median": 44639,
            "max": 44862
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 15232,
            "min": 22659,
            "mean": 38038,
            "median": 45234,
            "max": 45486
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1428888,
          "size": 6672
        },
        "functions": {
          "addDeposit()": {
            "calls": 40,
            "min": 31983,
            "mean": 31983,
            "median": 31983,
            "max": 31983
          },
          "completeOwnershipHandover(address)": {
            "calls": 20,
            "min": 12238,
            "mean": 12238,
            "median": 12238,
            "max": 12238
          },
          "delegateExecute(address,bytes)": {
            "calls": 15480,
            "min": 6454,
            "mean": 19494,
            "median": 9144,
            "max": 140472
          },
          "eip712Domain()": {
            "calls": 40,
            "min": 1078,
            "mean": 1078,
            "median": 1078,
            "max": 1078
          },
          "entryPoint()": {
            "calls": 140,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "execute(address,uint256,bytes)": {
            "calls": 80,
            "min": 2829,
            "mean": 16779,
            "median": 13197,
            "max": 37895
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 2578,
            "min": 3006,
            "mean": 65792,
            "median": 67526,
            "max": 256061
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 2602,
            "min": 3328,
            "mean": 60310,
            "median": 49634,
            "max": 228383
          },
          "fallback()": {
            "calls": 100,
            "min": 270,
            "mean": 28580,
            "median": 291,
            "max": 108870
          },
          "getDeposit()": {
            "calls": 120,
            "min": 5452,
            "mean": 5452,
            "median": 5452,
            "max": 5452
          },
          "initialize(address)": {
            "calls": 26040,
            "min": 2513,
            "mean": 24017,
            "median": 24084,
            "max": 24084
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 36080,
            "min": 7202,
            "mean": 8570,
            "median": 7243,
            "max": 14470
          },
          "owner()": {
            "calls": 5340,
            "min": 2349,
            "mean": 2349,
            "median": 2349,
            "max": 2349
          },
          "receive()": {
            "calls": 5160,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 6971,
            "mean": 6971,
            "median": 6971,
            "max": 6971
          },
          "requestOwnershipHandover()": {
            "calls": 20,
            "min": 23483,
            "mean": 23483,
            "median": 23483,
            "max": 23483
          },
          "storageLoad(bytes32)": {
            "calls": 40,
            "min": 2411,
            "mean": 2411,
            "median": 2411,
            "max": 2411
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 40,
            "min": 2522,
            "mean": 13570,
            "median": 13570,
            "max": 24619
          },
          "transferOwnership(address)": {
            "calls": 40,
            "min": 7174,
            "mean": 7174,
            "median": 7174,
            "max": 7174
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 80,
            "min": 459,
            "mean": 24429,
            "median": 29570,
            "max": 38120
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 20,
            "min": 45605,
            "mean": 45605,
            "median": 45605,
            "max": 45605
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1345208,
          "size": 6980
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 10320,
            "min": 2393,
            "mean": 2393,
            "median": 2393,
            "max": 2393
          },
          "balanceOf(address)": {
            "calls": 31640,
            "min": 2597,
            "mean": 2597,
            "median": 2597,
            "max": 2597
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 10240,
            "min": 2394,
            "mean": 2394,
            "median": 2394,
            "max": 2394
          },
          "convertToAssets(uint256)": {
            "calls": 21240,
            "min": 2535,
            "mean": 5340,
            "median": 7990,
            "max": 8071
          },
          "convertToShares(uint256)": {
            "calls": 80,
            "min": 7975,
            "mean": 8011,
            "median": 8011,
            "max": 8047
          },
          "decimals()": {
            "calls": 400,
            "min": 347,
            "mean": 356,
            "median": 347,
            "max": 438
          },
          "deposit(uint256,address)": {
            "calls": 5300,
            "min": 30674,
            "mean": 119744,
            "median": 121210,
            "max": 121455
          },
          "mint(uint256,address)": {
            "calls": 5260,
            "min": 30605,
            "mean": 120026,
            "median": 121139,
            "max": 132036
          },
          "name()": {
            "calls": 20,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "previewDeposit(uint256)": {
            "calls": 10280,
            "min": 8035,
            "mean": 8035,
            "median": 8035,
            "max": 8107
          },
          "previewWithdraw(uint256)": {
            "calls": 10280,
            "min": 8040,
            "mean": 8040,
            "median": 8040,
            "max": 8112
          },
          "redeem(uint256,address,address)": {
            "calls": 5260,
            "min": 24776,
            "mean": 77983,
            "median": 78443,
            "max": 93291
          },
          "symbol()": {
            "calls": 20,
            "min": 3153,
            "mean": 3153,
            "median": 3153,
            "max": 3153
          },
          "totalAssets()": {
            "calls": 20920,
            "min": 5556,
            "mean": 5556,
            "median": 5556,
            "max": 5556
          },
          "totalSupply()": {
            "calls": 10720,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "useVirtualShares()": {
            "calls": 40,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "withdraw(uint256,address,address)": {
            "calls": 5280,
            "min": 26948,
            "mean": 78890,
            "median": 79625,
            "max": 79781
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1212662,
          "size": 5712
        },
        "functions": {
          "eip712Domain()": {
            "calls": 6875,
            "min": 1083,
            "mean": 1083,
            "median": 1083,
            "max": 1083
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 80,
            "min": 6309,
            "mean": 23195,
            "median": 11341,
            "max": 63789
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 2500,
            "min": 6240,
            "mean": 87034,
            "median": 81813,
            "max": 270279
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 2700,
            "min": 28959,
            "mean": 88327,
            "median": 80220,
            "max": 261523
          },
          "fallback()": {
            "calls": 17440,
            "min": 262,
            "mean": 6347,
            "median": 3432,
            "max": 135263
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 7185,
            "min": 655,
            "mean": 14749,
            "median": 14342,
            "max": 38386
          },
          "isValidSigner(address,bytes)": {
            "calls": 5120,
            "min": 6293,
            "mean": 6293,
            "median": 6293,
            "max": 6293
          },
          "mockId()": {
            "calls": 40,
            "min": 478,
            "mean": 478,
            "median": 478,
            "max": 478
          },
          "owner()": {
            "calls": 15946,
            "min": 5731,
            "mean": 5731,
            "median": 5731,
            "max": 5731
          },
          "proxiableUUID()": {
            "calls": 20,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "receive()": {
            "calls": 20,
            "min": 55,
            "mean": 55,
            "median": 55,
            "max": 55
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5725,
            "mean": 14278,
            "median": 14299,
            "max": 22873
          },
          "state()": {
            "calls": 15440,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "supportsInterface(bytes4)": {
            "calls": 80,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "token()": {
            "calls": 10720,
            "min": 528,
            "mean": 528,
            "median": 528,
            "max": 528
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5180,
            "min": 6234,
            "mean": 35618,
            "median": 35780,
            "max": 52880
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1239396,
          "size": 5839
        },
        "functions": {
          "clearState()": {
            "calls": 5120,
            "min": 5205,
            "mean": 5205,
            "median": 5205,
            "max": 5205
          },
          "mockId()": {
            "calls": 20,
            "min": 472,
            "mean": 472,
            "median": 472,
            "max": 472
          },
          "proxiableUUID()": {
            "calls": 5140,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5902,
            "mean": 14455,
            "median": 14476,
            "max": 23050
          },
          "state()": {
            "calls": 10260,
            "min": 2338,
            "mean": 2338,
            "median": 2338,
            "max": 2338
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 18857,
            "mean": 18857,
            "median": 18857,
            "max": 18857
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 178113,
          "size": 605
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 48545,
            "min": 94898,
            "mean": 95461,
            "median": 95507,
            "max": 95723
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 795817,
          "size": 3467
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 49903,
            "min": 2731,
            "mean": 2731,
            "median": 2731,
            "max": 2731
          },
          "approve(address,uint256,uint256)": {
            "calls": 30858,
            "min": 27016,
            "mean": 47070,
            "median": 47282,
            "max": 47687
          },
          "balanceOf(address,uint256)": {
            "calls": 47924,
            "min": 2585,
            "mean": 2585,
            "median": 2585,
            "max": 2585
          },
          "burn(address,uint256,uint256)": {
            "calls": 10260,
            "min": 24451,
            "mean": 27451,
            "median": 25524,
            "max": 30703
          },
          "decimals(uint256)": {
            "calls": 20,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 10260,
            "min": 34887,
            "mean": 47301,
            "median": 47348,
            "max": 47724
          },
          "directSetOperator(address,address,bool)": {
            "calls": 15400,
            "min": 24087,
            "mean": 32533,
            "median": 26553,
            "max": 46469
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 7858,
            "min": 25956,
            "mean": 40681,
            "median": 30852,
            "max": 61945
          },
          "isOperator(address,address)": {
            "calls": 15440,
            "min": 2653,
            "mean": 2653,
            "median": 2653,
            "max": 2653
          },
          "mint(address,uint256,uint256)": {
            "calls": 92560,
            "min": 24502,
            "mean": 45962,
            "median": 47311,
            "max": 47855
          },
          "name(uint256)": {
            "calls": 5120,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "setOperator(address,bool)": {
            "calls": 20,
            "min": 46198,
            "mean": 46198,
            "median": 46198,
            "max": 46198
          },
          "symbol(uint256)": {
            "calls": 5120,
            "min": 487,
            "mean": 487,
            "median": 487,
            "max": 487
          },
          "tokenURI(uint256)": {
            "calls": 20,
            "min": 862,
            "mean": 862,
            "median": 862,
            "max": 862
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20884,
            "min": 24475,
            "mean": 37583,
            "median": 30548,
            "max": 53017
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 32936,
            "min": 27260,
            "mean": 38817,
            "median": 33477,
            "max": 61197
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1369290,
          "size": 6122
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 21487,
            "min": 24344,
            "mean": 43108,
            "median": 48667,
            "max": 49002
          },
          "balanceOf(address)": {
            "calls": 205014,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "burn(uint256)": {
            "calls": 5072,
            "min": 28388,
            "mean": 29430,
            "median": 28829,
            "max": 31511
          },
          "directApprove(address,uint256)": {
            "calls": 21181,
            "min": 24362,
            "mean": 44221,
            "median": 49395,
            "max": 49715
          },
          "directGetApproved(uint256)": {
            "calls": 30589,
            "min": 2571,
            "mean": 4622,
            "median": 4816,
            "max": 4816
          },
          "directOwnerOf(uint256)": {
            "calls": 50971,
            "min": 2570,
            "mean": 2775,
            "median": 2827,
            "max": 2827
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 12868,
            "min": 57430,
            "mean": 75815,
            "median": 63843,
            "max": 130584
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10130,
            "min": 64018,
            "mean": 95224,
            "median": 65460,
            "max": 237328
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 18910,
            "min": 24618,
            "mean": 42307,
            "median": 46758,
            "max": 46764
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 36295,
            "min": 25412,
            "mean": 42721,
            "median": 41300,
            "max": 57854
          },
          "exists(uint256)": {
            "calls": 10263,
            "min": 2552,
            "mean": 2552,
            "median": 2552,
            "max": 2552
          },
          "getApproved(uint256)": {
            "calls": 30897,
            "min": 2537,
            "mean": 4551,
            "median": 4727,
            "max": 4727
          },
          "getAux(address)": {
            "calls": 51240,
            "min": 2995,
            "mean": 2995,
            "median": 2995,
            "max": 2998
          },
          "getExtraData(uint256)": {
            "calls": 71749,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2700,
            "mean": 2700,
            "median": 2700,
            "max": 2700
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 30720,
            "min": 2988,
            "mean": 5577,
            "median": 6318,
            "max": 7380
          },
          "mint(address,uint256)": {
            "calls": 217739,
            "min": 24504,
            "mean": 64505,
            "median": 68680,
            "max": 69042
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 15380,
            "min": 47202,
            "mean": 56441,
            "median": 52268,
            "max": 69729
          },
          "ownerOf(uint256)": {
            "calls": 113166,
            "min": 631,
            "mean": 2610,
            "median": 2631,
            "max": 2631
          },
          "safeMint(address,uint256)": {
            "calls": 25600,
            "min": 71356,
            "mean": 81937,
            "median": 72347,
            "max": 121833
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 20480,
            "min": 72533,
            "mean": 98999,
            "median": 73916,
            "max": 232947
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 37027,
            "min": 42385,
            "mean": 69006,
            "median": 64258,
            "max": 132067
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10350,
            "min": 64416,
            "mean": 94876,
            "median": 65781,
            "max": 238769
          },
          "setApprovalForAll(address,bool)": {
            "calls": 23870,
            "min": 24223,
            "mean": 42915,
            "median": 46363,
            "max": 46366
          },
          "setAux(address,uint224)": {
            "calls": 15320,
            "min": 27821,
            "mean": 44806,
            "median": 44913,
            "max": 44921
          },
          "setExtraData(uint256,uint96)": {
            "calls": 30975,
            "min": 24077,
            "mean": 37033,
            "median": 44041,
            "max": 44478
          },
          "transferFrom(address,address,uint256)": {
            "calls": 36675,
            "min": 25003,
            "mean": 42648,
            "median": 40940,
            "max": 57406
          },
          "uncheckedBurn(uint256)": {
            "calls": 58947,
            "min": 23778,
            "mean": 30360,
            "median": 31312,
            "max": 36496
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 3647,
            "min": 55047,
            "mean": 55303,
            "median": 55287,
            "max": 55648
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 602659,
          "size": 2577
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 5240,
            "min": 31263,
            "mean": 100647,
            "median": 91760,
            "max": 159814
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 5253,
            "min": 307331,
            "mean": 383935,
            "median": 328181,
            "max": 3460595
          },
          "lastOpData()": {
            "calls": 5120,
            "min": 2934,
            "mean": 6056,
            "median": 5137,
            "max": 11614
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 160,
            "min": 22237,
            "mean": 41410,
            "median": 44149,
            "max": 44149
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 168815,
          "size": 745
        },
        "functions": {
          "counter()": {
            "calls": 80,
            "min": 2260,
            "mean": 2260,
            "median": 2260,
            "max": 2260
          },
          "garbage()": {
            "calls": 15600,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "getArgAddress(uint256)": {
            "calls": 65,
            "min": 3169,
            "mean": 3174,
            "median": 3173,
            "max": 3179
          },
          "getArgUint256(uint256)": {
            "calls": 115,
            "min": 5506,
            "mean": 5511,
            "median": 5511,
            "max": 5516
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 65,
            "min": 6924,
            "mean": 7284,
            "median": 7281,
            "max": 7626
          },
          "getArgUint64(uint256)": {
            "calls": 65,
            "min": 3177,
            "mean": 3182,
            "median": 3181,
            "max": 3187
          },
          "getArgUint8(uint256)": {
            "calls": 65,
            "min": 3200,
            "mean": 3205,
            "median": 3204,
            "max": 3210
          },
          "receive()": {
            "calls": 210,
            "min": 0,
            "mean": 41937,
            "median": 21095,
            "max": 286581
          },
          "revertWithError()": {
            "calls": 67,
            "min": 5186,
            "mean": 5336,
            "median": 5191,
            "max": 5633
          },
          "setValue(uint256)": {
            "calls": 67,
            "min": 43883,
            "mean": 44095,
            "median": 43919,
            "max": 44507
          },
          "value()": {
            "calls": 67,
            "min": 5114,
            "mean": 5267,
            "median": 5119,
            "max": 5570
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 25,
            "min": 3520,
            "mean": 3523,
            "median": 3522,
            "max": 3525
          },
          "getCalldataHash()": {
            "calls": 25,
            "min": 3358,
            "mean": 3367,
            "median": 3367,
            "max": 3375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 770452,
          "size": 3346
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 157448,
            "min": 357,
            "mean": 4190,
            "median": 4516,
            "max": 4516
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 5272,
            "min": 26900,
            "mean": 28323,
            "median": 28364,
            "max": 28750
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 628,
            "min": 26796,
            "mean": 41623,
            "median": 41114,
            "max": 58948
          },
          "guardedByOnlyRoles()": {
            "calls": 628,
            "min": 24001,
            "mean": 40540,
            "median": 40890,
            "max": 56513
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 5120,
            "min": 1300,
            "mean": 8923,
            "median": 8424,
            "max": 16988
          },
          "hasRole(address,uint256)": {
            "calls": 36878,
            "min": 2652,
            "mean": 2652,
            "median": 2652,
            "max": 2652
          },
          "owner()": {
            "calls": 39130,
            "min": 2330,
            "mean": 2536,
            "median": 2551,
            "max": 2551
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 5099,
            "min": 2512,
            "mean": 2783,
            "median": 2629,
            "max": 4749
          },
          "roleHolderCount(uint256)": {
            "calls": 75481,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "roleHolders(uint256)": {
            "calls": 76463,
            "min": 2716,
            "mean": 3107,
            "median": 2716,
            "max": 22746
          },
          "setAllowedRole(uint256)": {
            "calls": 5120,
            "min": 24688,
            "mean": 43484,
            "median": 43662,
            "max": 43976
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 628,
            "min": 25512,
            "mean": 130890,
            "median": 136177,
            "max": 219974
          },
          "setMaxRole(uint256)": {
            "calls": 5280,
            "min": 21788,
            "mean": 27054,
            "median": 26541,
            "max": 43953
          },
          "setMaxRoleReverts(bool)": {
            "calls": 5120,
            "min": 23774,
            "mean": 25160,
            "median": 24899,
            "max": 26586
          },
          "setOwner(address)": {
            "calls": 5349,
            "min": 23694,
            "mean": 27220,
            "median": 26809,
            "max": 43909
          },
          "setOwnerReverts(bool)": {
            "calls": 5120,
            "min": 23769,
            "mean": 25215,
            "median": 25456,
            "max": 30856
          },
          "setRole(address,uint256,bool)": {
            "calls": 28110,
            "min": 24491,
            "mean": 59800,
            "median": 74045,
            "max": 74549
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 134524,
            "min": 33586,
            "mean": 59386,
            "median": 73860,
            "max": 78764
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 131415,
          "size": 391
        },
        "functions": {
          "fails()": {
            "calls": 120,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "getValue(uint256)": {
            "calls": 19140,
            "min": 2404,
            "mean": 2404,
            "median": 2404,
            "max": 2404
          },
          "setValue(uint256,uint256)": {
            "calls": 19140,
            "min": 10439,
            "mean": 22354,
            "median": 22379,
            "max": 22379
          },
          "succeeds(uint256)": {
            "calls": 40,
            "min": 277,
            "mean": 277,
            "median": 277,
            "max": 277
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 366463,
          "size": 3054
        },
        "functions": {
          "disableInitializers()": {
            "calls": 40,
            "min": 23437,
            "mean": 33955,
            "median": 33955,
            "max": 44473
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 3870,
            "min": 27826,
            "mean": 61335,
            "median": 67996,
            "max": 91159
          },
          "isInitializing()": {
            "calls": 3818,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "onlyDuringInitializing()": {
            "calls": 20,
            "min": 23421,
            "mean": 23421,
            "median": 23421,
            "max": 23421
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 4951,
            "min": 24769,
            "mean": 55898,
            "median": 66095,
            "max": 91135
          },
          "version()": {
            "calls": 5221,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "x()": {
            "calls": 2743,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 560701,
          "size": 2398
        },
        "functions": {
          "owner()": {
            "calls": 14891,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 20480,
            "min": 25055,
            "mean": 33829,
            "median": 25072,
            "max": 59312
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 742398,
          "size": 3290
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 15360,
            "min": 23998,
            "mean": 23998,
            "median": 23998,
            "max": 23998
          },
          "lockRescue(uint256)": {
            "calls": 100,
            "min": 26280,
            "mean": 37934,
            "median": 44272,
            "max": 46421
          },
          "owner()": {
            "calls": 34077,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 2592,
            "min": 29573,
            "mean": 70257,
            "median": 68717,
            "max": 693774
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 2539,
            "min": 28606,
            "mean": 53655,
            "median": 61115,
            "max": 61426
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 2583,
            "min": 28907,
            "mean": 54963,
            "median": 62280,
            "max": 62682
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 5222,
            "min": 28476,
            "mean": 49218,
            "median": 48196,
            "max": 64453
          },
          "rescueETH(address,uint256)": {
            "calls": 28243,
            "min": 5914,
            "mean": 32693,
            "median": 36818,
            "max": 62108
          },
          "transferOwnership(address)": {
            "calls": 5120,
            "min": 7093,
            "mean": 7093,
            "median": 7093,
            "max": 7093
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 671694,
          "size": 2892
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 10372,
            "min": 21975,
            "mean": 24480,
            "median": 24547,
            "max": 37372
          },
          "multicallBrutalized(bytes[])": {
            "calls": 5128,
            "min": 368909,
            "mean": 488756,
            "median": 375568,
            "max": 3726222
          },
          "multicallOriginal(bytes[])": {
            "calls": 20,
            "min": 44682,
            "mean": 44682,
            "median": 44682,
            "max": 44682
          },
          "returnsRandomizedString(string)": {
            "calls": 5100,
            "min": 749,
            "mean": 1846,
            "median": 1829,
            "max": 3392
          },
          "returnsSender()": {
            "calls": 20,
            "min": 221,
            "mean": 221,
            "median": 221,
            "max": 221
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 10680,
            "min": 483,
            "mean": 483,
            "median": 483,
            "max": 483
          },
          "revertsWithCustomError()": {
            "calls": 20,
            "min": 245,
            "mean": 245,
            "median": 245,
            "max": 245
          },
          "revertsWithNothing()": {
            "calls": 20,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "revertsWithString(string)": {
            "calls": 5140,
            "min": 857,
            "mean": 872,
            "median": 872,
            "max": 890
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 349220,
          "size": 1343
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22645,
            "mean": 22645,
            "median": 22645,
            "max": 22645
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 23969,
            "mean": 28942,
            "median": 29077,
            "max": 29081
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28401,
            "mean": 28401,
            "median": 28401,
            "max": 28401
          },
          "owner()": {
            "calls": 16737,
            "min": 2326,
            "mean": 2326,
            "median": 2326,
            "max": 2326
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2919,
            "mean": 2919,
            "median": 2919,
            "max": 2923
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23131,
            "mean": 23131,
            "median": 23131,
            "max": 23131
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44547,
            "mean": 44547,
            "median": 44547,
            "max": 44547
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 25149,
            "mean": 28527,
            "median": 28633,
            "max": 28637
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 23988,
            "mean": 25233,
            "median": 24007,
            "max": 28837
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23351,
            "mean": 34363,
            "median": 33862,
            "max": 45479
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 265240,
          "size": 961
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2280,
            "mean": 2280,
            "median": 2280,
            "max": 2280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 704567,
          "size": 2987
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22666,
            "mean": 22666,
            "median": 22666,
            "max": 22666
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 24048,
            "mean": 29016,
            "median": 29156,
            "max": 29160
          },
          "grantRoles(address,uint256)": {
            "calls": 30760,
            "min": 24203,
            "mean": 46196,
            "median": 48261,
            "max": 48609
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 5120,
            "min": 27110,
            "mean": 45848,
            "median": 46103,
            "max": 46436
          },
          "hasAllRoles(address,uint256)": {
            "calls": 5120,
            "min": 3047,
            "mean": 3047,
            "median": 3047,
            "max": 3051
          },
          "hasAnyRole(address,uint256)": {
            "calls": 5120,
            "min": 3046,
            "mean": 3046,
            "median": 3046,
            "max": 3050
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28481,
            "mean": 28481,
            "median": 28481,
            "max": 28481
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 5760,
            "min": 639,
            "mean": 12217,
            "median": 7564,
            "max": 41799
          },
          "owner()": {
            "calls": 16709,
            "min": 2370,
            "mean": 2370,
            "median": 2370,
            "max": 2370
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2991
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 425,
            "mean": 425,
            "median": 425,
            "max": 425
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 10240,
            "min": 24055,
            "mean": 27396,
            "median": 26231,
            "max": 29416
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23154,
            "mean": 23154,
            "median": 23154,
            "max": 23154
          },
          "renounceRoles(uint256)": {
            "calls": 1308,
            "min": 23606,
            "mean": 27935,
            "median": 28240,
            "max": 28572
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44591,
            "mean": 44591,
            "median": 44591,
            "max": 44591
          },
          "revokeRoles(address,uint256)": {
            "calls": 1326,
            "min": 24211,
            "mean": 27605,
            "median": 26383,
            "max": 31514
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 5760,
            "min": 768,
            "mean": 24753,
            "median": 24383,
            "max": 53561
          },
          "rolesOf(address)": {
            "calls": 45573,
            "min": 2945,
            "mean": 2945,
            "median": 2945,
            "max": 2949
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 24943,
            "mean": 28562,
            "median": 28668,
            "max": 28672
          },
          "setRolesDirect(address,uint256)": {
            "calls": 20480,
            "min": 26414,
            "mean": 37683,
            "median": 37553,
            "max": 46404
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 24068,
            "mean": 25285,
            "median": 24086,
            "max": 28916
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23374,
            "mean": 34204,
            "median": 32778,
            "max": 45502
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 5140,
            "min": 25782,
            "mean": 45997,
            "median": 46078,
            "max": 48299
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 5120,
            "min": 23679,
            "mean": 44160,
            "median": 45865,
            "max": 46197
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 5120,
            "min": 25761,
            "mean": 46172,
            "median": 46888,
            "max": 48276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 386578,
          "size": 1522
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 79383,
          "size": 146
        },
        "functions": {
          "receive()": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 476990,
          "size": 1993
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 20,
            "min": 26463,
            "mean": 26463,
            "median": 26463,
            "max": 26463
          },
          "callGuardedToReadGuarded()": {
            "calls": 20,
            "min": 43543,
            "mean": 43543,
            "median": 43543,
            "max": 43543
          },
          "callUnguardedToGuarded()": {
            "calls": 20,
            "min": 65737,
            "mean": 65737,
            "median": 65737,
            "max": 65737
          },
          "callUnguardedToReadGuarded()": {
            "calls": 20,
            "min": 45581,
            "mean": 45581,
            "median": 45581,
            "max": 45581
          },
          "countAndCall(address)": {
            "calls": 20,
            "min": 69963,
            "mean": 69963,
            "median": 69963,
            "max": 69963
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 66032,
            "mean": 66032,
            "median": 66032,
            "max": 66032
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 67153,
            "mean": 67153,
            "median": 67153,
            "max": 67153
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 47971,
            "mean": 47971,
            "median": 47971,
            "max": 47971
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 58515,
            "mean": 58515,
            "median": 58515,
            "max": 58515
          },
          "enterTimes()": {
            "calls": 120,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          },
          "isReentrancyGuardLocked()": {
            "calls": 280,
            "min": 2400,
            "mean": 2400,
            "median": 2400,
            "max": 2400
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 151464,
          "size": 515
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 47,
            "min": 3153,
            "mean": 3156,
            "median": 3155,
            "max": 3159
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 28,
            "min": 3501,
            "mean": 3502,
            "median": 3502,
            "max": 3504
          },
          "getArgUint256(uint256)": {
            "calls": 103,
            "min": 5490,
            "mean": 5492,
            "median": 5492,
            "max": 5496
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 47,
            "min": 5903,
            "mean": 6189,
            "median": 6195,
            "max": 6487
          },
          "getArgUint64(uint256)": {
            "calls": 47,
            "min": 3161,
            "mean": 3164,
            "median": 3163,
            "max": 3167
          },
          "getArgUint8(uint256)": {
            "calls": 47,
            "min": 3184,
            "mean": 3187,
            "median": 3186,
            "max": 3190
          },
          "getCalldataHash()": {
            "calls": 28,
            "min": 3305,
            "mean": 3309,
            "median": 3307,
            "max": 3314
          },
          "revertWithError()": {
            "calls": 48,
            "min": 5170,
            "mean": 5208,
            "median": 5172,
            "max": 5282
          },
          "setValue(uint256)": {
            "calls": 48,
            "min": 43851,
            "mean": 43918,
            "median": 43866,
            "max": 44042
          },
          "value()": {
            "calls": 48,
            "min": 5098,
            "mean": 5138,
            "median": 5100,
            "max": 5215
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 896304,
          "size": 3928
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 13912,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 5149,
            "min": 27144,
            "mean": 28406,
            "median": 28411,
            "max": 28953
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 5149,
            "min": 34330,
            "mean": 40049,
            "median": 40124,
            "max": 40471
          },
          "owner()": {
            "calls": 24564,
            "min": 2573,
            "mean": 2573,
            "median": 2573,
            "max": 2573
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 5120,
            "min": 29621,
            "mean": 43503,
            "median": 43571,
            "max": 43571
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 5120,
            "min": 93577,
            "mean": 111273,
            "median": 111515,
            "max": 111515
          },
          "setMaxTimedRole(uint256)": {
            "calls": 381,
            "min": 26536,
            "mean": 29578,
            "median": 26872,
            "max": 43973
          },
          "setOwner(address)": {
            "calls": 768,
            "min": 26824,
            "mean": 28237,
            "median": 26832,
            "max": 43932
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 14266,
            "min": 24996,
            "mean": 50659,
            "median": 52252,
            "max": 52352
          },
          "timedRoleActive(address,uint256)": {
            "calls": 15586,
            "min": 2744,
            "mean": 2744,
            "median": 2744,
            "max": 2744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 320727,
          "size": 1294
        },
        "functions": {
          "initialize(address)": {
            "calls": 160,
            "min": 22508,
            "mean": 22508,
            "median": 22508,
            "max": 22508
          },
          "proxiableUUID()": {
            "calls": 60,
            "min": 290,
            "mean": 290,
            "median": 290,
            "max": 290
          },
          "revertWithError()": {
            "calls": 20,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "setValue(uint256)": {
            "calls": 20,
            "min": 22309,
            "mean": 22309,
            "median": 22309,
            "max": 22309
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 140,
            "min": 3094,
            "mean": 10153,
            "median": 5760,
            "max": 32618
          },
          "value()": {
            "calls": 20,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 378830,
          "size": 1350
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10280,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 33419,
            "min": 561,
            "mean": 1483,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 272746,
          "size": 858
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 20604,
            "min": 549,
            "mean": 2544,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 527112,
          "size": 2034
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15360,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 56363,
            "min": 561,
            "mean": 1650,
            "median": 2561,
            "max": 2561
          },
          "setRawBytes(bytes)": {
            "calls": 30720,
            "min": 24488,
            "mean": 63431,
            "median": 66794,
            "max": 114616
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 275892,
          "size": 874
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 20623,
            "min": 549,
            "mean": 2543,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 377112,
          "size": 1342
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10277,
            "min": 755,
            "mean": 755,
            "median": 755,
            "max": 755
          },
          "balanceOf(address)": {
            "calls": 33463,
            "min": 561,
            "mean": 1482,
            "median": 561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 269728,
          "size": 844
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 20535,
            "min": 649,
            "mean": 2543,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 266402,
          "size": 829
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 731,
            "mean": 731,
            "median": 731,
            "max": 731
          },
          "balanceOf(address)": {
            "calls": 10298,
            "min": 1249,
            "mean": 2545,
            "median": 2549,
            "max": 2549
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 167395,
          "size": 572
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3174,
            "mean": 3174,
            "median": 3174,
            "max": 3174
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3521,
            "mean": 3521,
            "median": 3521,
            "max": 3521
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 5511,
            "mean": 5511,
            "median": 5511,
            "max": 5511
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 6757,
            "mean": 6757,
            "median": 6757,
            "max": 6757
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3182,
            "mean": 3182,
            "median": 3182,
            "max": 3182
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3205,
            "mean": 3205,
            "median": 3205,
            "max": 3205
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3364,
            "mean": 3364,
            "median": 3364,
            "max": 3364
          },
          "revertWithError()": {
            "calls": 2,
            "min": 5136,
            "mean": 5136,
            "median": 5136,
            "max": 5136
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 43852,
            "mean": 43852,
            "median": 43852,
            "max": 43852
          },
          "value()": {
            "calls": 2,
            "min": 5108,
            "mean": 5108,
            "median": 5108,
            "max": 5108
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 247212,
          "size": 1072
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 20540,
            "min": 24245,
            "mean": 73971,
            "median": 36255,
            "max": 117831
          },
          "getAddress(bytes32)": {
            "calls": 5140,
            "min": 431,
            "mean": 431,
            "median": 431,
            "max": 431
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5061,
            "mean": 5061,
            "median": 5061,
            "max": 5061
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 43849,
            "mean": 43849,
            "median": 43849,
            "max": 43849
          },
          "value()": {
            "calls": 1,
            "min": 5063,
            "mean": 5063,
            "median": 5063,
            "max": 5063
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 107796,
          "size": 421
        },
        "functions": {
          "fallback()": {
            "calls": 124934,
            "min": 2755,
            "mean": 15668,
            "median": 10047,
            "max": 345734
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1125311,
          "size": 5030
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 20,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "EXECUTOR_ROLE()": {
            "calls": 80,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "MAX_ROLE()": {
            "calls": 1240,
            "min": 242,
            "mean": 242,
            "median": 242,
            "max": 242
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 20,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "cancel(bytes32)": {
            "calls": 381,
            "min": 25421,
            "mean": 25626,
            "median": 25432,
            "max": 26221
          },
          "execute(bytes32,bytes)": {
            "calls": 5282,
            "min": 28368,
            "mean": 43590,
            "median": 44832,
            "max": 95399
          },
          "hasRole(address,uint256)": {
            "calls": 20,
            "min": 2481,
            "mean": 2481,
            "median": 2481,
            "max": 2481
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 200,
            "min": 22944,
            "mean": 306503,
            "median": 377084,
            "max": 377084
          },
          "minDelay()": {
            "calls": 4796,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "operationState(bytes32)": {
            "calls": 18834,
            "min": 2437,
            "mean": 2442,
            "median": 2442,
            "max": 2448
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 5200,
            "min": 26382,
            "mean": 53844,
            "median": 55278,
            "max": 57720
          },
          "readyTimestamp(bytes32)": {
            "calls": 14119,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "roleHolderCount(uint256)": {
            "calls": 80,
            "min": 2406,
            "mean": 2406,
            "median": 2406,
            "max": 2406
          },
          "setRole(address,uint256,bool)": {
            "calls": 120,
            "min": 23946,
            "mean": 33589,
            "median": 23958,
            "max": 75899
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 581965,
          "size": 2480
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25740,
            "min": 2381,
            "mean": 2381,
            "median": 2381,
            "max": 2381
          },
          "decimals()": {
            "calls": 20,
            "min": 216,
            "mean": 216,
            "median": 216,
            "max": 216
          },
          "deposit()": {
            "calls": 10993,
            "min": 27583,
            "mean": 65145,
            "median": 67383,
            "max": 67383
          },
          "name()": {
            "calls": 20,
            "min": 421,
            "mean": 421,
            "median": 421,
            "max": 421
          },
          "receive()": {
            "calls": 5800,
            "min": 27376,
            "mean": 63508,
            "median": 67176,
            "max": 67176
          },
          "symbol()": {
            "calls": 20,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "withdraw(uint256)": {
            "calls": 5545,
            "min": 27889,
            "mean": 39659,
            "median": 40218,
            "max": 40333
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 759687,
          "size": 3305
        },
        "functions": {
          "adminOf(address)": {
            "calls": 9617,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "changeAdmin(address,address)": {
            "calls": 40,
            "min": 24161,
            "mean": 26369,
            "median": 26369,
            "max": 28577
          },
          "deploy(address,address)": {
            "calls": 5340,
            "min": 22247,
            "mean": 58325,
            "median": 22267,
            "max": 125961
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 5140,
            "min": 105400,
            "mean": 158830,
            "median": 159225,
            "max": 159304
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 5120,
            "min": 23650,
            "mean": 141918,
            "median": 159587,
            "max": 159765
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 5120,
            "min": 578,
            "mean": 578,
            "median": 578,
            "max": 578
          },
          "upgrade(address,address)": {
            "calls": 100,
            "min": 24144,
            "mean": 27844,
            "median": 24156,
            "max": 33390
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 40,
            "min": 35354,
            "mean": 51045,
            "median": 51045,
            "max": 66736
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 256695,
          "size": 1055
        },
        "functions": {
          "implementation()": {
            "calls": 99331,
            "min": 149,
            "mean": 2266,
            "median": 2281,
            "max": 2281
          },
          "owner()": {
            "calls": 10190,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "renounceOwnership()": {
            "calls": 872,
            "min": 23089,
            "mean": 23306,
            "median": 23354,
            "max": 23354
          },
          "transferOwnership(address)": {
            "calls": 3167,
            "min": 23549,
            "mean": 26947,
            "median": 28214,
            "max": 28215
          },
          "upgradeTo(address)": {
            "calls": 1912,
            "min": 23636,
            "mean": 26250,
            "median": 23732,
            "max": 32503
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3115539,
          "size": 15494
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 760,
            "min": 22910,
            "mean": 86132,
            "median": 46784,
            "max": 233331
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 5120,
            "min": 21783,
            "mean": 22690,
            "median": 21795,
            "max": 26437
          },
          "decodeWord(string)": {
            "calls": 120,
            "min": 9297,
            "mean": 9431,
            "median": 9332,
            "max": 9763
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2966758,
          "size": 14751
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 25700,
            "min": 88953,
            "mean": 38956775,
            "median": 992157,
            "max": 96809334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 5732898,
          "size": 28563
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 20,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "addHours(uint256,uint256)": {
            "calls": 20,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "addMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "addMonths(uint256,uint256)": {
            "calls": 20,
            "min": 1116,
            "mean": 1116,
            "median": 1116,
            "max": 1116
          },
          "addSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 347,
            "mean": 347,
            "median": 347,
            "max": 347
          },
          "addYears(uint256,uint256)": {
            "calls": 20,
            "min": 1029,
            "mean": 1029,
            "median": 1029,
            "max": 1029
          },
          "diffDays(uint256,uint256)": {
            "calls": 20,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "diffHours(uint256,uint256)": {
            "calls": 20,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "diffMonths(uint256,uint256)": {
            "calls": 20,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "diffYears(uint256,uint256)": {
            "calls": 20,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "subDays(uint256,uint256)": {
            "calls": 20,
            "min": 389,
            "mean": 389,
            "median": 389,
            "max": 389
          },
          "subHours(uint256,uint256)": {
            "calls": 20,
            "min": 360,
            "mean": 360,
            "median": 360,
            "max": 360
          },
          "subMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 384,
            "mean": 384,
            "median": 384,
            "max": 384
          },
          "subMonths(uint256,uint256)": {
            "calls": 20,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "subSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 358,
            "mean": 358,
            "median": 358,
            "max": 358
          },
          "subYears(uint256,uint256)": {
            "calls": 20,
            "min": 670,
            "mean": 670,
            "median": 670,
            "max": 670
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 347470,
          "size": 1295
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 2654,
            "min": 67210,
            "mean": 67435,
            "median": 67578,
            "max": 67582
          },
          "predictDeployment(bytes32)": {
            "calls": 5120,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 160962,
          "size": 531
        },
        "functions": {
          "generate(bytes)": {
            "calls": 2799,
            "min": 0,
            "mean": 3442,
            "median": 1243,
            "max": 74286
          },
          "next(uint256)": {
            "calls": 5083,
            "min": 225,
            "mean": 225,
            "median": 225,
            "max": 225
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 5922175,
          "size": 29508
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 1368,
            "mean": 1368,
            "median": 1368,
            "max": 1368
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 5629546,
          "size": 28047
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 744,
            "min": 742,
            "mean": 806,
            "median": 810,
            "max": 836
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 738,
            "min": 584301,
            "mean": 660823,
            "median": 584894,
            "max": 2342368
          },
          "recover(bytes32,bytes)": {
            "calls": 3196,
            "min": 22549,
            "mean": 27136,
            "median": 26758,
            "max": 30444
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 882,
            "min": 3581,
            "mean": 25001,
            "median": 26122,
            "max": 26181
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 25908,
            "mean": 26160,
            "median": 26285,
            "max": 26355
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 2936,
            "min": 609819,
            "mean": 698294,
            "median": 610728,
            "max": 3995628
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 842,
            "min": 609311,
            "mean": 749503,
            "median": 610122,
            "max": 3568507
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 609336,
            "mean": 709893,
            "median": 610190,
            "max": 4460863
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 3196,
            "min": 23044,
            "mean": 30254,
            "median": 30463,
            "max": 30474
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 882,
            "min": 3563,
            "mean": 24989,
            "median": 26117,
            "max": 26163
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 25958,
            "mean": 26202,
            "median": 26335,
            "max": 26347
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 2936,
            "min": 613587,
            "mean": 710473,
            "median": 614438,
            "max": 4082152
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 842,
            "min": 609374,
            "mean": 712211,
            "median": 610172,
            "max": 2842638
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5785,
            "min": 609459,
            "mean": 725550,
            "median": 610311,
            "max": 4624424
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 745282,
          "size": 3236
        },
        "functions": {
          "batchAmounts()": {
            "calls": 10400,
            "min": 2528,
            "mean": 5970,
            "median": 6390,
            "max": 9357
          },
          "batchData()": {
            "calls": 10400,
            "min": 2679,
            "mean": 258901,
            "median": 2691,
            "max": 8777420
          },
          "batchFrom()": {
            "calls": 10400,
            "min": 2345,
            "mean": 2345,
            "median": 2345,
            "max": 2345
          },
          "batchIds()": {
            "calls": 10400,
            "min": 2563,
            "mean": 6007,
            "median": 6428,
            "max": 9395
          },
          "batchOperator()": {
            "calls": 10400,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "from()": {
            "calls": 10240,
            "min": 2324,
            "mean": 2324,
            "median": 2324,
            "max": 2324
          },
          "id()": {
            "calls": 10240,
            "min": 2328,
            "mean": 2328,
            "median": 2328,
            "max": 2328
          },
          "mintData()": {
            "calls": 10240,
            "min": 2700,
            "mean": 277546,
            "median": 2712,
            "max": 8796235
          },
          "operator()": {
            "calls": 10240,
            "min": 2348,
            "mean": 2348,
            "median": 2348,
            "max": 2348
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2079542,
          "size": 9411
        },
        "functions": {
          "afterCounter()": {
            "calls": 3200,
            "min": 339,
            "mean": 339,
            "median": 339,
            "max": 339
          },
          "beforeCounter()": {
            "calls": 3200,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 61324,
            "mean": 61457,
            "median": 61552,
            "max": 61566
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 57921,
            "mean": 58054,
            "median": 58149,
            "max": 58163
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 49340,
            "mean": 51565,
            "median": 49340,
            "max": 120540
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 61527,
            "mean": 61660,
            "median": 61755,
            "max": 61762
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1280,
            "min": 49261,
            "mean": 62619,
            "median": 58257,
            "max": 75122
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 303557,
          "size": 1253
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 661,
            "min": 43029,
            "mean": 50686,
            "median": 51033,
            "max": 51351
          },
          "mint(address,uint256)": {
            "calls": 640,
            "min": 53475,
            "mean": 72932,
            "median": 63200,
            "max": 95825
          },
          "sum()": {
            "calls": 20,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "transfer(address,uint256)": {
            "calls": 6,
            "min": 33720,
            "mean": 33720,
            "median": 33720,
            "max": 33720
          },
          "transferFrom(address,address,uint256)": {
            "calls": 14,
            "min": 36797,
            "mean": 36820,
            "median": 36820,
            "max": 36842
          },
          "burn(address,uint256)": {
            "calls": 10,
            "min": 35745,
            "mean": 35745,
            "median": 35745,
            "max": 35746
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 7084789,
          "size": 35312
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 10240,
            "min": 24655,
            "mean": 50190,
            "median": 48272,
            "max": 74053
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 372858,
          "size": 1511
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 60,
            "min": 179,
            "mean": 1148,
            "median": 179,
            "max": 3088
          },
          "data()": {
            "calls": 5140,
            "min": 2692,
            "mean": 3283,
            "median": 2692,
            "max": 11440
          },
          "datahash()": {
            "calls": 12900,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "setData(bytes)": {
            "calls": 5140,
            "min": 25124,
            "mean": 33928,
            "median": 25124,
            "max": 133840
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 15093731,
          "size": 75277
        },
        "functions": {
          "decimals()": {
            "calls": 20,
            "min": 187,
            "mean": 187,
            "median": 187,
            "max": 187
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22116,
            "mean": 22463,
            "median": 22425,
            "max": 23021
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22255,
            "mean": 22520,
            "median": 22491,
            "max": 23039
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 360961,
          "size": 1456
        },
        "functions": {
          "datahash()": {
            "calls": 7670,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 314812,
          "size": 1243
        },
        "functions": {
          "data()": {
            "calls": 20480,
            "min": 2590,
            "mean": 4162,
            "median": 2590,
            "max": 11338
          },
          "from()": {
            "calls": 20480,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "id()": {
            "calls": 20480,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "operator()": {
            "calls": 20480,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1844093,
          "size": 8328
        },
        "functions": {
          "afterCounter()": {
            "calls": 640,
            "min": 356,
            "mean": 356,
            "median": 356,
            "max": 356
          },
          "beforeCounter()": {
            "calls": 640,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "mint(address,uint256)": {
            "calls": 640,
            "min": 61825,
            "mean": 63440,
            "median": 61837,
            "max": 113137
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 56803,
            "mean": 57462,
            "median": 57019,
            "max": 74131
          },
          "transferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 64830,
            "mean": 69375,
            "median": 69516,
            "max": 69630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2586104,
          "size": 12850
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 9088,
            "min": 655,
            "mean": 674,
            "median": 667,
            "max": 850
          },
          "returnsHash(bytes)": {
            "calls": 8928,
            "min": 576,
            "mean": 595,
            "median": 588,
            "max": 768
          },
          "revertsWithCustomError()": {
            "calls": 153,
            "min": 204,
            "mean": 204,
            "median": 204,
            "max": 204
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1503078,
          "size": 7441
        },
        "functions": {
          "get(address)": {
            "calls": 10130,
            "min": 2461,
            "mean": 5710,
            "median": 5710,
            "max": 8960
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 2900,
            "min": 26544,
            "mean": 48806,
            "median": 37082,
            "max": 165011
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 8593123,
          "size": 42841
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 3363,
            "min": 21661,
            "mean": 44645,
            "median": 44021,
            "max": 118691
          },
          "addToBytes32Set(bytes32)": {
            "calls": 3558,
            "min": 22903,
            "mean": 47434,
            "median": 46301,
            "max": 139259
          },
          "addressSetAt(uint256)": {
            "calls": 382,
            "min": 4695,
            "mean": 5923,
            "median": 4695,
            "max": 8933
          },
          "addressSetContains(address)": {
            "calls": 3406,
            "min": 379,
            "mean": 6610,
            "median": 6857,
            "max": 6868
          },
          "bytes32SetAt(uint256)": {
            "calls": 352,
            "min": 4663,
            "mean": 5793,
            "median": 4663,
            "max": 11042
          },
          "bytes32SetContains(bytes32)": {
            "calls": 3469,
            "min": 363,
            "mean": 8664,
            "median": 8916,
            "max": 8916
          },
          "removeFromAddressSet(address)": {
            "calls": 3503,
            "min": 21682,
            "mean": 28075,
            "median": 28335,
            "max": 28335
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 3389,
            "min": 21652,
            "mean": 30200,
            "median": 30542,
            "max": 30543
          },
          "uint8SetAt(uint256)": {
            "calls": 347,
            "min": 290,
            "mean": 320,
            "median": 290,
            "max": 919
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 180,
            "min": 26529,
            "mean": 50045,
            "median": 48728,
            "max": 142599
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 46080,
            "min": 28572,
            "mean": 53998,
            "median": 50851,
            "max": 161638
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 46080,
            "min": 24037,
            "mean": 27915,
            "median": 27001,
            "max": 44031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 18338306,
          "size": 91459
        },
        "functions": {
          "_testMulSqrt(uint256,uint256,uint256)": {
            "calls": 1460,
            "min": 23195,
            "mean": 26687,
            "median": 27655,
            "max": 28727
          },
          "add(uint256,uint256)": {
            "calls": 5140,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 371
          },
          "divWad(uint256,uint256)": {
            "calls": 1784,
            "min": 372,
            "mean": 372,
            "median": 372,
            "max": 372
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 367,
            "mean": 392,
            "median": 402,
            "max": 402
          },
          "divWadUp(uint256,uint256)": {
            "calls": 1793,
            "min": 375,
            "mean": 375,
            "median": 375,
            "max": 375
          },
          "factorial(uint256)": {
            "calls": 20,
            "min": 318,
            "mean": 318,
            "median": 318,
            "max": 318
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 6385,
            "min": 499,
            "mean": 545,
            "median": 514,
            "max": 880
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 5120,
            "min": 381,
            "mean": 440,
            "median": 415,
            "max": 539
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 5160,
            "min": 531,
            "mean": 545,
            "median": 543,
            "max": 889
          },
          "lambertW0Wad(int256)": {
            "calls": 240,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "lnWad(int256)": {
            "calls": 60,
            "min": 360,
            "mean": 360,
            "median": 360,
            "max": 360
          },
          "mul(uint256,uint256)": {
            "calls": 5140,
            "min": 454,
            "mean": 468,
            "median": 476,
            "max": 476
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 416,
            "mean": 434,
            "median": 436,
            "max": 448
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 10240,
            "min": 426,
            "mean": 447,
            "median": 458,
            "max": 468
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 427,
            "mean": 455,
            "median": 465,
            "max": 479
          },
          "mulWad(uint256,uint256)": {
            "calls": 2329,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 414,
            "mean": 429,
            "median": 434,
            "max": 444
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 2299,
            "min": 394,
            "mean": 394,
            "median": 394,
            "max": 394
          },
          "packSci(uint256)": {
            "calls": 20,
            "min": 920,
            "mean": 920,
            "median": 920,
            "max": 920
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 40,
            "min": 683,
            "mean": 1670,
            "median": 1670,
            "max": 2657
          },
          "sDivWad(int256,int256)": {
            "calls": 1476,
            "min": 440,
            "mean": 440,
            "median": 440,
            "max": 440
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 456,
            "mean": 537,
            "median": 568,
            "max": 568
          },
          "sMulWad(int256,int256)": {
            "calls": 1849,
            "min": 524,
            "mean": 531,
            "median": 532,
            "max": 532
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 411,
            "mean": 516,
            "median": 529,
            "max": 530
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 19616602,
          "size": 97833
        },
        "functions": {
          "decodeString(string)": {
            "calls": 5640,
            "min": 37343,
            "mean": 39694,
            "median": 39561,
            "max": 46376
          },
          "parseInt(string)": {
            "calls": 15880,
            "min": 37580,
            "mean": 51717,
            "median": 55935,
            "max": 56221
          },
          "parseUint(string)": {
            "calls": 5560,
            "min": 37566,
            "mean": 44044,
            "median": 41099,
            "max": 55986
          },
          "parseUintFromHex(string)": {
            "calls": 6400,
            "min": 810,
            "mean": 3675,
            "median": 1237,
            "max": 12257
          },
          "parsedValue(string)": {
            "calls": 24060,
            "min": 37396,
            "mean": 41208,
            "median": 40464,
            "max": 55207
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2380263,
          "size": 11822
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 20,
            "min": 279,
            "mean": 279,
            "median": 279,
            "max": 279
          },
          "returnsBool(uint256)": {
            "calls": 20,
            "min": 251,
            "mean": 251,
            "median": 251,
            "max": 251
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 3687466,
          "size": 18350
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 40,
            "min": 23686,
            "mean": 33797,
            "median": 33797,
            "max": 43908
          },
          "claimWithToggle(uint256)": {
            "calls": 40,
            "min": 26617,
            "mean": 35165,
            "median": 35165,
            "max": 43714
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 4344928,
          "size": 21633
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 10574,
            "min": 23227,
            "mean": 24246,
            "median": 23881,
            "max": 26977
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 15440,
            "min": 24826,
            "mean": 26939,
            "median": 26332,
            "max": 183345
          },
          "_testLoadCalldata(bytes)": {
            "calls": 5120,
            "min": 28072,
            "mean": 28673,
            "median": 28527,
            "max": 29873
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 80,
            "min": 24363,
            "mean": 25774,
            "median": 25999,
            "max": 26735
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 5552,
            "min": 2825,
            "mean": 761620,
            "median": 640797,
            "max": 4652502
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 3101123,
          "size": 15422
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5180,
            "min": 111997,
            "mean": 1332174,
            "median": 979724,
            "max": 83526334
          },
          "getArgAddress(uint256)": {
            "calls": 127,
            "min": 254,
            "mean": 254,
            "median": 254,
            "max": 254
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 127,
            "min": 541,
            "mean": 557,
            "median": 558,
            "max": 571
          },
          "getArgUint256(uint256)": {
            "calls": 381,
            "min": 1575,
            "mean": 1575,
            "median": 1575,
            "max": 1575
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 127,
            "min": 15902,
            "mean": 43194,
            "median": 43730,
            "max": 71059
          },
          "getArgUint64(uint256)": {
            "calls": 127,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "getArgUint8(uint256)": {
            "calls": 127,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          },
          "getCalldataHash()": {
            "calls": 127,
            "min": 1027,
            "mean": 2116,
            "median": 2136,
            "max": 3232
          },
          "revertWithError()": {
            "calls": 127,
            "min": 2361,
            "mean": 2361,
            "median": 2361,
            "max": 2361
          },
          "setValue(uint256)": {
            "calls": 127,
            "min": 22332,
            "mean": 22332,
            "median": 22332,
            "max": 22332
          },
          "value()": {
            "calls": 20727,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 159605,
          "size": 524
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 10240,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          },
          "setHash(uint256,bytes)": {
            "calls": 5120,
            "min": 44474,
            "mean": 45111,
            "median": 44919,
            "max": 46466
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 878819,
          "size": 4323
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 7735,
            "min": 559,
            "mean": 688,
            "median": 751,
            "max": 775
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 15160683,
          "size": 75611
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 321,
            "min": 2982,
            "mean": 2982,
            "median": 2982,
            "max": 2982
          },
          "argsOnClone(address,uint256)": {
            "calls": 261,
            "min": 3026,
            "mean": 3027,
            "median": 3026,
            "max": 3034
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 168,
            "min": 3257,
            "mean": 4053,
            "median": 3258,
            "max": 10424
          },
          "argsOnERC1967(address)": {
            "calls": 233,
            "min": 2987,
            "mean": 2987,
            "median": 2987,
            "max": 2987
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 168,
            "min": 3013,
            "mean": 3013,
            "median": 3013,
            "max": 3017
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 116,
            "min": 3273,
            "mean": 3445,
            "median": 3274,
            "max": 4300
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 155,
            "min": 2968,
            "mean": 2968,
            "median": 2968,
            "max": 2968
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 90,
            "min": 2988,
            "mean": 2989,
            "median": 2988,
            "max": 2992
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 74,
            "min": 3295,
            "mean": 3636,
            "median": 3295,
            "max": 4317
          },
          "argsOnERC1967I(address)": {
            "calls": 191,
            "min": 2969,
            "mean": 2969,
            "median": 2969,
            "max": 2969
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 136,
            "min": 3011,
            "mean": 3012,
            "median": 3011,
            "max": 3019
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 91,
            "min": 3287,
            "mean": 3639,
            "median": 3288,
            "max": 5340
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 99,
            "min": 3012,
            "mean": 3012,
            "median": 3012,
            "max": 3014
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 55,
            "min": 3261,
            "mean": 3461,
            "median": 3261,
            "max": 4461
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 1274,
            "min": 35869,
            "mean": 46218,
            "median": 47980,
            "max": 56359
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 15360,
            "min": 647,
            "mean": 650,
            "median": 647,
            "max": 663
          },
          "clone(address)": {
            "calls": 5140,
            "min": 85389,
            "mean": 85389,
            "median": 85389,
            "max": 85389
          },
          "clone(address,bytes)": {
            "calls": 5140,
            "min": 69274,
            "mean": 2580836,
            "median": 71920,
            "max": 96821405
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5297,
            "min": 69772,
            "mean": 5989258,
            "median": 73092,
            "max": 96825523
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 5140,
            "min": 85797,
            "mean": 119620,
            "median": 86169,
            "max": 1387965
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 5269,
            "min": 0,
            "mean": 290801,
            "median": 75196,
            "max": 11307093
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5271,
            "min": 0,
            "mean": 332659,
            "median": 100667,
            "max": 11927102
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 5120,
            "min": 114374,
            "mean": 151669,
            "median": 114745,
            "max": 1706904
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 7167,
            "min": 0,
            "mean": 330318,
            "median": 104542,
            "max": 12400416
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 101489,
            "mean": 136984,
            "median": 101861,
            "max": 1786162
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5283,
            "min": 0,
            "mean": 339650,
            "median": 104672,
            "max": 12530215
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 5120,
            "min": 118626,
            "mean": 149297,
            "median": 118996,
            "max": 1466170
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 7176,
            "min": 0,
            "mean": 372847,
            "median": 105451,
            "max": 13078112
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 102488,
            "mean": 144080,
            "median": 102860,
            "max": 2025006
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5295,
            "min": 95131,
            "mean": 6030731,
            "median": 98469,
            "max": 96818487
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 7717,
            "min": 94290,
            "mean": 140331,
            "median": 111583,
            "max": 2033187
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 9083,
            "min": 98252,
            "mean": 17165934,
            "median": 104682,
            "max": 96830630
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 98500,
            "mean": 138357,
            "median": 98873,
            "max": 2099479
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5280,
            "min": 99402,
            "mean": 5947045,
            "median": 102865,
            "max": 96818891
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 12823,
            "min": 98498,
            "mean": 138217,
            "median": 99011,
            "max": 2611430
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 9184,
            "min": 100196,
            "mean": 17485908,
            "median": 105992,
            "max": 96830934
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 99516,
            "mean": 134859,
            "median": 99889,
            "max": 1630019
          },
          "deployERC1967(address,bytes)": {
            "calls": 5140,
            "min": 94625,
            "mean": 3277200,
            "median": 97429,
            "max": 96821695
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 10240,
            "min": 98035,
            "mean": 132198,
            "median": 98160,
            "max": 2250165
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 2568,
            "min": 97907,
            "mean": 3053465,
            "median": 101777,
            "max": 96814037
          },
          "deployERC1967I(address)": {
            "calls": 5140,
            "min": 115152,
            "mean": 115152,
            "median": 115152,
            "max": 115152
          },
          "deployERC1967I(address,bytes)": {
            "calls": 5140,
            "min": 98843,
            "mean": 3208829,
            "median": 101668,
            "max": 96827035
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 10260,
            "min": 99024,
            "mean": 136470,
            "median": 99149,
            "max": 2975501
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 2577,
            "min": 98717,
            "mean": 3567558,
            "median": 102837,
            "max": 96812543
          },
          "revertWithError()": {
            "calls": 143017,
            "min": 70,
            "mean": 2374,
            "median": 2390,
            "max": 2390
          },
          "setValue(uint256)": {
            "calls": 150058,
            "min": 917,
            "mean": 22224,
            "median": 22392,
            "max": 22392
          },
          "value()": {
            "calls": 421379,
            "min": 70,
            "mean": 2388,
            "median": 2397,
            "max": 2397
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 78,
            "min": 2985,
            "mean": 2985,
            "median": 2985,
            "max": 2985
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 3759757,
          "size": 18711
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 584,
            "mean": 584,
            "median": 584,
            "max": 584
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 556,
            "mean": 556,
            "median": 556,
            "max": 556
          },
          "decodeBatch(bytes)": {
            "calls": 1333,
            "min": 901,
            "mean": 2487,
            "median": 2533,
            "max": 4183
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 445,
            "min": 1227,
            "mean": 1426,
            "median": 1425,
            "max": 1649
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 12879,
            "min": 493,
            "mean": 1574,
            "median": 841,
            "max": 4811
          },
          "decodeDelegate(bytes)": {
            "calls": 5120,
            "min": 794,
            "mean": 811,
            "median": 804,
            "max": 840
          },
          "decodeSingle(bytes)": {
            "calls": 5120,
            "min": 842,
            "mean": 858,
            "median": 851,
            "max": 887
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 20,
            "min": 23292,
            "mean": 23292,
            "median": 23292,
            "max": 23292
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 2490,
            "min": 29715,
            "mean": 37770,
            "median": 37038,
            "max": 54709
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 5120,
            "min": 656837,
            "mean": 781987,
            "median": 662441,
            "max": 4632595
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 7082579,
          "size": 35301
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 20,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 20,
            "min": 2483,
            "mean": 2483,
            "median": 2483,
            "max": 2483
          },
          "setUint8(uint256,uint8)": {
            "calls": 20,
            "min": 43936,
            "mean": 43936,
            "median": 43936,
            "max": 43936
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 20,
            "min": 43912,
            "mean": 43912,
            "median": 43912,
            "max": 43912
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 4586460,
          "size": 22839
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 5120,
            "min": 2387,
            "mean": 3569,
            "median": 3438,
            "max": 4737
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 5120,
            "min": 23748,
            "mean": 23772,
            "median": 23783,
            "max": 23784
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 10280,
            "min": 21496,
            "mean": 43255,
            "median": 43690,
            "max": 43692
          },
          "lazyShufflerNext(uint256)": {
            "calls": 5140,
            "min": 23605,
            "mean": 23896,
            "median": 23982,
            "max": 23982
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 10132334,
          "size": 50523
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 400,
            "min": 24499,
            "mean": 45312,
            "median": 29326,
            "max": 128582
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 400,
            "min": 24769,
            "mean": 49016,
            "median": 30354,
            "max": 147184
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 19075108,
          "size": 95133
        },
        "functions": {
          "returnString(string)": {
            "calls": 5180,
            "min": 649,
            "mean": 657,
            "median": 657,
            "max": 667
          },
          "toHexString(uint256,uint256)": {
            "calls": 20,
            "min": 566,
            "mean": 566,
            "median": 566,
            "max": 566
          },
          "toSmallString(string)": {
            "calls": 20,
            "min": 667,
            "mean": 667,
            "median": 667,
            "max": 667
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 249351,
          "size": 939
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27312,
            "mean": 51584,
            "median": 50784,
            "max": 82153
          },
          "x()": {
            "calls": 120,
            "min": 2575,
            "mean": 10227,
            "median": 5828,
            "max": 37630
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166501,
          "size": 556
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27184,
            "mean": 41848,
            "median": 32584,
            "max": 82161
          },
          "x()": {
            "calls": 120,
            "min": 2441,
            "mean": 9342,
            "median": 4619,
            "max": 37311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2281944,
          "size": 11331
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 30760,
            "min": 22405,
            "mean": 26943,
            "median": 28255,
            "max": 29886
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 35900,
            "min": 24631,
            "mean": 35020,
            "median": 34285,
            "max": 84386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 2118561,
          "size": 10515
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 5104,
            "min": 1035,
            "mean": 39098,
            "median": 38912,
            "max": 78576
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 5107,
            "min": 1171,
            "mean": 46448,
            "median": 42209,
            "max": 81056
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 5092,
            "min": 1086,
            "mean": 39190,
            "median": 39246,
            "max": 79050
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 41,
            "min": 578,
            "mean": 578,
            "median": 578,
            "max": 578
          },
          "getRootFromEmptyTree()": {
            "calls": 20,
            "min": 369,
            "mean": 369,
            "median": 369,
            "max": 369
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 20,
            "min": 411,
            "mean": 411,
            "median": 411,
            "max": 411
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2381063,
          "size": 11826
        },
        "functions": {
          "decimals()": {
            "calls": 5120,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "name()": {
            "calls": 5120,
            "min": 4785,
            "mean": 6643,
            "median": 4837,
            "max": 13567
          },
          "returnsBytes32StringA()": {
            "calls": 20,
            "min": 244,
            "mean": 244,
            "median": 244,
            "max": 244
          },
          "returnsBytes32StringB()": {
            "calls": 800,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "returnsChoppedString(uint256)": {
            "calls": 2100,
            "min": 259,
            "mean": 259,
            "median": 259,
            "max": 262
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 11200,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "returnsEmptyString()": {
            "calls": 5120,
            "min": 4819,
            "mean": 6688,
            "median": 4864,
            "max": 13667
          },
          "returnsNothing()": {
            "calls": 5160,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "returnsString()": {
            "calls": 10240,
            "min": 4821,
            "mean": 6675,
            "median": 4863,
            "max": 13609
          },
          "returnsUint()": {
            "calls": 5120,
            "min": 2353,
            "mean": 2353,
            "median": 2353,
            "max": 2353
          },
          "reverts()": {
            "calls": 5160,
            "min": 283,
            "mean": 283,
            "median": 283,
            "max": 283
          },
          "symbol()": {
            "calls": 5120,
            "min": 4808,
            "mean": 6666,
            "median": 4860,
            "max": 13590
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 10102873,
          "size": 50376
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 2406,
            "min": 302,
            "mean": 302,
            "median": 302,
            "max": 302
          },
          "enqueue(uint256,uint256)": {
            "calls": 7627,
            "min": 21651,
            "mean": 51724,
            "median": 66275,
            "max": 66386
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 2449,
            "min": 400,
            "mean": 400,
            "median": 400,
            "max": 400
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 2506,
            "min": 632,
            "mean": 635,
            "median": 634,
            "max": 640
          },
          "pop()": {
            "calls": 1274,
            "min": 23439,
            "mean": 23439,
            "median": 23439,
            "max": 23439
          },
          "replace(uint256)": {
            "calls": 1247,
            "min": 23632,
            "mean": 23916,
            "median": 23999,
            "max": 24000
          },
          "root()": {
            "calls": 2514,
            "min": 2379,
            "mean": 2379,
            "median": 2379,
            "max": 2379
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 4866651,
          "size": 24238
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22490,
            "mean": 23468,
            "median": 23953,
            "max": 23970
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 7946407,
          "size": 39613
        },
        "functions": {
          "find(uint256)": {
            "calls": 20,
            "min": 281,
            "mean": 281,
            "median": 281,
            "max": 281
          },
          "insert(uint256)": {
            "calls": 40,
            "min": 21475,
            "mean": 23885,
            "median": 23885,
            "max": 26296
          },
          "remove(bytes32)": {
            "calls": 5180,
            "min": 23823,
            "mean": 24151,
            "median": 24154,
            "max": 24154
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 2281144,
          "size": 11327
        },
        "functions": {
          "read(address)": {
            "calls": 3203,
            "min": 2157,
            "mean": 2956,
            "median": 2907,
            "max": 3211
          },
          "read(address,uint256)": {
            "calls": 1867,
            "min": 2693,
            "mean": 3051,
            "median": 2943,
            "max": 3295
          },
          "read(address,uint256,uint256)": {
            "calls": 1222,
            "min": 2933,
            "mean": 3579,
            "median": 3331,
            "max": 15940
          },
          "write(bytes)": {
            "calls": 40,
            "min": 13468290,
            "mean": 48556917,
            "median": 48556917,
            "max": 83645545
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 13059894,
          "size": 65131
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 602,
            "min": 297,
            "mean": 323,
            "median": 335,
            "max": 335
          },
          "toInt104(uint256)": {
            "calls": 264,
            "min": 302,
            "mean": 317,
            "median": 310,
            "max": 340
          },
          "toInt112(int256)": {
            "calls": 628,
            "min": 286,
            "mean": 313,
            "median": 324,
            "max": 324
          },
          "toInt112(uint256)": {
            "calls": 328,
            "min": 308,
            "mean": 322,
            "median": 314,
            "max": 346
          },
          "toInt120(int256)": {
            "calls": 654,
            "min": 326,
            "mean": 353,
            "median": 364,
            "max": 364
          },
          "toInt120(uint256)": {
            "calls": 322,
            "min": 307,
            "mean": 322,
            "median": 318,
            "max": 345
          },
          "toInt128(int256)": {
            "calls": 656,
            "min": 314,
            "mean": 342,
            "median": 352,
            "max": 352
          },
          "toInt128(uint256)": {
            "calls": 323,
            "min": 279,
            "mean": 293,
            "median": 287,
            "max": 317
          },
          "toInt136(int256)": {
            "calls": 628,
            "min": 316,
            "mean": 345,
            "median": 354,
            "max": 354
          },
          "toInt136(uint256)": {
            "calls": 323,
            "min": 310,
            "mean": 325,
            "median": 317,
            "max": 348
          },
          "toInt144(int256)": {
            "calls": 642,
            "min": 317,
            "mean": 344,
            "median": 355,
            "max": 355
          },
          "toInt144(uint256)": {
            "calls": 317,
            "min": 309,
            "mean": 324,
            "median": 317,
            "max": 347
          },
          "toInt152(int256)": {
            "calls": 570,
            "min": 319,
            "mean": 348,
            "median": 357,
            "max": 357
          },
          "toInt152(uint256)": {
            "calls": 334,
            "min": 319,
            "mean": 334,
            "median": 326,
            "max": 357
          },
          "toInt16(int256)": {
            "calls": 954,
            "min": 310,
            "mean": 331,
            "median": 348,
            "max": 348
          },
          "toInt16(uint256)": {
            "calls": 448,
            "min": 269,
            "mean": 275,
            "median": 269,
            "max": 307
          },
          "toInt160(int256)": {
            "calls": 614,
            "min": 315,
            "mean": 344,
            "median": 353,
            "max": 353
          },
          "toInt160(uint256)": {
            "calls": 304,
            "min": 293,
            "mean": 310,
            "median": 306,
            "max": 331
          },
          "toInt168(int256)": {
            "calls": 636,
            "min": 315,
            "mean": 344,
            "median": 353,
            "max": 353
          },
          "toInt168(uint256)": {
            "calls": 243,
            "min": 309,
            "mean": 326,
            "median": 321,
            "max": 347
          },
          "toInt176(int256)": {
            "calls": 564,
            "min": 292,
            "mean": 321,
            "median": 330,
            "max": 330
          },
          "toInt176(uint256)": {
            "calls": 287,
            "min": 307,
            "mean": 326,
            "median": 327,
            "max": 345
          },
          "toInt184(int256)": {
            "calls": 606,
            "min": 323,
            "mean": 350,
            "median": 359,
            "max": 359
          },
          "toInt184(uint256)": {
            "calls": 265,
            "min": 320,
            "mean": 339,
            "median": 339,
            "max": 358
          },
          "toInt192(int256)": {
            "calls": 646,
            "min": 280,
            "mean": 309,
            "median": 318,
            "max": 318
          },
          "toInt192(uint256)": {
            "calls": 306,
            "min": 303,
            "mean": 320,
            "median": 316,
            "max": 341
          },
          "toInt200(int256)": {
            "calls": 540,
            "min": 314,
            "mean": 344,
            "median": 352,
            "max": 352
          },
          "toInt200(uint256)": {
            "calls": 288,
            "min": 308,
            "mean": 326,
            "median": 329,
            "max": 346
          },
          "toInt208(int256)": {
            "calls": 554,
            "min": 317,
            "mean": 347,
            "median": 355,
            "max": 355
          },
          "toInt208(uint256)": {
            "calls": 355,
            "min": 292,
            "mean": 311,
            "median": 308,
            "max": 330
          },
          "toInt216(int256)": {
            "calls": 624,
            "min": 316,
            "mean": 347,
            "median": 354,
            "max": 354
          },
          "toInt216(uint256)": {
            "calls": 290,
            "min": 308,
            "mean": 327,
            "median": 327,
            "max": 346
          },
          "toInt224(int256)": {
            "calls": 704,
            "min": 318,
            "mean": 349,
            "median": 356,
            "max": 356
          },
          "toInt224(uint256)": {
            "calls": 355,
            "min": 320,
            "mean": 340,
            "median": 348,
            "max": 358
          },
          "toInt232(int256)": {
            "calls": 702,
            "min": 312,
            "mean": 342,
            "median": 350,
            "max": 350
          },
          "toInt232(uint256)": {
            "calls": 367,
            "min": 308,
            "mean": 328,
            "median": 335,
            "max": 346
          },
          "toInt24(int256)": {
            "calls": 804,
            "min": 287,
            "mean": 309,
            "median": 325,
            "max": 325
          },
          "toInt24(uint256)": {
            "calls": 404,
            "min": 310,
            "mean": 318,
            "median": 311,
            "max": 348
          },
          "toInt240(int256)": {
            "calls": 808,
            "min": 315,
            "mean": 346,
            "median": 353,
            "max": 353
          },
          "toInt240(uint256)": {
            "calls": 417,
            "min": 291,
            "mean": 312,
            "median": 320,
            "max": 329
          },
          "toInt248(int256)": {
            "calls": 836,
            "min": 287,
            "mean": 319,
            "median": 326,
            "max": 326
          },
          "toInt248(uint256)": {
            "calls": 409,
            "min": 305,
            "mean": 320,
            "median": 327,
            "max": 333
          },
          "toInt256(uint256)": {
            "calls": 5120,
            "min": 306,
            "mean": 316,
            "median": 317,
            "max": 317
          },
          "toInt32(int256)": {
            "calls": 730,
            "min": 297,
            "mean": 320,
            "median": 335,
            "max": 335
          },
          "toInt32(uint256)": {
            "calls": 371,
            "min": 305,
            "mean": 312,
            "median": 305,
            "max": 343
          },
          "toInt40(int256)": {
            "calls": 598,
            "min": 275,
            "mean": 299,
            "median": 313,
            "max": 313
          },
          "toInt40(uint256)": {
            "calls": 387,
            "min": 303,
            "mean": 313,
            "median": 304,
            "max": 339
          },
          "toInt48(int256)": {
            "calls": 612,
            "min": 274,
            "mean": 298,
            "median": 312,
            "max": 312
          },
          "toInt48(uint256)": {
            "calls": 351,
            "min": 304,
            "mean": 314,
            "median": 307,
            "max": 342
          },
          "toInt56(int256)": {
            "calls": 616,
            "min": 286,
            "mean": 311,
            "median": 323,
            "max": 324
          },
          "toInt56(uint256)": {
            "calls": 302,
            "min": 310,
            "mean": 319,
            "median": 313,
            "max": 348
          },
          "toInt64(int256)": {
            "calls": 604,
            "min": 287,
            "mean": 304,
            "median": 314,
            "max": 314
          },
          "toInt64(uint256)": {
            "calls": 305,
            "min": 307,
            "mean": 316,
            "median": 308,
            "max": 334
          },
          "toInt72(int256)": {
            "calls": 584,
            "min": 327,
            "mean": 352,
            "median": 365,
            "max": 365
          },
          "toInt72(uint256)": {
            "calls": 300,
            "min": 309,
            "mean": 321,
            "median": 313,
            "max": 347
          },
          "toInt8(int256)": {
            "calls": 498,
            "min": 310,
            "mean": 311,
            "median": 310,
            "max": 335
          },
          "toInt8(uint256)": {
            "calls": 394,
            "min": 308,
            "mean": 309,
            "median": 308,
            "max": 328
          },
          "toInt80(int256)": {
            "calls": 534,
            "min": 314,
            "mean": 339,
            "median": 352,
            "max": 352
          },
          "toInt80(uint256)": {
            "calls": 296,
            "min": 279,
            "mean": 290,
            "median": 281,
            "max": 317
          },
          "toInt88(int256)": {
            "calls": 554,
            "min": 275,
            "mean": 300,
            "median": 313,
            "max": 313
          },
          "toInt88(uint256)": {
            "calls": 261,
            "min": 305,
            "mean": 319,
            "median": 312,
            "max": 343
          },
          "toInt96(int256)": {
            "calls": 594,
            "min": 312,
            "mean": 338,
            "median": 350,
            "max": 350
          },
          "toInt96(uint256)": {
            "calls": 299,
            "min": 317,
            "mean": 328,
            "median": 317,
            "max": 355
          },
          "toUint104(uint256)": {
            "calls": 319,
            "min": 302,
            "mean": 309,
            "median": 303,
            "max": 324
          },
          "toUint112(uint256)": {
            "calls": 291,
            "min": 319,
            "mean": 326,
            "median": 321,
            "max": 341
          },
          "toUint120(uint256)": {
            "calls": 342,
            "min": 318,
            "mean": 326,
            "median": 321,
            "max": 340
          },
          "toUint128(uint256)": {
            "calls": 349,
            "min": 302,
            "mean": 311,
            "median": 306,
            "max": 324
          },
          "toUint136(uint256)": {
            "calls": 285,
            "min": 303,
            "mean": 312,
            "median": 308,
            "max": 325
          },
          "toUint144(uint256)": {
            "calls": 350,
            "min": 303,
            "mean": 312,
            "median": 308,
            "max": 325
          },
          "toUint152(uint256)": {
            "calls": 307,
            "min": 303,
            "mean": 312,
            "median": 311,
            "max": 325
          },
          "toUint16(uint256)": {
            "calls": 484,
            "min": 304,
            "mean": 308,
            "median": 304,
            "max": 325
          },
          "toUint160(uint256)": {
            "calls": 316,
            "min": 320,
            "mean": 330,
            "median": 329,
            "max": 342
          },
          "toUint168(uint256)": {
            "calls": 301,
            "min": 319,
            "mean": 328,
            "median": 328,
            "max": 341
          },
          "toUint176(uint256)": {
            "calls": 297,
            "min": 305,
            "mean": 314,
            "median": 312,
            "max": 327
          },
          "toUint184(uint256)": {
            "calls": 292,
            "min": 304,
            "mean": 314,
            "median": 314,
            "max": 326
          },
          "toUint192(uint256)": {
            "calls": 325,
            "min": 301,
            "mean": 312,
            "median": 313,
            "max": 323
          },
          "toUint200(uint256)": {
            "calls": 271,
            "min": 279,
            "mean": 290,
            "median": 291,
            "max": 301
          },
          "toUint208(uint256)": {
            "calls": 312,
            "min": 320,
            "mean": 330,
            "median": 331,
            "max": 342
          },
          "toUint216(uint256)": {
            "calls": 295,
            "min": 318,
            "mean": 328,
            "median": 327,
            "max": 340
          },
          "toUint224(uint256)": {
            "calls": 307,
            "min": 303,
            "mean": 315,
            "median": 319,
            "max": 325
          },
          "toUint232(uint256)": {
            "calls": 366,
            "min": 317,
            "mean": 327,
            "median": 328,
            "max": 339
          },
          "toUint24(uint256)": {
            "calls": 401,
            "min": 320,
            "mean": 324,
            "median": 320,
            "max": 341
          },
          "toUint240(uint256)": {
            "calls": 365,
            "min": 318,
            "mean": 330,
            "median": 334,
            "max": 340
          },
          "toUint248(uint256)": {
            "calls": 390,
            "min": 303,
            "mean": 316,
            "median": 320,
            "max": 325
          },
          "toUint256(int256)": {
            "calls": 5120,
            "min": 324,
            "mean": 331,
            "median": 335,
            "max": 335
          },
          "toUint32(uint256)": {
            "calls": 401,
            "min": 318,
            "mean": 322,
            "median": 318,
            "max": 340
          },
          "toUint40(uint256)": {
            "calls": 381,
            "min": 306,
            "mean": 312,
            "median": 306,
            "max": 328
          },
          "toUint48(uint256)": {
            "calls": 340,
            "min": 319,
            "mean": 325,
            "median": 319,
            "max": 341
          },
          "toUint56(uint256)": {
            "calls": 324,
            "min": 302,
            "mean": 308,
            "median": 303,
            "max": 323
          },
          "toUint64(uint256)": {
            "calls": 291,
            "min": 303,
            "mean": 309,
            "median": 304,
            "max": 325
          },
          "toUint72(uint256)": {
            "calls": 263,
            "min": 301,
            "mean": 308,
            "median": 302,
            "max": 323
          },
          "toUint8(uint256)": {
            "calls": 473,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 312
          },
          "toUint80(uint256)": {
            "calls": 301,
            "min": 319,
            "mean": 325,
            "median": 321,
            "max": 341
          },
          "toUint88(uint256)": {
            "calls": 268,
            "min": 280,
            "mean": 287,
            "median": 282,
            "max": 302
          },
          "toUint96(uint256)": {
            "calls": 286,
            "min": 301,
            "mean": 309,
            "median": 305,
            "max": 323
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 18546075,
          "size": 92495
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 1694,
            "min": 165176,
            "mean": 170544,
            "median": 170676,
            "max": 170679
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 13846,
            "min": 22077,
            "mean": 149363,
            "median": 101530,
            "max": 296866
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 100,
            "min": 45823,
            "mean": 67093,
            "median": 68539,
            "max": 84813
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 5140,
            "min": 29356,
            "mean": 29803,
            "median": 29771,
            "max": 32031
          },
          "safeApprove(address,address,uint256)": {
            "calls": 5086,
            "min": 24743,
            "mean": 25238,
            "median": 25279,
            "max": 25550
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 5084,
            "min": 25173,
            "mean": 25671,
            "median": 25709,
            "max": 25987
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 5140,
            "min": 24812,
            "mean": 25266,
            "median": 25289,
            "max": 25532
          },
          "safeTransferAllETH(address)": {
            "calls": 5140,
            "min": 28645,
            "mean": 28645,
            "median": 28645,
            "max": 28645
          },
          "safeTransferETH(address,uint256)": {
            "calls": 5140,
            "min": 22393,
            "mean": 28826,
            "median": 28888,
            "max": 29095
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 5080,
            "min": 25882,
            "mean": 26529,
            "median": 26596,
            "max": 26914
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 10480,
            "min": 28303,
            "mean": 49547,
            "median": 68129,
            "max": 69169
          },
          "totalSupplyQuery(address)": {
            "calls": 60,
            "min": 469,
            "mean": 3689,
            "median": 5299,
            "max": 5299
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 51232,
            "min": 25638,
            "mean": 39647,
            "median": 30874,
            "max": 61423
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 46200,
            "min": 526617,
            "mean": 645700,
            "median": 553433,
            "max": 4544704
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 46200,
            "min": 525139,
            "mean": 658792,
            "median": 554096,
            "max": 4570176
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 2985381,
          "size": 14844
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 360,
            "min": 32903,
            "mean": 41516,
            "median": 38960,
            "max": 70192
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 980,
            "min": 37639,
            "mean": 58488,
            "median": 50082,
            "max": 117099
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 5984671,
          "size": 29820
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 120,
            "min": 1561,
            "mean": 8699,
            "median": 9302,
            "max": 16033
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 5984,
            "min": 1042,
            "mean": 10278,
            "median": 10316,
            "max": 16347
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 2599,
            "min": 6444,
            "mean": 6449,
            "median": 6449,
            "max": 6454
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 163778,
          "size": 603
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 673,
            "min": 40644,
            "mean": 50643,
            "median": 44949,
            "max": 79149
          },
          "fallbackDeposit(uint256)": {
            "calls": 660,
            "min": 40258,
            "mean": 49955,
            "median": 44563,
            "max": 78763
          },
          "withdraw(uint256)": {
            "calls": 365,
            "min": 39091,
            "mean": 44828,
            "median": 45260,
            "max": 45333
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 3285354,
          "size": 16342
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 2619,
            "min": 1463,
            "mean": 1478,
            "median": 1482,
            "max": 1498
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 334836,
          "size": 1360
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 40,
            "min": 234,
            "mean": 249,
            "median": 249,
            "max": 265
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 40,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "checkOnlyProxy()": {
            "calls": 40,
            "min": 252,
            "mean": 267,
            "median": 267,
            "max": 283
          },
          "initialize(address)": {
            "calls": 120,
            "min": 22359,
            "mean": 22359,
            "median": 22359,
            "max": 22359
          },
          "proxiableUUID()": {
            "calls": 40,
            "min": 250,
            "mean": 265,
            "median": 265,
            "max": 280
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 22039,
            "mean": 22039,
            "median": 22039,
            "max": 22039
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 244471,
          "size": 918
        },
        "functions": {
          "dataHash()": {
            "calls": 5120,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "fallback()": {
            "calls": 10400,
            "min": 22868,
            "mean": 62885,
            "median": 82946,
            "max": 189578
          },
          "lastCaller()": {
            "calls": 5280,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "lastCallvalue()": {
            "calls": 5280,
            "min": 2272,
            "mean": 2272,
            "median": 2272,
            "max": 2272
          },
          "numbersHash()": {
            "calls": 160,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "receive()": {
            "calls": 5200,
            "min": 65,
            "mean": 20822,
            "median": 21065,
            "max": 21065
          },
          "storeDataHash(bytes,bool)": {
            "calls": 10240,
            "min": 525,
            "mean": 33595,
            "median": 24441,
            "max": 67248
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 160,
            "min": 1727,
            "mean": 34885,
            "median": 34885,
            "max": 68043
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 107773,
          "size": 284
        },
        "functions": {
          "fallback()": {
            "calls": 20004,
            "min": 256,
            "mean": 23399,
            "median": 22364,
            "max": 124052
          },
          "receive()": {
            "calls": 238,
            "min": 21079,
            "mean": 21079,
            "median": 21079,
            "max": 21079
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 328889,
          "size": 1347
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 227,
            "mean": 339,
            "median": 396,
            "max": 396
          },
          "eip712Domain()": {
            "calls": 200,
            "min": 769,
            "mean": 769,
            "median": 769,
            "max": 769
          },
          "getArgAddress(uint256)": {
            "calls": 132,
            "min": 3161,
            "mean": 3182,
            "median": 3184,
            "max": 3200
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 74,
            "min": 3462,
            "mean": 3480,
            "median": 3483,
            "max": 3495
          },
          "getArgUint256(uint256)": {
            "calls": 280,
            "min": 4482,
            "mean": 4503,
            "median": 4506,
            "max": 4521
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 132,
            "min": 13083,
            "mean": 14370,
            "median": 14548,
            "max": 15440
          },
          "getArgUint64(uint256)": {
            "calls": 132,
            "min": 3174,
            "mean": 3195,
            "median": 3197,
            "max": 3213
          },
          "getArgUint8(uint256)": {
            "calls": 132,
            "min": 3195,
            "mean": 3216,
            "median": 3218,
            "max": 3234
          },
          "getCalldataHash()": {
            "calls": 74,
            "min": 3684,
            "mean": 3737,
            "median": 3744,
            "max": 3780
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 314,
            "mean": 422,
            "median": 476,
            "max": 476
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 702,
            "mean": 702,
            "median": 702,
            "max": 702
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 647,
            "mean": 647,
            "median": 647,
            "max": 647
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 689,
            "mean": 689,
            "median": 689,
            "max": 689
          },
          "revertWithError()": {
            "calls": 136,
            "min": 5264,
            "mean": 5343,
            "median": 5287,
            "max": 5828
          },
          "setValue(uint256)": {
            "calls": 136,
            "min": 43952,
            "mean": 44052,
            "median": 43982,
            "max": 44594
          },
          "value()": {
            "calls": 136,
            "min": 5216,
            "mean": 5296,
            "median": 5239,
            "max": 5787
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 802271,
          "size": 4769
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 5107,
            "mean": 5120,
            "median": 5125,
            "max": 5125
          },
          "eip712Domain()": {
            "calls": 120,
            "min": 5297,
            "mean": 5306,
            "median": 5306,
            "max": 5315
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 5208,
            "mean": 5217,
            "median": 5217,
            "max": 5226
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 5215,
            "mean": 5224,
            "median": 5224,
            "max": 5233
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5159,
            "mean": 5168,
            "median": 5168,
            "max": 5177
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5201,
            "mean": 5210,
            "median": 5210,
            "max": 5219
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 60,
            "min": 11283,
            "mean": 30008,
            "median": 33259,
            "max": 45483
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1730924,
          "size": 7797
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 110313,
            "min": 2433,
            "mean": 2433,
            "median": 2433,
            "max": 2433
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 8984,
            "min": 533,
            "mean": 2596,
            "median": 638,
            "max": 7638
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 12718,
            "min": 23535,
            "mean": 29767,
            "median": 28986,
            "max": 49656
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 84657,
            "min": 23582,
            "mean": 153372,
            "median": 78380,
            "max": 39410981
          },
          "burn(address,uint256,uint256)": {
            "calls": 7561,
            "min": 24876,
            "mean": 28909,
            "median": 27730,
            "max": 33087
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18165,
            "min": 24415,
            "mean": 309014,
            "median": 63235,
            "max": 43094180
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 22007,
            "min": 23925,
            "mean": 244234,
            "median": 58188,
            "max": 40792304
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 39356,
            "min": 26341,
            "mean": 44500,
            "median": 46481,
            "max": 46495
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "lastDataHash()": {
            "calls": 610,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 100216,
            "min": 22790,
            "mean": 132869,
            "median": 72450,
            "max": 41479916
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18201,
            "min": 23720,
            "mean": 300204,
            "median": 61866,
            "max": 42283995
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 21775,
            "min": 23414,
            "mean": 229903,
            "median": 57441,
            "max": 42125571
          },
          "setApprovalForAll(address,bool)": {
            "calls": 34072,
            "min": 25743,
            "mean": 45110,
            "median": 45880,
            "max": 45880
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 2640,
            "min": 26281,
            "mean": 36155,
            "median": 35663,
            "max": 47048
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 2679,
            "min": 27588,
            "mean": 30220,
            "median": 30268,
            "max": 30541
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 2494,
            "min": 34024,
            "mean": 119095,
            "median": 89141,
            "max": 1336851
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 2518,
            "min": 50897,
            "mean": 105393,
            "median": 62289,
            "max": 1351949
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 410294,
          "size": 1749
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 8700,
            "min": 2766,
            "mean": 2775,
            "median": 2776,
            "max": 2796
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 5120,
            "min": 26441,
            "mean": 26441,
            "median": 26441,
            "max": 26441
          },
          "signer()": {
            "calls": 80,
            "min": 2303,
            "mean": 2303,
            "median": 2303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 909667,
          "size": 5211
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 25660,
            "min": 419,
            "mean": 419,
            "median": 419,
            "max": 419
          },
          "allowance(address,address)": {
            "calls": 48863,
            "min": 462,
            "mean": 2041,
            "median": 2462,
            "max": 2462
          },
          "approve(address,uint256)": {
            "calls": 52361,
            "min": 25922,
            "mean": 45948,
            "median": 46037,
            "max": 46221
          },
          "balanceOf(address)": {
            "calls": 264965,
            "min": 420,
            "mean": 2244,
            "median": 2420,
            "max": 2420
          },
          "burn(address,uint256)": {
            "calls": 10290,
            "min": 24089,
            "mean": 29103,
            "median": 27314,
            "max": 34386
          },
          "decimals()": {
            "calls": 6240,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 5120,
            "min": 24808,
            "mean": 26691,
            "median": 26265,
            "max": 28337
          },
          "directTransfer(address,address,uint256)": {
            "calls": 5120,
            "min": 24855,
            "mean": 38000,
            "median": 30011,
            "max": 52283
          },
          "mint(address,uint256)": {
            "calls": 64380,
            "min": 24248,
            "mean": 67709,
            "median": 68229,
            "max": 68580
          },
          "name()": {
            "calls": 5160,
            "min": 2698,
            "mean": 4945,
            "median": 4672,
            "max": 9263
          },
          "nonces(address)": {
            "calls": 5160,
            "min": 2414,
            "mean": 2414,
            "median": 2414,
            "max": 2414
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 30740,
            "min": 23395,
            "mean": 43538,
            "median": 30007,
            "max": 74101
          },
          "symbol()": {
            "calls": 5160,
            "min": 2686,
            "mean": 4867,
            "median": 4054,
            "max": 9241
          },
          "totalSupply()": {
            "calls": 20640,
            "min": 2316,
            "mean": 2316,
            "median": 2316,
            "max": 2316
          },
          "transfer(address,uint256)": {
            "calls": 51486,
            "min": 24105,
            "mean": 45474,
            "median": 51330,
            "max": 51556
          },
          "transferFrom(address,address,uint256)": {
            "calls": 30974,
            "min": 24678,
            "mean": 40295,
            "median": 32474,
            "max": 54526
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 909624,
          "size": 5211
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10240,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "approve(address,uint256)": {
            "calls": 5120,
            "min": 21782,
            "mean": 22146,
            "median": 21857,
            "max": 43761
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2420,
            "mean": 2420,
            "median": 2420,
            "max": 2420
          },
          "mint(address,uint256)": {
            "calls": 5120,
            "min": 30350,
            "mean": 67729,
            "median": 68248,
            "max": 68578
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22513,
            "mean": 22823,
            "median": 22792,
            "max": 28349
          },
          "transferFrom(address,address,uint256)": {
            "calls": 10240,
            "min": 24880,
            "mean": 38317,
            "median": 30357,
            "max": 52320
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 928030,
          "size": 4196
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15417,
            "min": 2512,
            "mean": 2512,
            "median": 2512,
            "max": 2512
          },
          "approve(address,uint256)": {
            "calls": 20342,
            "min": 23738,
            "mean": 35089,
            "median": 34882,
            "max": 46374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1651121,
          "size": 7433
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 44265,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 5072,
            "min": 21546,
            "mean": 22012,
            "median": 21796,
            "max": 94915
          },
          "checkpointAt(address,uint256)": {
            "calls": 6312,
            "min": 0,
            "mean": 46,
            "median": 0,
            "max": 4630
          },
          "checkpointCount(address)": {
            "calls": 26623,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 10121,
            "min": 21192,
            "mean": 21644,
            "median": 21432,
            "max": 91321
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 23248,
            "mean": 41179,
            "median": 32467,
            "max": 75510
          },
          "delegates(address)": {
            "calls": 83431,
            "min": 0,
            "mean": 222,
            "median": 0,
            "max": 2445
          },
          "directDelegate(address,address)": {
            "calls": 5120,
            "min": 41976,
            "mean": 48191,
            "median": 48391,
            "max": 48394
          },
          "directIncrementNonce(address)": {
            "calls": 17536,
            "min": 26764,
            "mean": 31092,
            "median": 26778,
            "max": 43878
          },
          "getPastVotes(address,uint256)": {
            "calls": 80,
            "min": 5243,
            "mean": 5743,
            "median": 5243,
            "max": 7243
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 60,
            "min": 281,
            "mean": 3436,
            "median": 4890,
            "max": 5139
          },
          "getVotes(address)": {
            "calls": 59018,
            "min": 0,
            "mean": 10,
            "median": 0,
            "max": 4616
          },
          "getVotesTotalSupply()": {
            "calls": 15344,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4529
          },
          "mint(address,uint256)": {
            "calls": 14687,
            "min": 21556,
            "mean": 21855,
            "median": 21800,
            "max": 94542
          },
          "name()": {
            "calls": 5120,
            "min": 448,
            "mean": 448,
            "median": 448,
            "max": 448
          },
          "nonces(address)": {
            "calls": 9933,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "totalSupply()": {
            "calls": 7652,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 10201,
            "min": 21546,
            "mean": 21848,
            "median": 21796,
            "max": 86457
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 250095,
          "size": 942
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 5120,
            "min": 21454,
            "mean": 21454,
            "median": 21454,
            "max": 21454
          },
          "feeDenominator()": {
            "calls": 5120,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 10240,
            "min": 21648,
            "mean": 21947,
            "median": 22026,
            "max": 22026
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 71680,
            "min": 2512,
            "mean": 4010,
            "median": 4595,
            "max": 4614
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 7688,
            "min": 21974,
            "mean": 36866,
            "median": 44128,
            "max": 44344
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 15376,
            "min": 22150,
            "mean": 37384,
            "median": 44721,
            "max": 44966
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1475774,
          "size": 6814
        },
        "functions": {
          "addDeposit()": {
            "calls": 40,
            "min": 31903,
            "mean": 31903,
            "median": 31903,
            "max": 31903
          },
          "completeOwnershipHandover(address)": {
            "calls": 20,
            "min": 12077,
            "mean": 12077,
            "median": 12077,
            "max": 12077
          },
          "delegateExecute(address,bytes)": {
            "calls": 15480,
            "min": 5979,
            "mean": 18936,
            "median": 8513,
            "max": 139727
          },
          "eip712Domain()": {
            "calls": 40,
            "min": 856,
            "mean": 856,
            "median": 856,
            "max": 856
          },
          "entryPoint()": {
            "calls": 140,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "execute(address,uint256,bytes)": {
            "calls": 80,
            "min": 2531,
            "mean": 16332,
            "median": 12788,
            "max": 37220
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 2579,
            "min": 2819,
            "mean": 63096,
            "median": 66653,
            "max": 235037
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 2601,
            "min": 2978,
            "mean": 60586,
            "median": 45817,
            "max": 251378
          },
          "fallback()": {
            "calls": 100,
            "min": 219,
            "mean": 27735,
            "median": 266,
            "max": 104995
          },
          "getDeposit()": {
            "calls": 120,
            "min": 5262,
            "mean": 5262,
            "median": 5262,
            "max": 5262
          },
          "initialize(address)": {
            "calls": 26040,
            "min": 2387,
            "mean": 23859,
            "median": 23926,
            "max": 23926
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 36080,
            "min": 6479,
            "mean": 7844,
            "median": 6479,
            "max": 13686
          },
          "owner()": {
            "calls": 5340,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "receive()": {
            "calls": 5160,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 6904,
            "mean": 6904,
            "median": 6904,
            "max": 6904
          },
          "requestOwnershipHandover()": {
            "calls": 20,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "storageLoad(bytes32)": {
            "calls": 40,
            "min": 2344,
            "mean": 2344,
            "median": 2344,
            "max": 2344
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 40,
            "min": 2363,
            "mean": 13435,
            "median": 13435,
            "max": 24507
          },
          "transferOwnership(address)": {
            "calls": 40,
            "min": 6967,
            "mean": 6967,
            "median": 6967,
            "max": 6967
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 80,
            "min": 320,
            "mean": 24102,
            "median": 29180,
            "max": 37730
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 20,
            "min": 45021,
            "mean": 45021,
            "median": 45021,
            "max": 45021
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1734125,
          "size": 9545
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 10320,
            "min": 2358,
            "mean": 2358,
            "median": 2358,
            "max": 2358
          },
          "balanceOf(address)": {
            "calls": 31640,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 10240,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "convertToAssets(uint256)": {
            "calls": 21240,
            "min": 2436,
            "mean": 5085,
            "median": 7587,
            "max": 7688
          },
          "convertToShares(uint256)": {
            "calls": 80,
            "min": 7618,
            "mean": 7665,
            "median": 7665,
            "max": 7712
          },
          "decimals()": {
            "calls": 400,
            "min": 288,
            "mean": 291,
            "median": 288,
            "max": 324
          },
          "deposit(uint256,address)": {
            "calls": 5300,
            "min": 30183,
            "mean": 119029,
            "median": 120498,
            "max": 120742
          },
          "mint(uint256,address)": {
            "calls": 5260,
            "min": 30138,
            "mean": 119337,
            "median": 120454,
            "max": 131053
          },
          "name()": {
            "calls": 20,
            "min": 2745,
            "mean": 2745,
            "median": 2745,
            "max": 2745
          },
          "previewDeposit(uint256)": {
            "calls": 10280,
            "min": 7615,
            "mean": 7615,
            "median": 7615,
            "max": 7709
          },
          "previewWithdraw(uint256)": {
            "calls": 10280,
            "min": 7715,
            "mean": 7715,
            "median": 7715,
            "max": 7744
          },
          "redeem(uint256,address,address)": {
            "calls": 5260,
            "min": 24468,
            "mean": 76866,
            "median": 77320,
            "max": 92183
          },
          "symbol()": {
            "calls": 20,
            "min": 2720,
            "mean": 2720,
            "median": 2720,
            "max": 2720
          },
          "totalAssets()": {
            "calls": 20920,
            "min": 5337,
            "mean": 5337,
            "median": 5337,
            "max": 5337
          },
          "totalSupply()": {
            "calls": 10720,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "useVirtualShares()": {
            "calls": 40,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "withdraw(uint256,address,address)": {
            "calls": 5280,
            "min": 26661,
            "mean": 77574,
            "median": 78300,
            "max": 78459
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1243389,
          "size": 5788
        },
        "functions": {
          "eip712Domain()": {
            "calls": 6728,
            "min": 835,
            "mean": 835,
            "median": 835,
            "max": 835
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 80,
            "min": 5775,
            "mean": 22553,
            "median": 10786,
            "max": 62865
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 2652,
            "min": 5795,
            "mean": 86294,
            "median": 83724,
            "max": 259256
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 2548,
            "min": 28351,
            "mean": 94459,
            "median": 82649,
            "max": 339370
          },
          "fallback()": {
            "calls": 17440,
            "min": 222,
            "mean": 6053,
            "median": 3207,
            "max": 131416
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 7056,
            "min": 429,
            "mean": 14333,
            "median": 13776,
            "max": 49464
          },
          "isValidSigner(address,bytes)": {
            "calls": 5120,
            "min": 5785,
            "mean": 5785,
            "median": 5785,
            "max": 5785
          },
          "mockId()": {
            "calls": 40,
            "min": 488,
            "mean": 488,
            "median": 488,
            "max": 488
          },
          "owner()": {
            "calls": 15950,
            "min": 5569,
            "mean": 5569,
            "median": 5569,
            "max": 5569
          },
          "proxiableUUID()": {
            "calls": 20,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "receive()": {
            "calls": 20,
            "min": 60,
            "mean": 60,
            "median": 60,
            "max": 60
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5578,
            "mean": 14131,
            "median": 14152,
            "max": 22726
          },
          "state()": {
            "calls": 15440,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "supportsInterface(bytes4)": {
            "calls": 80,
            "min": 295,
            "mean": 295,
            "median": 295,
            "max": 295
          },
          "token()": {
            "calls": 10720,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5180,
            "min": 5767,
            "mean": 35014,
            "median": 35175,
            "max": 52275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1261804,
          "size": 5874
        },
        "functions": {
          "clearState()": {
            "calls": 5120,
            "min": 5231,
            "mean": 5231,
            "median": 5231,
            "max": 5231
          },
          "mockId()": {
            "calls": 20,
            "min": 391,
            "mean": 391,
            "median": 391,
            "max": 391
          },
          "proxiableUUID()": {
            "calls": 5140,
            "min": 247,
            "mean": 247,
            "median": 247,
            "max": 247
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5686,
            "mean": 14239,
            "median": 14260,
            "max": 22834
          },
          "state()": {
            "calls": 10260,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 18183,
            "mean": 18183,
            "median": 18183,
            "max": 18183
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 185210,
          "size": 642
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 48416,
            "min": 94666,
            "mean": 95228,
            "median": 95273,
            "max": 95492
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 824695,
          "size": 3606
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 50027,
            "min": 2475,
            "mean": 2475,
            "median": 2475,
            "max": 2475
          },
          "approve(address,uint256,uint256)": {
            "calls": 30858,
            "min": 26796,
            "mean": 46823,
            "median": 47034,
            "max": 47435
          },
          "balanceOf(address,uint256)": {
            "calls": 47847,
            "min": 2432,
            "mean": 2432,
            "median": 2432,
            "max": 2432
          },
          "burn(address,uint256,uint256)": {
            "calls": 10260,
            "min": 24220,
            "mean": 27200,
            "median": 25192,
            "max": 30425
          },
          "decimals(uint256)": {
            "calls": 20,
            "min": 206,
            "mean": 206,
            "median": 206,
            "max": 206
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 10260,
            "min": 34623,
            "mean": 47094,
            "median": 47153,
            "max": 47524
          },
          "directSetOperator(address,address,bool)": {
            "calls": 15400,
            "min": 23824,
            "mean": 32312,
            "median": 26292,
            "max": 46206
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 7795,
            "min": 25626,
            "mean": 40041,
            "median": 30020,
            "max": 61554
          },
          "isOperator(address,address)": {
            "calls": 15440,
            "min": 2452,
            "mean": 2452,
            "median": 2452,
            "max": 2452
          },
          "mint(address,uint256,uint256)": {
            "calls": 92560,
            "min": 24372,
            "mean": 45695,
            "median": 47041,
            "max": 47586
          },
          "name(uint256)": {
            "calls": 5120,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "setOperator(address,bool)": {
            "calls": 20,
            "min": 45910,
            "mean": 45910,
            "median": 45910,
            "max": 45910
          },
          "symbol(uint256)": {
            "calls": 5120,
            "min": 386,
            "mean": 386,
            "median": 386,
            "max": 386
          },
          "tokenURI(uint256)": {
            "calls": 20,
            "min": 717,
            "mean": 717,
            "median": 717,
            "max": 717
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20912,
            "min": 24155,
            "mean": 37257,
            "median": 31114,
            "max": 52694
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 32971,
            "min": 26886,
            "mean": 38422,
            "median": 33054,
            "max": 60693
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1764701,
          "size": 7961
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 21339,
            "min": 23993,
            "mean": 42690,
            "median": 48311,
            "max": 48636
          },
          "balanceOf(address)": {
            "calls": 204832,
            "min": 2457,
            "mean": 2457,
            "median": 2457,
            "max": 2457
          },
          "burn(uint256)": {
            "calls": 4982,
            "min": 28213,
            "mean": 29248,
            "median": 28660,
            "max": 31352
          },
          "directApprove(address,uint256)": {
            "calls": 21088,
            "min": 24137,
            "mean": 43777,
            "median": 48904,
            "max": 49223
          },
          "directGetApproved(uint256)": {
            "calls": 30247,
            "min": 2472,
            "mean": 4462,
            "median": 4645,
            "max": 4645
          },
          "directOwnerOf(uint256)": {
            "calls": 51073,
            "min": 2480,
            "mean": 2657,
            "median": 2701,
            "max": 2701
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 12827,
            "min": 56842,
            "mean": 75246,
            "median": 63061,
            "max": 129516
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10318,
            "min": 63606,
            "mean": 93834,
            "median": 64806,
            "max": 237358
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 18980,
            "min": 24294,
            "mean": 41857,
            "median": 46434,
            "max": 46460
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 36491,
            "min": 25076,
            "mean": 42533,
            "median": 40968,
            "max": 57520
          },
          "exists(uint256)": {
            "calls": 10218,
            "min": 2473,
            "mean": 2473,
            "median": 2473,
            "max": 2473
          },
          "getApproved(uint256)": {
            "calls": 31149,
            "min": 2447,
            "mean": 4388,
            "median": 4564,
            "max": 4564
          },
          "getAux(address)": {
            "calls": 51240,
            "min": 2730,
            "mean": 2731,
            "median": 2730,
            "max": 2743
          },
          "getExtraData(uint256)": {
            "calls": 71614,
            "min": 2423,
            "mean": 2423,
            "median": 2423,
            "max": 2423
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 30720,
            "min": 2807,
            "mean": 5351,
            "median": 6087,
            "max": 7140
          },
          "mint(address,uint256)": {
            "calls": 217569,
            "min": 24329,
            "mean": 64330,
            "median": 68514,
            "max": 68878
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 15380,
            "min": 46702,
            "mean": 55926,
            "median": 51741,
            "max": 69200
          },
          "ownerOf(uint256)": {
            "calls": 112849,
            "min": 497,
            "mean": 2481,
            "median": 2497,
            "max": 2497
          },
          "safeMint(address,uint256)": {
            "calls": 25600,
            "min": 71102,
            "mean": 81468,
            "median": 71865,
            "max": 121062
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 20480,
            "min": 72225,
            "mean": 98214,
            "median": 73419,
            "max": 232079
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 36921,
            "min": 40395,
            "mean": 67981,
            "median": 63119,
            "max": 129671
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10162,
            "min": 63662,
            "mean": 94270,
            "median": 64811,
            "max": 238469
          },
          "setApprovalForAll(address,bool)": {
            "calls": 23938,
            "min": 24030,
            "mean": 42841,
            "median": 46170,
            "max": 46183
          },
          "setAux(address,uint224)": {
            "calls": 15412,
            "min": 27580,
            "mean": 44556,
            "median": 44662,
            "max": 44680
          },
          "setExtraData(uint256,uint96)": {
            "calls": 30802,
            "min": 23917,
            "mean": 36894,
            "median": 43894,
            "max": 44322
          },
          "transferFrom(address,address,uint256)": {
            "calls": 36225,
            "min": 24511,
            "mean": 42047,
            "median": 40394,
            "max": 56898
          },
          "uncheckedBurn(uint256)": {
            "calls": 58947,
            "min": 23625,
            "mean": 30124,
            "median": 31043,
            "max": 36227
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 3676,
            "min": 54700,
            "mean": 54954,
            "median": 54942,
            "max": 55308
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 626916,
          "size": 2691
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 5240,
            "min": 31166,
            "mean": 99708,
            "median": 91045,
            "max": 158775
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 5253,
            "min": 329544,
            "mean": 430491,
            "median": 350457,
            "max": 3619985
          },
          "lastOpData()": {
            "calls": 5120,
            "min": 2587,
            "mean": 5657,
            "median": 4754,
            "max": 11223
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 160,
            "min": 22078,
            "mean": 41251,
            "median": 43990,
            "max": 43990
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 159309,
          "size": 659
        },
        "functions": {
          "counter()": {
            "calls": 80,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "garbage()": {
            "calls": 15600,
            "min": 2288,
            "mean": 2288,
            "median": 2288,
            "max": 2288
          },
          "getArgAddress(uint256)": {
            "calls": 38,
            "min": 3023,
            "mean": 3026,
            "median": 3026,
            "max": 3028
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 24,
            "min": 3325,
            "mean": 3328,
            "median": 3328,
            "max": 3330
          },
          "getArgUint256(uint256)": {
            "calls": 86,
            "min": 4344,
            "mean": 4347,
            "median": 4347,
            "max": 4349
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 38,
            "min": 5910,
            "mean": 6216,
            "median": 6207,
            "max": 6523
          },
          "getArgUint64(uint256)": {
            "calls": 38,
            "min": 3036,
            "mean": 3039,
            "median": 3039,
            "max": 3041
          },
          "getArgUint8(uint256)": {
            "calls": 38,
            "min": 3057,
            "mean": 3060,
            "median": 3060,
            "max": 3062
          },
          "getCalldataHash()": {
            "calls": 24,
            "min": 3270,
            "mean": 3274,
            "median": 3275,
            "max": 3279
          },
          "receive()": {
            "calls": 208,
            "min": 0,
            "mean": 41680,
            "median": 21096,
            "max": 286345
          },
          "revertWithError()": {
            "calls": 42,
            "min": 5126,
            "mean": 5483,
            "median": 5189,
            "max": 6183
          },
          "setValue(uint256)": {
            "calls": 42,
            "min": 43811,
            "mean": 44214,
            "median": 43903,
            "max": 44987
          },
          "value()": {
            "calls": 42,
            "min": 5078,
            "mean": 5439,
            "median": 5143,
            "max": 6147
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 793215,
          "size": 3457
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 157733,
            "min": 327,
            "mean": 4126,
            "median": 4453,
            "max": 4453
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 5273,
            "min": 26708,
            "mean": 28077,
            "median": 28118,
            "max": 28194
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 629,
            "min": 26312,
            "mean": 40455,
            "median": 39330,
            "max": 58928
          },
          "guardedByOnlyRoles()": {
            "calls": 629,
            "min": 23721,
            "mean": 39657,
            "median": 39833,
            "max": 56482
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 5120,
            "min": 1004,
            "mean": 8462,
            "median": 7883,
            "max": 16667
          },
          "hasRole(address,uint256)": {
            "calls": 36344,
            "min": 2487,
            "mean": 2487,
            "median": 2487,
            "max": 2487
          },
          "owner()": {
            "calls": 39257,
            "min": 2351,
            "mean": 2366,
            "median": 2368,
            "max": 2368
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 5324,
            "min": 2431,
            "mean": 2655,
            "median": 2474,
            "max": 4570
          },
          "roleHolderCount(uint256)": {
            "calls": 76714,
            "min": 2403,
            "mean": 2403,
            "median": 2403,
            "max": 2403
          },
          "roleHolders(uint256)": {
            "calls": 77713,
            "min": 2552,
            "mean": 2939,
            "median": 2552,
            "max": 21104
          },
          "setAllowedRole(uint256)": {
            "calls": 5120,
            "min": 23618,
            "mean": 43396,
            "median": 43590,
            "max": 43902
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 629,
            "min": 24265,
            "mean": 127267,
            "median": 131005,
            "max": 218813
          },
          "setMaxRole(uint256)": {
            "calls": 5280,
            "min": 21601,
            "mean": 26975,
            "median": 26472,
            "max": 43885
          },
          "setMaxRoleReverts(bool)": {
            "calls": 5120,
            "min": 23644,
            "mean": 25052,
            "median": 25191,
            "max": 26456
          },
          "setOwner(address)": {
            "calls": 5354,
            "min": 25377,
            "mean": 27120,
            "median": 26696,
            "max": 43796
          },
          "setOwnerReverts(bool)": {
            "calls": 5120,
            "min": 23666,
            "mean": 25051,
            "median": 24861,
            "max": 29043
          },
          "setRole(address,uint256,bool)": {
            "calls": 28235,
            "min": 24263,
            "mean": 59473,
            "median": 73565,
            "max": 74082
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 134692,
            "min": 33355,
            "mean": 59136,
            "median": 73603,
            "max": 78510
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 113853,
          "size": 312
        },
        "functions": {
          "fails()": {
            "calls": 120,
            "min": 174,
            "mean": 174,
            "median": 174,
            "max": 174
          },
          "getValue(uint256)": {
            "calls": 19204,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "setValue(uint256,uint256)": {
            "calls": 19204,
            "min": 8391,
            "mean": 22299,
            "median": 22321,
            "max": 22321
          },
          "succeeds(uint256)": {
            "calls": 40,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 406674,
          "size": 3091
        },
        "functions": {
          "disableInitializers()": {
            "calls": 40,
            "min": 23365,
            "mean": 33882,
            "median": 33882,
            "max": 44400
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 3907,
            "min": 27439,
            "mean": 61053,
            "median": 67673,
            "max": 90546
          },
          "isInitializing()": {
            "calls": 3710,
            "min": 2292,
            "mean": 2292,
            "median": 2292,
            "max": 2292
          },
          "onlyDuringInitializing()": {
            "calls": 20,
            "min": 23402,
            "mean": 23402,
            "median": 23402,
            "max": 23402
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 4817,
            "min": 24395,
            "mean": 55669,
            "median": 65688,
            "max": 90550
          },
          "version()": {
            "calls": 5054,
            "min": 2325,
            "mean": 2325,
            "median": 2325,
            "max": 2325
          },
          "x()": {
            "calls": 2675,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 853929,
          "size": 3793
        },
        "functions": {
          "owner()": {
            "calls": 14900,
            "min": 143,
            "mean": 143,
            "median": 143,
            "max": 143
          },
          "rescueETH(address,uint256)": {
            "calls": 20480,
            "min": 24780,
            "mean": 33534,
            "median": 24802,
            "max": 58981
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 1029886,
          "size": 4681
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 15360,
            "min": 23854,
            "mean": 23854,
            "median": 23854,
            "max": 23854
          },
          "lockRescue(uint256)": {
            "calls": 100,
            "min": 26162,
            "mean": 37784,
            "median": 44009,
            "max": 46295
          },
          "owner()": {
            "calls": 34313,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 2587,
            "min": 28930,
            "mean": 70263,
            "median": 67690,
            "max": 738461
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 2536,
            "min": 28084,
            "mean": 53217,
            "median": 60229,
            "max": 60539
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 2582,
            "min": 28596,
            "mean": 54063,
            "median": 61467,
            "max": 61875
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 5220,
            "min": 27959,
            "mean": 48149,
            "median": 47093,
            "max": 63320
          },
          "rescueETH(address,uint256)": {
            "calls": 28268,
            "min": 5702,
            "mean": 32478,
            "median": 36548,
            "max": 61912
          },
          "transferOwnership(address)": {
            "calls": 5120,
            "min": 6816,
            "mean": 6816,
            "median": 6816,
            "max": 6816
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 693111,
          "size": 2996
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 10378,
            "min": 21842,
            "mean": 24287,
            "median": 24317,
            "max": 37316
          },
          "multicallBrutalized(bytes[])": {
            "calls": 5122,
            "min": 390843,
            "mean": 469919,
            "median": 397458,
            "max": 3687581
          },
          "multicallOriginal(bytes[])": {
            "calls": 20,
            "min": 42369,
            "mean": 42369,
            "median": 42369,
            "max": 42369
          },
          "returnsRandomizedString(string)": {
            "calls": 5228,
            "min": 712,
            "mean": 1645,
            "median": 1611,
            "max": 3081
          },
          "returnsSender()": {
            "calls": 20,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 10680,
            "min": 449,
            "mean": 449,
            "median": 449,
            "max": 449
          },
          "revertsWithCustomError()": {
            "calls": 20,
            "min": 219,
            "mean": 219,
            "median": 219,
            "max": 219
          },
          "revertsWithNothing()": {
            "calls": 20,
            "min": 165,
            "mean": 165,
            "median": 165,
            "max": 165
          },
          "revertsWithString(string)": {
            "calls": 5140,
            "min": 686,
            "mean": 701,
            "median": 699,
            "max": 719
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 385659,
          "size": 1496
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22661,
            "mean": 22661,
            "median": 22661,
            "max": 22661
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 23814,
            "mean": 28713,
            "median": 28839,
            "max": 28847
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28229,
            "mean": 28229,
            "median": 28229,
            "max": 28229
          },
          "owner()": {
            "calls": 16768,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2687,
            "mean": 2687,
            "median": 2687,
            "max": 2694
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 325,
            "mean": 325,
            "median": 325,
            "max": 325
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23102,
            "mean": 23102,
            "median": 23102,
            "max": 23102
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44565,
            "mean": 44565,
            "median": 44565,
            "max": 44565
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 27270,
            "mean": 28374,
            "median": 28460,
            "max": 28467
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 23837,
            "mean": 25073,
            "median": 23865,
            "max": 28519
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23365,
            "mean": 34663,
            "median": 38857,
            "max": 45496
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 283357,
          "size": 1022
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 743918,
          "size": 3153
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22670,
            "mean": 22670,
            "median": 22670,
            "max": 22670
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 23886,
            "mean": 28779,
            "median": 28905,
            "max": 28913
          },
          "grantRoles(address,uint256)": {
            "calls": 30760,
            "min": 24007,
            "mean": 45859,
            "median": 47980,
            "max": 48335
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 5120,
            "min": 28834,
            "mean": 45649,
            "median": 45854,
            "max": 46182
          },
          "hasAllRoles(address,uint256)": {
            "calls": 5120,
            "min": 2739,
            "mean": 2739,
            "median": 2739,
            "max": 2746
          },
          "hasAnyRole(address,uint256)": {
            "calls": 5120,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2759
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28268,
            "mean": 28268,
            "median": 28268,
            "max": 28268
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 5760,
            "min": 456,
            "mean": 16847,
            "median": 10552,
            "max": 55122
          },
          "owner()": {
            "calls": 16699,
            "min": 2336,
            "mean": 2336,
            "median": 2336,
            "max": 2336
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2735,
            "mean": 2735,
            "median": 2735,
            "max": 2742
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 10240,
            "min": 23793,
            "mean": 27137,
            "median": 25939,
            "max": 29121
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23124,
            "mean": 23124,
            "median": 23124,
            "max": 23124
          },
          "renounceRoles(uint256)": {
            "calls": 1286,
            "min": 23434,
            "mean": 27800,
            "median": 28088,
            "max": 28422
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44604,
            "mean": 44604,
            "median": 44604,
            "max": 44604
          },
          "revokeRoles(address,uint256)": {
            "calls": 1276,
            "min": 24037,
            "mean": 27439,
            "median": 27218,
            "max": 31248
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 5760,
            "min": 542,
            "mean": 24536,
            "median": 23447,
            "max": 53796
          },
          "rolesOf(address)": {
            "calls": 45447,
            "min": 2704,
            "mean": 2705,
            "median": 2704,
            "max": 2711
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 27976,
            "mean": 28377,
            "median": 28461,
            "max": 28468
          },
          "setRolesDirect(address,uint256)": {
            "calls": 20480,
            "min": 25596,
            "mean": 37474,
            "median": 37348,
            "max": 46200
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 23875,
            "mean": 25036,
            "median": 23889,
            "max": 28543
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23387,
            "mean": 34527,
            "median": 36673,
            "max": 45530
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 5140,
            "min": 25715,
            "mean": 46019,
            "median": 46274,
            "max": 48218
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 5120,
            "min": 23617,
            "mean": 44436,
            "median": 45792,
            "max": 46121
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 5120,
            "min": 25712,
            "mean": 46260,
            "median": 46515,
            "max": 48215
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 409434,
          "size": 1605
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 87013,
          "size": 188
        },
        "functions": {
          "receive()": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 431375,
          "size": 1781
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 20,
            "min": 21302,
            "mean": 21302,
            "median": 21302,
            "max": 21302
          },
          "callGuardedToReadGuarded()": {
            "calls": 20,
            "min": 21262,
            "mean": 21262,
            "median": 21262,
            "max": 21262
          },
          "callUnguardedToGuarded()": {
            "calls": 20,
            "min": 65556,
            "mean": 65556,
            "median": 65556,
            "max": 65556
          },
          "callUnguardedToReadGuarded()": {
            "calls": 20,
            "min": 45535,
            "mean": 45535,
            "median": 45535,
            "max": 45535
          },
          "countAndCall(address)": {
            "calls": 20,
            "min": 69591,
            "mean": 69591,
            "median": 69591,
            "max": 69591
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 65869,
            "mean": 65869,
            "median": 65869,
            "max": 65869
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 66501,
            "mean": 66501,
            "median": 66501,
            "max": 66501
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 45573,
            "mean": 45573,
            "median": 45573,
            "max": 45573
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 51232,
            "mean": 51232,
            "median": 51232,
            "max": 51232
          },
          "enterTimes()": {
            "calls": 120,
            "min": 2313,
            "mean": 2313,
            "median": 2313,
            "max": 2313
          },
          "isReentrancyGuardLocked()": {
            "calls": 280,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 912381,
          "size": 4008
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 13644,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 5144,
            "min": 26918,
            "mean": 28145,
            "median": 28149,
            "max": 28605
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 5144,
            "min": 33883,
            "mean": 39590,
            "median": 39659,
            "max": 40274
          },
          "owner()": {
            "calls": 24207,
            "min": 2375,
            "mean": 2375,
            "median": 2375,
            "max": 2375
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 5120,
            "min": 32563,
            "mean": 43459,
            "median": 43527,
            "max": 43527
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 5120,
            "min": 91347,
            "mean": 110966,
            "median": 111278,
            "max": 111278
          },
          "setMaxTimedRole(uint256)": {
            "calls": 442,
            "min": 26243,
            "mean": 29161,
            "median": 26825,
            "max": 43926
          },
          "setOwner(address)": {
            "calls": 610,
            "min": 26687,
            "mean": 28449,
            "median": 26696,
            "max": 43796
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 13919,
            "min": 24478,
            "mean": 50202,
            "median": 51670,
            "max": 51767
          },
          "timedRoleActive(address,uint256)": {
            "calls": 15134,
            "min": 2561,
            "mean": 2561,
            "median": 2561,
            "max": 2561
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 267863,
          "size": 1043
        },
        "functions": {
          "initialize(address)": {
            "calls": 160,
            "min": 22354,
            "mean": 22354,
            "median": 22354,
            "max": 22354
          },
          "proxiableUUID()": {
            "calls": 60,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "revertWithError()": {
            "calls": 20,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "setValue(uint256)": {
            "calls": 20,
            "min": 22287,
            "mean": 22287,
            "median": 22287,
            "max": 22287
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 140,
            "min": 2677,
            "mean": 9683,
            "median": 5331,
            "max": 32072
          },
          "value()": {
            "calls": 20,
            "min": 2269,
            "mean": 2269,
            "median": 2269,
            "max": 2269
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 350067,
          "size": 1217
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10280,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 33422,
            "min": 412,
            "mean": 1334,
            "median": 412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 259875,
          "size": 800
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 20611,
            "min": 412,
            "mean": 2407,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 561129,
          "size": 2194
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15360,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 56363,
            "min": 412,
            "mean": 1502,
            "median": 2412,
            "max": 2412
          },
          "setRawBytes(bytes)": {
            "calls": 30720,
            "min": 24199,
            "mean": 63079,
            "median": 66488,
            "max": 114310
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 261437,
          "size": 807
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 20622,
            "min": 512,
            "mean": 2406,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 351579,
          "size": 1224
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10280,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 33388,
            "min": 412,
            "mean": 1335,
            "median": 412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 260093,
          "size": 801
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "balanceOf(address)": {
            "calls": 20544,
            "min": 612,
            "mean": 2406,
            "median": 2412,
            "max": 2412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 216374,
          "size": 599
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 513,
            "mean": 513,
            "median": 513,
            "max": 513
          },
          "balanceOf(address)": {
            "calls": 10299,
            "min": 1274,
            "mean": 2370,
            "median": 2374,
            "max": 2374
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:WrongReturnDataERC721Recipient",
        "deployment": {
          "gas": 113541,
          "size": 316
        },
        "functions": {
          "revertWithError()": {
            "calls": 5,
            "min": 8147,
            "mean": 8147,
            "median": 8147,
            "max": 8147
          },
          "setValue(uint256)": {
            "calls": 5,
            "min": 47142,
            "mean": 47142,
            "median": 47142,
            "max": 47142
          },
          "value()": {
            "calls": 5,
            "min": 8149,
            "mean": 8149,
            "median": 8149,
            "max": 8149
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 2898635,
          "size": 1931
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 3,
            "min": 3304,
            "mean": 3304,
            "median": 3304,
            "max": 3304
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 2,
            "min": 3587,
            "mean": 3587,
            "median": 3587,
            "max": 3587
          },
          "getArgUint256(uint256)": {
            "calls": 7,
            "min": 4625,
            "mean": 4625,
            "median": 4625,
            "max": 4625
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 3,
            "min": 20394,
            "mean": 20394,
            "median": 20394,
            "max": 20394
          },
          "getArgUint64(uint256)": {
            "calls": 3,
            "min": 3317,
            "mean": 3317,
            "median": 3317,
            "max": 3317
          },
          "getArgUint8(uint256)": {
            "calls": 3,
            "min": 3338,
            "mean": 3338,
            "median": 3338,
            "max": 3338
          },
          "getCalldataHash()": {
            "calls": 2,
            "min": 4054,
            "mean": 4054,
            "median": 4054,
            "max": 4054
          },
          "revertWithError()": {
            "calls": 3,
            "min": 5406,
            "mean": 5406,
            "median": 5406,
            "max": 5406
          },
          "setValue(uint256)": {
            "calls": 3,
            "min": 44127,
            "mean": 44127,
            "median": 44127,
            "max": 44127
          },
          "value()": {
            "calls": 3,
            "min": 5358,
            "mean": 5358,
            "median": 5358,
            "max": 5358
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/ERC721.t.sol:RevertingERC721Recipient",
        "deployment": {
          "gas": 122845,
          "size": 350
        },
        "functions": {
          "revertWithError()": {
            "calls": 2,
            "min": 12070,
            "mean": 12070,
            "median": 12070,
            "max": 12070
          },
          "setValue(uint256)": {
            "calls": 2,
            "min": 50969,
            "mean": 50969,
            "median": 50969,
            "max": 50969
          },
          "value()": {
            "calls": 2,
            "min": 12075,
            "mean": 12075,
            "median": 12075,
            "max": 12075
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/accounts/ERC4337Factory.sol:ERC4337Factory",
        "deployment": {
          "gas": 242667,
          "size": 1008
        },
        "functions": {
          "createAccount(bytes32)": {
            "calls": 20540,
            "min": 24259,
            "mean": 74006,
            "median": 36267,
            "max": 117891
          },
          "getAddress(bytes32)": {
            "calls": 5140,
            "min": 451,
            "mean": 451,
            "median": 451,
            "max": 451
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/accounts/ERC6551Proxy.sol:ERC6551Proxy",
        "deployment": {
          "gas": 104740,
          "size": 333
        },
        "functions": {
          "fallback()": {
            "calls": 124727,
            "min": 2738,
            "mean": 15544,
            "median": 10028,
            "max": 278310
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/accounts/Timelock.sol:Timelock",
        "deployment": {
          "gas": 1041081,
          "size": 4664
        },
        "functions": {
          "ADMIN_ROLE()": {
            "calls": 20,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "EXECUTOR_ROLE()": {
            "calls": 80,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "MAX_ROLE()": {
            "calls": 1240,
            "min": 258,
            "mean": 258,
            "median": 258,
            "max": 258
          },
          "OPEN_ROLE_HOLDER()": {
            "calls": 20,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "cancel(bytes32)": {
            "calls": 375,
            "min": 25433,
            "mean": 25690,
            "median": 25444,
            "max": 26250
          },
          "execute(bytes32,bytes)": {
            "calls": 5409,
            "min": 28331,
            "mean": 43408,
            "median": 44750,
            "max": 95361
          },
          "hasRole(address,uint256)": {
            "calls": 20,
            "min": 2533,
            "mean": 2533,
            "median": 2533,
            "max": 2533
          },
          "initialize(uint256,address,address[],address[],address[])": {
            "calls": 200,
            "min": 22969,
            "mean": 306689,
            "median": 377310,
            "max": 377310
          },
          "minDelay()": {
            "calls": 4827,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          },
          "operationState(bytes32)": {
            "calls": 19124,
            "min": 2488,
            "mean": 2493,
            "median": 2493,
            "max": 2499
          },
          "propose(bytes32,bytes,uint256)": {
            "calls": 5200,
            "min": 26404,
            "mean": 54334,
            "median": 55307,
            "max": 57768
          },
          "readyTimestamp(bytes32)": {
            "calls": 14359,
            "min": 2436,
            "mean": 2436,
            "median": 2436,
            "max": 2436
          },
          "roleHolderCount(uint256)": {
            "calls": 80,
            "min": 2425,
            "mean": 2425,
            "median": 2425,
            "max": 2425
          },
          "setRole(address,uint256,bool)": {
            "calls": 120,
            "min": 23992,
            "mean": 33633,
            "median": 24004,
            "max": 75952
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 537092,
          "size": 2269
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25740,
            "min": 2405,
            "mean": 2405,
            "median": 2405,
            "max": 2405
          },
          "decimals()": {
            "calls": 20,
            "min": 215,
            "mean": 215,
            "median": 215,
            "max": 215
          },
          "deposit()": {
            "calls": 11008,
            "min": 27560,
            "mean": 65095,
            "median": 67360,
            "max": 67360
          },
          "name()": {
            "calls": 20,
            "min": 375,
            "mean": 375,
            "median": 375,
            "max": 375
          },
          "receive()": {
            "calls": 5767,
            "min": 27379,
            "mean": 63702,
            "median": 67179,
            "max": 67179
          },
          "symbol()": {
            "calls": 20,
            "min": 292,
            "mean": 292,
            "median": 292,
            "max": 292
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2332,
            "mean": 2332,
            "median": 2332,
            "max": 2332
          },
          "withdraw(uint256)": {
            "calls": 5585,
            "min": 27909,
            "mean": 39698,
            "median": 40238,
            "max": 40353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/utils/ERC1967Factory.sol:ERC1967Factory",
        "deployment": {
          "gas": 647061,
          "size": 2782
        },
        "functions": {
          "adminOf(address)": {
            "calls": 9676,
            "min": 2360,
            "mean": 2360,
            "median": 2360,
            "max": 2360
          },
          "changeAdmin(address,address)": {
            "calls": 40,
            "min": 24169,
            "mean": 26375,
            "median": 26375,
            "max": 28581
          },
          "deploy(address,address)": {
            "calls": 5340,
            "min": 22274,
            "mean": 59773,
            "median": 22295,
            "max": 126103
          },
          "deployAndCall(address,address,bytes)": {
            "calls": 5140,
            "min": 105514,
            "mean": 158914,
            "median": 159343,
            "max": 159422
          },
          "deployDeterministicAndCall(address,address,bytes32,bytes)": {
            "calls": 5120,
            "min": 23697,
            "mean": 143476,
            "median": 159624,
            "max": 159783
          },
          "predictDeterministicAddress(bytes32)": {
            "calls": 5120,
            "min": 604,
            "mean": 604,
            "median": 604,
            "max": 604
          },
          "upgrade(address,address)": {
            "calls": 100,
            "min": 24209,
            "mean": 27911,
            "median": 24221,
            "max": 33459
          },
          "upgradeAndCall(address,address,bytes)": {
            "calls": 40,
            "min": 35404,
            "mean": 51093,
            "median": 51093,
            "max": 66783
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/utils/UpgradeableBeacon.sol:UpgradeableBeacon",
        "deployment": {
          "gas": 232860,
          "size": 862
        },
        "functions": {
          "implementation()": {
            "calls": 98002,
            "min": 76,
            "mean": 2241,
            "median": 2258,
            "max": 2258
          },
          "owner()": {
            "calls": 10312,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "renounceOwnership()": {
            "calls": 870,
            "min": 23058,
            "mean": 23288,
            "median": 23332,
            "max": 23332
          },
          "transferOwnership(address)": {
            "calls": 3311,
            "min": 23563,
            "mean": 26935,
            "median": 28222,
            "max": 28222
          },
          "upgradeTo(address)": {
            "calls": 1990,
            "min": 23640,
            "mean": 26129,
            "median": 23747,
            "max": 32500
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/Base58.t.sol:Base58Test",
        "deployment": {
          "gas": 3160368,
          "size": 15715
        },
        "functions": {
          "_testBase58EncodeDecode(bytes,string)": {
            "calls": 760,
            "min": 22777,
            "mean": 83417,
            "median": 45211,
            "max": 226116
          },
          "base58DecodeRevertsIfInvalidCharacter(bytes1)": {
            "calls": 5120,
            "min": 21808,
            "mean": 22678,
            "median": 21820,
            "max": 26189
          },
          "decodeWord(string)": {
            "calls": 120,
            "min": 9235,
            "mean": 9381,
            "median": 9282,
            "max": 9725
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/CREATE3.t.sol:CREATE3Test",
        "deployment": {
          "gas": 2758485,
          "size": 13708
        },
        "functions": {
          "deployDeterministic(bytes,bytes32)": {
            "calls": 25700,
            "min": 88858,
            "mean": 38940130,
            "median": 907928,
            "max": 96809718
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/DateTimeLib.t.sol:DateTimeLibTest",
        "deployment": {
          "gas": 5756494,
          "size": 28678
        },
        "functions": {
          "addDays(uint256,uint256)": {
            "calls": 20,
            "min": 408,
            "mean": 408,
            "median": 408,
            "max": 408
          },
          "addHours(uint256,uint256)": {
            "calls": 20,
            "min": 412,
            "mean": 412,
            "median": 412,
            "max": 412
          },
          "addMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 388,
            "mean": 388,
            "median": 388,
            "max": 388
          },
          "addMonths(uint256,uint256)": {
            "calls": 20,
            "min": 1097,
            "mean": 1097,
            "median": 1097,
            "max": 1097
          },
          "addSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 352,
            "mean": 352,
            "median": 352,
            "max": 352
          },
          "addYears(uint256,uint256)": {
            "calls": 20,
            "min": 1007,
            "mean": 1007,
            "median": 1007,
            "max": 1007
          },
          "diffDays(uint256,uint256)": {
            "calls": 20,
            "min": 324,
            "mean": 324,
            "median": 324,
            "max": 324
          },
          "diffHours(uint256,uint256)": {
            "calls": 20,
            "min": 346,
            "mean": 346,
            "median": 346,
            "max": 346
          },
          "diffMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 331,
            "mean": 331,
            "median": 331,
            "max": 331
          },
          "diffMonths(uint256,uint256)": {
            "calls": 20,
            "min": 349,
            "mean": 349,
            "median": 349,
            "max": 349
          },
          "diffSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 333,
            "mean": 333,
            "median": 333,
            "max": 333
          },
          "diffYears(uint256,uint256)": {
            "calls": 20,
            "min": 368,
            "mean": 368,
            "median": 368,
            "max": 368
          },
          "subDays(uint256,uint256)": {
            "calls": 20,
            "min": 403,
            "mean": 403,
            "median": 403,
            "max": 403
          },
          "subHours(uint256,uint256)": {
            "calls": 20,
            "min": 373,
            "mean": 373,
            "median": 373,
            "max": 373
          },
          "subMinutes(uint256,uint256)": {
            "calls": 20,
            "min": 387,
            "mean": 387,
            "median": 387,
            "max": 387
          },
          "subMonths(uint256,uint256)": {
            "calls": 20,
            "min": 693,
            "mean": 693,
            "median": 693,
            "max": 693
          },
          "subSeconds(uint256,uint256)": {
            "calls": 20,
            "min": 323,
            "mean": 323,
            "median": 323,
            "max": 323
          },
          "subYears(uint256,uint256)": {
            "calls": 20,
            "min": 677,
            "mean": 677,
            "median": 677,
            "max": 677
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Factory",
        "deployment": {
          "gas": 341888,
          "size": 1236
        },
        "functions": {
          "deploy(bytes32)": {
            "calls": 2609,
            "min": 67256,
            "mean": 67480,
            "median": 67624,
            "max": 67628
          },
          "predictDeployment(bytes32)": {
            "calls": 5120,
            "min": 2500,
            "mean": 2500,
            "median": 2500,
            "max": 2500
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/DeploylessPredeployQueryer.t.sol:Target",
        "deployment": {
          "gas": 158970,
          "size": 519
        },
        "functions": {
          "generate(bytes)": {
            "calls": 2790,
            "min": 0,
            "mean": 3200,
            "median": 1256,
            "max": 70307
          },
          "next(uint256)": {
            "calls": 5157,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/DynamicArrayLib.t.sol:DynamicArrayLibTest",
        "deployment": {
          "gas": 4023472,
          "size": 20025
        },
        "functions": {
          "dynamicArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 1341,
            "mean": 1341,
            "median": 1341,
            "max": 1341
          },
          "uint256ArrayDirectReturn(uint256)": {
            "calls": 5120,
            "min": 331,
            "mean": 331,
            "median": 331,
            "max": 331
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ECDSA.t.sol:ECDSATest",
        "deployment": {
          "gas": 4812540,
          "size": 23965
        },
        "functions": {
          "_testBytesToEthSignedMessageHash(uint256)": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "canonicalHashCalldata(bytes)": {
            "calls": 660,
            "min": 754,
            "mean": 817,
            "median": 821,
            "max": 846
          },
          "canonicalHashCalldataBrutalizeMemory(bytes)": {
            "calls": 647,
            "min": 581273,
            "mean": 648718,
            "median": 581949,
            "max": 2107855
          },
          "recover(bytes32,bytes)": {
            "calls": 3186,
            "min": 22532,
            "mean": 27100,
            "median": 26741,
            "max": 30287
          },
          "recover(bytes32,bytes32,bytes32)": {
            "calls": 819,
            "min": 3603,
            "mean": 24929,
            "median": 26128,
            "max": 26203
          },
          "recover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5737,
            "min": 25896,
            "mean": 26151,
            "median": 26271,
            "max": 26363
          },
          "recoverBrutalized(bytes32,bytes)": {
            "calls": 2926,
            "min": 606802,
            "mean": 711564,
            "median": 607828,
            "max": 4179911
          },
          "recoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 779,
            "min": 606324,
            "mean": 701254,
            "median": 607304,
            "max": 2637554
          },
          "recoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5737,
            "min": 606297,
            "mean": 716436,
            "median": 607282,
            "max": 4435922
          },
          "tryRecover(bytes32,bytes)": {
            "calls": 3186,
            "min": 22875,
            "mean": 30086,
            "median": 30293,
            "max": 30305
          },
          "tryRecover(bytes32,bytes32,bytes32)": {
            "calls": 819,
            "min": 3592,
            "mean": 24927,
            "median": 26138,
            "max": 26192
          },
          "tryRecover(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5737,
            "min": 25979,
            "mean": 26224,
            "median": 26354,
            "max": 26366
          },
          "tryRecoverBrutalized(bytes32,bytes)": {
            "calls": 2926,
            "min": 610396,
            "mean": 721894,
            "median": 611352,
            "max": 4356164
          },
          "tryRecoverBrutalized(bytes32,bytes32,bytes32)": {
            "calls": 779,
            "min": 606349,
            "mean": 693581,
            "median": 607211,
            "max": 2520109
          },
          "tryRecoverBrutalized(bytes32,uint8,bytes32,bytes32)": {
            "calls": 5737,
            "min": 606441,
            "mean": 730078,
            "median": 607444,
            "max": 4468727
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:ERC1155Recipient",
        "deployment": {
          "gas": 654221,
          "size": 2814
        },
        "functions": {
          "batchAmounts()": {
            "calls": 10400,
            "min": 2415,
            "mean": 5819,
            "median": 6239,
            "max": 9176
          },
          "batchData()": {
            "calls": 10400,
            "min": 2539,
            "mean": 254649,
            "median": 2584,
            "max": 8788766
          },
          "batchFrom()": {
            "calls": 10400,
            "min": 2331,
            "mean": 2331,
            "median": 2331,
            "max": 2331
          },
          "batchIds()": {
            "calls": 10400,
            "min": 2437,
            "mean": 5844,
            "median": 6266,
            "max": 9205
          },
          "batchOperator()": {
            "calls": 10400,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "from()": {
            "calls": 10240,
            "min": 2308,
            "mean": 2308,
            "median": 2308,
            "max": 2308
          },
          "id()": {
            "calls": 10240,
            "min": 2312,
            "mean": 2312,
            "median": 2312,
            "max": 2312
          },
          "mintData()": {
            "calls": 10240,
            "min": 2561,
            "mean": 259820,
            "median": 2616,
            "max": 8599104
          },
          "operator()": {
            "calls": 10240,
            "min": 2334,
            "mean": 2334,
            "median": 2334,
            "max": 2334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC1155.t.sol:MockERC1155WithHooks",
        "deployment": {
          "gas": 2076337,
          "size": 9408
        },
        "functions": {
          "afterCounter()": {
            "calls": 3200,
            "min": 330,
            "mean": 330,
            "median": 330,
            "max": 330
          },
          "beforeCounter()": {
            "calls": 3200,
            "min": 342,
            "mean": 342,
            "median": 342,
            "max": 342
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 61192,
            "mean": 61325,
            "median": 61420,
            "max": 61434
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 57736,
            "mean": 57869,
            "median": 57964,
            "max": 57978
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 640,
            "min": 49281,
            "mean": 51506,
            "median": 49281,
            "max": 120481
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 640,
            "min": 60173,
            "mean": 60306,
            "median": 60401,
            "max": 60408
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 1280,
            "min": 48747,
            "mean": 62070,
            "median": 57674,
            "max": 74539
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 266305,
          "size": 1033
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 692,
            "min": 44722,
            "mean": 50848,
            "median": 51028,
            "max": 51341
          },
          "mint(address,uint256)": {
            "calls": 639,
            "min": 54636,
            "mean": 72857,
            "median": 61494,
            "max": 95826
          },
          "sum()": {
            "calls": 20,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "transferFrom(address,address,uint256)": {
            "calls": 7,
            "min": 36762,
            "mean": 36762,
            "median": 36762,
            "max": 36762
          },
          "transfer(address,uint256)": {
            "calls": 6,
            "min": 33615,
            "mean": 33615,
            "median": 33615,
            "max": 33615
          },
          "burn(address,uint256)": {
            "calls": 3,
            "min": 35773,
            "mean": 35773,
            "median": 35773,
            "max": 35773
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC20Votes.t.sol:ERC20VotesTest",
        "deployment": {
          "gas": 5769113,
          "size": 28741
        },
        "functions": {
          "checkpointPushDiff(uint256,uint256,uint256,bool)": {
            "calls": 10240,
            "min": 24672,
            "mean": 50801,
            "median": 48851,
            "max": 74108
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC4337.t.sol:Target",
        "deployment": {
          "gas": 344258,
          "size": 1377
        },
        "functions": {
          "changeOwnerSlotValue(bool)": {
            "calls": 60,
            "min": 178,
            "mean": 1147,
            "median": 178,
            "max": 3087
          },
          "data()": {
            "calls": 5140,
            "min": 2516,
            "mean": 3113,
            "median": 2516,
            "max": 11246
          },
          "datahash()": {
            "calls": 12883,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          },
          "setData(bytes)": {
            "calls": 5140,
            "min": 25102,
            "mean": 33822,
            "median": 25102,
            "max": 133822
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC4626.t.sol:ERC4626Test",
        "deployment": {
          "gas": 9628742,
          "size": 48007
        },
        "functions": {
          "decimals()": {
            "calls": 20,
            "min": 238,
            "mean": 238,
            "median": 238,
            "max": 238
          },
          "fullMulDivChecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22151,
            "mean": 22475,
            "median": 22433,
            "max": 23036
          },
          "fullMulDivUnchecked(uint256,uint256,uint256)": {
            "calls": 5120,
            "min": 22210,
            "mean": 22477,
            "median": 22438,
            "max": 23002
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC6551.t.sol:Target",
        "deployment": {
          "gas": 332590,
          "size": 1323
        },
        "functions": {
          "datahash()": {
            "calls": 7680,
            "min": 2250,
            "mean": 2250,
            "median": 2250,
            "max": 2250
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC721.t.sol:ERC721Recipient",
        "deployment": {
          "gas": 287929,
          "size": 1116
        },
        "functions": {
          "data()": {
            "calls": 20480,
            "min": 2493,
            "mean": 4067,
            "median": 2494,
            "max": 11223
          },
          "from()": {
            "calls": 20480,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "id()": {
            "calls": 20480,
            "min": 2271,
            "mean": 2271,
            "median": 2271,
            "max": 2271
          },
          "operator()": {
            "calls": 20480,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC721.t.sol:MockERC721WithHooks",
        "deployment": {
          "gas": 1575366,
          "size": 7075
        },
        "functions": {
          "afterCounter()": {
            "calls": 640,
            "min": 345,
            "mean": 345,
            "median": 345,
            "max": 345
          },
          "beforeCounter()": {
            "calls": 640,
            "min": 363,
            "mean": 363,
            "median": 363,
            "max": 363
          },
          "mint(address,uint256)": {
            "calls": 640,
            "min": 61846,
            "mean": 63460,
            "median": 61858,
            "max": 113158
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 56898,
            "mean": 57557,
            "median": 57114,
            "max": 74226
          },
          "transferFrom(address,address,uint256)": {
            "calls": 640,
            "min": 64790,
            "mean": 69335,
            "median": 69476,
            "max": 69590
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/ERC7821.t.sol:ERC7821Test",
        "deployment": {
          "gas": 2612710,
          "size": 12980
        },
        "functions": {
          "returnsBytes(bytes)": {
            "calls": 8900,
            "min": 558,
            "mean": 577,
            "median": 570,
            "max": 753
          },
          "returnsHash(bytes)": {
            "calls": 9021,
            "min": 533,
            "mean": 553,
            "median": 545,
            "max": 725
          },
          "revertsWithCustomError()": {
            "calls": 146,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/EnumerableMapLib.t.sol:EnumerableMapLibTest",
        "deployment": {
          "gas": 1373512,
          "size": 6791
        },
        "functions": {
          "get(address)": {
            "calls": 10072,
            "min": 2499,
            "mean": 5752,
            "median": 5922,
            "max": 9004
          },
          "update(address,uint256,bool,uint256)": {
            "calls": 2900,
            "min": 26532,
            "mean": 48757,
            "median": 37130,
            "max": 165082
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/EnumerableSetLib.t.sol:EnumerableSetLibTest",
        "deployment": {
          "gas": 4948329,
          "size": 24643
        },
        "functions": {
          "addToAddressSet(address)": {
            "calls": 3473,
            "min": 21748,
            "mean": 44650,
            "median": 44134,
            "max": 118809
          },
          "addToBytes32Set(bytes32)": {
            "calls": 3554,
            "min": 22939,
            "mean": 47461,
            "median": 46351,
            "max": 150410
          },
          "addressSetAt(uint256)": {
            "calls": 335,
            "min": 4761,
            "mean": 5844,
            "median": 4761,
            "max": 8995
          },
          "addressSetContains(address)": {
            "calls": 3254,
            "min": 430,
            "mean": 6758,
            "median": 6916,
            "max": 6916
          },
          "bytes32SetAt(uint256)": {
            "calls": 346,
            "min": 4734,
            "mean": 5657,
            "median": 4734,
            "max": 10027
          },
          "bytes32SetContains(bytes32)": {
            "calls": 3409,
            "min": 836,
            "mean": 8730,
            "median": 8972,
            "max": 8972
          },
          "removeFromAddressSet(address)": {
            "calls": 3517,
            "min": 21725,
            "mean": 28124,
            "median": 28384,
            "max": 28384
          },
          "removeFromBytes32Set(bytes32)": {
            "calls": 3486,
            "min": 21689,
            "mean": 30252,
            "median": 30583,
            "max": 30584
          },
          "uint8SetAt(uint256)": {
            "calls": 324,
            "min": 321,
            "mean": 499,
            "median": 321,
            "max": 2906
          },
          "updateAddressSet(address,bool,uint256)": {
            "calls": 180,
            "min": 26584,
            "mean": 49851,
            "median": 46614,
            "max": 142677
          },
          "updateBytes32Set(bytes32,bool,uint256)": {
            "calls": 46080,
            "min": 28616,
            "mean": 53833,
            "median": 48795,
            "max": 161739
          },
          "updateUint8Set(uint8,bool,uint256)": {
            "calls": 46080,
            "min": 24067,
            "mean": 27950,
            "median": 27033,
            "max": 44063
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/FixedPointMathLib.t.sol:FixedPointMathLibTest",
        "deployment": {
          "gas": 12994705,
          "size": 64803
        },
        "functions": {
          "_testMulSqrt(uint256,uint256,uint256)": {
            "calls": 1460,
            "min": 23167,
            "mean": 26670,
            "median": 27647,
            "max": 28719
          },
          "add(uint256,uint256)": {
            "calls": 5140,
            "min": 365,
            "mean": 367,
            "median": 365,
            "max": 401
          },
          "divWad(uint256,uint256)": {
            "calls": 1896,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "divWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 414,
            "mean": 437,
            "median": 449,
            "max": 449
          },
          "divWadUp(uint256,uint256)": {
            "calls": 1922,
            "min": 385,
            "mean": 385,
            "median": 385,
            "max": 385
          },
          "factorial(uint256)": {
            "calls": 20,
            "min": 364,
            "mean": 364,
            "median": 364,
            "max": 364
          },
          "fullMulDiv(uint256,uint256,uint256)": {
            "calls": 6671,
            "min": 528,
            "mean": 572,
            "median": 542,
            "max": 887
          },
          "fullMulDivN(uint256,uint256,uint8)": {
            "calls": 5120,
            "min": 524,
            "mean": 560,
            "median": 554,
            "max": 636
          },
          "fullMulDivUp(uint256,uint256,uint256)": {
            "calls": 5160,
            "min": 517,
            "mean": 530,
            "median": 528,
            "max": 877
          },
          "lambertW0Wad(int256)": {
            "calls": 240,
            "min": 433,
            "mean": 433,
            "median": 433,
            "max": 433
          },
          "lnWad(int256)": {
            "calls": 60,
            "min": 414,
            "mean": 414,
            "median": 414,
            "max": 414
          },
          "mul(uint256,uint256)": {
            "calls": 5140,
            "min": 393,
            "mean": 442,
            "median": 429,
            "max": 465
          },
          "mulDiv(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 464,
            "mean": 498,
            "median": 499,
            "max": 533
          },
          "mulDivOriginal(uint256,uint256,uint256)": {
            "calls": 10240,
            "min": 418,
            "mean": 443,
            "median": 428,
            "max": 469
          },
          "mulDivUp(uint256,uint256,uint256)": {
            "calls": 5140,
            "min": 482,
            "mean": 535,
            "median": 535,
            "max": 588
          },
          "mulWad(uint256,uint256)": {
            "calls": 2514,
            "min": 395,
            "mean": 395,
            "median": 395,
            "max": 395
          },
          "mulWadOriginal(uint256,uint256)": {
            "calls": 10240,
            "min": 386,
            "mean": 420,
            "median": 422,
            "max": 423
          },
          "mulWadUp(uint256,uint256)": {
            "calls": 2610,
            "min": 397,
            "mean": 397,
            "median": 397,
            "max": 397
          },
          "packSci(uint256)": {
            "calls": 20,
            "min": 960,
            "mean": 960,
            "median": 960,
            "max": 960
          },
          "rpow(uint256,uint256,uint256)": {
            "calls": 40,
            "min": 758,
            "mean": 1633,
            "median": 1633,
            "max": 2508
          },
          "sDivWad(int256,int256)": {
            "calls": 1610,
            "min": 441,
            "mean": 441,
            "median": 441,
            "max": 441
          },
          "sDivWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 428,
            "mean": 483,
            "median": 507,
            "max": 507
          },
          "sMulWad(int256,int256)": {
            "calls": 2048,
            "min": 529,
            "mean": 535,
            "median": 536,
            "max": 536
          },
          "sMulWadOriginal(int256,int256)": {
            "calls": 5120,
            "min": 384,
            "mean": 506,
            "median": 515,
            "max": 516
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/JSONParserLib.t.sol:JSONParserLibTest",
        "deployment": {
          "gas": 12313453,
          "size": 61404
        },
        "functions": {
          "decodeString(string)": {
            "calls": 5640,
            "min": 19378,
            "mean": 21976,
            "median": 21810,
            "max": 29376
          },
          "parseInt(string)": {
            "calls": 15880,
            "min": 19615,
            "mean": 32590,
            "median": 36430,
            "max": 36652
          },
          "parseUint(string)": {
            "calls": 5560,
            "min": 19594,
            "mean": 25681,
            "median": 22951,
            "max": 36472
          },
          "parseUintFromHex(string)": {
            "calls": 6400,
            "min": 722,
            "mean": 3587,
            "median": 1149,
            "max": 12169
          },
          "parsedValue(string)": {
            "calls": 24060,
            "min": 19419,
            "mean": 23158,
            "median": 22410,
            "max": 37423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibBit.t.sol:LibBitTest",
        "deployment": {
          "gas": 2306750,
          "size": 11452
        },
        "functions": {
          "acceptsBool(bool)": {
            "calls": 20,
            "min": 308,
            "mean": 308,
            "median": 308,
            "max": 308
          },
          "returnsBool(uint256)": {
            "calls": 20,
            "min": 288,
            "mean": 288,
            "median": 288,
            "max": 288
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibBitmap.t.sol:LibBitmapTest",
        "deployment": {
          "gas": 3610132,
          "size": 17961
        },
        "functions": {
          "claimWithGetSet(uint256)": {
            "calls": 40,
            "min": 23728,
            "mean": 33826,
            "median": 33826,
            "max": 43924
          },
          "claimWithToggle(uint256)": {
            "calls": 40,
            "min": 26665,
            "mean": 35201,
            "median": 35201,
            "max": 43738
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibBytes.t.sol:LibBytesTest",
        "deployment": {
          "gas": 3448929,
          "size": 17156
        },
        "functions": {
          "_testBytesInCalldata(bytes,uint256,bytes)": {
            "calls": 10575,
            "min": 23054,
            "mean": 24078,
            "median": 23717,
            "max": 26846
          },
          "_testDynamicStructInCalldata(bytes,uint256,(address,uint256,bytes))": {
            "calls": 15440,
            "min": 24687,
            "mean": 26704,
            "median": 26207,
            "max": 116553
          },
          "_testLoadCalldata(bytes)": {
            "calls": 5120,
            "min": 27867,
            "mean": 28440,
            "median": 28299,
            "max": 29676
          },
          "_testStaticStructInCalldata(bytes,uint256,((uint256,uint256),(uint256,uint256)))": {
            "calls": 80,
            "min": 24337,
            "mean": 25748,
            "median": 25973,
            "max": 26709
          },
          "generateBytesArray(uint256,bool)": {
            "calls": 5553,
            "min": 2820,
            "mean": 722891,
            "median": 631829,
            "max": 4539058
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibCWIA.t.sol:LibCWIATest",
        "deployment": {
          "gas": 2321565,
          "size": 11526
        },
        "functions": {
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5180,
            "min": 112893,
            "mean": 1335193,
            "median": 971644,
            "max": 83526327
          },
          "getArgAddress(uint256)": {
            "calls": 122,
            "min": 310,
            "mean": 310,
            "median": 310,
            "max": 310
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 122,
            "min": 485,
            "mean": 501,
            "median": 500,
            "max": 517
          },
          "getArgUint256(uint256)": {
            "calls": 366,
            "min": 1617,
            "mean": 1617,
            "median": 1617,
            "max": 1617
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 122,
            "min": 14834,
            "mean": 38284,
            "median": 37403,
            "max": 63703
          },
          "getArgUint64(uint256)": {
            "calls": 122,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "getArgUint8(uint256)": {
            "calls": 122,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "getCalldataHash()": {
            "calls": 122,
            "min": 1007,
            "mean": 1978,
            "median": 1943,
            "max": 3029
          },
          "revertWithError()": {
            "calls": 122,
            "min": 2359,
            "mean": 2359,
            "median": 2359,
            "max": 2359
          },
          "setValue(uint256)": {
            "calls": 122,
            "min": 22343,
            "mean": 22343,
            "median": 22343,
            "max": 22343
          },
          "value()": {
            "calls": 20722,
            "min": 2303,
            "mean": 2303,
            "median": 2303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibCall.t.sol:HashSetter",
        "deployment": {
          "gas": 149359,
          "size": 474
        },
        "functions": {
          "hashes(uint256)": {
            "calls": 10240,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "setHash(uint256,bytes)": {
            "calls": 5120,
            "min": 44425,
            "mean": 45064,
            "median": 44881,
            "max": 46449
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibCall.t.sol:LibCallTest",
        "deployment": {
          "gas": 881805,
          "size": 4335
        },
        "functions": {
          "copyAndSetSelector(bytes4,bytes)": {
            "calls": 7660,
            "min": 476,
            "mean": 580,
            "median": 629,
            "max": 653
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibClone.t.sol:LibCloneTest",
        "deployment": {
          "gas": 12510473,
          "size": 62387
        },
        "functions": {
          "argsOnClone(address)": {
            "calls": 289,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnClone(address,uint256)": {
            "calls": 253,
            "min": 3078,
            "mean": 3079,
            "median": 3078,
            "max": 3087
          },
          "argsOnClone(address,uint256,uint256)": {
            "calls": 170,
            "min": 3141,
            "mean": 3652,
            "median": 3267,
            "max": 6271
          },
          "argsOnERC1967(address)": {
            "calls": 227,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnERC1967(address,uint256)": {
            "calls": 178,
            "min": 3079,
            "mean": 3079,
            "median": 3079,
            "max": 3083
          },
          "argsOnERC1967(address,uint256,uint256)": {
            "calls": 139,
            "min": 3286,
            "mean": 4077,
            "median": 3286,
            "max": 7276
          },
          "argsOnERC1967BeaconProxy(address)": {
            "calls": 119,
            "min": 3021,
            "mean": 3021,
            "median": 3021,
            "max": 3021
          },
          "argsOnERC1967BeaconProxy(address,uint256)": {
            "calls": 114,
            "min": 3048,
            "mean": 3048,
            "median": 3048,
            "max": 3051
          },
          "argsOnERC1967BeaconProxy(address,uint256,uint256)": {
            "calls": 78,
            "min": 3274,
            "mean": 3695,
            "median": 3274,
            "max": 4701
          },
          "argsOnERC1967I(address)": {
            "calls": 181,
            "min": 3026,
            "mean": 3026,
            "median": 3026,
            "max": 3026
          },
          "argsOnERC1967I(address,uint256)": {
            "calls": 120,
            "min": 3079,
            "mean": 3080,
            "median": 3079,
            "max": 3082
          },
          "argsOnERC1967I(address,uint256,uint256)": {
            "calls": 86,
            "min": 3258,
            "mean": 3514,
            "median": 3258,
            "max": 4282
          },
          "argsOnERC1967IBeaconProxy(address)": {
            "calls": 93,
            "min": 3042,
            "mean": 3042,
            "median": 3042,
            "max": 3042
          },
          "argsOnERC1967IBeaconProxy(address,uint256)": {
            "calls": 68,
            "min": 3078,
            "mean": 3079,
            "median": 3078,
            "max": 3081
          },
          "argsOnERC1967IBeaconProxy(address,uint256,uint256)": {
            "calls": 65,
            "min": 3260,
            "mean": 3970,
            "median": 3827,
            "max": 5533
          },
          "bootstrapERC1967AndCall(address,address,bytes)": {
            "calls": 1289,
            "min": 35844,
            "mean": 46171,
            "median": 45430,
            "max": 56339
          },
          "checkStartsWith(bytes32,address)": {
            "calls": 15360,
            "min": 697,
            "mean": 702,
            "median": 697,
            "max": 718
          },
          "clone(address)": {
            "calls": 5140,
            "min": 85461,
            "mean": 85461,
            "median": 85461,
            "max": 85461
          },
          "clone(address,bytes)": {
            "calls": 5140,
            "min": 69315,
            "mean": 3227555,
            "median": 72039,
            "max": 96823489
          },
          "cloneDeterministic(address,bytes,bytes32)": {
            "calls": 5301,
            "min": 69853,
            "mean": 6037700,
            "median": 73260,
            "max": 96822312
          },
          "cloneDeterministic(address,bytes32)": {
            "calls": 5140,
            "min": 85904,
            "mean": 127558,
            "median": 86274,
            "max": 1662551
          },
          "createDeterministicClone(address,bytes,bytes32)": {
            "calls": 5267,
            "min": 0,
            "mean": 339179,
            "median": 75358,
            "max": 12657809
          },
          "createDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5272,
            "min": 0,
            "mean": 318865,
            "median": 100348,
            "max": 12334526
          },
          "createDeterministicERC1967(address,bytes32)": {
            "calls": 5120,
            "min": 114423,
            "mean": 157367,
            "median": 114795,
            "max": 1581810
          },
          "createDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 7183,
            "min": 0,
            "mean": 328436,
            "median": 104484,
            "max": 12483822
          },
          "createDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 101574,
            "mean": 142764,
            "median": 101946,
            "max": 2199788
          },
          "createDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5287,
            "min": 0,
            "mean": 344742,
            "median": 104919,
            "max": 12105597
          },
          "createDeterministicERC1967I(address,bytes32)": {
            "calls": 5120,
            "min": 118688,
            "mean": 158383,
            "median": 119059,
            "max": 1659867
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 7156,
            "min": 0,
            "mean": 327416,
            "median": 105613,
            "max": 11831172
          },
          "createDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 102564,
            "mean": 141179,
            "median": 102935,
            "max": 1281358
          },
          "deployDeterministicERC1967(address,bytes,bytes32)": {
            "calls": 5321,
            "min": 95140,
            "mean": 6734784,
            "median": 98568,
            "max": 96829345
          },
          "deployDeterministicERC1967(address,bytes32)": {
            "calls": 7701,
            "min": 94428,
            "mean": 152754,
            "median": 111681,
            "max": 2960891
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes,bytes32)": {
            "calls": 9000,
            "min": 97264,
            "mean": 17147601,
            "median": 104721,
            "max": 96820817
          },
          "deployDeterministicERC1967BeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 98650,
            "mean": 144729,
            "median": 99021,
            "max": 2353682
          },
          "deployDeterministicERC1967I(address,bytes,bytes32)": {
            "calls": 5277,
            "min": 99474,
            "mean": 6366396,
            "median": 103204,
            "max": 96826826
          },
          "deployDeterministicERC1967I(address,bytes32)": {
            "calls": 12839,
            "min": 98637,
            "mean": 148241,
            "median": 99139,
            "max": 2730355
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes,bytes32)": {
            "calls": 9058,
            "min": 98322,
            "mean": 17247753,
            "median": 105788,
            "max": 96826930
          },
          "deployDeterministicERC1967IBeaconProxy(address,bytes32)": {
            "calls": 5120,
            "min": 99617,
            "mean": 140058,
            "median": 99987,
            "max": 1541631
          },
          "deployERC1967(address,bytes)": {
            "calls": 5140,
            "min": 94608,
            "mean": 3062167,
            "median": 97301,
            "max": 96825481
          },
          "deployERC1967BeaconProxy(address)": {
            "calls": 10240,
            "min": 98140,
            "mean": 141684,
            "median": 98267,
            "max": 2523417
          },
          "deployERC1967BeaconProxy(address,bytes)": {
            "calls": 2582,
            "min": 97693,
            "mean": 3238327,
            "median": 101567,
            "max": 92146179
          },
          "deployERC1967I(address)": {
            "calls": 5140,
            "min": 115226,
            "mean": 115226,
            "median": 115226,
            "max": 115226
          },
          "deployERC1967I(address,bytes)": {
            "calls": 5140,
            "min": 98877,
            "mean": 2788369,
            "median": 101698,
            "max": 96820910
          },
          "deployERC1967IBeaconProxy(address)": {
            "calls": 10260,
            "min": 99137,
            "mean": 145268,
            "median": 99264,
            "max": 3128320
          },
          "deployERC1967IBeaconProxy(address,bytes)": {
            "calls": 2560,
            "min": 98914,
            "mean": 3237127,
            "median": 102734,
            "max": 96811490
          },
          "revertWithError()": {
            "calls": 143043,
            "min": 160,
            "mean": 2400,
            "median": 2414,
            "max": 2414
          },
          "setValue(uint256)": {
            "calls": 150064,
            "min": 1061,
            "mean": 22264,
            "median": 22431,
            "max": 22431
          },
          "value()": {
            "calls": 421402,
            "min": 157,
            "mean": 2410,
            "median": 2418,
            "max": 2418
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibERC7579.t.sol:LibERC7579Test",
        "deployment": {
          "gas": 4401777,
          "size": 21914
        },
        "functions": {
          "abiDecodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 536,
            "mean": 536,
            "median": 536,
            "max": 536
          },
          "decodeBatch((bytes,bytes))": {
            "calls": 20,
            "min": 515,
            "mean": 515,
            "median": 515,
            "max": 515
          },
          "decodeBatch(bytes)": {
            "calls": 1261,
            "min": 811,
            "mean": 2325,
            "median": 2105,
            "max": 4114
          },
          "decodeBatchAndGetExecution(bytes,uint256)": {
            "calls": 486,
            "min": 1038,
            "mean": 1225,
            "median": 1229,
            "max": 1440
          },
          "decodeBatchAndOpData(bytes)": {
            "calls": 13036,
            "min": 511,
            "mean": 1519,
            "median": 856,
            "max": 4671
          },
          "decodeDelegate(bytes)": {
            "calls": 5120,
            "min": 592,
            "mean": 609,
            "median": 602,
            "max": 638
          },
          "decodeSingle(bytes)": {
            "calls": 5120,
            "min": 650,
            "mean": 666,
            "median": 659,
            "max": 695
          },
          "propose2(bytes32,bytes,uint256)": {
            "calls": 20,
            "min": 23310,
            "mean": 23310,
            "median": 23310,
            "max": 23310
          },
          "reencodeBatchAndDecodeBatch(bytes,bytes)": {
            "calls": 2608,
            "min": 29552,
            "mean": 37609,
            "median": 36773,
            "max": 55547
          },
          "subTestReencodeBatchAsExecuteCalldata(bytes32,bytes)": {
            "calls": 5120,
            "min": 613279,
            "mean": 726676,
            "median": 619410,
            "max": 4389963
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibMap.t.sol:LibMapTest",
        "deployment": {
          "gas": 4005647,
          "size": 19936
        },
        "functions": {
          "getUint8(uint256)": {
            "calls": 20,
            "min": 2515,
            "mean": 2515,
            "median": 2515,
            "max": 2515
          },
          "getUint8FromBigArray(uint256)": {
            "calls": 20,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "setUint8(uint256,uint8)": {
            "calls": 20,
            "min": 43917,
            "mean": 43917,
            "median": 43917,
            "max": 43917
          },
          "setUint8FromBigArray(uint256,uint8)": {
            "calls": 20,
            "min": 43899,
            "mean": 43899,
            "median": 43899,
            "max": 43899
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibPRNG.t.sol:LibPRNGTest",
        "deployment": {
          "gas": 4298639,
          "size": 21399
        },
        "functions": {
          "lazyShuffler0Get(uint256)": {
            "calls": 5120,
            "min": 2427,
            "mean": 3596,
            "median": 3313,
            "max": 4810
          },
          "lazyShufflerGrow(uint256)": {
            "calls": 5120,
            "min": 23770,
            "mean": 23794,
            "median": 23805,
            "max": 23806
          },
          "lazyShufflerInitialize(uint256)": {
            "calls": 10280,
            "min": 21528,
            "mean": 43361,
            "median": 43751,
            "max": 43751
          },
          "lazyShufflerNext(uint256)": {
            "calls": 5140,
            "min": 23667,
            "mean": 23959,
            "median": 24044,
            "max": 24044
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibSort.t.sol:LibSortTest",
        "deployment": {
          "gas": 7073333,
          "size": 35252
        },
        "functions": {
          "_testHasDuplicateGas(uint256)": {
            "calls": 400,
            "min": 24541,
            "mean": 42158,
            "median": 28645,
            "max": 112255
          },
          "_testHasDuplicateOriginalGas(uint256)": {
            "calls": 400,
            "min": 24675,
            "mean": 48002,
            "median": 30045,
            "max": 142478
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibString.t.sol:LibStringTest",
        "deployment": {
          "gas": 13412617,
          "size": 66888
        },
        "functions": {
          "returnString(string)": {
            "calls": 5180,
            "min": 597,
            "mean": 606,
            "median": 606,
            "max": 615
          },
          "toHexString(uint256,uint256)": {
            "calls": 20,
            "min": 579,
            "mean": 579,
            "median": 579,
            "max": 579
          },
          "toSmallString(string)": {
            "calls": 20,
            "min": 645,
            "mean": 645,
            "median": 645,
            "max": 645
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGet",
        "deployment": {
          "gas": 229160,
          "size": 843
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27299,
            "mean": 51629,
            "median": 50783,
            "max": 82456
          },
          "x()": {
            "calls": 120,
            "min": 2514,
            "mean": 10117,
            "median": 5759,
            "max": 37314
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/LibString.t.sol:SimpleStringSetAndGetWithStringStorage",
        "deployment": {
          "gas": 166651,
          "size": 554
        },
        "functions": {
          "setX(string)": {
            "calls": 120,
            "min": 27194,
            "mean": 41867,
            "median": 32603,
            "max": 82196
          },
          "x()": {
            "calls": 120,
            "min": 2439,
            "mean": 9347,
            "median": 4625,
            "max": 37326
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 2340187,
          "size": 11619
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 30760,
            "min": 22273,
            "mean": 26524,
            "median": 27723,
            "max": 29355
          },
          "verifyMultiProof(bytes32[],bytes32,bytes32[],bool[])": {
            "calls": 35900,
            "min": 24213,
            "mean": 32246,
            "median": 32765,
            "max": 59886
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/MerkleTreeLib.t.sol:MerkleTreeLibTest",
        "deployment": {
          "gas": 2330180,
          "size": 11569
        },
        "functions": {
          "buildAndGetLeaf(bytes32[],uint256)": {
            "calls": 5096,
            "min": 952,
            "mean": 40697,
            "median": 40546,
            "max": 80837
          },
          "buildAndGetLeafProof(bytes32[],uint256)": {
            "calls": 5100,
            "min": 1211,
            "mean": 48896,
            "median": 44868,
            "max": 83883
          },
          "buildAndGetNodeProof(bytes32[],uint256)": {
            "calls": 5100,
            "min": 1119,
            "mean": 40890,
            "median": 40091,
            "max": 81486
          },
          "buildAndGetRoot(bytes32[])": {
            "calls": 40,
            "min": 524,
            "mean": 524,
            "median": 524,
            "max": 524
          },
          "getRootFromEmptyTree()": {
            "calls": 20,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          },
          "multiProofRevertsForEmptyLeafs()": {
            "calls": 20,
            "min": 298,
            "mean": 298,
            "median": 298,
            "max": 298
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/MetadataReaderLib.t.sol:MetadataReaderLibTest",
        "deployment": {
          "gas": 2253691,
          "size": 11187
        },
        "functions": {
          "decimals()": {
            "calls": 5120,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "name()": {
            "calls": 5120,
            "min": 4738,
            "mean": 6501,
            "median": 4814,
            "max": 13493
          },
          "returnsBytes32StringA()": {
            "calls": 20,
            "min": 235,
            "mean": 235,
            "median": 235,
            "max": 235
          },
          "returnsBytes32StringB()": {
            "calls": 800,
            "min": 231,
            "mean": 231,
            "median": 231,
            "max": 231
          },
          "returnsChoppedString(uint256)": {
            "calls": 2100,
            "min": 289,
            "mean": 289,
            "median": 289,
            "max": 292
          },
          "returnsChoppedUint(uint256,uint256)": {
            "calls": 11200,
            "min": 232,
            "mean": 232,
            "median": 232,
            "max": 232
          },
          "returnsEmptyString()": {
            "calls": 5120,
            "min": 4688,
            "mean": 6468,
            "median": 4764,
            "max": 13531
          },
          "returnsNothing()": {
            "calls": 5160,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "returnsString()": {
            "calls": 10240,
            "min": 4760,
            "mean": 6593,
            "median": 4836,
            "max": 13529
          },
          "returnsUint()": {
            "calls": 5120,
            "min": 2354,
            "mean": 2354,
            "median": 2354,
            "max": 2354
          },
          "reverts()": {
            "calls": 5160,
            "min": 276,
            "mean": 276,
            "median": 276,
            "max": 276
          },
          "symbol()": {
            "calls": 5120,
            "min": 4754,
            "mean": 6516,
            "median": 4829,
            "max": 13508
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/MinHeapLib.t.sol:MinHeapLibTest",
        "deployment": {
          "gas": 15013279,
          "size": 74873
        },
        "functions": {
          "emptyMemHeapRoot()": {
            "calls": 2487,
            "min": 326,
            "mean": 326,
            "median": 326,
            "max": 326
          },
          "enqueue(uint256,uint256)": {
            "calls": 7660,
            "min": 21685,
            "mean": 51626,
            "median": 66272,
            "max": 66415
          },
          "memHeapEnqueueZeroMaxLengthReverts(uint256)": {
            "calls": 2514,
            "min": 741,
            "mean": 741,
            "median": 741,
            "max": 741
          },
          "memHeapReplaceOrPopEmptyHeapReverts(uint256,bool)": {
            "calls": 2400,
            "min": 774,
            "mean": 776,
            "median": 777,
            "max": 778
          },
          "pop()": {
            "calls": 1131,
            "min": 23502,
            "mean": 23502,
            "median": 23502,
            "max": 23502
          },
          "replace(uint256)": {
            "calls": 1315,
            "min": 23669,
            "mean": 23947,
            "median": 24036,
            "max": 24036
          },
          "root()": {
            "calls": 2533,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/P256.t.sol:P256Test",
        "deployment": {
          "gas": 2658163,
          "size": 13207
        },
        "functions": {
          "tryDecodePointCalldata(bytes,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22474,
            "mean": 23482,
            "median": 23936,
            "max": 23956
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/Receiver.t.sol:ReceiverTest",
        "deployment": {
          "gas": 2510254,
          "size": 7009
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 21,
            "min": 3330,
            "mean": 3335,
            "median": 3335,
            "max": 3341
          },
          "getArgUint256(uint256)": {
            "calls": 35,
            "min": 4638,
            "mean": 4642,
            "median": 4641,
            "max": 4648
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 21,
            "min": 18432,
            "mean": 18747,
            "median": 18747,
            "max": 19062
          },
          "getArgUint64(uint256)": {
            "calls": 21,
            "min": 3326,
            "mean": 3330,
            "median": 3330,
            "max": 3336
          },
          "getArgUint8(uint256)": {
            "calls": 21,
            "min": 3348,
            "mean": 3353,
            "median": 3353,
            "max": 3359
          },
          "revertWithError()": {
            "calls": 25,
            "min": 5356,
            "mean": 5865,
            "median": 5865,
            "max": 6374
          },
          "setValue(uint256)": {
            "calls": 25,
            "min": 44106,
            "mean": 44642,
            "median": 44642,
            "max": 45179
          },
          "value()": {
            "calls": 25,
            "min": 5302,
            "mean": 5816,
            "median": 5816,
            "max": 6331
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 7,
            "min": 3518,
            "mean": 3521,
            "median": 3521,
            "max": 3524
          },
          "getCalldataHash()": {
            "calls": 7,
            "min": 4013,
            "mean": 4022,
            "median": 4022,
            "max": 4031
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/RedBlackTree.t.sol:RedBlackTreeLibTest",
        "deployment": {
          "gas": 7226981,
          "size": 36019
        },
        "functions": {
          "find(uint256)": {
            "calls": 20,
            "min": 328,
            "mean": 328,
            "median": 328,
            "max": 328
          },
          "insert(uint256)": {
            "calls": 40,
            "min": 21489,
            "mean": 23919,
            "median": 23919,
            "max": 26350
          },
          "remove(bytes32)": {
            "calls": 5180,
            "min": 23897,
            "mean": 24225,
            "median": 24228,
            "max": 24228
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/SSTORE2.t.sol:SSTORE2Test",
        "deployment": {
          "gas": 1895685,
          "size": 9399
        },
        "functions": {
          "read(address)": {
            "calls": 3163,
            "min": 2066,
            "mean": 2984,
            "median": 2941,
            "max": 3212
          },
          "read(address,uint256)": {
            "calls": 1912,
            "min": 1976,
            "mean": 3058,
            "median": 2976,
            "max": 3295
          },
          "read(address,uint256,uint256)": {
            "calls": 1209,
            "min": 2948,
            "mean": 3639,
            "median": 3314,
            "max": 15473
          },
          "write(bytes)": {
            "calls": 40,
            "min": 13468257,
            "mean": 48556942,
            "median": 48556942,
            "max": 83645628
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/SafeCastLib.t.sol:SafeCastLibTest",
        "deployment": {
          "gas": 11290157,
          "size": 56298
        },
        "functions": {
          "toInt104(int256)": {
            "calls": 586,
            "min": 349,
            "mean": 371,
            "median": 380,
            "max": 380
          },
          "toInt104(uint256)": {
            "calls": 329,
            "min": 360,
            "mean": 367,
            "median": 362,
            "max": 380
          },
          "toInt112(int256)": {
            "calls": 624,
            "min": 344,
            "mean": 358,
            "median": 364,
            "max": 364
          },
          "toInt112(uint256)": {
            "calls": 282,
            "min": 352,
            "mean": 364,
            "median": 359,
            "max": 383
          },
          "toInt120(int256)": {
            "calls": 662,
            "min": 371,
            "mean": 386,
            "median": 391,
            "max": 391
          },
          "toInt120(uint256)": {
            "calls": 327,
            "min": 353,
            "mean": 364,
            "median": 358,
            "max": 384
          },
          "toInt128(int256)": {
            "calls": 610,
            "min": 358,
            "mean": 380,
            "median": 389,
            "max": 389
          },
          "toInt128(uint256)": {
            "calls": 334,
            "min": 339,
            "mean": 346,
            "median": 342,
            "max": 358
          },
          "toInt136(int256)": {
            "calls": 712,
            "min": 349,
            "mean": 371,
            "median": 380,
            "max": 380
          },
          "toInt136(uint256)": {
            "calls": 324,
            "min": 366,
            "mean": 373,
            "median": 367,
            "max": 386
          },
          "toInt144(int256)": {
            "calls": 640,
            "min": 357,
            "mean": 380,
            "median": 388,
            "max": 388
          },
          "toInt144(uint256)": {
            "calls": 326,
            "min": 376,
            "mean": 384,
            "median": 381,
            "max": 396
          },
          "toInt152(int256)": {
            "calls": 618,
            "min": 374,
            "mean": 396,
            "median": 405,
            "max": 405
          },
          "toInt152(uint256)": {
            "calls": 320,
            "min": 375,
            "mean": 384,
            "median": 384,
            "max": 395
          },
          "toInt16(int256)": {
            "calls": 944,
            "min": 346,
            "mean": 364,
            "median": 375,
            "max": 377
          },
          "toInt16(uint256)": {
            "calls": 440,
            "min": 338,
            "mean": 341,
            "median": 338,
            "max": 358
          },
          "toInt160(int256)": {
            "calls": 586,
            "min": 357,
            "mean": 380,
            "median": 388,
            "max": 388
          },
          "toInt160(uint256)": {
            "calls": 302,
            "min": 360,
            "mean": 368,
            "median": 364,
            "max": 380
          },
          "toInt168(int256)": {
            "calls": 548,
            "min": 362,
            "mean": 368,
            "median": 371,
            "max": 371
          },
          "toInt168(uint256)": {
            "calls": 279,
            "min": 351,
            "mean": 360,
            "median": 358,
            "max": 371
          },
          "toInt176(int256)": {
            "calls": 558,
            "min": 341,
            "mean": 356,
            "median": 361,
            "max": 361
          },
          "toInt176(uint256)": {
            "calls": 290,
            "min": 362,
            "mean": 377,
            "median": 379,
            "max": 393
          },
          "toInt184(int256)": {
            "calls": 558,
            "min": 375,
            "mean": 396,
            "median": 404,
            "max": 404
          },
          "toInt184(uint256)": {
            "calls": 309,
            "min": 367,
            "mean": 375,
            "median": 375,
            "max": 387
          },
          "toInt192(int256)": {
            "calls": 542,
            "min": 327,
            "mean": 350,
            "median": 358,
            "max": 358
          },
          "toInt192(uint256)": {
            "calls": 323,
            "min": 361,
            "mean": 370,
            "median": 368,
            "max": 381
          },
          "toInt200(int256)": {
            "calls": 628,
            "min": 358,
            "mean": 382,
            "median": 389,
            "max": 389
          },
          "toInt200(uint256)": {
            "calls": 282,
            "min": 377,
            "mean": 385,
            "median": 381,
            "max": 397
          },
          "toInt208(int256)": {
            "calls": 644,
            "min": 348,
            "mean": 373,
            "median": 379,
            "max": 379
          },
          "toInt208(uint256)": {
            "calls": 322,
            "min": 358,
            "mean": 367,
            "median": 367,
            "max": 378
          },
          "toInt216(int256)": {
            "calls": 646,
            "min": 367,
            "mean": 382,
            "median": 387,
            "max": 387
          },
          "toInt216(uint256)": {
            "calls": 316,
            "min": 352,
            "mean": 368,
            "median": 368,
            "max": 383
          },
          "toInt224(int256)": {
            "calls": 592,
            "min": 378,
            "mean": 402,
            "median": 409,
            "max": 409
          },
          "toInt224(uint256)": {
            "calls": 333,
            "min": 376,
            "mean": 385,
            "median": 384,
            "max": 396
          },
          "toInt232(int256)": {
            "calls": 658,
            "min": 368,
            "mean": 384,
            "median": 388,
            "max": 388
          },
          "toInt232(uint256)": {
            "calls": 387,
            "min": 361,
            "mean": 378,
            "median": 381,
            "max": 392
          },
          "toInt24(int256)": {
            "calls": 846,
            "min": 323,
            "mean": 341,
            "median": 354,
            "max": 354
          },
          "toInt24(uint256)": {
            "calls": 428,
            "min": 375,
            "mean": 379,
            "median": 375,
            "max": 395
          },
          "toInt240(int256)": {
            "calls": 764,
            "min": 363,
            "mean": 388,
            "median": 394,
            "max": 394
          },
          "toInt240(uint256)": {
            "calls": 403,
            "min": 360,
            "mean": 371,
            "median": 374,
            "max": 380
          },
          "toInt248(int256)": {
            "calls": 832,
            "min": 329,
            "mean": 355,
            "median": 360,
            "max": 360
          },
          "toInt248(uint256)": {
            "calls": 365,
            "min": 350,
            "mean": 360,
            "median": 364,
            "max": 370
          },
          "toInt256(uint256)": {
            "calls": 5120,
            "min": 349,
            "mean": 359,
            "median": 360,
            "max": 360
          },
          "toInt32(int256)": {
            "calls": 886,
            "min": 346,
            "mean": 365,
            "median": 377,
            "max": 377
          },
          "toInt32(uint256)": {
            "calls": 389,
            "min": 350,
            "mean": 354,
            "median": 350,
            "max": 369
          },
          "toInt40(int256)": {
            "calls": 724,
            "min": 324,
            "mean": 344,
            "median": 355,
            "max": 355
          },
          "toInt40(uint256)": {
            "calls": 342,
            "min": 350,
            "mean": 354,
            "median": 350,
            "max": 369
          },
          "toInt48(int256)": {
            "calls": 636,
            "min": 331,
            "mean": 350,
            "median": 362,
            "max": 362
          },
          "toInt48(uint256)": {
            "calls": 318,
            "min": 360,
            "mean": 365,
            "median": 360,
            "max": 380
          },
          "toInt56(int256)": {
            "calls": 652,
            "min": 333,
            "mean": 353,
            "median": 364,
            "max": 364
          },
          "toInt56(uint256)": {
            "calls": 337,
            "min": 366,
            "mean": 371,
            "median": 366,
            "max": 386
          },
          "toInt64(int256)": {
            "calls": 650,
            "min": 323,
            "mean": 343,
            "median": 354,
            "max": 354
          },
          "toInt64(uint256)": {
            "calls": 288,
            "min": 376,
            "mean": 383,
            "median": 378,
            "max": 396
          },
          "toInt72(int256)": {
            "calls": 576,
            "min": 361,
            "mean": 381,
            "median": 392,
            "max": 392
          },
          "toInt72(uint256)": {
            "calls": 269,
            "min": 367,
            "mean": 372,
            "median": 367,
            "max": 387
          },
          "toInt8(int256)": {
            "calls": 436,
            "min": 344,
            "mean": 345,
            "median": 344,
            "max": 365
          },
          "toInt8(uint256)": {
            "calls": 421,
            "min": 363,
            "mean": 364,
            "median": 363,
            "max": 372
          },
          "toInt80(int256)": {
            "calls": 568,
            "min": 384,
            "mean": 397,
            "median": 404,
            "max": 404
          },
          "toInt80(uint256)": {
            "calls": 282,
            "min": 322,
            "mean": 331,
            "median": 324,
            "max": 353
          },
          "toInt88(int256)": {
            "calls": 596,
            "min": 324,
            "mean": 344,
            "median": 355,
            "max": 355
          },
          "toInt88(uint256)": {
            "calls": 292,
            "min": 350,
            "mean": 356,
            "median": 350,
            "max": 370
          },
          "toInt96(int256)": {
            "calls": 580,
            "min": 380,
            "mean": 394,
            "median": 400,
            "max": 400
          },
          "toInt96(uint256)": {
            "calls": 285,
            "min": 345,
            "mean": 355,
            "median": 347,
            "max": 376
          },
          "toUint104(uint256)": {
            "calls": 274,
            "min": 349,
            "mean": 356,
            "median": 352,
            "max": 371
          },
          "toUint112(uint256)": {
            "calls": 326,
            "min": 372,
            "mean": 379,
            "median": 374,
            "max": 394
          },
          "toUint120(uint256)": {
            "calls": 331,
            "min": 371,
            "mean": 380,
            "median": 378,
            "max": 393
          },
          "toUint128(uint256)": {
            "calls": 310,
            "min": 342,
            "mean": 350,
            "median": 348,
            "max": 364
          },
          "toUint136(uint256)": {
            "calls": 351,
            "min": 348,
            "mean": 357,
            "median": 354,
            "max": 370
          },
          "toUint144(uint256)": {
            "calls": 299,
            "min": 348,
            "mean": 357,
            "median": 354,
            "max": 370
          },
          "toUint152(uint256)": {
            "calls": 276,
            "min": 348,
            "mean": 356,
            "median": 353,
            "max": 369
          },
          "toUint16(uint256)": {
            "calls": 514,
            "min": 349,
            "mean": 352,
            "median": 349,
            "max": 371
          },
          "toUint160(uint256)": {
            "calls": 304,
            "min": 363,
            "mean": 372,
            "median": 370,
            "max": 385
          },
          "toUint168(uint256)": {
            "calls": 285,
            "min": 373,
            "mean": 382,
            "median": 378,
            "max": 394
          },
          "toUint176(uint256)": {
            "calls": 251,
            "min": 364,
            "mean": 373,
            "median": 370,
            "max": 385
          },
          "toUint184(uint256)": {
            "calls": 256,
            "min": 358,
            "mean": 367,
            "median": 364,
            "max": 380
          },
          "toUint192(uint256)": {
            "calls": 288,
            "min": 341,
            "mean": 351,
            "median": 349,
            "max": 363
          },
          "toUint200(uint256)": {
            "calls": 351,
            "min": 319,
            "mean": 330,
            "median": 331,
            "max": 341
          },
          "toUint208(uint256)": {
            "calls": 288,
            "min": 363,
            "mean": 374,
            "median": 378,
            "max": 385
          },
          "toUint216(uint256)": {
            "calls": 328,
            "min": 365,
            "mean": 376,
            "median": 377,
            "max": 387
          },
          "toUint224(uint256)": {
            "calls": 323,
            "min": 357,
            "mean": 368,
            "median": 371,
            "max": 379
          },
          "toUint232(uint256)": {
            "calls": 352,
            "min": 365,
            "mean": 375,
            "median": 374,
            "max": 387
          },
          "toUint24(uint256)": {
            "calls": 410,
            "min": 365,
            "mean": 369,
            "median": 365,
            "max": 387
          },
          "toUint240(uint256)": {
            "calls": 374,
            "min": 371,
            "mean": 383,
            "median": 386,
            "max": 393
          },
          "toUint248(uint256)": {
            "calls": 409,
            "min": 356,
            "mean": 368,
            "median": 374,
            "max": 378
          },
          "toUint256(int256)": {
            "calls": 5120,
            "min": 376,
            "mean": 383,
            "median": 387,
            "max": 387
          },
          "toUint32(uint256)": {
            "calls": 420,
            "min": 354,
            "mean": 359,
            "median": 355,
            "max": 376
          },
          "toUint40(uint256)": {
            "calls": 330,
            "min": 347,
            "mean": 351,
            "median": 347,
            "max": 369
          },
          "toUint48(uint256)": {
            "calls": 339,
            "min": 364,
            "mean": 370,
            "median": 365,
            "max": 386
          },
          "toUint56(uint256)": {
            "calls": 356,
            "min": 349,
            "mean": 356,
            "median": 352,
            "max": 371
          },
          "toUint64(uint256)": {
            "calls": 316,
            "min": 357,
            "mean": 364,
            "median": 358,
            "max": 379
          },
          "toUint72(uint256)": {
            "calls": 289,
            "min": 356,
            "mean": 362,
            "median": 357,
            "max": 378
          },
          "toUint8(uint256)": {
            "calls": 471,
            "min": 349,
            "mean": 350,
            "median": 349,
            "max": 363
          },
          "toUint80(uint256)": {
            "calls": 305,
            "min": 364,
            "mean": 370,
            "median": 367,
            "max": 385
          },
          "toUint88(uint256)": {
            "calls": 288,
            "min": 320,
            "mean": 326,
            "median": 322,
            "max": 342
          },
          "toUint96(uint256)": {
            "calls": 278,
            "min": 356,
            "mean": 363,
            "median": 358,
            "max": 378
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/SafeTransferLib.t.sol:SafeTransferLibTest",
        "deployment": {
          "gas": 16368560,
          "size": 81633
        },
        "functions": {
          "forceSafeTransferETH(address,uint256)": {
            "calls": 1630,
            "min": 163868,
            "mean": 170556,
            "median": 170721,
            "max": 170723
          },
          "forceSafeTransferETH(address,uint256,uint256)": {
            "calls": 13910,
            "min": 22121,
            "mean": 149575,
            "median": 97596,
            "max": 296942
          },
          "permit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 100,
            "min": 46101,
            "mean": 67453,
            "median": 69383,
            "max": 85156
          },
          "permit2TransferFrom(address,address,address,uint256)": {
            "calls": 5140,
            "min": 29347,
            "mean": 29796,
            "median": 29768,
            "max": 32037
          },
          "safeApprove(address,address,uint256)": {
            "calls": 5102,
            "min": 24739,
            "mean": 25231,
            "median": 25268,
            "max": 25550
          },
          "safeApproveWithRetry(address,address,uint256)": {
            "calls": 5085,
            "min": 25175,
            "mean": 25666,
            "median": 25708,
            "max": 25984
          },
          "safeTransfer(address,address,uint256)": {
            "calls": 5140,
            "min": 24814,
            "mean": 25272,
            "median": 25293,
            "max": 25534
          },
          "safeTransferAllETH(address)": {
            "calls": 5140,
            "min": 28672,
            "mean": 28672,
            "median": 28672,
            "max": 28672
          },
          "safeTransferETH(address,uint256)": {
            "calls": 5140,
            "min": 22133,
            "mean": 28883,
            "median": 28943,
            "max": 29156
          },
          "safeTransferFrom(address,address,address,uint256)": {
            "calls": 5094,
            "min": 25865,
            "mean": 26514,
            "median": 26580,
            "max": 26897
          },
          "simplePermit2((address,uint256,uint8,bytes32,bytes32,uint256,address,address,address,uint256,bytes32,address,uint256,uint48,uint256,uint256,((address,uint256,uint48,uint48),address,uint256)))": {
            "calls": 10480,
            "min": 28403,
            "mean": 49575,
            "median": 68162,
            "max": 69194
          },
          "totalSupplyQuery(address)": {
            "calls": 60,
            "min": 513,
            "mean": 3745,
            "median": 5362,
            "max": 5362
          },
          "verifySafeApprove(address,address,uint256)": {
            "calls": 51230,
            "min": 25696,
            "mean": 39681,
            "median": 30952,
            "max": 61389
          },
          "verifySafeTransfer(address,address,uint256)": {
            "calls": 46200,
            "min": 581517,
            "mean": 702854,
            "median": 608241,
            "max": 4715319
          },
          "verifySafeTransferFrom(address,address,address,uint256)": {
            "calls": 46200,
            "min": 579882,
            "mean": 714634,
            "median": 608695,
            "max": 4708997
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/SemVerLib.t.sol:SemVerLibTest",
        "deployment": {
          "gas": 3074466,
          "size": 15286
        },
        "functions": {
          "_checkEq(bytes32,bytes32)": {
            "calls": 360,
            "min": 33862,
            "mean": 41292,
            "median": 38540,
            "max": 68539
          },
          "_checkLt(bytes32,bytes32)": {
            "calls": 980,
            "min": 37804,
            "mean": 57960,
            "median": 50571,
            "max": 113676
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/SignatureCheckerLib.t.sol:SignatureCheckerLibTest",
        "deployment": {
          "gas": 4210319,
          "size": 20958
        },
        "functions": {
          "isValidERC1271SignatureNow(address,bytes32,bytes)": {
            "calls": 120,
            "min": 1375,
            "mean": 8418,
            "median": 9027,
            "max": 15579
          },
          "isValidSignatureNow(address,bytes32,bytes)": {
            "calls": 5996,
            "min": 886,
            "mean": 10122,
            "median": 10162,
            "max": 15923
          },
          "isValidSignatureNowCalldata(address,bytes32,bytes)": {
            "calls": 2555,
            "min": 6453,
            "mean": 6457,
            "median": 6459,
            "max": 6461
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 157588,
          "size": 522
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 688,
            "min": 36918,
            "mean": 50366,
            "median": 44913,
            "max": 79113
          },
          "fallbackDeposit(uint256)": {
            "calls": 627,
            "min": 37541,
            "mean": 50015,
            "median": 44556,
            "max": 78756
          },
          "withdraw(uint256)": {
            "calls": 405,
            "min": 40309,
            "mean": 44943,
            "median": 45246,
            "max": 45310
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/WebAuthn.t.sol:WebAuthnTest",
        "deployment": {
          "gas": 2346195,
          "size": 11649
        },
        "functions": {
          "tryDecodeAuthCompactCalldata(bytes)": {
            "calls": 2536,
            "min": 1176,
            "mean": 1191,
            "median": 1195,
            "max": 1210
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockCallContextChecker.sol:MockCallContextChecker",
        "deployment": {
          "gas": 323404,
          "size": 1325
        },
        "functions": {
          "checkNotDelegated()": {
            "calls": 40,
            "min": 225,
            "mean": 250,
            "median": 250,
            "max": 275
          },
          "checkOnlyEIP7702Authority()": {
            "calls": 40,
            "min": 343,
            "mean": 343,
            "median": 343,
            "max": 343
          },
          "checkOnlyProxy()": {
            "calls": 40,
            "min": 242,
            "mean": 267,
            "median": 267,
            "max": 292
          },
          "initialize(address)": {
            "calls": 120,
            "min": 22345,
            "mean": 22345,
            "median": 22345,
            "max": 22345
          },
          "proxiableUUID()": {
            "calls": 40,
            "min": 249,
            "mean": 273,
            "median": 273,
            "max": 298
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 22070,
            "mean": 22070,
            "median": 22070,
            "max": 22070
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCd",
        "deployment": {
          "gas": 247736,
          "size": 932
        },
        "functions": {
          "dataHash()": {
            "calls": 5120,
            "min": 2261,
            "mean": 2261,
            "median": 2261,
            "max": 2261
          },
          "fallback()": {
            "calls": 10400,
            "min": 23094,
            "mean": 64240,
            "median": 89212,
            "max": 219867
          },
          "lastCaller()": {
            "calls": 5280,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "lastCallvalue()": {
            "calls": 5280,
            "min": 2252,
            "mean": 2252,
            "median": 2252,
            "max": 2252
          },
          "numbersHash()": {
            "calls": 160,
            "min": 2274,
            "mean": 2274,
            "median": 2274,
            "max": 2274
          },
          "receive()": {
            "calls": 5200,
            "min": 80,
            "mean": 20837,
            "median": 21080,
            "max": 21080
          },
          "storeDataHash(bytes,bool)": {
            "calls": 10240,
            "min": 498,
            "mean": 33582,
            "median": 24919,
            "max": 67239
          },
          "storeNumbersHash(uint256[],bool)": {
            "calls": 160,
            "min": 1761,
            "mean": 34915,
            "median": 34915,
            "max": 68069
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockCd.sol:MockCdFallbackDecompressor",
        "deployment": {
          "gas": 110115,
          "size": 292
        },
        "functions": {
          "fallback()": {
            "calls": 19932,
            "min": 245,
            "mean": 23518,
            "median": 22379,
            "max": 117149
          },
          "receive()": {
            "calls": 274,
            "min": 21101,
            "mean": 21101,
            "median": 21101,
            "max": 21101
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712.sol:MockEIP712",
        "deployment": {
          "gas": 308182,
          "size": 1231
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 225,
            "mean": 337,
            "median": 394,
            "max": 394
          },
          "eip712Domain()": {
            "calls": 200,
            "min": 474,
            "mean": 474,
            "median": 474,
            "max": 474
          },
          "getArgAddress(uint256)": {
            "calls": 68,
            "min": 3212,
            "mean": 3222,
            "median": 3221,
            "max": 3235
          },
          "getArgUint256(uint256)": {
            "calls": 140,
            "min": 4519,
            "mean": 4528,
            "median": 4527,
            "max": 4542
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 68,
            "min": 12242,
            "mean": 12995,
            "median": 12970,
            "max": 13736
          },
          "getArgUint64(uint256)": {
            "calls": 68,
            "min": 3207,
            "mean": 3217,
            "median": 3216,
            "max": 3230
          },
          "getArgUint8(uint256)": {
            "calls": 68,
            "min": 3230,
            "mean": 3240,
            "median": 3239,
            "max": 3253
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 341,
            "mean": 449,
            "median": 503,
            "max": 503
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 683,
            "mean": 683,
            "median": 683,
            "max": 683
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 629,
            "mean": 629,
            "median": 629,
            "max": 629
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 671,
            "mean": 671,
            "median": 671,
            "max": 671
          },
          "revertWithError()": {
            "calls": 73,
            "min": 5257,
            "mean": 5414,
            "median": 5268,
            "max": 6001
          },
          "setValue(uint256)": {
            "calls": 73,
            "min": 43956,
            "mean": 44136,
            "median": 43973,
            "max": 44802
          },
          "value()": {
            "calls": 73,
            "min": 5199,
            "mean": 5358,
            "median": 5210,
            "max": 5957
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 36,
            "min": 3401,
            "mean": 3408,
            "median": 3409,
            "max": 3414
          },
          "getCalldataHash()": {
            "calls": 36,
            "min": 3664,
            "mean": 3685,
            "median": 3688,
            "max": 3702
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockEIP712Dynamic.sol:MockEIP712Dynamic",
        "deployment": {
          "gas": 662474,
          "size": 4076
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 240,
            "min": 5043,
            "mean": 5110,
            "median": 5133,
            "max": 5133
          },
          "eip712Domain()": {
            "calls": 120,
            "min": 5189,
            "mean": 5234,
            "median": 5234,
            "max": 5279
          },
          "hashTypedData(bytes32)": {
            "calls": 120,
            "min": 5165,
            "mean": 5210,
            "median": 5210,
            "max": 5255
          },
          "hashTypedDataSansChainId(bytes32)": {
            "calls": 40,
            "min": 5109,
            "mean": 5154,
            "median": 5154,
            "max": 5199
          },
          "hashTypedDataSansChainIdAndVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5062,
            "mean": 5107,
            "median": 5107,
            "max": 5152
          },
          "hashTypedDataSansVerifyingContract(bytes32)": {
            "calls": 40,
            "min": 5104,
            "mean": 5149,
            "median": 5149,
            "max": 5194
          },
          "setDomainNameAndVersion(string,string)": {
            "calls": 60,
            "min": 11166,
            "mean": 29891,
            "median": 33142,
            "max": 45366
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1155.sol:MockERC1155",
        "deployment": {
          "gas": 1824796,
          "size": 8245
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 110018,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "balanceOfBatch(address[],uint256[])": {
            "calls": 8943,
            "min": 533,
            "mean": 2582,
            "median": 673,
            "max": 7646
          },
          "batchBurn(address,uint256[],uint256[])": {
            "calls": 12692,
            "min": 23499,
            "mean": 29735,
            "median": 28983,
            "max": 49616
          },
          "batchMint(address,uint256[],uint256[],bytes)": {
            "calls": 84708,
            "min": 23464,
            "mean": 152679,
            "median": 78394,
            "max": 36636855
          },
          "burn(address,uint256,uint256)": {
            "calls": 7638,
            "min": 24935,
            "mean": 29016,
            "median": 27802,
            "max": 33133
          },
          "directSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18348,
            "min": 24416,
            "mean": 280398,
            "median": 62047,
            "max": 40790115
          },
          "directSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 21718,
            "min": 23853,
            "mean": 229541,
            "median": 58029,
            "max": 39940840
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 39324,
            "min": 26310,
            "mean": 44490,
            "median": 46451,
            "max": 46465
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2495,
            "mean": 2495,
            "median": 2495,
            "max": 2495
          },
          "lastDataHash()": {
            "calls": 598,
            "min": 2319,
            "mean": 2319,
            "median": 2319,
            "max": 2319
          },
          "mint(address,uint256,uint256,bytes)": {
            "calls": 100083,
            "min": 22733,
            "mean": 130188,
            "median": 72402,
            "max": 37473687
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 18149,
            "min": 23698,
            "mean": 232652,
            "median": 61738,
            "max": 37224066
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 22000,
            "min": 23441,
            "mean": 221189,
            "median": 57371,
            "max": 40514927
          },
          "setApprovalForAll(address,bool)": {
            "calls": 34235,
            "min": 25710,
            "mean": 45103,
            "median": 45847,
            "max": 45847
          },
          "uncheckedBatchBurn(address,uint256[],uint256[])": {
            "calls": 2660,
            "min": 26322,
            "mean": 36322,
            "median": 35981,
            "max": 47071
          },
          "uncheckedBurn(address,uint256,uint256)": {
            "calls": 2602,
            "min": 28445,
            "mean": 30330,
            "median": 30365,
            "max": 30644
          },
          "uncheckedSafeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "calls": 2492,
            "min": 33776,
            "mean": 119472,
            "median": 92316,
            "max": 1280366
          },
          "uncheckedSafeTransferFrom(address,address,uint256,uint256,bytes)": {
            "calls": 2582,
            "min": 51150,
            "mean": 100396,
            "median": 62182,
            "max": 1233766
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 367191,
          "size": 1506
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 9032,
            "min": 2597,
            "mean": 2645,
            "median": 2617,
            "max": 5888
          },
          "setUseSignaturePassthrough(bool)": {
            "calls": 5120,
            "min": 26449,
            "mean": 26449,
            "median": 26449,
            "max": 26449
          },
          "signer()": {
            "calls": 80,
            "min": 2306,
            "mean": 2306,
            "median": 2306,
            "max": 2306
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 825711,
          "size": 4728
        },
        "functions": {
          "DOMAIN_SEPARATOR()": {
            "calls": 25660,
            "min": 437,
            "mean": 437,
            "median": 437,
            "max": 437
          },
          "allowance(address,address)": {
            "calls": 48856,
            "min": 481,
            "mean": 2068,
            "median": 2489,
            "max": 2489
          },
          "approve(address,uint256)": {
            "calls": 52392,
            "min": 25961,
            "mean": 46013,
            "median": 46098,
            "max": 46283
          },
          "balanceOf(address)": {
            "calls": 265164,
            "min": 468,
            "mean": 2292,
            "median": 2468,
            "max": 2468
          },
          "burn(address,uint256)": {
            "calls": 10283,
            "min": 24105,
            "mean": 29118,
            "median": 27269,
            "max": 34380
          },
          "decimals()": {
            "calls": 6240,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "directSpendAllowance(address,address,uint256)": {
            "calls": 5120,
            "min": 24891,
            "mean": 26710,
            "median": 26730,
            "max": 28356
          },
          "directTransfer(address,address,uint256)": {
            "calls": 5120,
            "min": 24869,
            "mean": 38247,
            "median": 34820,
            "max": 52290
          },
          "mint(address,uint256)": {
            "calls": 64379,
            "min": 24283,
            "mean": 67749,
            "median": 68245,
            "max": 68597
          },
          "name()": {
            "calls": 5160,
            "min": 2627,
            "mean": 4860,
            "median": 3965,
            "max": 9183
          },
          "nonces(address)": {
            "calls": 5160,
            "min": 2434,
            "mean": 2434,
            "median": 2434,
            "max": 2434
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 30740,
            "min": 23429,
            "mean": 43561,
            "median": 30017,
            "max": 74113
          },
          "symbol()": {
            "calls": 5160,
            "min": 2570,
            "mean": 4830,
            "median": 4024,
            "max": 9140
          },
          "totalSupply()": {
            "calls": 20640,
            "min": 2317,
            "mean": 2317,
            "median": 2317,
            "max": 2317
          },
          "transfer(address,uint256)": {
            "calls": 51486,
            "min": 24124,
            "mean": 45526,
            "median": 51382,
            "max": 51608
          },
          "transferFrom(address,address,uint256)": {
            "calls": 30927,
            "min": 24705,
            "mean": 40416,
            "median": 32559,
            "max": 54597
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20ForPermit2.sol:MockERC20ForPermit2",
        "deployment": {
          "gas": 825651,
          "size": 4728
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10240,
            "min": 322,
            "mean": 322,
            "median": 322,
            "max": 322
          },
          "approve(address,uint256)": {
            "calls": 5120,
            "min": 21836,
            "mean": 22115,
            "median": 21912,
            "max": 39022
          },
          "balanceOf(address)": {
            "calls": 10240,
            "min": 2468,
            "mean": 2468,
            "median": 2468,
            "max": 2468
          },
          "mint(address,uint256)": {
            "calls": 5120,
            "min": 28381,
            "mean": 67760,
            "median": 68278,
            "max": 68595
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 22554,
            "mean": 22863,
            "median": 22835,
            "max": 27503
          },
          "transferFrom(address,address,uint256)": {
            "calls": 10240,
            "min": 24907,
            "mean": 38376,
            "median": 30417,
            "max": 52369
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20LikeUSDT.sol:MockERC20LikeUSDT",
        "deployment": {
          "gas": 844346,
          "size": 3802
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15420,
            "min": 2560,
            "mean": 2560,
            "median": 2560,
            "max": 2560
          },
          "approve(address,uint256)": {
            "calls": 20340,
            "min": 23797,
            "mean": 35144,
            "median": 34827,
            "max": 46432
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC20Votes.sol:MockERC20Votes",
        "deployment": {
          "gas": 1249860,
          "size": 5567
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 45213,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "burn(address,uint256)": {
            "calls": 5067,
            "min": 21545,
            "mean": 22016,
            "median": 21796,
            "max": 95109
          },
          "checkpointAt(address,uint256)": {
            "calls": 6515,
            "min": 0,
            "mean": 45,
            "median": 0,
            "max": 4668
          },
          "checkpointCount(address)": {
            "calls": 27236,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "delegate(address)": {
            "calls": 10351,
            "min": 21192,
            "mean": 21640,
            "median": 21432,
            "max": 91424
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "calls": 5120,
            "min": 23284,
            "mean": 41051,
            "median": 29579,
            "max": 75512
          },
          "delegates(address)": {
            "calls": 85710,
            "min": 0,
            "mean": 220,
            "median": 0,
            "max": 2491
          },
          "directDelegate(address,address)": {
            "calls": 5120,
            "min": 45961,
            "mean": 48228,
            "median": 48396,
            "max": 48399
          },
          "directIncrementNonce(address)": {
            "calls": 17110,
            "min": 26785,
            "mean": 31152,
            "median": 26799,
            "max": 43899
          },
          "getPastVotes(address,uint256)": {
            "calls": 80,
            "min": 5370,
            "mean": 5870,
            "median": 5370,
            "max": 7370
          },
          "getPastVotesTotalSupply(uint256)": {
            "calls": 60,
            "min": 324,
            "mean": 3519,
            "median": 4985,
            "max": 5250
          },
          "getVotes(address)": {
            "calls": 60444,
            "min": 0,
            "mean": 10,
            "median": 0,
            "max": 4695
          },
          "getVotesTotalSupply()": {
            "calls": 15502,
            "min": 0,
            "mean": 9,
            "median": 0,
            "max": 4573
          },
          "mint(address,uint256)": {
            "calls": 14641,
            "min": 21551,
            "mean": 21854,
            "median": 21800,
            "max": 94612
          },
          "name()": {
            "calls": 5120,
            "min": 412,
            "mean": 412,
            "median": 412,
            "max": 412
          },
          "nonces(address)": {
            "calls": 9911,
            "min": 2492,
            "mean": 2492,
            "median": 2492,
            "max": 2492
          },
          "totalSupply()": {
            "calls": 7731,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          },
          "transfer(address,uint256)": {
            "calls": 10390,
            "min": 21544,
            "mean": 21842,
            "median": 21792,
            "max": 86631
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC2981.sol:MockERC2981",
        "deployment": {
          "gas": 265364,
          "size": 1014
        },
        "functions": {
          "deleteDefaultRoyalty()": {
            "calls": 5120,
            "min": 21442,
            "mean": 21442,
            "median": 21442,
            "max": 21442
          },
          "feeDenominator()": {
            "calls": 5120,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "resetTokenRoyalty(uint256)": {
            "calls": 10240,
            "min": 21654,
            "mean": 21953,
            "median": 22033,
            "max": 22033
          },
          "royaltyInfo(uint256,uint256)": {
            "calls": 71680,
            "min": 2552,
            "mean": 4050,
            "median": 4635,
            "max": 4654
          },
          "setDefaultRoyalty(address,uint96)": {
            "calls": 7546,
            "min": 22249,
            "mean": 37418,
            "median": 44364,
            "max": 44593
          },
          "setTokenRoyalty(uint256,address,uint96)": {
            "calls": 15092,
            "min": 22419,
            "mean": 37921,
            "median": 44935,
            "max": 45194
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4337.sol:MockERC4337",
        "deployment": {
          "gas": 1484157,
          "size": 6859
        },
        "functions": {
          "addDeposit()": {
            "calls": 40,
            "min": 31930,
            "mean": 31930,
            "median": 31930,
            "max": 31930
          },
          "completeOwnershipHandover(address)": {
            "calls": 20,
            "min": 12131,
            "mean": 12131,
            "median": 12131,
            "max": 12131
          },
          "delegateExecute(address,bytes)": {
            "calls": 15480,
            "min": 6072,
            "mean": 18931,
            "median": 8431,
            "max": 139803
          },
          "eip712Domain()": {
            "calls": 40,
            "min": 832,
            "mean": 832,
            "median": 832,
            "max": 832
          },
          "entryPoint()": {
            "calls": 140,
            "min": 236,
            "mean": 236,
            "median": 236,
            "max": 236
          },
          "execute(address,uint256,bytes)": {
            "calls": 80,
            "min": 2674,
            "mean": 16428,
            "median": 12866,
            "max": 37307
          },
          "executeBatch((address,uint256,bytes)[])": {
            "calls": 2749,
            "min": 2793,
            "mean": 64806,
            "median": 60108,
            "max": 236879
          },
          "executeBatch(uint256,(address,uint256,bytes)[])": {
            "calls": 2431,
            "min": 3005,
            "mean": 59845,
            "median": 49909,
            "max": 231621
          },
          "fallback()": {
            "calls": 100,
            "min": 227,
            "mean": 27715,
            "median": 257,
            "max": 104775
          },
          "getDeposit()": {
            "calls": 120,
            "min": 5292,
            "mean": 5292,
            "median": 5292,
            "max": 5292
          },
          "initialize(address)": {
            "calls": 26040,
            "min": 2422,
            "mean": 23875,
            "median": 23942,
            "max": 23942
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 36080,
            "min": 6529,
            "mean": 7889,
            "median": 6529,
            "max": 13587
          },
          "owner()": {
            "calls": 5340,
            "min": 2340,
            "mean": 2340,
            "median": 2340,
            "max": 2340
          },
          "receive()": {
            "calls": 5160,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 6881,
            "mean": 6881,
            "median": 6881,
            "max": 6881
          },
          "requestOwnershipHandover()": {
            "calls": 20,
            "min": 23497,
            "mean": 23497,
            "median": 23497,
            "max": 23497
          },
          "storageLoad(bytes32)": {
            "calls": 40,
            "min": 2402,
            "mean": 2402,
            "median": 2402,
            "max": 2402
          },
          "storageStore(bytes32,bytes32)": {
            "calls": 40,
            "min": 2476,
            "mean": 13531,
            "median": 13531,
            "max": 24587
          },
          "transferOwnership(address)": {
            "calls": 40,
            "min": 7043,
            "mean": 7043,
            "median": 7043,
            "max": 7043
          },
          "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
            "calls": 80,
            "min": 356,
            "mean": 24140,
            "median": 29218,
            "max": 37768
          },
          "withdrawDepositTo(address,uint256)": {
            "calls": 20,
            "min": 45091,
            "mean": 45091,
            "median": 45091,
            "max": 45091
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC4626.sol:MockERC4626",
        "deployment": {
          "gas": 1694429,
          "size": 9193
        },
        "functions": {
          "afterDepositHookCalledCounter()": {
            "calls": 10320,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "balanceOf(address)": {
            "calls": 31640,
            "min": 2465,
            "mean": 2465,
            "median": 2465,
            "max": 2465
          },
          "beforeWithdrawHookCalledCounter()": {
            "calls": 10240,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "convertToAssets(uint256)": {
            "calls": 21240,
            "min": 2488,
            "mean": 5173,
            "median": 7709,
            "max": 7780
          },
          "convertToShares(uint256)": {
            "calls": 80,
            "min": 7719,
            "mean": 7756,
            "median": 7756,
            "max": 7793
          },
          "decimals()": {
            "calls": 400,
            "min": 290,
            "mean": 295,
            "median": 290,
            "max": 346
          },
          "deposit(uint256,address)": {
            "calls": 5300,
            "min": 30258,
            "mean": 119160,
            "median": 120631,
            "max": 120873
          },
          "mint(uint256,address)": {
            "calls": 5260,
            "min": 30192,
            "mean": 119448,
            "median": 120565,
            "max": 131214
          },
          "name()": {
            "calls": 20,
            "min": 2709,
            "mean": 2709,
            "median": 2709,
            "max": 2709
          },
          "previewDeposit(uint256)": {
            "calls": 10280,
            "min": 7733,
            "mean": 7733,
            "median": 7733,
            "max": 7807
          },
          "previewWithdraw(uint256)": {
            "calls": 10280,
            "min": 7831,
            "mean": 7831,
            "median": 7831,
            "max": 7856
          },
          "redeem(uint256,address,address)": {
            "calls": 5260,
            "min": 24504,
            "mean": 77080,
            "median": 77537,
            "max": 92369
          },
          "symbol()": {
            "calls": 20,
            "min": 2639,
            "mean": 2639,
            "median": 2639,
            "max": 2639
          },
          "totalAssets()": {
            "calls": 20920,
            "min": 5416,
            "mean": 5416,
            "median": 5416,
            "max": 5416
          },
          "totalSupply()": {
            "calls": 10720,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "useVirtualShares()": {
            "calls": 40,
            "min": 246,
            "mean": 246,
            "median": 246,
            "max": 246
          },
          "withdraw(uint256,address,address)": {
            "calls": 5280,
            "min": 26699,
            "mean": 77812,
            "median": 78543,
            "max": 78699
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551",
        "deployment": {
          "gas": 1304893,
          "size": 6101
        },
        "functions": {
          "eip712Domain()": {
            "calls": 6592,
            "min": 832,
            "mean": 832,
            "median": 832,
            "max": 832
          },
          "execute(address,uint256,bytes,uint8)": {
            "calls": 80,
            "min": 5904,
            "mean": 22621,
            "median": 10843,
            "max": 62895
          },
          "executeBatch((address,uint256,bytes)[],uint8)": {
            "calls": 2473,
            "min": 5880,
            "mean": 87000,
            "median": 78460,
            "max": 262313
          },
          "executeBatch(uint256,(address,uint256,bytes)[],uint8)": {
            "calls": 2727,
            "min": 28386,
            "mean": 86887,
            "median": 78670,
            "max": 255812
          },
          "fallback()": {
            "calls": 17440,
            "min": 193,
            "mean": 6102,
            "median": 3244,
            "max": 132997
          },
          "isValidSignature(bytes32,bytes)": {
            "calls": 6946,
            "min": 494,
            "mean": 14282,
            "median": 13764,
            "max": 52838
          },
          "isValidSigner(address,bytes)": {
            "calls": 5120,
            "min": 5860,
            "mean": 5860,
            "median": 5860,
            "max": 5860
          },
          "mockId()": {
            "calls": 40,
            "min": 314,
            "mean": 314,
            "median": 314,
            "max": 314
          },
          "owner()": {
            "calls": 15986,
            "min": 5668,
            "mean": 5668,
            "median": 5668,
            "max": 5668
          },
          "proxiableUUID()": {
            "calls": 20,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "receive()": {
            "calls": 20,
            "min": 59,
            "mean": 59,
            "median": 59,
            "max": 59
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5564,
            "mean": 14117,
            "median": 14138,
            "max": 22712
          },
          "state()": {
            "calls": 15440,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "supportsInterface(bytes4)": {
            "calls": 80,
            "min": 312,
            "mean": 312,
            "median": 312,
            "max": 312
          },
          "token()": {
            "calls": 10720,
            "min": 401,
            "mean": 401,
            "median": 401,
            "max": 401
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 5180,
            "min": 5907,
            "mean": 35133,
            "median": 35294,
            "max": 52394
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551.sol:MockERC6551V2",
        "deployment": {
          "gas": 1318087,
          "size": 6162
        },
        "functions": {
          "clearState()": {
            "calls": 5120,
            "min": 5221,
            "mean": 5221,
            "median": 5221,
            "max": 5221
          },
          "mockId()": {
            "calls": 20,
            "min": 314,
            "mean": 314,
            "median": 314,
            "max": 314
          },
          "proxiableUUID()": {
            "calls": 5140,
            "min": 264,
            "mean": 264,
            "median": 264,
            "max": 264
          },
          "somethingThatUpdatesState(bytes)": {
            "calls": 10240,
            "min": 5628,
            "mean": 14181,
            "median": 14202,
            "max": 22776
          },
          "state()": {
            "calls": 10260,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 20,
            "min": 18258,
            "mean": 18258,
            "median": 18258,
            "max": 18258
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6551Registry.sol:MockERC6551Registry",
        "deployment": {
          "gas": 174531,
          "size": 590
        },
        "functions": {
          "createAccount(address,bytes32,uint256,address,uint256)": {
            "calls": 48306,
            "min": 94676,
            "mean": 95239,
            "median": 95281,
            "max": 95502
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC6909.sol:MockERC6909",
        "deployment": {
          "gas": 709536,
          "size": 3067
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 49821,
            "min": 2518,
            "mean": 2518,
            "median": 2518,
            "max": 2518
          },
          "approve(address,uint256,uint256)": {
            "calls": 30859,
            "min": 26812,
            "mean": 46838,
            "median": 47039,
            "max": 47448
          },
          "balanceOf(address,uint256)": {
            "calls": 47705,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "burn(address,uint256,uint256)": {
            "calls": 10260,
            "min": 24300,
            "mean": 27265,
            "median": 25247,
            "max": 30501
          },
          "decimals(uint256)": {
            "calls": 20,
            "min": 227,
            "mean": 227,
            "median": 227,
            "max": 227
          },
          "directApprove(address,address,uint256,uint256)": {
            "calls": 10260,
            "min": 36547,
            "mean": 47078,
            "median": 47113,
            "max": 47496
          },
          "directSetOperator(address,address,bool)": {
            "calls": 15400,
            "min": 23834,
            "mean": 32262,
            "median": 26303,
            "max": 46217
          },
          "directTransferFrom(address,address,address,uint256,uint256)": {
            "calls": 7790,
            "min": 25619,
            "mean": 40347,
            "median": 30207,
            "max": 61560
          },
          "isOperator(address,address)": {
            "calls": 15440,
            "min": 2472,
            "mean": 2472,
            "median": 2472,
            "max": 2472
          },
          "mint(address,uint256,uint256)": {
            "calls": 92560,
            "min": 24483,
            "mean": 45780,
            "median": 47121,
            "max": 47666
          },
          "name(uint256)": {
            "calls": 5120,
            "min": 301,
            "mean": 301,
            "median": 301,
            "max": 301
          },
          "setOperator(address,bool)": {
            "calls": 20,
            "min": 45963,
            "mean": 45963,
            "median": 45963,
            "max": 45963
          },
          "symbol(uint256)": {
            "calls": 5120,
            "min": 311,
            "mean": 311,
            "median": 311,
            "max": 311
          },
          "tokenURI(uint256)": {
            "calls": 20,
            "min": 633,
            "mean": 633,
            "median": 633,
            "max": 633
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20903,
            "min": 24301,
            "mean": 37349,
            "median": 31207,
            "max": 52777
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 32986,
            "min": 27000,
            "mean": 38512,
            "median": 33098,
            "max": 60857
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC721.sol:MockERC721",
        "deployment": {
          "gas": 1486487,
          "size": 6664
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 21347,
            "min": 24204,
            "mean": 42896,
            "median": 48482,
            "max": 48817
          },
          "balanceOf(address)": {
            "calls": 204140,
            "min": 2488,
            "mean": 2488,
            "median": 2488,
            "max": 2488
          },
          "burn(uint256)": {
            "calls": 4926,
            "min": 28264,
            "mean": 29280,
            "median": 28701,
            "max": 31392
          },
          "directApprove(address,uint256)": {
            "calls": 20872,
            "min": 24202,
            "mean": 43870,
            "median": 49105,
            "max": 49435
          },
          "directGetApproved(uint256)": {
            "calls": 30470,
            "min": 2480,
            "mean": 4484,
            "median": 4667,
            "max": 4667
          },
          "directOwnerOf(uint256)": {
            "calls": 51080,
            "min": 2498,
            "mean": 2685,
            "median": 2732,
            "max": 2732
          },
          "directSafeTransferFrom(address,address,uint256)": {
            "calls": 12853,
            "min": 57151,
            "mean": 75313,
            "median": 63177,
            "max": 129623
          },
          "directSafeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10196,
            "min": 63566,
            "mean": 93792,
            "median": 64733,
            "max": 238394
          },
          "directSetApprovalForAll(address,bool)": {
            "calls": 18838,
            "min": 24302,
            "mean": 41966,
            "median": 46442,
            "max": 46456
          },
          "directTransferFrom(address,address,uint256)": {
            "calls": 36101,
            "min": 25059,
            "mean": 42524,
            "median": 40999,
            "max": 57490
          },
          "exists(uint256)": {
            "calls": 10079,
            "min": 2536,
            "mean": 2536,
            "median": 2536,
            "max": 2536
          },
          "getApproved(uint256)": {
            "calls": 30648,
            "min": 2486,
            "mean": 4416,
            "median": 4594,
            "max": 4594
          },
          "getAux(address)": {
            "calls": 51240,
            "min": 2783,
            "mean": 2783,
            "median": 2783,
            "max": 2790
          },
          "getExtraData(uint256)": {
            "calls": 71197,
            "min": 2456,
            "mean": 2456,
            "median": 2456,
            "max": 2456
          },
          "isApprovedForAll(address,address)": {
            "calls": 5120,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "isApprovedOrOwner(address,uint256)": {
            "calls": 30720,
            "min": 2844,
            "mean": 5405,
            "median": 6141,
            "max": 7202
          },
          "mint(address,uint256)": {
            "calls": 217318,
            "min": 24350,
            "mean": 64360,
            "median": 68531,
            "max": 68894
          },
          "mintWithExtraDataUnchecked(address,uint256,uint96)": {
            "calls": 15380,
            "min": 46863,
            "mean": 56069,
            "median": 51884,
            "max": 69344
          },
          "ownerOf(uint256)": {
            "calls": 112490,
            "min": 546,
            "mean": 2528,
            "median": 2546,
            "max": 2546
          },
          "safeMint(address,uint256)": {
            "calls": 25600,
            "min": 71146,
            "mean": 81480,
            "median": 71882,
            "max": 121062
          },
          "safeMint(address,uint256,bytes)": {
            "calls": 20480,
            "min": 72155,
            "mean": 98121,
            "median": 73372,
            "max": 231993
          },
          "safeTransferFrom(address,address,uint256)": {
            "calls": 36759,
            "min": 40556,
            "mean": 68166,
            "median": 63216,
            "max": 130032
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "calls": 10284,
            "min": 63541,
            "mean": 93996,
            "median": 64776,
            "max": 237370
          },
          "setApprovalForAll(address,bool)": {
            "calls": 23970,
            "min": 24003,
            "mean": 42772,
            "median": 46143,
            "max": 46150
          },
          "setAux(address,uint224)": {
            "calls": 15370,
            "min": 27600,
            "mean": 44582,
            "median": 44689,
            "max": 44700
          },
          "setExtraData(uint256,uint96)": {
            "calls": 30705,
            "min": 23932,
            "mean": 36934,
            "median": 43904,
            "max": 44332
          },
          "transferFrom(address,address,uint256)": {
            "calls": 36198,
            "min": 24499,
            "mean": 42059,
            "median": 40418,
            "max": 56886
          },
          "uncheckedBurn(uint256)": {
            "calls": 58836,
            "min": 23677,
            "mean": 30176,
            "median": 31115,
            "max": 36299
          },
          "uncheckedTransferFrom(address,address,uint256)": {
            "calls": 3806,
            "min": 54698,
            "mean": 54949,
            "median": 54937,
            "max": 55303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockERC7821.sol:MockERC7821",
        "deployment": {
          "gas": 600943,
          "size": 2569
        },
        "functions": {
          "execute(bytes32,bytes)": {
            "calls": 5240,
            "min": 31210,
            "mean": 100568,
            "median": 90771,
            "max": 158780
          },
          "executeDirect((address,uint256,bytes)[])": {
            "calls": 5246,
            "min": 308056,
            "mean": 389893,
            "median": 327562,
            "max": 3452122
          },
          "lastOpData()": {
            "calls": 5120,
            "min": 2542,
            "mean": 5735,
            "median": 4733,
            "max": 11261
          },
          "setAuthorizedCaller(address,bool)": {
            "calls": 160,
            "min": 22071,
            "mean": 41244,
            "median": 43983,
            "max": 43983
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockETHRecipient.sol:MockETHRecipient",
        "deployment": {
          "gas": 149934,
          "size": 623
        },
        "functions": {
          "counter()": {
            "calls": 80,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "garbage()": {
            "calls": 15600,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "getArgAddress(uint256)": {
            "calls": 50,
            "min": 3075,
            "mean": 3077,
            "median": 3076,
            "max": 3080
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 28,
            "min": 3267,
            "mean": 3269,
            "median": 3269,
            "max": 3273
          },
          "getArgUint256(uint256)": {
            "calls": 106,
            "min": 4382,
            "mean": 4384,
            "median": 4384,
            "max": 4387
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 50,
            "min": 5288,
            "mean": 5698,
            "median": 5714,
            "max": 6028
          },
          "getArgUint64(uint256)": {
            "calls": 50,
            "min": 3070,
            "mean": 3072,
            "median": 3071,
            "max": 3075
          },
          "getArgUint8(uint256)": {
            "calls": 50,
            "min": 3093,
            "mean": 3095,
            "median": 3094,
            "max": 3098
          },
          "getCalldataHash()": {
            "calls": 28,
            "min": 3258,
            "mean": 3262,
            "median": 3261,
            "max": 3267
          },
          "receive()": {
            "calls": 216,
            "min": 0,
            "mean": 40782,
            "median": 21096,
            "max": 286387
          },
          "revertWithError()": {
            "calls": 53,
            "min": 5228,
            "mean": 5331,
            "median": 5230,
            "max": 5707
          },
          "setValue(uint256)": {
            "calls": 53,
            "min": 43942,
            "mean": 44065,
            "median": 43957,
            "max": 44487
          },
          "value()": {
            "calls": 53,
            "min": 5173,
            "mean": 5277,
            "median": 5175,
            "max": 5659
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockEnumerableRoles.sol:MockEnumerableRoles",
        "deployment": {
          "gas": 763363,
          "size": 3318
        },
        "functions": {
          "MAX_ROLE()": {
            "calls": 157394,
            "min": 320,
            "mean": 4122,
            "median": 4446,
            "max": 4446
          },
          "guardedByOnlyOwnerOrRole()": {
            "calls": 5265,
            "min": 26688,
            "mean": 28073,
            "median": 28112,
            "max": 28336
          },
          "guardedByOnlyOwnerOrRoles()": {
            "calls": 623,
            "min": 26198,
            "mean": 40613,
            "median": 40595,
            "max": 57790
          },
          "guardedByOnlyRoles()": {
            "calls": 623,
            "min": 23615,
            "mean": 39620,
            "median": 40479,
            "max": 55460
          },
          "hasAnyRoles(address,bytes)": {
            "calls": 5120,
            "min": 972,
            "mean": 8670,
            "median": 8844,
            "max": 16722
          },
          "hasRole(address,uint256)": {
            "calls": 36304,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "owner()": {
            "calls": 38996,
            "min": 2344,
            "mean": 2359,
            "median": 2361,
            "max": 2361
          },
          "roleHolderAt(uint256,uint256)": {
            "calls": 5199,
            "min": 2444,
            "mean": 2677,
            "median": 2487,
            "max": 4583
          },
          "roleHolderCount(uint256)": {
            "calls": 75503,
            "min": 2418,
            "mean": 2418,
            "median": 2418,
            "max": 2418
          },
          "roleHolders(uint256)": {
            "calls": 76590,
            "min": 2569,
            "mean": 2942,
            "median": 2569,
            "max": 20970
          },
          "setAllowedRole(uint256)": {
            "calls": 5120,
            "min": 25614,
            "mean": 43433,
            "median": 43583,
            "max": 43907
          },
          "setAllowedRolesEncoded(bytes)": {
            "calls": 623,
            "min": 28209,
            "mean": 128051,
            "median": 135371,
            "max": 214147
          },
          "setMaxRole(uint256)": {
            "calls": 5280,
            "min": 21725,
            "mean": 26981,
            "median": 26478,
            "max": 43890
          },
          "setMaxRoleReverts(bool)": {
            "calls": 5120,
            "min": 23644,
            "mean": 25040,
            "median": 24980,
            "max": 26456
          },
          "setOwner(address)": {
            "calls": 5360,
            "min": 25760,
            "mean": 27132,
            "median": 26710,
            "max": 43810
          },
          "setOwnerReverts(bool)": {
            "calls": 5120,
            "min": 23664,
            "mean": 25103,
            "median": 25281,
            "max": 28186
          },
          "setRole(address,uint256,bool)": {
            "calls": 27988,
            "min": 24288,
            "mean": 59357,
            "median": 73574,
            "max": 74083
          },
          "setRoleDirect(address,uint256,bool)": {
            "calls": 134606,
            "min": 33299,
            "mean": 59140,
            "median": 73561,
            "max": 78468
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockImplementation.sol:MockImplementation",
        "deployment": {
          "gas": 112047,
          "size": 301
        },
        "functions": {
          "fails()": {
            "calls": 120,
            "min": 159,
            "mean": 159,
            "median": 159,
            "max": 159
          },
          "getValue(uint256)": {
            "calls": 19269,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "setValue(uint256,uint256)": {
            "calls": 19269,
            "min": 5402,
            "mean": 22287,
            "median": 22317,
            "max": 22317
          },
          "succeeds(uint256)": {
            "calls": 40,
            "min": 163,
            "mean": 163,
            "median": 163,
            "max": 163
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockInitializable.sol:MockInitializable",
        "deployment": {
          "gas": 334584,
          "size": 2519
        },
        "functions": {
          "disableInitializers()": {
            "calls": 40,
            "min": 23352,
            "mean": 33868,
            "median": 33868,
            "max": 44385
          },
          "initialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 3847,
            "min": 27483,
            "mean": 60668,
            "median": 67583,
            "max": 90381
          },
          "isInitializing()": {
            "calls": 3811,
            "min": 2276,
            "mean": 2276,
            "median": 2276,
            "max": 2276
          },
          "onlyDuringInitializing()": {
            "calls": 20,
            "min": 23390,
            "mean": 23390,
            "median": 23390,
            "max": 23390
          },
          "reinitialize((uint256,uint64,bool,bool,bool,bool))": {
            "calls": 5008,
            "min": 24452,
            "mean": 55276,
            "median": 65714,
            "max": 90374
          },
          "version()": {
            "calls": 5265,
            "min": 2309,
            "mean": 2309,
            "median": 2309,
            "max": 2309
          },
          "x()": {
            "calls": 2706,
            "min": 2300,
            "mean": 2300,
            "median": 2300,
            "max": 2300
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoy",
        "deployment": {
          "gas": 516633,
          "size": 2214
        },
        "functions": {
          "owner()": {
            "calls": 14926,
            "min": 151,
            "mean": 151,
            "median": 151,
            "max": 151
          },
          "rescueETH(address,uint256)": {
            "calls": 20480,
            "min": 24932,
            "mean": 33669,
            "median": 24953,
            "max": 59114
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockLifebuoy.sol:MockLifebuoyOwned",
        "deployment": {
          "gas": 709599,
          "size": 3108
        },
        "functions": {
          "initializeOwner(address)": {
            "calls": 15360,
            "min": 23861,
            "mean": 23861,
            "median": 23861,
            "max": 23861
          },
          "lockRescue(uint256)": {
            "calls": 100,
            "min": 26207,
            "mean": 37850,
            "median": 44166,
            "max": 46335
          },
          "owner()": {
            "calls": 34105,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "rescueERC1155(address,address,uint256,uint256,bytes)": {
            "calls": 2493,
            "min": 29171,
            "mean": 68975,
            "median": 67707,
            "max": 727160
          },
          "rescueERC20(address,address,uint256)": {
            "calls": 2575,
            "min": 28267,
            "mean": 53346,
            "median": 60467,
            "max": 60765
          },
          "rescueERC6909(address,address,uint256,uint256)": {
            "calls": 2542,
            "min": 28561,
            "mean": 53763,
            "median": 61590,
            "max": 62015
          },
          "rescueERC721(address,address,uint256)": {
            "calls": 5084,
            "min": 28144,
            "mean": 48370,
            "median": 47294,
            "max": 63538
          },
          "rescueETH(address,uint256)": {
            "calls": 28268,
            "min": 5756,
            "mean": 32535,
            "median": 36602,
            "max": 61965
          },
          "transferOwnership(address)": {
            "calls": 5120,
            "min": 6823,
            "mean": 6823,
            "median": 6823,
            "max": 6823
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockMulticallable.sol:MockMulticallable",
        "deployment": {
          "gas": 671502,
          "size": 2897
        },
        "functions": {
          "multicall(bytes[])": {
            "calls": 10399,
            "min": 21842,
            "mean": 24112,
            "median": 24184,
            "max": 35805
          },
          "multicallBrutalized(bytes[])": {
            "calls": 5101,
            "min": 370993,
            "mean": 456226,
            "median": 376967,
            "max": 3750908
          },
          "multicallOriginal(bytes[])": {
            "calls": 20,
            "min": 40214,
            "mean": 40214,
            "median": 40214,
            "max": 40214
          },
          "returnsRandomizedString(string)": {
            "calls": 5050,
            "min": 614,
            "mean": 1484,
            "median": 1425,
            "max": 2857
          },
          "returnsSender()": {
            "calls": 20,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "returnsTuple(uint256,uint256)": {
            "calls": 10680,
            "min": 297,
            "mean": 297,
            "median": 297,
            "max": 297
          },
          "revertsWithCustomError()": {
            "calls": 20,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "revertsWithNothing()": {
            "calls": 20,
            "min": 151,
            "mean": 151,
            "median": 151,
            "max": 151
          },
          "revertsWithString(string)": {
            "calls": 5140,
            "min": 547,
            "mean": 562,
            "median": 562,
            "max": 580
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnable",
        "deployment": {
          "gas": 351075,
          "size": 1354
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22628,
            "mean": 22628,
            "median": 22628,
            "max": 22628
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 23834,
            "mean": 28728,
            "median": 28854,
            "max": 28861
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28234,
            "mean": 28234,
            "median": 28234,
            "max": 28234
          },
          "owner()": {
            "calls": 16709,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2722,
            "mean": 2722,
            "median": 2722,
            "max": 2729
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 309,
            "mean": 309,
            "median": 309,
            "max": 309
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23078,
            "mean": 23078,
            "median": 23078,
            "max": 23078
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44529,
            "mean": 44529,
            "median": 44529,
            "max": 44529
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 27025,
            "mean": 28389,
            "median": 28473,
            "max": 28480
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 23869,
            "mean": 25037,
            "median": 23881,
            "max": 28519
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23350,
            "mean": 34414,
            "median": 36064,
            "max": 45461
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnable.sol:MockOwnableBytecodeSizer",
        "deployment": {
          "gas": 262397,
          "size": 943
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2275,
            "mean": 2275,
            "median": 2275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRoles",
        "deployment": {
          "gas": 694061,
          "size": 2942
        },
        "functions": {
          "cancelOwnershipHandover()": {
            "calls": 20,
            "min": 22660,
            "mean": 22660,
            "median": 22660,
            "max": 22660
          },
          "completeOwnershipHandover(address)": {
            "calls": 5220,
            "min": 23918,
            "mean": 28799,
            "median": 28927,
            "max": 28934
          },
          "grantRoles(address,uint256)": {
            "calls": 30760,
            "min": 24047,
            "mean": 45797,
            "median": 47995,
            "max": 48354
          },
          "grantRolesDirect(address,uint256)": {
            "calls": 5120,
            "min": 27878,
            "mean": 45648,
            "median": 45882,
            "max": 46212
          },
          "hasAllRoles(address,uint256)": {
            "calls": 5120,
            "min": 2777,
            "mean": 2777,
            "median": 2777,
            "max": 2784
          },
          "hasAnyRole(address,uint256)": {
            "calls": 5120,
            "min": 2798,
            "mean": 2798,
            "median": 2798,
            "max": 2805
          },
          "initializeOwnerDirect(address)": {
            "calls": 20,
            "min": 28280,
            "mean": 28280,
            "median": 28280,
            "max": 28280
          },
          "ordinalsFromRoles(uint256)": {
            "calls": 5760,
            "min": 472,
            "mean": 16568,
            "median": 9755,
            "max": 53857
          },
          "owner()": {
            "calls": 16712,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "ownershipHandoverExpiresAt(address)": {
            "calls": 5180,
            "min": 2772,
            "mean": 2772,
            "median": 2772,
            "max": 2779
          },
          "ownershipHandoverValidFor()": {
            "calls": 60,
            "min": 348,
            "mean": 348,
            "median": 348,
            "max": 348
          },
          "removeRolesDirect(address,uint256)": {
            "calls": 10240,
            "min": 23793,
            "mean": 27166,
            "median": 25967,
            "max": 29150
          },
          "renounceOwnership()": {
            "calls": 20,
            "min": 23107,
            "mean": 23107,
            "median": 23107,
            "max": 23107
          },
          "renounceRoles(uint256)": {
            "calls": 1218,
            "min": 23809,
            "mean": 27779,
            "median": 28102,
            "max": 28434
          },
          "requestOwnershipHandover()": {
            "calls": 5220,
            "min": 44583,
            "mean": 44583,
            "median": 44583,
            "max": 44583
          },
          "revokeRoles(address,uint256)": {
            "calls": 1267,
            "min": 24078,
            "mean": 27366,
            "median": 26153,
            "max": 31266
          },
          "rolesFromOrdinals(uint8[])": {
            "calls": 5760,
            "min": 598,
            "mean": 24647,
            "median": 23909,
            "max": 53071
          },
          "rolesOf(address)": {
            "calls": 45286,
            "min": 2755,
            "mean": 2756,
            "median": 2755,
            "max": 2762
          },
          "setOwnerDirect(address)": {
            "calls": 5140,
            "min": 27042,
            "mean": 28399,
            "median": 28490,
            "max": 28497
          },
          "setRolesDirect(address,uint256)": {
            "calls": 20480,
            "min": 25646,
            "mean": 37503,
            "median": 37377,
            "max": 46230
          },
          "transferOwnership(address)": {
            "calls": 5140,
            "min": 23905,
            "mean": 25076,
            "median": 23921,
            "max": 28557
          },
          "updateFlagWithOnlyOwner()": {
            "calls": 5120,
            "min": 23387,
            "mean": 34388,
            "median": 31683,
            "max": 45510
          },
          "updateFlagWithOnlyOwnerOrRoles(uint256)": {
            "calls": 5140,
            "min": 25737,
            "mean": 46016,
            "median": 46188,
            "max": 48224
          },
          "updateFlagWithOnlyRoles(uint256)": {
            "calls": 5120,
            "min": 23633,
            "mean": 44369,
            "median": 45792,
            "max": 46120
          },
          "updateFlagWithOnlyRolesOrOwner(uint256)": {
            "calls": 5120,
            "min": 25738,
            "mean": 46295,
            "median": 47230,
            "max": 48219
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockOwnableRoles.sol:MockOwnableRolesBytecodeSizer",
        "deployment": {
          "gas": 378491,
          "size": 1480
        },
        "functions": {
          "owner()": {
            "calls": 20,
            "min": 2305,
            "mean": 2305,
            "median": 2305,
            "max": 2305
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockReceiver.sol:MockReceiver",
        "deployment": {
          "gas": 86947,
          "size": 185
        },
        "functions": {
          "receive()": {
            "calls": 20,
            "min": 0,
            "mean": 0,
            "median": 0,
            "max": 0
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:MockReentrancyGuard",
        "deployment": {
          "gas": 426392,
          "size": 1755
        },
        "functions": {
          "callGuardedToGuarded()": {
            "calls": 20,
            "min": 26461,
            "mean": 26461,
            "median": 26461,
            "max": 26461
          },
          "callGuardedToReadGuarded()": {
            "calls": 20,
            "min": 43529,
            "mean": 43529,
            "median": 43529,
            "max": 43529
          },
          "callUnguardedToGuarded()": {
            "calls": 20,
            "min": 65656,
            "mean": 65656,
            "median": 65656,
            "max": 65656
          },
          "callUnguardedToReadGuarded()": {
            "calls": 20,
            "min": 45529,
            "mean": 45529,
            "median": 45529,
            "max": 45529
          },
          "countAndCall(address)": {
            "calls": 20,
            "min": 69608,
            "mean": 69608,
            "median": 69608,
            "max": 69608
          },
          "countGuardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 65880,
            "mean": 65880,
            "median": 65880,
            "max": 65880
          },
          "countGuardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 66798,
            "mean": 66798,
            "median": 66798,
            "max": 66798
          },
          "countUnguardedDirectRecursive(uint256)": {
            "calls": 20,
            "min": 45162,
            "mean": 45162,
            "median": 45162,
            "max": 45162
          },
          "countUnguardedIndirectRecursive(uint256)": {
            "calls": 20,
            "min": 55066,
            "mean": 55066,
            "median": 55066,
            "max": 55066
          },
          "enterTimes()": {
            "calls": 120,
            "min": 2314,
            "mean": 2314,
            "median": 2314,
            "max": 2314
          },
          "isReentrancyGuardLocked()": {
            "calls": 280,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockTimedRoles.sol:MockTimedRoles",
        "deployment": {
          "gas": 875038,
          "size": 3835
        },
        "functions": {
          "MAX_TIMED_ROLE()": {
            "calls": 13807,
            "min": 2440,
            "mean": 2440,
            "median": 2440,
            "max": 2440
          },
          "guardedByOnlyOwnerOrTimedRole()": {
            "calls": 5164,
            "min": 26744,
            "mean": 28126,
            "median": 28136,
            "max": 28584
          },
          "guardedByOnlyOwnerOrTimedRoles()": {
            "calls": 5164,
            "min": 33614,
            "mean": 39452,
            "median": 39550,
            "max": 40116
          },
          "owner()": {
            "calls": 24417,
            "min": 2368,
            "mean": 2368,
            "median": 2368,
            "max": 2368
          },
          "setAllowedTimedRole(uint256)": {
            "calls": 5120,
            "min": 31574,
            "mean": 43473,
            "median": 43533,
            "max": 43533
          },
          "setAllowedTimedRolesEncoded(bytes)": {
            "calls": 5120,
            "min": 90286,
            "mean": 110902,
            "median": 111210,
            "max": 111210
          },
          "setMaxTimedRole(uint256)": {
            "calls": 397,
            "min": 25745,
            "mean": 29422,
            "median": 26819,
            "max": 43920
          },
          "setOwner(address)": {
            "calls": 624,
            "min": 26706,
            "mean": 28462,
            "median": 26713,
            "max": 43813
          },
          "setTimedRole(address,uint256,uint40,uint40)": {
            "calls": 14089,
            "min": 24502,
            "mean": 50318,
            "median": 51689,
            "max": 51787
          },
          "timedRoleActive(address,uint256)": {
            "calls": 15576,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockUUPSImplementation.sol:MockUUPSImplementation",
        "deployment": {
          "gas": 262925,
          "size": 1038
        },
        "functions": {
          "initialize(address)": {
            "calls": 160,
            "min": 22339,
            "mean": 22339,
            "median": 22339,
            "max": 22339
          },
          "proxiableUUID()": {
            "calls": 60,
            "min": 217,
            "mean": 217,
            "median": 217,
            "max": 217
          },
          "revertWithError()": {
            "calls": 20,
            "min": 305,
            "mean": 305,
            "median": 305,
            "max": 305
          },
          "setValue(uint256)": {
            "calls": 20,
            "min": 22275,
            "mean": 22275,
            "median": 22275,
            "max": 22275
          },
          "upgradeToAndCall(address,bytes)": {
            "calls": 140,
            "min": 2734,
            "mean": 9719,
            "median": 5362,
            "max": 32086
          },
          "value()": {
            "calls": 20,
            "min": 2261,
            "mean": 2261,
            "median": 2261,
            "max": 2261
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/MissingReturnToken.sol:MissingReturnToken",
        "deployment": {
          "gas": 324370,
          "size": 1116
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10280,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 33390,
            "min": 423,
            "mean": 1346,
            "median": 423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsFalseToken.sol:ReturnsFalseToken",
        "deployment": {
          "gas": 223384,
          "size": 649
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 555,
            "mean": 555,
            "median": 555,
            "max": 555
          },
          "balanceOf(address)": {
            "calls": 20608,
            "min": 534,
            "mean": 2429,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsRawBytesToken.sol:ReturnsRawBytesToken",
        "deployment": {
          "gas": 578881,
          "size": 2294
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 15360,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 56399,
            "min": 423,
            "mean": 1512,
            "median": 2423,
            "max": 2423
          },
          "setRawBytes(bytes)": {
            "calls": 30720,
            "min": 24223,
            "mean": 63212,
            "median": 66512,
            "max": 114334
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooLittleToken.sol:ReturnsTooLittleToken",
        "deployment": {
          "gas": 225160,
          "size": 657
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 20609,
            "min": 523,
            "mean": 2418,
            "median": 2423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTooMuchToken.sol:ReturnsTooMuchToken",
        "deployment": {
          "gas": 326328,
          "size": 1125
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 10280,
            "min": 544,
            "mean": 544,
            "median": 544,
            "max": 544
          },
          "balanceOf(address)": {
            "calls": 33338,
            "min": 423,
            "mean": 1348,
            "median": 423,
            "max": 2423
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/ReturnsTwoToken.sol:ReturnsTwoToken",
        "deployment": {
          "gas": 223600,
          "size": 650
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5120,
            "min": 555,
            "mean": 555,
            "median": 555,
            "max": 555
          },
          "balanceOf(address)": {
            "calls": 20530,
            "min": 634,
            "mean": 2429,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/weird-tokens/RevertingToken.sol:RevertingToken",
        "deployment": {
          "gas": 198476,
          "size": 534
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 5140,
            "min": 533,
            "mean": 533,
            "median": 533,
            "max": 533
          },
          "balanceOf(address)": {
            "calls": 10295,
            "min": 1434,
            "mean": 2431,
            "median": 2434,
            "max": 2434
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/utils/mocks/MockReentrancyGuard.sol:ReentrancyAttack",
        "deployment": {
          "gas": 125455,
          "size": 314
        },
        "functions": {
          "getArgAddress(uint256)": {
            "calls": 1,
            "min": 3050,
            "mean": 3050,
            "median": 3050,
            "max": 3050
          },
          "getArgBytes(uint256,uint256)": {
            "calls": 1,
            "min": 3266,
            "mean": 3266,
            "median": 3266,
            "max": 3266
          },
          "getArgUint256(uint256)": {
            "calls": 3,
            "min": 4357,
            "mean": 4357,
            "median": 4357,
            "max": 4357
          },
          "getArgUint256Array(uint256,uint256)": {
            "calls": 1,
            "min": 3606,
            "mean": 3606,
            "median": 3606,
            "max": 3606
          },
          "getArgUint64(uint256)": {
            "calls": 1,
            "min": 3045,
            "mean": 3045,
            "median": 3045,
            "max": 3045
          },
          "getArgUint8(uint256)": {
            "calls": 1,
            "min": 3068,
            "mean": 3068,
            "median": 3068,
            "max": 3068
          },
          "getCalldataHash()": {
            "calls": 1,
            "min": 3186,
            "mean": 3186,
            "median": 3186,
            "max": 3186
          },
          "revertWithError()": {
            "calls": 1,
            "min": 5095,
            "mean": 5095,
            "median": 5095,
            "max": 5095
          },
          "setValue(uint256)": {
            "calls": 1,
            "min": 44156,
            "mean": 44156,
            "median": 44156,
            "max": 44156
          },
          "value()": {
            "calls": 1,
            "min": 5037,
            "mean": 5037,
            "median": 5037,
            "max": 5037
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "solmate": {
    "solc": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 904688,
          "size": 4136
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 164480,
            "min": 4941,
            "mean": 7855,
            "median": 9286,
            "max": 9286
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 15420,
            "min": 2712,
            "mean": 2712,
            "median": 2712,
            "max": 2712
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2737,
            "mean": 2737,
            "median": 2737,
            "max": 2737
          },
          "getTargetCustomAuthority(address)": {
            "calls": 15420,
            "min": 2611,
            "mean": 2611,
            "median": 2611,
            "max": 2611
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 15420,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 35980,
            "min": 27701,
            "mean": 40252,
            "median": 49613,
            "max": 49661
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 35980,
            "min": 28318,
            "mean": 40869,
            "median": 50225,
            "max": 50273
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 66820,
            "min": 27863,
            "mean": 38075,
            "median": 33143,
            "max": 50243
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 41120,
            "min": 28372,
            "mean": 39476,
            "median": 39441,
            "max": 50510
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 826820,
          "size": 3770
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 46260,
            "min": 2806,
            "mean": 6746,
            "median": 7239,
            "max": 7239
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 15420,
            "min": 2755,
            "mean": 2755,
            "median": 2755,
            "max": 2755
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 15420,
            "min": 2550,
            "mean": 2550,
            "median": 2550,
            "max": 2550
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 20560,
            "min": 28526,
            "mean": 39667,
            "median": 39625,
            "max": 50725
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 25700,
            "min": 29016,
            "mean": 42342,
            "median": 50938,
            "max": 51202
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 20560,
            "min": 28328,
            "mean": 39434,
            "median": 39397,
            "max": 50466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 399869,
          "size": 1668
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 515025,
            "min": 29825,
            "mean": 50610,
            "median": 51180,
            "max": 51443
          },
          "burn(address,uint256)": {
            "calls": 10211,
            "min": 35369,
            "mean": 39247,
            "median": 35936,
            "max": 44685
          },
          "mint(address,uint256)": {
            "calls": 445926,
            "min": 35078,
            "mean": 61140,
            "median": 61374,
            "max": 95853
          },
          "sum()": {
            "calls": 20,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "transfer(address,uint256)": {
            "calls": 8041,
            "min": 32900,
            "mean": 38203,
            "median": 33819,
            "max": 56773
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6076,
            "min": 35914,
            "mean": 36550,
            "median": 36561,
            "max": 36561
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 549769,
          "size": 2567
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 80,
            "min": 392,
            "mean": 534,
            "median": 534,
            "max": 677
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 232936,
          "size": 889
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 472908,
            "min": 33462,
            "mean": 46564,
            "median": 46637,
            "max": 80837
          },
          "fallbackDeposit(uint256)": {
            "calls": 472412,
            "min": 32945,
            "mean": 45915,
            "median": 45995,
            "max": 80195
          },
          "withdraw(uint256)": {
            "calls": 466490,
            "min": 34368,
            "mean": 46577,
            "median": 46829,
            "max": 46937
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111424,
          "size": 414
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 51400,
            "min": 303,
            "mean": 303,
            "median": 303,
            "max": 303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 515025,
            "min": 25154,
            "mean": 45372,
            "median": 45940,
            "max": 46203
          },
          "burn(address,uint256)": {
            "calls": 10211,
            "min": 28082,
            "mean": 30510,
            "median": 28308,
            "max": 34257
          },
          "mint(address,uint256)": {
            "calls": 445926,
            "min": 27970,
            "mean": 50611,
            "median": 51001,
            "max": 68380
          },
          "totalSupply()": {
            "calls": 20,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "transfer(address,uint256)": {
            "calls": 8041,
            "min": 28189,
            "mean": 32799,
            "median": 28412,
            "max": 51366
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6076,
            "min": 30799,
            "mean": 31229,
            "median": 31239,
            "max": 31239
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 221104,
          "size": 749
        },
        "functions": {
          "owner()": {
            "calls": 5140,
            "min": 2294,
            "mean": 2294,
            "median": 2294,
            "max": 2294
          },
          "transferOwnership(address)": {
            "calls": 10280,
            "min": 23191,
            "mean": 28064,
            "median": 28231,
            "max": 28231
          },
          "updateFlag()": {
            "calls": 5160,
            "min": 23414,
            "mean": 23425,
            "median": 23414,
            "max": 26252
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 935400,
          "size": 4921
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25720,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "deposit()": {
            "calls": 483208,
            "min": 29138,
            "mean": 35526,
            "median": 34738,
            "max": 68938
          },
          "receive()": {
            "calls": 477552,
            "min": 28791,
            "mean": 34819,
            "median": 34391,
            "max": 68591
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2289,
            "mean": 2289,
            "median": 2289,
            "max": 2289
          },
          "withdraw(uint256)": {
            "calls": 471650,
            "min": 29345,
            "mean": 41426,
            "median": 41681,
            "max": 41789
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 928554,
          "size": 4296
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 164480,
            "min": 4985,
            "mean": 7965,
            "median": 9357,
            "max": 9357
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 15420,
            "min": 2657,
            "mean": 2657,
            "median": 2657,
            "max": 2657
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2679,
            "mean": 2679,
            "median": 2679,
            "max": 2679
          },
          "getTargetCustomAuthority(address)": {
            "calls": 15420,
            "min": 2602,
            "mean": 2602,
            "median": 2602,
            "max": 2602
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 15420,
            "min": 2562,
            "mean": 2562,
            "median": 2562,
            "max": 2562
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 35980,
            "min": 27824,
            "mean": 40375,
            "median": 49736,
            "max": 49784
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 35980,
            "min": 28505,
            "mean": 41070,
            "median": 50436,
            "max": 50484
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 66820,
            "min": 27937,
            "mean": 38144,
            "median": 33216,
            "max": 50316
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 41120,
            "min": 28484,
            "mean": 39599,
            "median": 39563,
            "max": 50644
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 848184,
          "size": 3916
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 46260,
            "min": 2870,
            "mean": 6817,
            "median": 7311,
            "max": 7311
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 15420,
            "min": 2844,
            "mean": 2844,
            "median": 2844,
            "max": 2844
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2701,
            "mean": 2701,
            "median": 2701,
            "max": 2701
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 15420,
            "min": 2717,
            "mean": 2717,
            "median": 2717,
            "max": 2717
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 20560,
            "min": 28523,
            "mean": 39665,
            "median": 39622,
            "max": 50722
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 25700,
            "min": 29186,
            "mean": 42523,
            "median": 51128,
            "max": 51392
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 20560,
            "min": 28506,
            "mean": 39622,
            "median": 39586,
            "max": 50666
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 345486,
          "size": 1414
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 514095,
            "min": 30884,
            "mean": 51043,
            "median": 51532,
            "max": 51795
          },
          "burn(address,uint256)": {
            "calls": 9459,
            "min": 35423,
            "mean": 38736,
            "median": 35973,
            "max": 44702
          },
          "mint(address,uint256)": {
            "calls": 453900,
            "min": 35369,
            "mean": 61464,
            "median": 61639,
            "max": 96115
          },
          "sum()": {
            "calls": 20,
            "min": 2282,
            "mean": 2282,
            "median": 2282,
            "max": 2282
          },
          "transfer(address,uint256)": {
            "calls": 7444,
            "min": 32744,
            "mean": 37819,
            "median": 33870,
            "max": 56808
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6092,
            "min": 36477,
            "mean": 36997,
            "median": 37005,
            "max": 37005
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 541963,
          "size": 2532
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 80,
            "min": 558,
            "mean": 690,
            "median": 690,
            "max": 822
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 209530,
          "size": 771
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 465570,
            "min": 33423,
            "mean": 46526,
            "median": 46598,
            "max": 80798
          },
          "fallbackDeposit(uint256)": {
            "calls": 466838,
            "min": 33195,
            "mean": 46167,
            "median": 46245,
            "max": 80445
          },
          "withdraw(uint256)": {
            "calls": 460167,
            "min": 34239,
            "mean": 46806,
            "median": 47063,
            "max": 47183
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 111281,
          "size": 406
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 51400,
            "min": 462,
            "mean": 462,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 514095,
            "min": 25665,
            "mean": 45711,
            "median": 46199,
            "max": 46462
          },
          "burn(address,uint256)": {
            "calls": 9459,
            "min": 28154,
            "mean": 30199,
            "median": 28359,
            "max": 34288
          },
          "mint(address,uint256)": {
            "calls": 453900,
            "min": 28188,
            "mean": 50873,
            "median": 51202,
            "max": 68578
          },
          "totalSupply()": {
            "calls": 20,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "transfer(address,uint256)": {
            "calls": 7444,
            "min": 27927,
            "mean": 32434,
            "median": 28483,
            "max": 51421
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6092,
            "min": 31108,
            "mean": 31525,
            "median": 31533,
            "max": 31533
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 235926,
          "size": 831
        },
        "functions": {
          "owner()": {
            "calls": 5140,
            "min": 2333,
            "mean": 2333,
            "median": 2333,
            "max": 2333
          },
          "transferOwnership(address)": {
            "calls": 10280,
            "min": 23376,
            "mean": 28265,
            "median": 28416,
            "max": 28416
          },
          "updateFlag()": {
            "calls": 5160,
            "min": 23402,
            "mean": 23413,
            "median": 23402,
            "max": 26332
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 939688,
          "size": 4638
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25720,
            "min": 2527,
            "mean": 2527,
            "median": 2527,
            "max": 2527
          },
          "deposit()": {
            "calls": 475870,
            "min": 29088,
            "mean": 35488,
            "median": 34688,
            "max": 68888
          },
          "receive()": {
            "calls": 471978,
            "min": 28940,
            "mean": 34974,
            "median": 34540,
            "max": 68740
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2362,
            "mean": 2362,
            "median": 2362,
            "max": 2362
          },
          "withdraw(uint256)": {
            "calls": 465327,
            "min": 29583,
            "mean": 41647,
            "median": 41907,
            "max": 42027
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 708507,
          "size": 3246
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 164480,
            "min": 4705,
            "mean": 7541,
            "median": 9043,
            "max": 9043
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 15420,
            "min": 2459,
            "mean": 2459,
            "median": 2459,
            "max": 2459
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2464,
            "mean": 2464,
            "median": 2464,
            "max": 2464
          },
          "getTargetCustomAuthority(address)": {
            "calls": 15420,
            "min": 2430,
            "mean": 2430,
            "median": 2430,
            "max": 2430
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 15420,
            "min": 2419,
            "mean": 2419,
            "median": 2419,
            "max": 2419
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 35980,
            "min": 27639,
            "mean": 40189,
            "median": 49551,
            "max": 49599
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 35980,
            "min": 28205,
            "mean": 40756,
            "median": 50113,
            "max": 50161
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 66820,
            "min": 27740,
            "mean": 37950,
            "median": 33016,
            "max": 50116
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 41120,
            "min": 28231,
            "mean": 39329,
            "median": 39297,
            "max": 50365
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 650364,
          "size": 2976
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 46260,
            "min": 2560,
            "mean": 6472,
            "median": 6962,
            "max": 6962
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 15420,
            "min": 2558,
            "mean": 2558,
            "median": 2558,
            "max": 2558
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2460,
            "mean": 2460,
            "median": 2460,
            "max": 2460
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 15420,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 20560,
            "min": 28276,
            "mean": 39411,
            "median": 39373,
            "max": 50470
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 25700,
            "min": 28819,
            "mean": 42137,
            "median": 50737,
            "max": 51001
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 20560,
            "min": 28220,
            "mean": 39320,
            "median": 39286,
            "max": 50353
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 294691,
          "size": 1212
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 514195,
            "min": 30308,
            "mean": 50583,
            "median": 51081,
            "max": 51345
          },
          "burn(address,uint256)": {
            "calls": 9421,
            "min": 35007,
            "mean": 38360,
            "median": 35459,
            "max": 44191
          },
          "mint(address,uint256)": {
            "calls": 457747,
            "min": 34932,
            "mean": 60917,
            "median": 61095,
            "max": 95582
          },
          "sum()": {
            "calls": 20,
            "min": 2259,
            "mean": 2259,
            "median": 2259,
            "max": 2259
          },
          "transfer(address,uint256)": {
            "calls": 8121,
            "min": 32902,
            "mean": 38643,
            "median": 33441,
            "max": 56387
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6158,
            "min": 35618,
            "mean": 36360,
            "median": 36370,
            "max": 36370
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 499727,
          "size": 2324
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 80,
            "min": 397,
            "mean": 532,
            "median": 532,
            "max": 668
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 166648,
          "size": 617
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 479702,
            "min": 33436,
            "mean": 46286,
            "median": 46361,
            "max": 80561
          },
          "fallbackDeposit(uint256)": {
            "calls": 478806,
            "min": 32426,
            "mean": 45904,
            "median": 45976,
            "max": 80176
          },
          "withdraw(uint256)": {
            "calls": 474492,
            "min": 33480,
            "mean": 46443,
            "median": 46691,
            "max": 46799
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 105817,
          "size": 399
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 51400,
            "min": 226,
            "mean": 226,
            "median": 226,
            "max": 226
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 797778,
          "size": 5144
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 514195,
            "min": 25337,
            "mean": 45448,
            "median": 45945,
            "max": 46209
          },
          "burn(address,uint256)": {
            "calls": 9421,
            "min": 27868,
            "mean": 30024,
            "median": 28092,
            "max": 34024
          },
          "mint(address,uint256)": {
            "calls": 457747,
            "min": 27890,
            "mean": 50582,
            "median": 50913,
            "max": 68300
          },
          "totalSupply()": {
            "calls": 20,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "transfer(address,uint256)": {
            "calls": 8121,
            "min": 27878,
            "mean": 33392,
            "median": 28189,
            "max": 51135
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6158,
            "min": 30662,
            "mean": 31098,
            "median": 31107,
            "max": 31107
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 191417,
          "size": 637
        },
        "functions": {
          "owner()": {
            "calls": 5140,
            "min": 2265,
            "mean": 2265,
            "median": 2265,
            "max": 2265
          },
          "transferOwnership(address)": {
            "calls": 10280,
            "min": 23180,
            "mean": 28097,
            "median": 28220,
            "max": 28220
          },
          "updateFlag()": {
            "calls": 5160,
            "min": 23440,
            "mean": 23451,
            "median": 23440,
            "max": 26281
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 816355,
          "size": 4166
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25720,
            "min": 2386,
            "mean": 2386,
            "median": 2386,
            "max": 2386
          },
          "deposit()": {
            "calls": 490002,
            "min": 28995,
            "mean": 35369,
            "median": 34595,
            "max": 68795
          },
          "receive()": {
            "calls": 483946,
            "min": 28788,
            "mean": 34819,
            "median": 34388,
            "max": 68588
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2320,
            "mean": 2320,
            "median": 2320,
            "max": 2320
          },
          "withdraw(uint256)": {
            "calls": 479652,
            "min": 29309,
            "mean": 41395,
            "median": 41645,
            "max": 41753
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority",
        "deployment": {
          "gas": 649051,
          "size": 2960
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 164480,
            "min": 4731,
            "mean": 7567,
            "median": 9078,
            "max": 9078
          },
          "doesRoleHaveCapability(uint8,bytes4)": {
            "calls": 15420,
            "min": 2469,
            "mean": 2469,
            "median": 2469,
            "max": 2469
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2498,
            "mean": 2498,
            "median": 2498,
            "max": 2498
          },
          "getTargetCustomAuthority(address)": {
            "calls": 15420,
            "min": 2461,
            "mean": 2461,
            "median": 2461,
            "max": 2461
          },
          "isCapabilityPublic(bytes4)": {
            "calls": 15420,
            "min": 2449,
            "mean": 2449,
            "median": 2449,
            "max": 2449
          },
          "setPublicCapability(bytes4,bool)": {
            "calls": 35980,
            "min": 27648,
            "mean": 40198,
            "median": 49560,
            "max": 49608
          },
          "setRoleCapability(uint8,bytes4,bool)": {
            "calls": 35980,
            "min": 28239,
            "mean": 40804,
            "median": 50170,
            "max": 50218
          },
          "setTargetCustomAuthority(address,address)": {
            "calls": 66820,
            "min": 27738,
            "mean": 37950,
            "median": 33017,
            "max": 50117
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 41120,
            "min": 28254,
            "mean": 39368,
            "median": 39332,
            "max": 50412
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/auth/authorities/RolesAuthority.sol:RolesAuthority",
        "deployment": {
          "gas": 589396,
          "size": 2683
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 46260,
            "min": 2582,
            "mean": 6493,
            "median": 6982,
            "max": 6982
          },
          "doesRoleHaveCapability(uint8,address,bytes4)": {
            "calls": 15420,
            "min": 2592,
            "mean": 2592,
            "median": 2592,
            "max": 2592
          },
          "doesUserHaveRole(address,uint8)": {
            "calls": 15420,
            "min": 2483,
            "mean": 2483,
            "median": 2483,
            "max": 2483
          },
          "isCapabilityPublic(address,bytes4)": {
            "calls": 15420,
            "min": 2533,
            "mean": 2533,
            "median": 2533,
            "max": 2533
          },
          "setPublicCapability(address,bytes4,bool)": {
            "calls": 20560,
            "min": 28288,
            "mean": 39426,
            "median": 39386,
            "max": 50483
          },
          "setRoleCapability(uint8,address,bytes4,bool)": {
            "calls": 25700,
            "min": 28846,
            "mean": 42183,
            "median": 50786,
            "max": 51050
          },
          "setUserRole(address,uint8,bool)": {
            "calls": 20560,
            "min": 28239,
            "mean": 39353,
            "median": 39316,
            "max": 50395
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/ERC20.t.sol:BalanceSum",
        "deployment": {
          "gas": 257439,
          "size": 992
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 513472,
            "min": 30276,
            "mean": 50568,
            "median": 51076,
            "max": 51339
          },
          "burn(address,uint256)": {
            "calls": 9656,
            "min": 35130,
            "mean": 38516,
            "median": 35467,
            "max": 44211
          },
          "mint(address,uint256)": {
            "calls": 453511,
            "min": 34949,
            "mean": 60920,
            "median": 61118,
            "max": 95598
          },
          "sum()": {
            "calls": 20,
            "min": 2236,
            "mean": 2236,
            "median": 2236,
            "max": 2236
          },
          "transfer(address,uint256)": {
            "calls": 8096,
            "min": 32805,
            "mean": 38256,
            "median": 33346,
            "max": 56279
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6043,
            "min": 35353,
            "mean": 36288,
            "median": 36300,
            "max": 36300
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/MerkleProofLib.t.sol:MerkleProofLibTest",
        "deployment": {
          "gas": 432039,
          "size": 1983
        },
        "functions": {
          "verify(bytes32[],bytes32,bytes32)": {
            "calls": 80,
            "min": 425,
            "mean": 555,
            "median": 555,
            "max": 686
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/WETH.t.sol:WETHTester",
        "deployment": {
          "gas": 162178,
          "size": 544
        },
        "functions": {
          "deposit(uint256)": {
            "calls": 472273,
            "min": 32949,
            "mean": 46304,
            "median": 46374,
            "max": 80574
          },
          "fallbackDeposit(uint256)": {
            "calls": 473630,
            "min": 32969,
            "mean": 45941,
            "median": 46019,
            "max": 80219
          },
          "withdraw(uint256)": {
            "calls": 467518,
            "min": 33764,
            "mean": 46467,
            "median": 46737,
            "max": 46833
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockAuthority.sol:MockAuthority",
        "deployment": {
          "gas": 102089,
          "size": 334
        },
        "functions": {
          "canCall(address,address,bytes4)": {
            "calls": 51400,
            "min": 229,
            "mean": 229,
            "median": 229,
            "max": 229
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 705767,
          "size": 4577
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 513472,
            "min": 25572,
            "mean": 45509,
            "median": 46017,
            "max": 46279
          },
          "burn(address,uint256)": {
            "calls": 9656,
            "min": 27890,
            "mean": 30144,
            "median": 28113,
            "max": 34057
          },
          "mint(address,uint256)": {
            "calls": 453511,
            "min": 27922,
            "mean": 50598,
            "median": 50949,
            "max": 68329
          },
          "totalSupply()": {
            "calls": 20,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "transfer(address,uint256)": {
            "calls": 8096,
            "min": 27846,
            "mean": 33158,
            "median": 28247,
            "max": 51180
          },
          "transferFrom(address,address,uint256)": {
            "calls": 6043,
            "min": 30749,
            "mean": 31168,
            "median": 31178,
            "max": 31178
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/utils/mocks/MockOwned.sol:MockOwned",
        "deployment": {
          "gas": 180024,
          "size": 603
        },
        "functions": {
          "owner()": {
            "calls": 5140,
            "min": 2242,
            "mean": 2242,
            "median": 2242,
            "max": 2242
          },
          "transferOwnership(address)": {
            "calls": 10280,
            "min": 23155,
            "mean": 28066,
            "median": 28195,
            "max": 28195
          },
          "updateFlag()": {
            "calls": 5160,
            "min": 23373,
            "mean": 23384,
            "median": 23373,
            "max": 26230
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/tokens/WETH.sol:WETH",
        "deployment": {
          "gas": 754197,
          "size": 3811
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 25720,
            "min": 2409,
            "mean": 2409,
            "median": 2409,
            "max": 2409
          },
          "deposit()": {
            "calls": 482573,
            "min": 29021,
            "mean": 35414,
            "median": 34621,
            "max": 68821
          },
          "receive()": {
            "calls": 478770,
            "min": 28840,
            "mean": 34872,
            "median": 34440,
            "max": 68640
          },
          "totalSupply()": {
            "calls": 25740,
            "min": 2321,
            "mean": 2321,
            "median": 2321,
            "max": 2321
          },
          "withdraw(uint256)": {
            "calls": 472678,
            "min": 29376,
            "mean": 41452,
            "median": 41724,
            "max": 41820
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "tokenlon": {
    "solc": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 643922,
          "size": 3071
        },
        "functions": {
          "pause()": {
            "calls": 80,
            "min": 23485,
            "mean": 26545,
            "median": 27565,
            "max": 27565
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 160,
            "min": 24715,
            "mean": 50069,
            "median": 48497,
            "max": 89862
          },
          "unpause()": {
            "calls": 40,
            "min": 23375,
            "mean": 25350,
            "median": 25350,
            "max": 27326
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9759810,
          "size": 47833
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 800,
            "min": 307229,
            "mean": 307305,
            "median": 307305,
            "max": 307381
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 705609,
          "size": 3116
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 40,
            "min": 25706,
            "mean": 79373,
            "median": 79373,
            "max": 133041
          },
          "rescueTokens(address[],address)": {
            "calls": 40,
            "min": 25012,
            "mean": 54660,
            "median": 54660,
            "max": 84308
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 378556,
          "size": 1804
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 40,
            "min": 337,
            "mean": 705,
            "median": 705,
            "max": 1074
          },
          "calculateDomainSeparator()": {
            "calls": 60,
            "min": 1006,
            "mean": 1006,
            "median": 1006,
            "max": 1006
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 20,
            "min": 315,
            "mean": 315,
            "median": 315,
            "max": 315
          },
          "originalChainId()": {
            "calls": 20,
            "min": 139,
            "mean": 139,
            "median": 139,
            "max": 139
          },
          "originalEIP712DomainSeparator()": {
            "calls": 20,
            "min": 198,
            "mean": 198,
            "median": 198,
            "max": 198
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 288249,
          "size": 1168
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 40,
            "min": 23398,
            "mean": 25713,
            "median": 25713,
            "max": 28029
          },
          "nominateNewOwner(address)": {
            "calls": 100,
            "min": 23728,
            "mean": 42317,
            "median": 46965,
            "max": 46965
          },
          "nominatedOwner()": {
            "calls": 60,
            "min": 2273,
            "mean": 2273,
            "median": 2273,
            "max": 2273
          },
          "owner()": {
            "calls": 60,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "renounceOwnership()": {
            "calls": 60,
            "min": 23375,
            "mean": 24659,
            "median": 25105,
            "max": 25497
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 349547,
          "size": 1409
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 60,
            "min": 510,
            "mean": 2275,
            "median": 517,
            "max": 5799
          },
          "exposedIsETH(address)": {
            "calls": 40,
            "min": 306,
            "mean": 309,
            "median": 309,
            "max": 313
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 120,
            "min": 22170,
            "mean": 34261,
            "median": 27062,
            "max": 56716
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 230000,
          "size": 852
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 3934,
            "mean": 3934,
            "median": 3934,
            "max": 3934
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3192362,
          "size": 15492
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 641,
            "mean": 641,
            "median": 641,
            "max": 641
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 20,
            "min": 9918,
            "mean": 9918,
            "median": 9918,
            "max": 9918
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 787264,
          "size": 3420
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46269,
            "mean": 46269,
            "median": 46269,
            "max": 46269
          },
          "balanceOf(address)": {
            "calls": 1080,
            "min": 480,
            "mean": 998,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 200,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 669646,
          "size": 2934
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 100,
            "min": 2889,
            "mean": 4928,
            "median": 6223,
            "max": 6250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 759220,
          "size": 4056
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 160,
            "min": 2727,
            "mean": 2727,
            "median": 2727,
            "max": 2727
          },
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46242,
            "mean": 46242,
            "median": 46242,
            "max": 46242
          },
          "balanceOf(address)": {
            "calls": 1440,
            "min": 510,
            "mean": 1398,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 200,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "mint(address,uint256)": {
            "calls": 200,
            "min": 68010,
            "mean": 68012,
            "median": 68010,
            "max": 68022
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 771016,
          "size": 3346
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46251,
            "mean": 46251,
            "median": 46251,
            "max": 46251
          },
          "balanceOf(address)": {
            "calls": 1100,
            "min": 480,
            "mean": 1025,
            "median": 480,
            "max": 2480
          },
          "decimals()": {
            "calls": 200,
            "min": 2339,
            "mean": 2339,
            "median": 2339,
            "max": 2339
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 289,
            "mean": 689,
            "median": 289,
            "max": 2289
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 764300,
          "size": 3747
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46277,
            "mean": 46277,
            "median": 46277,
            "max": 46277
          },
          "balanceOf(address)": {
            "calls": 1020,
            "min": 510,
            "mean": 941,
            "median": 510,
            "max": 2510
          },
          "decimals()": {
            "calls": 200,
            "min": 2347,
            "mean": 2347,
            "median": 2347,
            "max": 2347
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 297,
            "mean": 697,
            "median": 297,
            "max": 2297
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 703448,
          "size": 3444
        },
        "functions": {
          "pause()": {
            "calls": 80,
            "min": 23402,
            "mean": 26580,
            "median": 27640,
            "max": 27640
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 160,
            "min": 24987,
            "mean": 50857,
            "median": 49334,
            "max": 91027
          },
          "unpause()": {
            "calls": 40,
            "min": 23403,
            "mean": 25510,
            "median": 25510,
            "max": 27618
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 8984811,
          "size": 42642
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 800,
            "min": 316492,
            "mean": 316564,
            "median": 316564,
            "max": 316636
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 844372,
          "size": 3776
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 40,
            "min": 25917,
            "mean": 80692,
            "median": 80692,
            "max": 135467
          },
          "rescueTokens(address[],address)": {
            "calls": 40,
            "min": 25160,
            "mean": 55469,
            "median": 55469,
            "max": 85779
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 331107,
          "size": 1561
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 40,
            "min": 298,
            "mean": 467,
            "median": 467,
            "max": 636
          },
          "calculateDomainSeparator()": {
            "calls": 60,
            "min": 539,
            "mean": 539,
            "median": 539,
            "max": 539
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 20,
            "min": 490,
            "mean": 490,
            "median": 490,
            "max": 490
          },
          "originalChainId()": {
            "calls": 20,
            "min": 184,
            "mean": 184,
            "median": 184,
            "max": 184
          },
          "originalEIP712DomainSeparator()": {
            "calls": 20,
            "min": 228,
            "mean": 228,
            "median": 228,
            "max": 228
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 302284,
          "size": 1251
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 40,
            "min": 23392,
            "mean": 25871,
            "median": 25871,
            "max": 28351
          },
          "nominateNewOwner(address)": {
            "calls": 100,
            "min": 23848,
            "mean": 42444,
            "median": 47093,
            "max": 47093
          },
          "nominatedOwner()": {
            "calls": 60,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "owner()": {
            "calls": 60,
            "min": 2343,
            "mean": 2343,
            "median": 2343,
            "max": 2343
          },
          "renounceOwnership()": {
            "calls": 60,
            "min": 23369,
            "mean": 24725,
            "median": 25312,
            "max": 25495
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 420284,
          "size": 1737
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 60,
            "min": 715,
            "mean": 2485,
            "median": 720,
            "max": 6022
          },
          "exposedIsETH(address)": {
            "calls": 40,
            "min": 417,
            "mean": 419,
            "median": 419,
            "max": 422
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 120,
            "min": 22347,
            "mean": 34533,
            "median": 27257,
            "max": 56933
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 281629,
          "size": 1093
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 4375,
            "mean": 4375,
            "median": 4375,
            "max": 4375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 3229415,
          "size": 15682
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 214,
            "mean": 214,
            "median": 214,
            "max": 214
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 20,
            "min": 8156,
            "mean": 8156,
            "median": 8156,
            "max": 8156
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 735333,
          "size": 3316
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46511,
            "mean": 46511,
            "median": 46511,
            "max": 46511
          },
          "balanceOf(address)": {
            "calls": 1080,
            "min": 558,
            "mean": 1076,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 200,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 772690,
          "size": 3408
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 100,
            "min": 921,
            "mean": 3891,
            "median": 4361,
            "max": 6522
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 689248,
          "size": 3528
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 160,
            "min": 2752,
            "mean": 2752,
            "median": 2752,
            "max": 2752
          },
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46629,
            "mean": 46629,
            "median": 46629,
            "max": 46629
          },
          "balanceOf(address)": {
            "calls": 1440,
            "min": 558,
            "mean": 1446,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 200,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "mint(address,uint256)": {
            "calls": 200,
            "min": 68294,
            "mean": 68296,
            "median": 68294,
            "max": 68306
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 677862,
          "size": 3037
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46441,
            "mean": 46441,
            "median": 46441,
            "max": 46441
          },
          "balanceOf(address)": {
            "calls": 1100,
            "min": 558,
            "mean": 1103,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 200,
            "min": 2335,
            "mean": 2335,
            "median": 2335,
            "max": 2335
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 339,
            "mean": 739,
            "median": 339,
            "max": 2339
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 683410,
          "size": 3085
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46630,
            "mean": 46630,
            "median": 46630,
            "max": 46630
          },
          "balanceOf(address)": {
            "calls": 1020,
            "min": 558,
            "mean": 989,
            "median": 558,
            "max": 2558
          },
          "decimals()": {
            "calls": 200,
            "min": 2355,
            "mean": 2355,
            "median": 2355,
            "max": 2355
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 303,
            "mean": 703,
            "median": 303,
            "max": 2303
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 497928,
          "size": 2504
        },
        "functions": {
          "pause()": {
            "calls": 80,
            "min": 23402,
            "mean": 26473,
            "median": 27497,
            "max": 27497
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 160,
            "min": 24696,
            "mean": 49769,
            "median": 48216,
            "max": 89183
          },
          "unpause()": {
            "calls": 40,
            "min": 23393,
            "mean": 25368,
            "median": 25368,
            "max": 27344
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 9082758,
          "size": 45161
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 800,
            "min": 286867,
            "mean": 286879,
            "median": 286879,
            "max": 286891
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 728919,
          "size": 3243
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 40,
            "min": 25649,
            "mean": 78483,
            "median": 78483,
            "max": 131317
          },
          "rescueTokens(address[],address)": {
            "calls": 40,
            "min": 24928,
            "mean": 53636,
            "median": 53636,
            "max": 82345
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 319384,
          "size": 1494
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 40,
            "min": 255,
            "mean": 483,
            "median": 483,
            "max": 712
          },
          "calculateDomainSeparator()": {
            "calls": 60,
            "min": 812,
            "mean": 812,
            "median": 812,
            "max": 812
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 20,
            "min": 374,
            "mean": 374,
            "median": 374,
            "max": 374
          },
          "originalChainId()": {
            "calls": 20,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "originalEIP712DomainSeparator()": {
            "calls": 20,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 246733,
          "size": 1012
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 40,
            "min": 23395,
            "mean": 25709,
            "median": 25709,
            "max": 28024
          },
          "nominateNewOwner(address)": {
            "calls": 100,
            "min": 23742,
            "mean": 42347,
            "median": 46999,
            "max": 46999
          },
          "nominatedOwner()": {
            "calls": 60,
            "min": 2281,
            "mean": 2281,
            "median": 2281,
            "max": 2281
          },
          "owner()": {
            "calls": 60,
            "min": 2315,
            "mean": 2315,
            "median": 2315,
            "max": 2315
          },
          "renounceOwnership()": {
            "calls": 60,
            "min": 23365,
            "mean": 24648,
            "median": 25089,
            "max": 25490
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 269667,
          "size": 1033
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 60,
            "min": 375,
            "mean": 2068,
            "median": 393,
            "max": 5437
          },
          "exposedIsETH(address)": {
            "calls": 40,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 120,
            "min": 22110,
            "mean": 34114,
            "median": 26986,
            "max": 56641
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 161765,
          "size": 534
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 3712,
            "mean": 3712,
            "median": 3712,
            "max": 3712
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 2961079,
          "size": 14341
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 186,
            "mean": 186,
            "median": 186,
            "max": 186
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 20,
            "min": 9351,
            "mean": 9351,
            "median": 9351,
            "max": 9351
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 619905,
          "size": 2704
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46272,
            "mean": 46272,
            "median": 46272,
            "max": 46272
          },
          "balanceOf(address)": {
            "calls": 1080,
            "min": 400,
            "mean": 918,
            "median": 400,
            "max": 2400
          },
          "decimals()": {
            "calls": 200,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 671339,
          "size": 2955
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 100,
            "min": 2581,
            "mean": 4570,
            "median": 5864,
            "max": 5905
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 598296,
          "size": 3761
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 160,
            "min": 2525,
            "mean": 2525,
            "median": 2525,
            "max": 2525
          },
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46242,
            "mean": 46242,
            "median": 46242,
            "max": 46242
          },
          "balanceOf(address)": {
            "calls": 1440,
            "min": 406,
            "mean": 1294,
            "median": 406,
            "max": 2406
          },
          "decimals()": {
            "calls": 200,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "mint(address,uint256)": {
            "calls": 200,
            "min": 67913,
            "mean": 67915,
            "median": 67913,
            "max": 67925
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 597596,
          "size": 2601
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46259,
            "mean": 46259,
            "median": 46259,
            "max": 46259
          },
          "balanceOf(address)": {
            "calls": 1100,
            "min": 400,
            "mean": 945,
            "median": 400,
            "max": 2400
          },
          "decimals()": {
            "calls": 200,
            "min": 2299,
            "mean": 2299,
            "median": 2299,
            "max": 2299
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 602853,
          "size": 2700
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46282,
            "mean": 46282,
            "median": 46282,
            "max": 46282
          },
          "balanceOf(address)": {
            "calls": 1020,
            "min": 406,
            "mean": 837,
            "median": 406,
            "max": 2406
          },
          "decimals()": {
            "calls": 200,
            "min": 2337,
            "mean": 2337,
            "median": 2337,
            "max": 2337
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 283,
            "mean": 683,
            "median": 283,
            "max": 2283
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "contracts/AllowanceTarget.sol:AllowanceTarget",
        "deployment": {
          "gas": 471242,
          "size": 2313
        },
        "functions": {
          "pause()": {
            "calls": 80,
            "min": 23370,
            "mean": 26515,
            "median": 27564,
            "max": 27564
          },
          "spendFromUserTo(address,address,address,uint256)": {
            "calls": 160,
            "min": 24732,
            "mean": 49843,
            "median": 48285,
            "max": 89236
          },
          "unpause()": {
            "calls": 40,
            "min": 23383,
            "mean": 25354,
            "median": 25354,
            "max": 27325
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/AllowanceTarget.t.sol:AllowanceTargetTest",
        "deployment": {
          "gas": 7154646,
          "size": 34490
        },
        "functions": {
          "externalDeal(address,address,uint256,bool)": {
            "calls": 800,
            "min": 273325,
            "mean": 273335,
            "median": 273335,
            "max": 273345
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/abstracts/AdminManagement.t.sol:ContractWithAdmin",
        "deployment": {
          "gas": 607337,
          "size": 2653
        },
        "functions": {
          "approveTokens(address[],address[])": {
            "calls": 40,
            "min": 25688,
            "mean": 78680,
            "median": 78680,
            "max": 131672
          },
          "rescueTokens(address[],address)": {
            "calls": 40,
            "min": 24971,
            "mean": 53811,
            "median": 53811,
            "max": 82651
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/abstracts/EIP712.t.sol:EIP712Harness",
        "deployment": {
          "gas": 256001,
          "size": 1130
        },
        "functions": {
          "EIP712_DOMAIN_SEPARATOR()": {
            "calls": 40,
            "min": 260,
            "mean": 458,
            "median": 458,
            "max": 656
          },
          "calculateDomainSeparator()": {
            "calls": 60,
            "min": 470,
            "mean": 470,
            "median": 470,
            "max": 470
          },
          "exposedGetEIP712Hash(bytes32)": {
            "calls": 20,
            "min": 416,
            "mean": 416,
            "median": 416,
            "max": 416
          },
          "originalChainId()": {
            "calls": 20,
            "min": 173,
            "mean": 173,
            "median": 173,
            "max": 173
          },
          "originalEIP712DomainSeparator()": {
            "calls": 20,
            "min": 185,
            "mean": 185,
            "median": 185,
            "max": 185
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/abstracts/Ownable.t.sol:OwnableTestContract",
        "deployment": {
          "gas": 239223,
          "size": 948
        },
        "functions": {
          "acceptOwnership()": {
            "calls": 40,
            "min": 23373,
            "mean": 25790,
            "median": 25790,
            "max": 28208
          },
          "nominateNewOwner(address)": {
            "calls": 100,
            "min": 23756,
            "mean": 42340,
            "median": 46987,
            "max": 46987
          },
          "nominatedOwner()": {
            "calls": 60,
            "min": 2258,
            "mean": 2258,
            "median": 2258,
            "max": 2258
          },
          "owner()": {
            "calls": 60,
            "min": 2291,
            "mean": 2291,
            "median": 2291,
            "max": 2291
          },
          "renounceOwnership()": {
            "calls": 60,
            "min": 23342,
            "mean": 24661,
            "median": 25165,
            "max": 25476
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/libraries/Asset.t.sol:AssetHarness",
        "deployment": {
          "gas": 267948,
          "size": 1022
        },
        "functions": {
          "exposedGetBalance(address,address)": {
            "calls": 60,
            "min": 401,
            "mean": 2092,
            "median": 408,
            "max": 5469
          },
          "exposedIsETH(address)": {
            "calls": 40,
            "min": 211,
            "mean": 211,
            "median": 211,
            "max": 211
          },
          "exposedTransferTo(address,address,uint256)": {
            "calls": 120,
            "min": 22111,
            "mean": 34119,
            "median": 26971,
            "max": 56592
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:NonStandard1271Wallet",
        "deployment": {
          "gas": 161699,
          "size": 531
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 3760,
            "mean": 3760,
            "median": 3760,
            "max": 3760
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/libraries/SignatureValidator.t.sol:SignatureValidatorTest",
        "deployment": {
          "gas": 2588612,
          "size": 12478
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 20,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "validateSignatureWrap(address,bytes32,bytes)": {
            "calls": 20,
            "min": 7303,
            "mean": 7303,
            "median": 7303,
            "max": 7303
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/mocks/MockDeflationaryERC20.sol:MockDeflationaryERC20",
        "deployment": {
          "gas": 560551,
          "size": 2493
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46347,
            "mean": 46347,
            "median": 46347,
            "max": 46347
          },
          "balanceOf(address)": {
            "calls": 1080,
            "min": 422,
            "mean": 940,
            "median": 422,
            "max": 2422
          },
          "decimals()": {
            "calls": 200,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/mocks/MockERC1271Wallet.sol:MockERC1271Wallet",
        "deployment": {
          "gas": 622860,
          "size": 2684
        },
        "functions": {
          "isValidSignature(bytes32,bytes)": {
            "calls": 100,
            "min": 466,
            "mean": 3316,
            "median": 3783,
            "max": 5919
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 568453,
          "size": 3568
        },
        "functions": {
          "allowance(address,address)": {
            "calls": 160,
            "min": 2600,
            "mean": 2600,
            "median": 2600,
            "max": 2600
          },
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46394,
            "mean": 46394,
            "median": 46394,
            "max": 46394
          },
          "balanceOf(address)": {
            "calls": 1440,
            "min": 427,
            "mean": 1315,
            "median": 427,
            "max": 2427
          },
          "decimals()": {
            "calls": 200,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "mint(address,uint256)": {
            "calls": 200,
            "min": 68030,
            "mean": 68032,
            "median": 68030,
            "max": 68042
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/mocks/MockNoReturnERC20.sol:MockNoReturnERC20",
        "deployment": {
          "gas": 534496,
          "size": 2374
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46307,
            "mean": 46307,
            "median": 46307,
            "max": 46307
          },
          "balanceOf(address)": {
            "calls": 1100,
            "min": 422,
            "mean": 967,
            "median": 422,
            "max": 2422
          },
          "decimals()": {
            "calls": 200,
            "min": 2283,
            "mean": 2283,
            "median": 2283,
            "max": 2283
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/mocks/MockNoRevertERC20.sol:MockNoRevertERC20",
        "deployment": {
          "gas": 569826,
          "size": 2541
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 200,
            "min": 46359,
            "mean": 46359,
            "median": 46359,
            "max": 46359
          },
          "balanceOf(address)": {
            "calls": 1020,
            "min": 427,
            "mean": 858,
            "median": 427,
            "max": 2427
          },
          "decimals()": {
            "calls": 200,
            "min": 2329,
            "mean": 2329,
            "median": 2329,
            "max": 2329
          },
          "totalSupply()": {
            "calls": 1000,
            "min": 275,
            "mean": 675,
            "median": 275,
            "max": 2275
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "uniswap-v4": {
    "solc": [
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 908200,
          "size": 5125
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 97140,
            "min": 26303,
            "mean": 45119,
            "median": 46203,
            "max": 46203
          },
          "balanceOf(address)": {
            "calls": 2603040,
            "min": 525,
            "mean": 1697,
            "median": 2525,
            "max": 2525
          },
          "mint(address,uint256)": {
            "calls": 16280,
            "min": 33868,
            "mean": 62323,
            "median": 68008,
            "max": 68080
          },
          "transfer(address,uint256)": {
            "calls": 20780,
            "min": 46324,
            "mean": 51093,
            "median": 51076,
            "max": 51304
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5243607,
          "size": 24226
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 280,
            "min": 2438,
            "mean": 2438,
            "median": 2438,
            "max": 2438
          },
          "burn(address,uint256,uint256)": {
            "calls": 20,
            "min": 22964,
            "mean": 22964,
            "median": 22964,
            "max": 22964
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 100,
            "min": 57728,
            "mean": 58442,
            "median": 57870,
            "max": 59513
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 40,
            "min": 1040,
            "mean": 12403,
            "median": 12403,
            "max": 23766
          },
          "extsload(bytes32)": {
            "calls": 93840,
            "min": 375,
            "mean": 2370,
            "median": 2375,
            "max": 2375
          },
          "extsload(bytes32,uint256)": {
            "calls": 533880,
            "min": 949,
            "mean": 4092,
            "median": 6949,
            "max": 6949
          },
          "exttload(bytes32)": {
            "calls": 810040,
            "min": 859,
            "mean": 859,
            "median": 859,
            "max": 859
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 111260,
            "min": 23229,
            "mean": 52232,
            "median": 51532,
            "max": 152701
          },
          "mint(address,uint256,uint256)": {
            "calls": 20,
            "min": 22395,
            "mean": 22395,
            "median": 22395,
            "max": 22395
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 80,
            "min": 1470,
            "mean": 13258,
            "median": 13183,
            "max": 25196
          },
          "protocolFeesAccrued(address)": {
            "calls": 36160,
            "min": 2866,
            "mean": 2866,
            "median": 2866,
            "max": 2866
          },
          "setOperator(address,bool)": {
            "calls": 60,
            "min": 46183,
            "mean": 46183,
            "median": 46183,
            "max": 46183
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 10400,
            "min": 29642,
            "mean": 32347,
            "median": 32262,
            "max": 32478
          },
          "setProtocolFeeController(address)": {
            "calls": 5000,
            "min": 30106,
            "mean": 47137,
            "median": 47206,
            "max": 47206
          },
          "settle()": {
            "calls": 20,
            "min": 21396,
            "mean": 21396,
            "median": 21396,
            "max": 21396
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 40,
            "min": 1771,
            "mean": 13462,
            "median": 13462,
            "max": 25153
          },
          "take(address,address,uint256)": {
            "calls": 20,
            "min": 22397,
            "mean": 22397,
            "median": 22397,
            "max": 22397
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 20,
            "min": 23556,
            "mean": 23556,
            "median": 23556,
            "max": 23556
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2281095,
          "size": 10347
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 20820,
            "min": 46893,
            "mean": 85751,
            "median": 89905,
            "max": 107490
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 397868,
          "size": 1634
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 25600,
            "min": 3034,
            "mean": 5266,
            "median": 5825,
            "max": 5825
          },
          "balanceOfSelf(address)": {
            "calls": 20480,
            "min": 312,
            "mean": 4344,
            "median": 5688,
            "max": 5688
          },
          "fromId(uint256)": {
            "calls": 15380,
            "min": 248,
            "mean": 248,
            "median": 248,
            "max": 248
          },
          "isAddressZero(address)": {
            "calls": 5160,
            "min": 243,
            "mean": 243,
            "median": 243,
            "max": 243
          },
          "toId(address)": {
            "calls": 15380,
            "min": 210,
            "mean": 210,
            "median": 210,
            "max": 210
          },
          "transfer(address,address,uint256)": {
            "calls": 30740,
            "min": 24682,
            "mean": 52991,
            "median": 54724,
            "max": 56969
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 93643,
          "size": 210
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 10320,
            "min": 241,
            "mean": 247,
            "median": 250,
            "max": 250
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 592222,
          "size": 2524
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 18040,
            "min": 2728,
            "mean": 2728,
            "median": 2728,
            "max": 2728
          },
          "approve(address,uint256,uint256)": {
            "calls": 20540,
            "min": 26711,
            "mean": 46699,
            "median": 46875,
            "max": 47271
          },
          "balanceOf(address,uint256)": {
            "calls": 54020,
            "min": 2435,
            "mean": 2435,
            "median": 2435,
            "max": 2435
          },
          "burn(uint256,uint256)": {
            "calls": 5140,
            "min": 24577,
            "mean": 24854,
            "median": 24817,
            "max": 29389
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 5140,
            "min": 26472,
            "mean": 32304,
            "median": 32277,
            "max": 38201
          },
          "isOperator(address,address)": {
            "calls": 5140,
            "min": 2719,
            "mean": 2719,
            "median": 2719,
            "max": 2719
          },
          "mint(address,uint256,uint256)": {
            "calls": 61720,
            "min": 24144,
            "mean": 46918,
            "median": 47023,
            "max": 47551
          },
          "setOperator(address,bool)": {
            "calls": 10280,
            "min": 25863,
            "mean": 40888,
            "median": 46003,
            "max": 46003
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20500,
            "min": 24066,
            "mean": 38266,
            "median": 30224,
            "max": 52680
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 36040,
            "min": 24498,
            "mean": 42965,
            "median": 47757,
            "max": 61067
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1585503,
          "size": 6940
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10240,
            "min": 524,
            "mean": 1774,
            "median": 1774,
            "max": 3024
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 176115,
          "size": 611
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 40,
            "min": 235,
            "mean": 237,
            "median": 237,
            "max": 240
          },
          "canBeDelegateCalled()": {
            "calls": 20,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          },
          "cannotBeDelegateCalled()": {
            "calls": 20,
            "min": 218,
            "mean": 218,
            "median": 218,
            "max": 218
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 20,
            "min": 196,
            "mean": 196,
            "median": 196,
            "max": 196
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 20,
            "min": 280,
            "mean": 280,
            "median": 280,
            "max": 280
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 695526,
          "size": 3164
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 40,
            "min": 78692,
            "mean": 78692,
            "median": 78692,
            "max": 78692
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 1057526,
          "size": 4854
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 20780,
            "min": 39186,
            "mean": 121827,
            "median": 145546,
            "max": 253009
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 233735,
          "size": 892
        },
        "functions": {
          "unlock()": {
            "calls": 20,
            "min": 29661,
            "mean": 29661,
            "median": 29661,
            "max": 29661
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1356010,
          "size": 6233
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 248740,
            "min": 44907,
            "mean": 187926,
            "median": 183809,
            "max": 389021
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 40,
            "min": 134491,
            "mean": 149714,
            "median": 149714,
            "max": 164938
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1075778,
          "size": 4917
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 140,
            "min": 85099,
            "mean": 131702,
            "median": 161276,
            "max": 161276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 13370
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 3440,
            "min": 69616,
            "mean": 76682,
            "median": 69616,
            "max": 89540
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 4556241,
          "size": 19956
        },
        "functions": {
          "executor()": {
            "calls": 13600,
            "min": 2531,
            "mean": 2531,
            "median": 2531,
            "max": 2531
          },
          "unlock(bytes)": {
            "calls": 140,
            "min": 40912,
            "mean": 139633,
            "median": 179030,
            "max": 236884
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1544945,
          "size": 7133
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 47540,
            "min": 42871,
            "mean": 387992,
            "median": 145378,
            "max": 17412146
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 851773,
          "size": 3910
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 100,
            "min": 41314,
            "mean": 63485,
            "median": 59159,
            "max": 88197
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 689214,
          "size": 2935
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5160,
            "min": 24133,
            "mean": 43933,
            "median": 27161,
            "max": 62338
          },
          "protocolFeeController()": {
            "calls": 80,
            "min": 2427,
            "mean": 2427,
            "median": 2427,
            "max": 2427
          },
          "protocolFeesAccrued(address)": {
            "calls": 18040,
            "min": 2503,
            "mean": 2503,
            "median": 2503,
            "max": 2503
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 5140,
            "min": 44895,
            "mean": 45524,
            "median": 45519,
            "max": 45915
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 5200,
            "min": 24550,
            "mean": 27866,
            "median": 25735,
            "max": 32342
          },
          "setProtocolFeeController(address)": {
            "calls": 10360,
            "min": 23838,
            "mean": 46977,
            "median": 47022,
            "max": 47022
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 15420,
            "min": 22521,
            "mean": 38363,
            "median": 44061,
            "max": 44421
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3189051,
          "size": 14704
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 40,
            "min": 6953,
            "mean": 6953,
            "median": 6953,
            "max": 6953
          },
          "exttload(bytes32)": {
            "calls": 80,
            "min": 863,
            "mean": 863,
            "median": 863,
            "max": 863
          },
          "setProtocolFeeController(address)": {
            "calls": 160,
            "min": 47207,
            "mean": 47207,
            "median": 47207,
            "max": 47207
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 764547,
          "size": 3471
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 40,
            "min": 108434,
            "mean": 115789,
            "median": 115789,
            "max": 123144
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 488598,
          "size": 2156
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 40,
            "min": 46168,
            "mean": 46174,
            "median": 46174,
            "max": 46180
          },
          "balanceOf(address)": {
            "calls": 120,
            "min": 436,
            "mean": 1769,
            "median": 2436,
            "max": 2436
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 630030,
          "size": 2706
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 20,
            "min": 208,
            "mean": 208,
            "median": 208,
            "max": 208
          },
          "MAX_TICK()": {
            "calls": 40,
            "min": 230,
            "mean": 230,
            "median": 230,
            "max": 230
          },
          "MIN_SQRT_PRICE()": {
            "calls": 20,
            "min": 164,
            "mean": 164,
            "median": 164,
            "max": 164
          },
          "MIN_TICK()": {
            "calls": 40,
            "min": 274,
            "mean": 274,
            "median": 274,
            "max": 274
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 5940,
            "min": 363,
            "mean": 448,
            "median": 363,
            "max": 1254
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 5860,
            "min": 281,
            "mean": 499,
            "median": 281,
            "max": 2272
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 146887,
          "size": 459
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 5120,
            "min": 2412,
            "mean": 1087164,
            "median": 1016398,
            "max": 2177213
          },
          "extsload(bytes32[])": {
            "calls": 7120,
            "min": 2562,
            "mean": 1089798,
            "median": 1113864,
            "max": 2180360
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 188108,
          "size": 653
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 2520,
            "min": 342,
            "mean": 359,
            "median": 355,
            "max": 367
          },
          "addDelta(uint128,int128)": {
            "calls": 5120,
            "min": 325,
            "mean": 365,
            "median": 367,
            "max": 378
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 131787,
          "size": 391
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 5140,
            "min": 266,
            "mean": 307,
            "median": 308,
            "max": 319
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 857469,
          "size": 4680
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 97140,
            "min": 26562,
            "mean": 45378,
            "median": 46462,
            "max": 46462
          },
          "balanceOf(address)": {
            "calls": 2600540,
            "min": 527,
            "mean": 1700,
            "median": 2527,
            "max": 2527
          },
          "mint(address,uint256)": {
            "calls": 16280,
            "min": 34066,
            "mean": 62521,
            "median": 68206,
            "max": 68278
          },
          "transfer(address,uint256)": {
            "calls": 20780,
            "min": 46395,
            "mean": 51164,
            "median": 51147,
            "max": 51375
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5872628,
          "size": 27173
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 280,
            "min": 2626,
            "mean": 2626,
            "median": 2626,
            "max": 2626
          },
          "burn(address,uint256,uint256)": {
            "calls": 20,
            "min": 22487,
            "mean": 22487,
            "median": 22487,
            "max": 22487
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 100,
            "min": 57633,
            "mean": 58330,
            "median": 57785,
            "max": 59377
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 40,
            "min": 1374,
            "mean": 12736,
            "median": 12736,
            "max": 24099
          },
          "extsload(bytes32)": {
            "calls": 93840,
            "min": 415,
            "mean": 2410,
            "median": 2415,
            "max": 2415
          },
          "extsload(bytes32,uint256)": {
            "calls": 533880,
            "min": 883,
            "mean": 4026,
            "median": 6883,
            "max": 6883
          },
          "exttload(bytes32)": {
            "calls": 810080,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 111260,
            "min": 23272,
            "mean": 52699,
            "median": 52214,
            "max": 154058
          },
          "mint(address,uint256,uint256)": {
            "calls": 20,
            "min": 22467,
            "mean": 22467,
            "median": 22467,
            "max": 22467
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 80,
            "min": 1628,
            "mean": 13415,
            "median": 13340,
            "max": 25353
          },
          "protocolFeesAccrued(address)": {
            "calls": 36160,
            "min": 2576,
            "mean": 2576,
            "median": 2576,
            "max": 2576
          },
          "setOperator(address,bool)": {
            "calls": 60,
            "min": 46204,
            "mean": 46204,
            "median": 46204,
            "max": 46204
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 10400,
            "min": 29752,
            "mean": 32457,
            "median": 32372,
            "max": 32588
          },
          "setProtocolFeeController(address)": {
            "calls": 5000,
            "min": 30067,
            "mean": 47098,
            "median": 47167,
            "max": 47167
          },
          "settle()": {
            "calls": 20,
            "min": 21369,
            "mean": 21369,
            "median": 21369,
            "max": 21369
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 40,
            "min": 1575,
            "mean": 13265,
            "median": 13265,
            "max": 24956
          },
          "take(address,address,uint256)": {
            "calls": 20,
            "min": 22579,
            "mean": 22579,
            "median": 22579,
            "max": 22579
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 20,
            "min": 23646,
            "mean": 23646,
            "median": 23646,
            "max": 23646
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2323730,
          "size": 10523
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 20820,
            "min": 47412,
            "mean": 86679,
            "median": 91465,
            "max": 109456
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 395951,
          "size": 1627
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 25600,
            "min": 3167,
            "mean": 5383,
            "median": 5938,
            "max": 5938
          },
          "balanceOfSelf(address)": {
            "calls": 20480,
            "min": 457,
            "mean": 4480,
            "median": 5822,
            "max": 5822
          },
          "fromId(uint256)": {
            "calls": 15380,
            "min": 334,
            "mean": 334,
            "median": 334,
            "max": 334
          },
          "isAddressZero(address)": {
            "calls": 5160,
            "min": 404,
            "mean": 404,
            "median": 404,
            "max": 404
          },
          "toId(address)": {
            "calls": 15380,
            "min": 351,
            "mean": 351,
            "median": 351,
            "max": 351
          },
          "transfer(address,address,uint256)": {
            "calls": 30740,
            "min": 24803,
            "mean": 53152,
            "median": 54899,
            "max": 57111
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 107511,
          "size": 277
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 10320,
            "min": 377,
            "mean": 439,
            "median": 462,
            "max": 462
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 660716,
          "size": 2846
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 18040,
            "min": 2801,
            "mean": 2801,
            "median": 2801,
            "max": 2801
          },
          "approve(address,uint256,uint256)": {
            "calls": 20540,
            "min": 26855,
            "mean": 46842,
            "median": 47031,
            "max": 47415
          },
          "balanceOf(address,uint256)": {
            "calls": 54020,
            "min": 2609,
            "mean": 2609,
            "median": 2609,
            "max": 2609
          },
          "burn(uint256,uint256)": {
            "calls": 5140,
            "min": 24591,
            "mean": 24871,
            "median": 24831,
            "max": 29403
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 5140,
            "min": 26646,
            "mean": 32519,
            "median": 32528,
            "max": 38452
          },
          "isOperator(address,address)": {
            "calls": 5140,
            "min": 2715,
            "mean": 2715,
            "median": 2715,
            "max": 2715
          },
          "mint(address,uint256,uint256)": {
            "calls": 61720,
            "min": 24273,
            "mean": 47089,
            "median": 47186,
            "max": 47726
          },
          "setOperator(address,bool)": {
            "calls": 10280,
            "min": 25993,
            "mean": 41015,
            "median": 46133,
            "max": 46133
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20500,
            "min": 24192,
            "mean": 38483,
            "median": 30401,
            "max": 52933
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 36040,
            "min": 24527,
            "mean": 43117,
            "median": 47995,
            "max": 61263
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1373040,
          "size": 6061
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10240,
            "min": 488,
            "mean": 1738,
            "median": 1738,
            "max": 2988
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 160080,
          "size": 543
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 40,
            "min": 241,
            "mean": 242,
            "median": 242,
            "max": 244
          },
          "canBeDelegateCalled()": {
            "calls": 20,
            "min": 300,
            "mean": 300,
            "median": 300,
            "max": 300
          },
          "cannotBeDelegateCalled()": {
            "calls": 20,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 20,
            "min": 381,
            "mean": 381,
            "median": 381,
            "max": 381
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 20,
            "min": 444,
            "mean": 444,
            "median": 444,
            "max": 444
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 768441,
          "size": 3530
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 40,
            "min": 79276,
            "mean": 79276,
            "median": 79276,
            "max": 79276
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 1309655,
          "size": 6073
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 20780,
            "min": 39983,
            "mean": 122080,
            "median": 146011,
            "max": 253546
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 260679,
          "size": 1015
        },
        "functions": {
          "unlock()": {
            "calls": 20,
            "min": 29889,
            "mean": 29889,
            "median": 29889,
            "max": 29889
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1565024,
          "size": 7267
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 248740,
            "min": 46199,
            "mean": 190748,
            "median": 182791,
            "max": 393830
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 40,
            "min": 136946,
            "mean": 152555,
            "median": 152555,
            "max": 168165
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1174519,
          "size": 5422
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 140,
            "min": 88109,
            "mean": 134522,
            "median": 164012,
            "max": 164012
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 15069
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 3440,
            "min": 69526,
            "mean": 76592,
            "median": 69526,
            "max": 89450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 4863324,
          "size": 21415
        },
        "functions": {
          "executor()": {
            "calls": 13600,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "unlock(bytes)": {
            "calls": 140,
            "min": 39912,
            "mean": 139384,
            "median": 179253,
            "max": 237367
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1752250,
          "size": 8147
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 47540,
            "min": 42798,
            "mean": 406375,
            "median": 147810,
            "max": 18767721
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 1038987,
          "size": 4789
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 100,
            "min": 41880,
            "mean": 64062,
            "median": 59656,
            "max": 88534
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 733288,
          "size": 3158
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5160,
            "min": 24287,
            "mean": 42615,
            "median": 27386,
            "max": 62761
          },
          "protocolFeeController()": {
            "calls": 80,
            "min": 2356,
            "mean": 2356,
            "median": 2356,
            "max": 2356
          },
          "protocolFeesAccrued(address)": {
            "calls": 17800,
            "min": 2532,
            "mean": 2532,
            "median": 2532,
            "max": 2532
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 5140,
            "min": 45290,
            "mean": 45903,
            "median": 45902,
            "max": 46298
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 5200,
            "min": 25004,
            "mean": 28533,
            "median": 26215,
            "max": 33006
          },
          "setProtocolFeeController(address)": {
            "calls": 10360,
            "min": 23955,
            "mean": 47100,
            "median": 47145,
            "max": 47145
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 15420,
            "min": 22550,
            "mean": 38392,
            "median": 44090,
            "max": 44450
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 3332751,
          "size": 15462
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 40,
            "min": 6883,
            "mean": 6883,
            "median": 6883,
            "max": 6883
          },
          "exttload(bytes32)": {
            "calls": 80,
            "min": 392,
            "mean": 392,
            "median": 392,
            "max": 392
          },
          "setProtocolFeeController(address)": {
            "calls": 160,
            "min": 47167,
            "mean": 47167,
            "median": 47167,
            "max": 47167
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 936598,
          "size": 4309
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 40,
            "min": 111833,
            "mean": 119113,
            "median": 119113,
            "max": 126394
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 502947,
          "size": 2277
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 40,
            "min": 46393,
            "mean": 46399,
            "median": 46399,
            "max": 46405
          },
          "balanceOf(address)": {
            "calls": 120,
            "min": 507,
            "mean": 1840,
            "median": 2507,
            "max": 2507
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 560765,
          "size": 2387
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 20,
            "min": 267,
            "mean": 267,
            "median": 267,
            "max": 267
          },
          "MAX_TICK()": {
            "calls": 40,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "MIN_SQRT_PRICE()": {
            "calls": 20,
            "min": 212,
            "mean": 212,
            "median": 212,
            "max": 212
          },
          "MIN_TICK()": {
            "calls": 40,
            "min": 249,
            "mean": 249,
            "median": 249,
            "max": 249
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 5940,
            "min": 398,
            "mean": 484,
            "median": 398,
            "max": 1170
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 5860,
            "min": 397,
            "mean": 638,
            "median": 397,
            "max": 2548
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 167887,
          "size": 558
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 5120,
            "min": 2489,
            "mean": 1031117,
            "median": 953516,
            "max": 2165302
          },
          "extsload(bytes32[])": {
            "calls": 7120,
            "min": 2646,
            "mean": 944935,
            "median": 892339,
            "max": 2158466
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 216784,
          "size": 789
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 2380,
            "min": 548,
            "mean": 615,
            "median": 615,
            "max": 626
          },
          "addDelta(uint128,int128)": {
            "calls": 5120,
            "min": 476,
            "mean": 565,
            "median": 555,
            "max": 629
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 146539,
          "size": 462
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 5140,
            "min": 408,
            "mean": 510,
            "median": 503,
            "max": 565
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 797778,
          "size": 5144
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 97140,
            "min": 26309,
            "mean": 45125,
            "median": 46209,
            "max": 46209
          },
          "balanceOf(address)": {
            "calls": 2600840,
            "min": 386,
            "mean": 1559,
            "median": 2386,
            "max": 2386
          },
          "mint(address,uint256)": {
            "calls": 16280,
            "min": 33788,
            "mean": 62243,
            "median": 67928,
            "max": 68000
          },
          "transfer(address,uint256)": {
            "calls": 20780,
            "min": 46101,
            "mean": 50870,
            "median": 50853,
            "max": 51081
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 4992034,
          "size": 23037
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 280,
            "min": 2528,
            "mean": 2528,
            "median": 2528,
            "max": 2528
          },
          "burn(address,uint256,uint256)": {
            "calls": 20,
            "min": 22343,
            "mean": 22343,
            "median": 22343,
            "max": 22343
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 100,
            "min": 57130,
            "mean": 57924,
            "median": 57299,
            "max": 59115
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 40,
            "min": 910,
            "mean": 12296,
            "median": 12296,
            "max": 23683
          },
          "extsload(bytes32)": {
            "calls": 93840,
            "min": 323,
            "mean": 2318,
            "median": 2323,
            "max": 2323
          },
          "extsload(bytes32,uint256)": {
            "calls": 533880,
            "min": 836,
            "mean": 3979,
            "median": 6836,
            "max": 6836
          },
          "exttload(bytes32)": {
            "calls": 809880,
            "min": 335,
            "mean": 335,
            "median": 335,
            "max": 335
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 111260,
            "min": 22904,
            "mean": 51508,
            "median": 51062,
            "max": 150859
          },
          "mint(address,uint256,uint256)": {
            "calls": 20,
            "min": 22337,
            "mean": 22337,
            "median": 22337,
            "max": 22337
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 80,
            "min": 1110,
            "mean": 12921,
            "median": 12846,
            "max": 24883
          },
          "protocolFeesAccrued(address)": {
            "calls": 36160,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          },
          "setOperator(address,bool)": {
            "calls": 60,
            "min": 45949,
            "mean": 45949,
            "median": 45949,
            "max": 45949
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 10400,
            "min": 29316,
            "mean": 32022,
            "median": 31936,
            "max": 32152
          },
          "setProtocolFeeController(address)": {
            "calls": 5000,
            "min": 29991,
            "mean": 47022,
            "median": 47091,
            "max": 47091
          },
          "settle()": {
            "calls": 20,
            "min": 21406,
            "mean": 21406,
            "median": 21406,
            "max": 21406
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 40,
            "min": 1084,
            "mean": 12793,
            "median": 12793,
            "max": 24502
          },
          "take(address,address,uint256)": {
            "calls": 20,
            "min": 22362,
            "mean": 22362,
            "median": 22362,
            "max": 22362
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 20,
            "min": 23319,
            "mean": 23319,
            "median": 23319,
            "max": 23319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2349242,
          "size": 10634
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 20820,
            "min": 44022,
            "mean": 78640,
            "median": 81369,
            "max": 100534
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 270639,
          "size": 1037
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 25600,
            "min": 2890,
            "mean": 4918,
            "median": 5425,
            "max": 5425
          },
          "balanceOfSelf(address)": {
            "calls": 20480,
            "min": 248,
            "mean": 4106,
            "median": 5392,
            "max": 5392
          },
          "fromId(uint256)": {
            "calls": 15380,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "isAddressZero(address)": {
            "calls": 5160,
            "min": 224,
            "mean": 224,
            "median": 224,
            "max": 224
          },
          "toId(address)": {
            "calls": 15380,
            "min": 188,
            "mean": 188,
            "median": 188,
            "max": 188
          },
          "transfer(address,address,uint256)": {
            "calls": 30740,
            "min": 24544,
            "mean": 52812,
            "median": 54357,
            "max": 56853
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 95465,
          "size": 227
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 10320,
            "min": 252,
            "mean": 252,
            "median": 253,
            "max": 253
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 520595,
          "size": 2193
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 17860,
            "min": 2586,
            "mean": 2586,
            "median": 2586,
            "max": 2586
          },
          "approve(address,uint256,uint256)": {
            "calls": 20540,
            "min": 26640,
            "mean": 46622,
            "median": 46804,
            "max": 47200
          },
          "balanceOf(address,uint256)": {
            "calls": 53840,
            "min": 2447,
            "mean": 2447,
            "median": 2447,
            "max": 2447
          },
          "burn(uint256,uint256)": {
            "calls": 5140,
            "min": 24376,
            "mean": 24649,
            "median": 24604,
            "max": 29188
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 5140,
            "min": 26376,
            "mean": 31783,
            "median": 27216,
            "max": 38018
          },
          "isOperator(address,address)": {
            "calls": 5140,
            "min": 2509,
            "mean": 2509,
            "median": 2509,
            "max": 2509
          },
          "mint(address,uint256,uint256)": {
            "calls": 61720,
            "min": 24123,
            "mean": 46848,
            "median": 46958,
            "max": 47486
          },
          "setOperator(address,bool)": {
            "calls": 10280,
            "min": 25736,
            "mean": 40758,
            "median": 45876,
            "max": 45876
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20500,
            "min": 24042,
            "mean": 38226,
            "median": 30197,
            "max": 52585
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 36040,
            "min": 24204,
            "mean": 42687,
            "median": 47499,
            "max": 60704
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1608732,
          "size": 7067
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10240,
            "min": 344,
            "mean": 1594,
            "median": 1594,
            "max": 2844
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 134430,
          "size": 419
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 40,
            "min": 216,
            "mean": 220,
            "median": 220,
            "max": 224
          },
          "canBeDelegateCalled()": {
            "calls": 20,
            "min": 205,
            "mean": 205,
            "median": 205,
            "max": 205
          },
          "cannotBeDelegateCalled()": {
            "calls": 20,
            "min": 202,
            "mean": 202,
            "median": 202,
            "max": 202
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 20,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 20,
            "min": 265,
            "mean": 265,
            "median": 265,
            "max": 265
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 488622,
          "size": 2204
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 40,
            "min": 75607,
            "mean": 75607,
            "median": 75607,
            "max": 75607
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 959693,
          "size": 4403
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 20780,
            "min": 35698,
            "mean": 114198,
            "median": 136465,
            "max": 242182
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 219592,
          "size": 866
        },
        "functions": {
          "unlock()": {
            "calls": 20,
            "min": 29150,
            "mean": 29150,
            "median": 29150,
            "max": 29150
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1416827,
          "size": 6523
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 248740,
            "min": 42478,
            "mean": 179727,
            "median": 172789,
            "max": 373094
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 40,
            "min": 126237,
            "mean": 141972,
            "median": 141972,
            "max": 157708
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 1097206,
          "size": 5028
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 140,
            "min": 81506,
            "mean": 127428,
            "median": 156792,
            "max": 156792
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 17536
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 3440,
            "min": 69158,
            "mean": 76224,
            "median": 69158,
            "max": 89082
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 5561636,
          "size": 24614
        },
        "functions": {
          "executor()": {
            "calls": 13600,
            "min": 2327,
            "mean": 2327,
            "median": 2327,
            "max": 2327
          },
          "unlock(bytes)": {
            "calls": 140,
            "min": 38386,
            "mean": 127528,
            "median": 163750,
            "max": 207861
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1302689,
          "size": 5993
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 47540,
            "min": 37642,
            "mean": 348878,
            "median": 135566,
            "max": 16511475
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 769067,
          "size": 3530
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 100,
            "min": 39043,
            "mean": 58403,
            "median": 54051,
            "max": 79217
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 542091,
          "size": 2261
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5160,
            "min": 24081,
            "mean": 44027,
            "median": 27108,
            "max": 62040
          },
          "protocolFeeController()": {
            "calls": 80,
            "min": 2323,
            "mean": 2323,
            "median": 2323,
            "max": 2323
          },
          "protocolFeesAccrued(address)": {
            "calls": 18080,
            "min": 2399,
            "mean": 2399,
            "median": 2399,
            "max": 2399
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 5140,
            "min": 44778,
            "mean": 45409,
            "median": 45402,
            "max": 45798
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 5200,
            "min": 24529,
            "mean": 27684,
            "median": 25725,
            "max": 32338
          },
          "setProtocolFeeController(address)": {
            "calls": 10360,
            "min": 23844,
            "mean": 47001,
            "median": 47046,
            "max": 47046
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 15420,
            "min": 22431,
            "mean": 38275,
            "median": 43971,
            "max": 44331
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 2498874,
          "size": 11598
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 40,
            "min": 6800,
            "mean": 6800,
            "median": 6800,
            "max": 6800
          },
          "exttload(bytes32)": {
            "calls": 80,
            "min": 335,
            "mean": 335,
            "median": 335,
            "max": 335
          },
          "setProtocolFeeController(address)": {
            "calls": 160,
            "min": 47091,
            "mean": 47091,
            "median": 47091,
            "max": 47091
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 646865,
          "size": 2939
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 40,
            "min": 104674,
            "mean": 111419,
            "median": 111419,
            "max": 118164
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 316777,
          "size": 1293
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 40,
            "min": 46151,
            "mean": 46157,
            "median": 46157,
            "max": 46163
          },
          "balanceOf(address)": {
            "calls": 120,
            "min": 349,
            "mean": 1682,
            "median": 2349,
            "max": 2349
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 526591,
          "size": 2228
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 20,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "MAX_TICK()": {
            "calls": 40,
            "min": 193,
            "mean": 193,
            "median": 193,
            "max": 193
          },
          "MIN_SQRT_PRICE()": {
            "calls": 20,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "MIN_TICK()": {
            "calls": 40,
            "min": 197,
            "mean": 197,
            "median": 197,
            "max": 197
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 5940,
            "min": 321,
            "mean": 408,
            "median": 321,
            "max": 1088
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 5860,
            "min": 284,
            "mean": 497,
            "median": 284,
            "max": 2203
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 127813,
          "size": 377
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 5120,
            "min": 2365,
            "mean": 1047344,
            "median": 985239,
            "max": 2178165
          },
          "extsload(bytes32[])": {
            "calls": 7120,
            "min": 2514,
            "mean": 1110626,
            "median": 1123050,
            "max": 2181311
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 159617,
          "size": 527
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 2400,
            "min": 303,
            "mean": 303,
            "median": 304,
            "max": 307
          },
          "addDelta(uint128,int128)": {
            "calls": 5120,
            "min": 287,
            "mean": 333,
            "median": 350,
            "max": 350
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 119513,
          "size": 339
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 5140,
            "min": 276,
            "mean": 310,
            "median": 327,
            "max": 327
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "lib/solmate/src/test/utils/mocks/MockERC20.sol:MockERC20",
        "deployment": {
          "gas": 705767,
          "size": 4577
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 97140,
            "min": 26379,
            "mean": 45195,
            "median": 46279,
            "max": 46279
          },
          "balanceOf(address)": {
            "calls": 2606540,
            "min": 416,
            "mean": 1587,
            "median": 2416,
            "max": 2416
          },
          "mint(address,uint256)": {
            "calls": 16280,
            "min": 33817,
            "mean": 62272,
            "median": 67957,
            "max": 68029
          },
          "transfer(address,uint256)": {
            "calls": 20780,
            "min": 46159,
            "mean": 50927,
            "median": 50911,
            "max": 51139
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/PoolManager.sol:PoolManager",
        "deployment": {
          "gas": 5032044,
          "size": 23186
        },
        "functions": {
          "balanceOf(address,uint256)": {
            "calls": 280,
            "min": 2554,
            "mean": 2554,
            "median": 2554,
            "max": 2554
          },
          "burn(address,uint256,uint256)": {
            "calls": 20,
            "min": 22375,
            "mean": 22375,
            "median": 22375,
            "max": 22375
          },
          "collectProtocolFees(address,address,uint256)": {
            "calls": 100,
            "min": 57192,
            "mean": 57975,
            "median": 57349,
            "max": 59151
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 40,
            "min": 847,
            "mean": 12216,
            "median": 12216,
            "max": 23585
          },
          "extsload(bytes32)": {
            "calls": 93840,
            "min": 353,
            "mean": 2348,
            "median": 2353,
            "max": 2353
          },
          "extsload(bytes32,uint256)": {
            "calls": 533880,
            "min": 863,
            "mean": 4006,
            "median": 6863,
            "max": 6863
          },
          "exttload(bytes32)": {
            "calls": 810000,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "calls": 111260,
            "min": 22817,
            "mean": 51310,
            "median": 50854,
            "max": 150460
          },
          "mint(address,uint256,uint256)": {
            "calls": 20,
            "min": 22376,
            "mean": 22376,
            "median": 22376,
            "max": 22376
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 80,
            "min": 962,
            "mean": 12757,
            "median": 12682,
            "max": 24702
          },
          "protocolFeesAccrued(address)": {
            "calls": 36160,
            "min": 2502,
            "mean": 2502,
            "median": 2502,
            "max": 2502
          },
          "setOperator(address,bool)": {
            "calls": 60,
            "min": 45998,
            "mean": 45998,
            "median": 45998,
            "max": 45998
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 10400,
            "min": 29223,
            "mean": 31928,
            "median": 31843,
            "max": 32059
          },
          "setProtocolFeeController(address)": {
            "calls": 5000,
            "min": 29994,
            "mean": 47025,
            "median": 47094,
            "max": 47094
          },
          "settle()": {
            "calls": 20,
            "min": 21412,
            "mean": 21412,
            "median": 21412,
            "max": 21412
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "calls": 40,
            "min": 950,
            "mean": 12648,
            "median": 12648,
            "max": 24347
          },
          "take(address,address,uint256)": {
            "calls": 20,
            "min": 22394,
            "mean": 22394,
            "median": 22394,
            "max": 22394
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "calls": 20,
            "min": 23223,
            "mean": 23223,
            "median": 23223,
            "max": 23223
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/ActionsRouter.sol:ActionsRouter",
        "deployment": {
          "gas": 2146917,
          "size": 9664
        },
        "functions": {
          "executeActions(uint8[],bytes[])": {
            "calls": 20820,
            "min": 43925,
            "mean": 78172,
            "median": 80734,
            "max": 99999
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/CurrencyTest.sol:CurrencyTest",
        "deployment": {
          "gas": 243528,
          "size": 909
        },
        "functions": {
          "balanceOf(address,address)": {
            "calls": 25600,
            "min": 2916,
            "mean": 4947,
            "median": 5455,
            "max": 5455
          },
          "balanceOfSelf(address)": {
            "calls": 20480,
            "min": 284,
            "mean": 4148,
            "median": 5436,
            "max": 5436
          },
          "fromId(uint256)": {
            "calls": 15380,
            "min": 209,
            "mean": 209,
            "median": 209,
            "max": 209
          },
          "isAddressZero(address)": {
            "calls": 5160,
            "min": 239,
            "mean": 239,
            "median": 239,
            "max": 239
          },
          "toId(address)": {
            "calls": 15380,
            "min": 203,
            "mean": 203,
            "median": 203,
            "max": 203
          },
          "transfer(address,address,uint256)": {
            "calls": 30740,
            "min": 24548,
            "mean": 52754,
            "median": 54388,
            "max": 56908
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/LiquidityMathTest.sol:LiquidityMathTest",
        "deployment": {
          "gas": 91071,
          "size": 204
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 10320,
            "min": 240,
            "mean": 242,
            "median": 243,
            "max": 243
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/MockERC6909Claims.sol:MockERC6909Claims",
        "deployment": {
          "gas": 482246,
          "size": 2013
        },
        "functions": {
          "allowance(address,address,uint256)": {
            "calls": 18080,
            "min": 2606,
            "mean": 2606,
            "median": 2606,
            "max": 2606
          },
          "approve(address,uint256,uint256)": {
            "calls": 20540,
            "min": 26641,
            "mean": 46633,
            "median": 46817,
            "max": 47201
          },
          "balanceOf(address,uint256)": {
            "calls": 54060,
            "min": 2477,
            "mean": 2477,
            "median": 2477,
            "max": 2477
          },
          "burn(uint256,uint256)": {
            "calls": 5140,
            "min": 24400,
            "mean": 24679,
            "median": 24640,
            "max": 29212
          },
          "burnFrom(address,uint256,uint256)": {
            "calls": 5140,
            "min": 26411,
            "mean": 32283,
            "median": 37154,
            "max": 38054
          },
          "isOperator(address,address)": {
            "calls": 5140,
            "min": 2529,
            "mean": 2529,
            "median": 2529,
            "max": 2529
          },
          "mint(address,uint256,uint256)": {
            "calls": 61720,
            "min": 24066,
            "mean": 46798,
            "median": 46898,
            "max": 47426
          },
          "setOperator(address,bool)": {
            "calls": 10280,
            "min": 25780,
            "mean": 40814,
            "median": 45932,
            "max": 45932
          },
          "transfer(address,uint256,uint256)": {
            "calls": 20500,
            "min": 24021,
            "mean": 38214,
            "median": 30167,
            "max": 52582
          },
          "transferFrom(address,address,uint256,uint256)": {
            "calls": 36040,
            "min": 24261,
            "mean": 42731,
            "median": 47557,
            "max": 60739
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/NativeERC20.sol:NativeERC20",
        "deployment": {
          "gas": 1453100,
          "size": 6435
        },
        "functions": {
          "balanceOf(address)": {
            "calls": 10240,
            "min": 375,
            "mean": 1625,
            "median": 1625,
            "max": 2875
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/NoDelegateCallTest.sol:NoDelegateCallTest",
        "deployment": {
          "gas": 153549,
          "size": 536
        },
        "functions": {
          "callsIntoNoDelegateCallFunction()": {
            "calls": 40,
            "min": 188,
            "mean": 194,
            "median": 194,
            "max": 201
          },
          "canBeDelegateCalled()": {
            "calls": 20,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "cannotBeDelegateCalled()": {
            "calls": 20,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "getGasCostOfCanBeDelegateCalled()": {
            "calls": 20,
            "min": 190,
            "mean": 190,
            "median": 190,
            "max": 190
          },
          "getGasCostOfCannotBeDelegateCalled()": {
            "calls": 20,
            "min": 237,
            "mean": 237,
            "median": 237,
            "max": 237
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolClaimsTest.sol:PoolClaimsTest",
        "deployment": {
          "gas": 447753,
          "size": 1959
        },
        "functions": {
          "deposit(address,address,uint256)": {
            "calls": 40,
            "min": 75791,
            "mean": 75791,
            "median": 75791,
            "max": 75791
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolDonateTest.sol:PoolDonateTest",
        "deployment": {
          "gas": 836838,
          "size": 3777
        },
        "functions": {
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "calls": 20780,
            "min": 35173,
            "mean": 113496,
            "median": 135757,
            "max": 241389
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolEmptyUnlockTest.sol:PoolEmptyUnlockTest",
        "deployment": {
          "gas": 194204,
          "size": 700
        },
        "functions": {
          "unlock()": {
            "calls": 20,
            "min": 29048,
            "mean": 29048,
            "median": 29048,
            "max": 29048
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTest.sol:PoolModifyLiquidityTest",
        "deployment": {
          "gas": 1102258,
          "size": 5005
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 248740,
            "min": 42321,
            "mean": 179910,
            "median": 174398,
            "max": 372675
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes,bool,bool)": {
            "calls": 40,
            "min": 125995,
            "mean": 141721,
            "median": 141721,
            "max": 157448
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolModifyLiquidityTestNoChecks.sol:PoolModifyLiquidityTestNoChecks",
        "deployment": {
          "gas": 832983,
          "size": 3746
        },
        "functions": {
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "calls": 140,
            "min": 81453,
            "mean": 127331,
            "median": 156682,
            "max": 156682
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:NestedActionExecutor",
        "deployment": {
          "gas": 0,
          "size": 15772
        },
        "functions": {
          "setKey((address,address,uint24,int24,address))": {
            "calls": 3440,
            "min": 69163,
            "mean": 76229,
            "median": 69163,
            "max": 89087
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolNestedActionsTest.sol:PoolNestedActionsTest",
        "deployment": {
          "gas": 5101661,
          "size": 22331
        },
        "functions": {
          "executor()": {
            "calls": 13600,
            "min": 2318,
            "mean": 2318,
            "median": 2318,
            "max": 2318
          },
          "unlock(bytes)": {
            "calls": 140,
            "min": 37917,
            "mean": 127617,
            "median": 164208,
            "max": 208854
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolSwapTest.sol:PoolSwapTest",
        "deployment": {
          "gas": 1152109,
          "size": 5239
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),(bool,bool),bytes)": {
            "calls": 47540,
            "min": 36965,
            "mean": 366130,
            "median": 134941,
            "max": 17281669
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/PoolTakeTest.sol:PoolTakeTest",
        "deployment": {
          "gas": 660057,
          "size": 2965
        },
        "functions": {
          "take((address,address,uint24,int24,address),uint256,uint256)": {
            "calls": 100,
            "min": 38985,
            "mean": 58165,
            "median": 53775,
            "max": 78801
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/ProtocolFeesImplementation.sol:ProtocolFeesImplementation",
        "deployment": {
          "gas": 491599,
          "size": 2047
        },
        "functions": {
          "collectProtocolFees(address,address,uint256)": {
            "calls": 5160,
            "min": 24096,
            "mean": 43105,
            "median": 27100,
            "max": 62082
          },
          "protocolFeeController()": {
            "calls": 80,
            "min": 2307,
            "mean": 2307,
            "median": 2307,
            "max": 2307
          },
          "protocolFeesAccrued(address)": {
            "calls": 17940,
            "min": 2412,
            "mean": 2412,
            "median": 2412,
            "max": 2412
          },
          "setPrice((address,address,uint24,int24,address),uint160)": {
            "calls": 5140,
            "min": 44675,
            "mean": 45307,
            "median": 45299,
            "max": 45695
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "calls": 5200,
            "min": 24438,
            "mean": 27981,
            "median": 25644,
            "max": 32215
          },
          "setProtocolFeeController(address)": {
            "calls": 10360,
            "min": 23831,
            "mean": 46982,
            "median": 47027,
            "max": 47027
          },
          "updateProtocolFees(address,uint256)": {
            "calls": 15420,
            "min": 22426,
            "mean": 38269,
            "median": 43966,
            "max": 44326
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/ProxyPoolManager.sol:ProxyPoolManager",
        "deployment": {
          "gas": 2434094,
          "size": 11242
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 40,
            "min": 6833,
            "mean": 6833,
            "median": 6833,
            "max": 6833
          },
          "exttload(bytes32)": {
            "calls": 80,
            "min": 355,
            "mean": 355,
            "median": 355,
            "max": 355
          },
          "setProtocolFeeController(address)": {
            "calls": 160,
            "min": 47094,
            "mean": 47094,
            "median": 47094,
            "max": 47094
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/SwapRouterNoChecks.sol:SwapRouterNoChecks",
        "deployment": {
          "gas": 535390,
          "size": 2367
        },
        "functions": {
          "swap((address,address,uint24,int24,address),(bool,int256,uint160))": {
            "calls": 40,
            "min": 104585,
            "mean": 111317,
            "median": 111317,
            "max": 118049
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/TestInvalidERC20.sol:TestInvalidERC20",
        "deployment": {
          "gas": 307829,
          "size": 1227
        },
        "functions": {
          "approve(address,uint256)": {
            "calls": 40,
            "min": 46197,
            "mean": 46203,
            "median": 46203,
            "max": 46209
          },
          "balanceOf(address)": {
            "calls": 120,
            "min": 364,
            "mean": 1697,
            "median": 2364,
            "max": 2364
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/test/TickMathTest.sol:TickMathTest",
        "deployment": {
          "gas": 476318,
          "size": 1988
        },
        "functions": {
          "MAX_SQRT_PRICE()": {
            "calls": 20,
            "min": 201,
            "mean": 201,
            "median": 201,
            "max": 201
          },
          "MAX_TICK()": {
            "calls": 40,
            "min": 177,
            "mean": 177,
            "median": 177,
            "max": 177
          },
          "MIN_SQRT_PRICE()": {
            "calls": 20,
            "min": 189,
            "mean": 189,
            "median": 189,
            "max": 189
          },
          "MIN_TICK()": {
            "calls": 40,
            "min": 181,
            "mean": 181,
            "median": 181,
            "max": 181
          },
          "getSqrtPriceAtTick(int24)": {
            "calls": 5940,
            "min": 342,
            "mean": 431,
            "median": 342,
            "max": 1126
          },
          "getTickAtSqrtPrice(uint160)": {
            "calls": 5860,
            "min": 308,
            "mean": 519,
            "median": 308,
            "max": 2201
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/Extsload.t.sol:Loadable",
        "deployment": {
          "gas": 125491,
          "size": 364
        },
        "functions": {
          "extsload(bytes32,uint256)": {
            "calls": 5120,
            "min": 2371,
            "mean": 1054483,
            "median": 1012468,
            "max": 2178171
          },
          "extsload(bytes32[])": {
            "calls": 7120,
            "min": 2516,
            "mean": 1078204,
            "median": 1171035,
            "max": 2181313
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/Tick.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 140891,
          "size": 436
        },
        "functions": {
          "addDelta(bool,int128,int128)": {
            "calls": 2460,
            "min": 328,
            "mean": 338,
            "median": 334,
            "max": 344
          },
          "addDelta(uint128,int128)": {
            "calls": 5120,
            "min": 293,
            "mean": 320,
            "median": 331,
            "max": 338
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "test/libraries/LiquidityMath.t.sol:LiquidityMathRef",
        "deployment": {
          "gas": 114039,
          "size": 311
        },
        "functions": {
          "addDelta(uint128,int128)": {
            "calls": 5140,
            "min": 262,
            "mean": 307,
            "median": 307,
            "max": 319
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  },
  "unix": {
    "solc": [
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 9441411,
          "size": 47190
        },
        "functions": {
          "run(string)": {
            "calls": 20,
            "min": 3625037,
            "mean": 3625037,
            "median": 3625037,
            "max": 3625037
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 7359
        },
        "functions": {
          "n()": {
            "calls": 20,
            "min": 66500,
            "mean": 66500,
            "median": 66500,
            "max": 66500
          },
          "stdout(string)": {
            "calls": 20,
            "min": 45601,
            "mean": 45601,
            "median": 45601,
            "max": 45601
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt-via-ir"
        }
      },
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 8567395,
          "size": 42856
        },
        "functions": {
          "run(string)": {
            "calls": 20,
            "min": 3349955,
            "mean": 3349955,
            "median": 3349955,
            "max": 3349955
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 6468
        },
        "functions": {
          "n()": {
            "calls": 20,
            "min": 66587,
            "mean": 66587,
            "median": 66587,
            "max": 66587
          },
          "stdout(string)": {
            "calls": 20,
            "min": 45744,
            "mean": 45744,
            "median": 45744,
            "max": 45744
          }
        },
        "compiler": {
          "type": "solc",
          "version": "0.8.30-opt"
        }
      }
    ],
    "solx": [
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 6744367,
          "size": 33716
        },
        "functions": {
          "run(string)": {
            "calls": 20,
            "min": 2624536,
            "mean": 2624536,
            "median": 2624536,
            "max": 2624536
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 5663
        },
        "functions": {
          "n()": {
            "calls": 20,
            "min": 65600,
            "mean": 65600,
            "median": 65600,
            "max": 65600
          },
          "stdout(string)": {
            "calls": 20,
            "min": 44399,
            "mean": 44399,
            "median": 44399,
            "max": 44399
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled-via-ir"
        }
      },
      {
        "contract": "src/Unix.sol:Unix",
        "deployment": {
          "gas": 6029447,
          "size": 30168
        },
        "functions": {
          "run(string)": {
            "calls": 20,
            "min": 2359951,
            "mean": 2359951,
            "median": 2359951,
            "max": 2359951
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      },
      {
        "contract": "src/commands/Echo.sol:Echo",
        "deployment": {
          "gas": 0,
          "size": 5174
        },
        "functions": {
          "n()": {
            "calls": 20,
            "min": 65615,
            "mean": 65615,
            "median": 65615,
            "max": 65615
          },
          "stdout(string)": {
            "calls": 20,
            "min": 44431,
            "mean": 44431,
            "median": 44431,
            "max": 44431
          }
        },
        "compiler": {
          "type": "solx",
          "version": "0.1.0-yul-enabled"
        }
      }
    ]
  }
};